// Copyright (c) 2023-present, Trail of Bits, Inc.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#include <cstdint>

#include "Binding.h"
#include "Forward.h"

namespace mx {

class FileLocationCache;
class ProxyTokenTreeVisitor;
class QualifiedNameRenderOptions;
class UserToken;

namespace {

using LoaderFunc = bool (BorrowedPyObject *);

static PyMethodDef gEmptyMethods[] = {
  {}   // Sentinel.
};

// multiplier
static PyModuleDef gModule = {
  .m_name = "",
  .m_doc = PyDoc_STR("Multiplier source code auditing API"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gLoaders[] = {
  PythonBinding<mx::EntityCategory>::load,
  PythonBinding<mx::BuiltinReferenceKind>::load,
  PythonBinding<mx::ReferenceKind>::load,
  PythonBinding<mx::Reference>::load,
  PythonBinding<mx::Fragment>::load,
  PythonBinding<mx::IndexStatus>::load,
  PythonBinding<mx::Index>::load,
  PythonBinding<mx::RegexQuery>::load,
};

// multiplier.ir
static PyModuleDef gIRModule = {
  .m_name = "ir",
  .m_doc = PyDoc_STR("Wrapper of IR"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gIRLoaders[] = {
  PythonBinding<mx::ir::AttributeKind>::load,
  PythonBinding<mx::ir::Attribute>::load,
  PythonBinding<mx::ir::ValueKind>::load,
  PythonBinding<mx::ir::Value>::load,
  PythonBinding<mx::ir::Block>::load,
  PythonBinding<mx::ir::Argument>::load,
  PythonBinding<mx::ir::Label>::load,
  PythonBinding<mx::ir::OperationKind>::load,
  PythonBinding<mx::ir::Operation>::load,
  PythonBinding<mx::ir::Result>::load,
  PythonBinding<mx::ir::Operand>::load,
  PythonBinding<mx::ir::Symbol>::load,
  PythonBinding<mx::ir::BasicBlockOrder>::load,
  PythonBinding<mx::ir::Region>::load,
  PythonBinding<mx::ir::TypeKind>::load,
  PythonBinding<mx::ir::Type>::load,
};

// multiplier.ast
static PyModuleDef gASTModule = {
  .m_name = "ast",
  .m_doc = PyDoc_STR("Wrapper of AST"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gASTLoaders[] = {
  PythonBinding<mx::DeclKind>::load,
  PythonBinding<mx::AttrKind>::load,
  PythonBinding<mx::AArch64SVEPcsAttrSpelling>::load,
  PythonBinding<mx::AArch64VectorPcsAttrSpelling>::load,
  PythonBinding<mx::AMDGPUFlatWorkGroupSizeAttrSpelling>::load,
  PythonBinding<mx::AMDGPUKernelCallAttrSpelling>::load,
  PythonBinding<mx::AMDGPUNumSGPRAttrSpelling>::load,
  PythonBinding<mx::AMDGPUNumVGPRAttrSpelling>::load,
  PythonBinding<mx::AMDGPUWavesPerEUAttrSpelling>::load,
  PythonBinding<mx::ARMInterruptAttrInterruptType>::load,
  PythonBinding<mx::ARMInterruptAttrSpelling>::load,
  PythonBinding<mx::AVRInterruptAttrSpelling>::load,
  PythonBinding<mx::AVRSignalAttrSpelling>::load,
  PythonBinding<mx::AbiTagAttrSpelling>::load,
  PythonBinding<mx::AcquireCapabilityAttrSpelling>::load,
  PythonBinding<mx::AcquireHandleAttrSpelling>::load,
  PythonBinding<mx::AddressSpaceAttrSpelling>::load,
  PythonBinding<mx::AliasAttrSpelling>::load,
  PythonBinding<mx::AlignedAttrSpelling>::load,
  PythonBinding<mx::AllocAlignAttrSpelling>::load,
  PythonBinding<mx::AllocSizeAttrSpelling>::load,
  PythonBinding<mx::AlwaysDestroyAttrSpelling>::load,
  PythonBinding<mx::AlwaysInlineAttrSpelling>::load,
  PythonBinding<mx::AnnotateAttrSpelling>::load,
  PythonBinding<mx::AnnotateTypeAttrSpelling>::load,
  PythonBinding<mx::AnyX86InterruptAttrSpelling>::load,
  PythonBinding<mx::AnyX86NoCallerSavedRegistersAttrSpelling>::load,
  PythonBinding<mx::AnyX86NoCfCheckAttrSpelling>::load,
  PythonBinding<mx::ArcWeakrefUnavailableAttrSpelling>::load,
  PythonBinding<mx::ArgumentWithTypeTagAttrSpelling>::load,
  PythonBinding<mx::ArmBuiltinAliasAttrSpelling>::load,
  PythonBinding<mx::ArmMveStrictPolymorphismAttrSpelling>::load,
  PythonBinding<mx::ArtificialAttrSpelling>::load,
  PythonBinding<mx::AsmLabelAttrSpelling>::load,
  PythonBinding<mx::AssertCapabilityAttrSpelling>::load,
  PythonBinding<mx::AssumeAlignedAttrSpelling>::load,
  PythonBinding<mx::AssumptionAttrSpelling>::load,
  PythonBinding<mx::AtomicExprAtomicOp>::load,
  PythonBinding<mx::AvailabilityAttrSpelling>::load,
  PythonBinding<mx::AvailableOnlyInDefaultEvalMethodAttrSpelling>::load,
  PythonBinding<mx::BPFPreserveAccessIndexAttrSpelling>::load,
  PythonBinding<mx::BPFPreserveStaticOffsetAttrSpelling>::load,
  PythonBinding<mx::BTFDeclTagAttrSpelling>::load,
  PythonBinding<mx::BTFTypeTagAttrSpelling>::load,
  PythonBinding<mx::BlocksAttrBlockType>::load,
  PythonBinding<mx::BlocksAttrSpelling>::load,
  PythonBinding<mx::BuiltinAliasAttrSpelling>::load,
  PythonBinding<mx::BuiltinTypeKind>::load,
  PythonBinding<mx::CDeclAttrSpelling>::load,
  PythonBinding<mx::CFAuditedTransferAttrSpelling>::load,
  PythonBinding<mx::CFConsumedAttrSpelling>::load,
  PythonBinding<mx::CFGuardAttrGuardArg>::load,
  PythonBinding<mx::CFGuardAttrSpelling>::load,
  PythonBinding<mx::CFICanonicalJumpTableAttrSpelling>::load,
  PythonBinding<mx::CFReturnsNotRetainedAttrSpelling>::load,
  PythonBinding<mx::CFReturnsRetainedAttrSpelling>::load,
  PythonBinding<mx::CFUnknownTransferAttrSpelling>::load,
  PythonBinding<mx::CPUDispatchAttrSpelling>::load,
  PythonBinding<mx::CPUSpecificAttrSpelling>::load,
  PythonBinding<mx::CUDAConstantAttrSpelling>::load,
  PythonBinding<mx::CUDADeviceAttrSpelling>::load,
  PythonBinding<mx::CUDADeviceBuiltinSurfaceTypeAttrSpelling>::load,
  PythonBinding<mx::CUDADeviceBuiltinTextureTypeAttrSpelling>::load,
  PythonBinding<mx::CUDAGlobalAttrSpelling>::load,
  PythonBinding<mx::CUDAHostAttrSpelling>::load,
  PythonBinding<mx::CUDALaunchBoundsAttrSpelling>::load,
  PythonBinding<mx::CUDASharedAttrSpelling>::load,
  PythonBinding<mx::CXX11NoReturnAttrSpelling>::load,
  PythonBinding<mx::CXXRecordDeclLambdaDependencyKind>::load,
  PythonBinding<mx::CallExprADLCallKind>::load,
  PythonBinding<mx::CallableWhenAttrConsumedState>::load,
  PythonBinding<mx::CallableWhenAttrSpelling>::load,
  PythonBinding<mx::CallbackAttrSpelling>::load,
  PythonBinding<mx::CalledOnceAttrSpelling>::load,
  PythonBinding<mx::CapabilityAttrSpelling>::load,
  PythonBinding<mx::CapturedStmtVariableCaptureKind>::load,
  PythonBinding<mx::CarriesDependencyAttrSpelling>::load,
  PythonBinding<mx::CleanupAttrSpelling>::load,
  PythonBinding<mx::CodeAlignAttrSpelling>::load,
  PythonBinding<mx::CodeModelAttrSpelling>::load,
  PythonBinding<mx::ColdAttrSpelling>::load,
  PythonBinding<mx::CommonAttrSpelling>::load,
  PythonBinding<mx::ConstAttrSpelling>::load,
  PythonBinding<mx::ConstInitAttrSpelling>::load,
  PythonBinding<mx::ConstructorAttrSpelling>::load,
  PythonBinding<mx::ConsumableAttrConsumedState>::load,
  PythonBinding<mx::ConsumableAttrSpelling>::load,
  PythonBinding<mx::ConsumableAutoCastAttrSpelling>::load,
  PythonBinding<mx::ConsumableSetOnReadAttrSpelling>::load,
  PythonBinding<mx::ConvergentAttrSpelling>::load,
  PythonBinding<mx::CoroDisableLifetimeBoundAttrSpelling>::load,
  PythonBinding<mx::CoroLifetimeBoundAttrSpelling>::load,
  PythonBinding<mx::CoroOnlyDestroyWhenCompleteAttrSpelling>::load,
  PythonBinding<mx::CoroReturnTypeAttrSpelling>::load,
  PythonBinding<mx::CoroWrapperAttrSpelling>::load,
  PythonBinding<mx::CountedByAttrSpelling>::load,
  PythonBinding<mx::DLLExportAttrSpelling>::load,
  PythonBinding<mx::DLLImportAttrSpelling>::load,
  PythonBinding<mx::DeclFriendObjectKind>::load,
  PythonBinding<mx::DeclIdentifierNamespace>::load,
  PythonBinding<mx::DeclModuleOwnershipKind>::load,
  PythonBinding<mx::DeclObjCDeclQualifier>::load,
  PythonBinding<mx::DeprecatedAttrSpelling>::load,
  PythonBinding<mx::DestructorAttrSpelling>::load,
  PythonBinding<mx::DiagnoseAsBuiltinAttrSpelling>::load,
  PythonBinding<mx::DiagnoseIfAttrDiagnosticType>::load,
  PythonBinding<mx::DisableSanitizerInstrumentationAttrSpelling>::load,
  PythonBinding<mx::DisableTailCallsAttrSpelling>::load,
  PythonBinding<mx::EnforceTCBAttrSpelling>::load,
  PythonBinding<mx::EnforceTCBLeafAttrSpelling>::load,
  PythonBinding<mx::EnumExtensibilityAttrKind>::load,
  PythonBinding<mx::EnumExtensibilityAttrSpelling>::load,
  PythonBinding<mx::ErrorAttrSpelling>::load,
  PythonBinding<mx::ExcludeFromExplicitInstantiationAttrSpelling>::load,
  PythonBinding<mx::ExprConstantExprKind>::load,
  PythonBinding<mx::ExprLValueClassification>::load,
  PythonBinding<mx::ExprNullPointerConstantKind>::load,
  PythonBinding<mx::ExprNullPointerConstantValueDependence>::load,
  PythonBinding<mx::ExprSideEffectsKind>::load,
  PythonBinding<mx::ExprisModifiableLvalueResult>::load,
  PythonBinding<mx::ExternalSourceSymbolAttrSpelling>::load,
  PythonBinding<mx::FallThroughAttrSpelling>::load,
  PythonBinding<mx::FastCallAttrSpelling>::load,
  PythonBinding<mx::FinalAttrSpelling>::load,
  PythonBinding<mx::FlagEnumAttrSpelling>::load,
  PythonBinding<mx::FlattenAttrSpelling>::load,
  PythonBinding<mx::FormatArgAttrSpelling>::load,
  PythonBinding<mx::FormatAttrSpelling>::load,
  PythonBinding<mx::FunctionDeclTemplatedKind>::load,
  PythonBinding<mx::FunctionReturnThunksAttrKind>::load,
  PythonBinding<mx::FunctionReturnThunksAttrSpelling>::load,
  PythonBinding<mx::FunctionTypeAArch64SMETypeAttributes>::load,
  PythonBinding<mx::FunctionTypeArmStateValue>::load,
  PythonBinding<mx::GNUInlineAttrSpelling>::load,
  PythonBinding<mx::GuardedVarAttrSpelling>::load,
  PythonBinding<mx::HIPManagedAttrSpelling>::load,
  PythonBinding<mx::HLSLParamModifierAttrSpelling>::load,
  PythonBinding<mx::HLSLShaderAttrShaderType>::load,
  PythonBinding<mx::HotAttrSpelling>::load,
  PythonBinding<mx::IBActionAttrSpelling>::load,
  PythonBinding<mx::IBOutletAttrSpelling>::load,
  PythonBinding<mx::IBOutletCollectionAttrSpelling>::load,
  PythonBinding<mx::IFuncAttrSpelling>::load,
  PythonBinding<mx::ImplicitCastExprOnStack>::load,
  PythonBinding<mx::InitPriorityAttrSpelling>::load,
  PythonBinding<mx::IntelOclBiccAttrSpelling>::load,
  PythonBinding<mx::InternalLinkageAttrSpelling>::load,
  PythonBinding<mx::LTOVisibilityPublicAttrSpelling>::load,
  PythonBinding<mx::LeafAttrSpelling>::load,
  PythonBinding<mx::LifetimeBoundAttrSpelling>::load,
  PythonBinding<mx::LikelyAttrSpelling>::load,
  PythonBinding<mx::LoaderUninitializedAttrSpelling>::load,
  PythonBinding<mx::LoopHintAttrLoopHintState>::load,
  PythonBinding<mx::LoopHintAttrOptionType>::load,
  PythonBinding<mx::LoopHintAttrSpelling>::load,
  PythonBinding<mx::M68kRTDAttrSpelling>::load,
  PythonBinding<mx::MIGServerRoutineAttrSpelling>::load,
  PythonBinding<mx::MSABIAttrSpelling>::load,
  PythonBinding<mx::MSInheritanceAttrSpelling>::load,
  PythonBinding<mx::MSP430InterruptAttrSpelling>::load,
  PythonBinding<mx::MSStructAttrSpelling>::load,
  PythonBinding<mx::MayAliasAttrSpelling>::load,
  PythonBinding<mx::MaybeUndefAttrSpelling>::load,
  PythonBinding<mx::MicroMipsAttrSpelling>::load,
  PythonBinding<mx::MinSizeAttrSpelling>::load,
  PythonBinding<mx::MinVectorWidthAttrSpelling>::load,
  PythonBinding<mx::Mips16AttrSpelling>::load,
  PythonBinding<mx::MipsInterruptAttrInterruptType>::load,
  PythonBinding<mx::MipsInterruptAttrSpelling>::load,
  PythonBinding<mx::MipsLongCallAttrSpelling>::load,
  PythonBinding<mx::MipsShortCallAttrSpelling>::load,
  PythonBinding<mx::ModeAttrSpelling>::load,
  PythonBinding<mx::MustTailAttrSpelling>::load,
  PythonBinding<mx::NSConsumedAttrSpelling>::load,
  PythonBinding<mx::NSConsumesSelfAttrSpelling>::load,
  PythonBinding<mx::NSReturnsAutoreleasedAttrSpelling>::load,
  PythonBinding<mx::NSReturnsNotRetainedAttrSpelling>::load,
  PythonBinding<mx::NSReturnsRetainedAttrSpelling>::load,
  PythonBinding<mx::NVPTXKernelAttrSpelling>::load,
  PythonBinding<mx::NakedAttrSpelling>::load,
  PythonBinding<mx::NamedDeclExplicitVisibilityKind>::load,
  PythonBinding<mx::NoBuiltinAttrSpelling>::load,
  PythonBinding<mx::NoCommonAttrSpelling>::load,
  PythonBinding<mx::NoDebugAttrSpelling>::load,
  PythonBinding<mx::NoDerefAttrSpelling>::load,
  PythonBinding<mx::NoDestroyAttrSpelling>::load,
  PythonBinding<mx::NoDuplicateAttrSpelling>::load,
  PythonBinding<mx::NoEscapeAttrSpelling>::load,
  PythonBinding<mx::NoInlineAttrSpelling>::load,
  PythonBinding<mx::NoInstrumentFunctionAttrSpelling>::load,
  PythonBinding<mx::NoMergeAttrSpelling>::load,
  PythonBinding<mx::NoMicroMipsAttrSpelling>::load,
  PythonBinding<mx::NoMips16AttrSpelling>::load,
  PythonBinding<mx::NoProfileFunctionAttrSpelling>::load,
  PythonBinding<mx::NoRandomizeLayoutAttrSpelling>::load,
  PythonBinding<mx::NoReturnAttrSpelling>::load,
  PythonBinding<mx::NoSanitizeAttrSpelling>::load,
  PythonBinding<mx::NoSpeculativeLoadHardeningAttrSpelling>::load,
  PythonBinding<mx::NoSplitStackAttrSpelling>::load,
  PythonBinding<mx::NoStackProtectorAttrSpelling>::load,
  PythonBinding<mx::NoThreadSafetyAnalysisAttrSpelling>::load,
  PythonBinding<mx::NoThrowAttrSpelling>::load,
  PythonBinding<mx::NoUniqueAddressAttrSpelling>::load,
  PythonBinding<mx::NoUwtableAttrSpelling>::load,
  PythonBinding<mx::NonNullAttrSpelling>::load,
  PythonBinding<mx::NotTailCalledAttrSpelling>::load,
  PythonBinding<mx::OMPAllocateDeclAttrAllocatorTypeTy>::load,
  PythonBinding<mx::OMPDeclareSimdDeclAttrBranchStateTy>::load,
  PythonBinding<mx::OMPDeclareTargetDeclAttrDevTypeTy>::load,
  PythonBinding<mx::OMPDeclareTargetDeclAttrMapTypeTy>::load,
  PythonBinding<mx::OSConsumedAttrSpelling>::load,
  PythonBinding<mx::OSConsumesThisAttrSpelling>::load,
  PythonBinding<mx::OSReturnsNotRetainedAttrSpelling>::load,
  PythonBinding<mx::OSReturnsRetainedAttrSpelling>::load,
  PythonBinding<mx::OSReturnsRetainedOnNonZeroAttrSpelling>::load,
  PythonBinding<mx::OSReturnsRetainedOnZeroAttrSpelling>::load,
  PythonBinding<mx::ObjCBoxableAttrSpelling>::load,
  PythonBinding<mx::ObjCBridgeAttrSpelling>::load,
  PythonBinding<mx::ObjCBridgeMutableAttrSpelling>::load,
  PythonBinding<mx::ObjCBridgeRelatedAttrSpelling>::load,
  PythonBinding<mx::ObjCClassStubAttrSpelling>::load,
  PythonBinding<mx::ObjCDesignatedInitializerAttrSpelling>::load,
  PythonBinding<mx::ObjCDirectAttrSpelling>::load,
  PythonBinding<mx::ObjCDirectMembersAttrSpelling>::load,
  PythonBinding<mx::ObjCExceptionAttrSpelling>::load,
  PythonBinding<mx::ObjCExplicitProtocolImplAttrSpelling>::load,
  PythonBinding<mx::ObjCExternallyRetainedAttrSpelling>::load,
  PythonBinding<mx::ObjCGCAttrSpelling>::load,
  PythonBinding<mx::ObjCIndependentClassAttrSpelling>::load,
  PythonBinding<mx::ObjCIvarDeclAccessControl>::load,
  PythonBinding<mx::ObjCMessageExprReceiverKind>::load,
  PythonBinding<mx::ObjCMethodFamilyAttrFamilyKind>::load,
  PythonBinding<mx::ObjCMethodFamilyAttrSpelling>::load,
  PythonBinding<mx::ObjCNSObjectAttrSpelling>::load,
  PythonBinding<mx::ObjCNonLazyClassAttrSpelling>::load,
  PythonBinding<mx::ObjCNonRuntimeProtocolAttrSpelling>::load,
  PythonBinding<mx::ObjCOwnershipAttrSpelling>::load,
  PythonBinding<mx::ObjCPreciseLifetimeAttrSpelling>::load,
  PythonBinding<mx::ObjCPropertyDeclPropertyControl>::load,
  PythonBinding<mx::ObjCPropertyDeclSetterKind>::load,
  PythonBinding<mx::ObjCPropertyImplDeclKind>::load,
  PythonBinding<mx::ObjCRequiresPropertyDefsAttrSpelling>::load,
  PythonBinding<mx::ObjCRequiresSuperAttrSpelling>::load,
  PythonBinding<mx::ObjCReturnsInnerPointerAttrSpelling>::load,
  PythonBinding<mx::ObjCRootClassAttrSpelling>::load,
  PythonBinding<mx::ObjCRuntimeNameAttrSpelling>::load,
  PythonBinding<mx::ObjCRuntimeVisibleAttrSpelling>::load,
  PythonBinding<mx::ObjCSubclassingRestrictedAttrSpelling>::load,
  PythonBinding<mx::OpenCLAccessAttrSpelling>::load,
  PythonBinding<mx::OpenCLConstantAddressSpaceAttrSpelling>::load,
  PythonBinding<mx::OpenCLGenericAddressSpaceAttrSpelling>::load,
  PythonBinding<mx::OpenCLGlobalAddressSpaceAttrSpelling>::load,
  PythonBinding<mx::OpenCLGlobalDeviceAddressSpaceAttrSpelling>::load,
  PythonBinding<mx::OpenCLGlobalHostAddressSpaceAttrSpelling>::load,
  PythonBinding<mx::OpenCLKernelAttrSpelling>::load,
  PythonBinding<mx::OpenCLLocalAddressSpaceAttrSpelling>::load,
  PythonBinding<mx::OpenCLPrivateAddressSpaceAttrSpelling>::load,
  PythonBinding<mx::OptimizeNoneAttrSpelling>::load,
  PythonBinding<mx::OverloadableAttrSpelling>::load,
  PythonBinding<mx::OwnershipAttrOwnershipKind>::load,
  PythonBinding<mx::OwnershipAttrSpelling>::load,
  PythonBinding<mx::PackedAttrSpelling>::load,
  PythonBinding<mx::ParamTypestateAttrConsumedState>::load,
  PythonBinding<mx::ParamTypestateAttrSpelling>::load,
  PythonBinding<mx::PascalAttrSpelling>::load,
  PythonBinding<mx::PassObjectSizeAttrSpelling>::load,
  PythonBinding<mx::PatchableFunctionEntryAttrSpelling>::load,
  PythonBinding<mx::PcsAttrPCSType>::load,
  PythonBinding<mx::PcsAttrSpelling>::load,
  PythonBinding<mx::PreferredNameAttrSpelling>::load,
  PythonBinding<mx::PreferredTypeAttrSpelling>::load,
  PythonBinding<mx::PreserveAllAttrSpelling>::load,
  PythonBinding<mx::PreserveMostAttrSpelling>::load,
  PythonBinding<mx::PtGuardedVarAttrSpelling>::load,
  PythonBinding<mx::PureAttrSpelling>::load,
  PythonBinding<mx::QualifiedTypeDestructionKind>::load,
  PythonBinding<mx::QualifiedTypeNonConstantStorageReason>::load,
  PythonBinding<mx::QualifiedTypePrimitiveCopyKind>::load,
  PythonBinding<mx::QualifiedTypePrimitiveDefaultInitializeKind>::load,
  PythonBinding<mx::RISCVInterruptAttrInterruptType>::load,
  PythonBinding<mx::RISCVInterruptAttrSpelling>::load,
  PythonBinding<mx::RandomizeLayoutAttrSpelling>::load,
  PythonBinding<mx::ReadOnlyPlacementAttrSpelling>::load,
  PythonBinding<mx::RegCallAttrSpelling>::load,
  PythonBinding<mx::ReinitializesAttrSpelling>::load,
  PythonBinding<mx::ReleaseCapabilityAttrSpelling>::load,
  PythonBinding<mx::ReleaseHandleAttrSpelling>::load,
  PythonBinding<mx::RequiresCapabilityAttrSpelling>::load,
  PythonBinding<mx::RestrictAttrSpelling>::load,
  PythonBinding<mx::RetainAttrSpelling>::load,
  PythonBinding<mx::ReturnTypestateAttrConsumedState>::load,
  PythonBinding<mx::ReturnTypestateAttrSpelling>::load,
  PythonBinding<mx::ReturnsNonNullAttrSpelling>::load,
  PythonBinding<mx::ReturnsTwiceAttrSpelling>::load,
  PythonBinding<mx::SYCLKernelAttrSpelling>::load,
  PythonBinding<mx::SYCLSpecialClassAttrSpelling>::load,
  PythonBinding<mx::ScopedLockableAttrSpelling>::load,
  PythonBinding<mx::SectionAttrSpelling>::load,
  PythonBinding<mx::SelectAnyAttrSpelling>::load,
  PythonBinding<mx::SentinelAttrSpelling>::load,
  PythonBinding<mx::SetTypestateAttrConsumedState>::load,
  PythonBinding<mx::SetTypestateAttrSpelling>::load,
  PythonBinding<mx::SpeculativeLoadHardeningAttrSpelling>::load,
  PythonBinding<mx::StandaloneDebugAttrSpelling>::load,
  PythonBinding<mx::StdCallAttrSpelling>::load,
  PythonBinding<mx::StmtLikelihood>::load,
  PythonBinding<mx::StmtKind>::load,
  PythonBinding<mx::SuppressAttrSpelling>::load,
  PythonBinding<mx::SwiftAsyncAttrKind>::load,
  PythonBinding<mx::SwiftAsyncAttrSpelling>::load,
  PythonBinding<mx::SwiftAsyncCallAttrSpelling>::load,
  PythonBinding<mx::SwiftAsyncContextAttrSpelling>::load,
  PythonBinding<mx::SwiftAsyncErrorAttrConventionKind>::load,
  PythonBinding<mx::SwiftAsyncErrorAttrSpelling>::load,
  PythonBinding<mx::SwiftCallAttrSpelling>::load,
  PythonBinding<mx::SwiftContextAttrSpelling>::load,
  PythonBinding<mx::SwiftErrorAttrConventionKind>::load,
  PythonBinding<mx::SwiftErrorResultAttrSpelling>::load,
  PythonBinding<mx::SwiftIndirectResultAttrSpelling>::load,
  PythonBinding<mx::SwiftNewTypeAttrNewtypeKind>::load,
  PythonBinding<mx::SwiftNewTypeAttrSpelling>::load,
  PythonBinding<mx::SysVABIAttrSpelling>::load,
  PythonBinding<mx::TLSModelAttrSpelling>::load,
  PythonBinding<mx::TargetAttrSpelling>::load,
  PythonBinding<mx::TargetClonesAttrSpelling>::load,
  PythonBinding<mx::TargetVersionAttrSpelling>::load,
  PythonBinding<mx::TemplateArgumentKind>::load,
  PythonBinding<mx::TestTypestateAttrConsumedState>::load,
  PythonBinding<mx::TestTypestateAttrSpelling>::load,
  PythonBinding<mx::ThisCallAttrSpelling>::load,
  PythonBinding<mx::TransparentUnionAttrSpelling>::load,
  PythonBinding<mx::TrivialABIAttrSpelling>::load,
  PythonBinding<mx::TryAcquireCapabilityAttrSpelling>::load,
  PythonBinding<mx::TypeScalarTypeKind>::load,
  PythonBinding<mx::TypeKind>::load,
  PythonBinding<mx::TypeTagForDatatypeAttrSpelling>::load,
  PythonBinding<mx::TypeVisibilityAttrSpelling>::load,
  PythonBinding<mx::TypeVisibilityAttrVisibilityType>::load,
  PythonBinding<mx::UnaryTransformTypeUTTKind>::load,
  PythonBinding<mx::UnavailableAttrImplicitReason>::load,
  PythonBinding<mx::UnavailableAttrSpelling>::load,
  PythonBinding<mx::UninitializedAttrSpelling>::load,
  PythonBinding<mx::UnlikelyAttrSpelling>::load,
  PythonBinding<mx::UnsafeBufferUsageAttrSpelling>::load,
  PythonBinding<mx::UnusedAttrSpelling>::load,
  PythonBinding<mx::UseHandleAttrSpelling>::load,
  PythonBinding<mx::UsedAttrSpelling>::load,
  PythonBinding<mx::UserDefinedLiteralLiteralOperatorKind>::load,
  PythonBinding<mx::UsingIfExistsAttrSpelling>::load,
  PythonBinding<mx::UuidAttrSpelling>::load,
  PythonBinding<mx::VarDeclDefinitionKind>::load,
  PythonBinding<mx::VarDeclInitializationStyle>::load,
  PythonBinding<mx::VarDeclTLSKind>::load,
  PythonBinding<mx::VecReturnAttrSpelling>::load,
  PythonBinding<mx::VectorCallAttrSpelling>::load,
  PythonBinding<mx::VisibilityAttrSpelling>::load,
  PythonBinding<mx::VisibilityAttrVisibilityType>::load,
  PythonBinding<mx::WarnUnusedAttrSpelling>::load,
  PythonBinding<mx::WarnUnusedResultAttrSpelling>::load,
  PythonBinding<mx::WeakAttrSpelling>::load,
  PythonBinding<mx::WeakImportAttrSpelling>::load,
  PythonBinding<mx::WeakRefAttrSpelling>::load,
  PythonBinding<mx::WebAssemblyExportNameAttrSpelling>::load,
  PythonBinding<mx::WebAssemblyImportModuleAttrSpelling>::load,
  PythonBinding<mx::WebAssemblyImportNameAttrSpelling>::load,
  PythonBinding<mx::X86ForceAlignArgPointerAttrSpelling>::load,
  PythonBinding<mx::XRayInstrumentAttrSpelling>::load,
  PythonBinding<mx::XRayLogArgsAttrSpelling>::load,
  PythonBinding<mx::ZeroCallUsedRegsAttrSpelling>::load,
  PythonBinding<mx::ZeroCallUsedRegsAttrZeroCallUsedRegsKind>::load,
  PythonBinding<mx::ASTDumpOutputFormat>::load,
  PythonBinding<mx::AccessSpecifier>::load,
  PythonBinding<mx::AddrSpaceMapMangling>::load,
  PythonBinding<mx::AlignRequirementKind>::load,
  PythonBinding<mx::AltivecSrcCompatKind>::load,
  PythonBinding<mx::ArgumentKind>::load,
  PythonBinding<mx::ArraySizeModifier>::load,
  PythonBinding<mx::ArrayTypeTrait>::load,
  PythonBinding<mx::AtomicScopeModelKind>::load,
  PythonBinding<mx::AutoTypeKeyword>::load,
  PythonBinding<mx::AvailabilityResult>::load,
  PythonBinding<mx::BinaryOperatorKind>::load,
  PythonBinding<mx::Bits>::load,
  PythonBinding<mx::CXXConstructionKind>::load,
  PythonBinding<mx::CXXNewInitializationStyle>::load,
  PythonBinding<mx::CallingConv>::load,
  PythonBinding<mx::CanThrowResult>::load,
  PythonBinding<mx::CapturedRegionKind>::load,
  PythonBinding<mx::CastKind>::load,
  PythonBinding<mx::CharacterLiteralKind>::load,
  PythonBinding<mx::ClangABI>::load,
  PythonBinding<mx::CommentKind>::load,
  PythonBinding<mx::ComparisonCategoryResult>::load,
  PythonBinding<mx::ComparisonCategoryType>::load,
  PythonBinding<mx::CompilingModuleKind>::load,
  PythonBinding<mx::ComplexRangeKind>::load,
  PythonBinding<mx::ConstantResultStorageKind>::load,
  PythonBinding<mx::ConstexprSpecKind>::load,
  PythonBinding<mx::CoreFoundationABI>::load,
  PythonBinding<mx::DataPositionTy>::load,
  PythonBinding<mx::DeductionCandidate>::load,
  PythonBinding<mx::DefaultArgKind>::load,
  PythonBinding<mx::DefaultCallingConvention>::load,
  PythonBinding<mx::DefaultVisiblityExportMapping>::load,
  PythonBinding<mx::DesignatorKind>::load,
  PythonBinding<mx::DiagnosticLevelMask>::load,
  PythonBinding<mx::ElaboratedTypeKeyword>::load,
  PythonBinding<mx::EscapeChar>::load,
  PythonBinding<mx::ExceptionHandlingKind>::load,
  PythonBinding<mx::ExceptionSpecificationType>::load,
  PythonBinding<mx::ExcessPrecisionKind>::load,
  PythonBinding<mx::ExplicitSpecKind>::load,
  PythonBinding<mx::ExprDependence>::load,
  PythonBinding<mx::ExprObjectKind>::load,
  PythonBinding<mx::ExprOffsets>::load,
  PythonBinding<mx::ExprValueKind>::load,
  PythonBinding<mx::ExpressionTrait>::load,
  PythonBinding<mx::ExtKind>::load,
  PythonBinding<mx::ExtendArgsKind>::load,
  PythonBinding<mx::FPEvalMethodKind>::load,
  PythonBinding<mx::FPExceptionModeKind>::load,
  PythonBinding<mx::FPModeKind>::load,
  PythonBinding<mx::Flags>::load,
  PythonBinding<mx::GC>::load,
  PythonBinding<mx::GCMode>::load,
  PythonBinding<mx::GPUDefaultStreamKind>::load,
  PythonBinding<mx::GVALinkage>::load,
  PythonBinding<mx::GetBuiltinTypeError>::load,
  PythonBinding<mx::HLSLLangStd>::load,
  PythonBinding<mx::ID>::load,
  PythonBinding<mx::IdentifierInfoFlag>::load,
  PythonBinding<mx::IfStatementKind>::load,
  PythonBinding<mx::ImplicitParamKind>::load,
  PythonBinding<mx::InClassInitStyle>::load,
  PythonBinding<mx::InheritedDesignatedInitializersState>::load,
  PythonBinding<mx::InitStorageKind>::load,
  PythonBinding<mx::InlineVariableDefinitionKind>::load,
  PythonBinding<mx::InterestingIdentifierKind>::load,
  PythonBinding<mx::Kinds>::load,
  PythonBinding<mx::LambdaCaptureDefault>::load,
  PythonBinding<mx::LambdaCaptureKind>::load,
  PythonBinding<mx::LangAS>::load,
  PythonBinding<mx::LangFeatures>::load,
  PythonBinding<mx::Language>::load,
  PythonBinding<mx::LanguageLinkage>::load,
  PythonBinding<mx::LaxVectorConversionKind>::load,
  PythonBinding<mx::Level>::load,
  PythonBinding<mx::Linkage>::load,
  PythonBinding<mx::LinkageSpecLanguageIDs>::load,
  PythonBinding<mx::MSInheritanceModel>::load,
  PythonBinding<mx::MSVCMajorVersion>::load,
  PythonBinding<mx::MSVtorDispMode>::load,
  PythonBinding<mx::MethodRefFlags>::load,
  PythonBinding<mx::ModifiableType>::load,
  PythonBinding<mx::MultiVersionKind>::load,
  PythonBinding<mx::NameKind>::load,
  PythonBinding<mx::NeedExtraManglingDecl>::load,
  PythonBinding<mx::NestedNameSpecifierDependence>::load,
  PythonBinding<mx::NonOdrUseReason>::load,
  PythonBinding<mx::NonceObjCInterface>::load,
  PythonBinding<mx::NullabilityKind>::load,
  PythonBinding<mx::OMPDeclareReductionInitKind>::load,
  PythonBinding<mx::ObjCBridgeCastKind>::load,
  PythonBinding<mx::ObjCImplementationControl>::load,
  PythonBinding<mx::ObjCInstanceTypeFamily>::load,
  PythonBinding<mx::ObjCLifetime>::load,
  PythonBinding<mx::ObjCMethodFamily>::load,
  PythonBinding<mx::ObjCPropertyQueryKind>::load,
  PythonBinding<mx::ObjCStringFormatFamily>::load,
  PythonBinding<mx::ObjCSubstitutionContext>::load,
  PythonBinding<mx::ObjCTypeParamVariance>::load,
  PythonBinding<mx::OnOffSwitch>::load,
  PythonBinding<mx::OnStackType>::load,
  PythonBinding<mx::OpenMPAdjustArgsOpKind>::load,
  PythonBinding<mx::OpenMPAtClauseKind>::load,
  PythonBinding<mx::OpenMPAtomicDefaultMemOrderClauseKind>::load,
  PythonBinding<mx::OpenMPBindClauseKind>::load,
  PythonBinding<mx::OpenMPDefaultmapClauseKind>::load,
  PythonBinding<mx::OpenMPDefaultmapClauseModifier>::load,
  PythonBinding<mx::OpenMPDependClauseKind>::load,
  PythonBinding<mx::OpenMPDeviceClauseModifier>::load,
  PythonBinding<mx::OpenMPDeviceType>::load,
  PythonBinding<mx::OpenMPDistScheduleClauseKind>::load,
  PythonBinding<mx::OpenMPDoacrossClauseModifier>::load,
  PythonBinding<mx::OpenMPGrainsizeClauseModifier>::load,
  PythonBinding<mx::OpenMPLastprivateModifier>::load,
  PythonBinding<mx::OpenMPLinearClauseKind>::load,
  PythonBinding<mx::OpenMPMapClauseKind>::load,
  PythonBinding<mx::OpenMPMapModifierKind>::load,
  PythonBinding<mx::OpenMPMotionModifierKind>::load,
  PythonBinding<mx::OpenMPNumTasksClauseModifier>::load,
  PythonBinding<mx::OpenMPOrderClauseKind>::load,
  PythonBinding<mx::OpenMPOrderClauseModifier>::load,
  PythonBinding<mx::OpenMPReductionClauseModifier>::load,
  PythonBinding<mx::OpenMPScheduleClauseKind>::load,
  PythonBinding<mx::OpenMPScheduleClauseModifier>::load,
  PythonBinding<mx::OpenMPSeverityClauseKind>::load,
  PythonBinding<mx::OverloadedOperatorKind>::load,
  PythonBinding<mx::OverloadsShown>::load,
  PythonBinding<mx::ParameterABI>::load,
  PythonBinding<mx::ParenLocsOffsets>::load,
  PythonBinding<mx::PragmaFPKind>::load,
  PythonBinding<mx::PragmaFloatControlKind>::load,
  PythonBinding<mx::PragmaMSCommentKind>::load,
  PythonBinding<mx::PragmaMSPointersToMembersKind>::load,
  PythonBinding<mx::PragmaMSStructKind>::load,
  PythonBinding<mx::PragmaSectionFlag>::load,
  PythonBinding<mx::PredefinedIdentKind>::load,
  PythonBinding<mx::Qualified>::load,
  PythonBinding<mx::RangeExprOffset>::load,
  PythonBinding<mx::RangeLocOffset>::load,
  PythonBinding<mx::RecordArgPassingKind>::load,
  PythonBinding<mx::RefQualifierKind>::load,
  PythonBinding<mx::ReservedIdentifierStatus>::load,
  PythonBinding<mx::ReservedLiteralSuffixIdStatus>::load,
  PythonBinding<mx::SFINAEResponse>::load,
  PythonBinding<mx::SYCLMajorVersion>::load,
  PythonBinding<mx::SanitizerOrdinal>::load,
  PythonBinding<mx::SelectorLocationsKind>::load,
  PythonBinding<mx::ShaderStage>::load,
  PythonBinding<mx::SignReturnAddressKeyKind>::load,
  PythonBinding<mx::SignReturnAddressScopeKind>::load,
  PythonBinding<mx::SignedOverflowBehaviorTy>::load,
  PythonBinding<mx::SourceLocIdentKind>::load,
  PythonBinding<mx::SpecialMemberFlags>::load,
  PythonBinding<mx::SpecifierKind>::load,
  PythonBinding<mx::StackProtectorMode>::load,
  PythonBinding<mx::StorageClass>::load,
  PythonBinding<mx::StorageDuration>::load,
  PythonBinding<mx::StoredNameKind>::load,
  PythonBinding<mx::StoredSpecifierKind>::load,
  PythonBinding<mx::StrictFlexArraysLevelKind>::load,
  PythonBinding<mx::StringLiteralKind>::load,
  PythonBinding<mx::SubExpr>::load,
  PythonBinding<mx::SubStmt>::load,
  PythonBinding<mx::SyncScope>::load,
  PythonBinding<mx::Syntax>::load,
  PythonBinding<mx::TQ>::load,
  PythonBinding<mx::TagTypeKind>::load,
  PythonBinding<mx::TailPaddingUseRules>::load,
  PythonBinding<mx::TemplateArgumentDependence>::load,
  PythonBinding<mx::TemplateNameDependence>::load,
  PythonBinding<mx::TemplateSpecializationKind>::load,
  PythonBinding<mx::TextDiagnosticFormat>::load,
  PythonBinding<mx::ThreadModelKind>::load,
  PythonBinding<mx::ThreadStorageClassSpecifier>::load,
  PythonBinding<mx::TrailingAllocKind>::load,
  PythonBinding<mx::TranslationUnitKind>::load,
  PythonBinding<mx::TrivialAutoVarInitKind>::load,
  PythonBinding<mx::TypeDependence>::load,
  PythonBinding<mx::TypeLocClass>::load,
  PythonBinding<mx::TypeOfKind>::load,
  PythonBinding<mx::TypeSpecifierSign>::load,
  PythonBinding<mx::TypeSpecifierType>::load,
  PythonBinding<mx::TypeSpecifierWidth>::load,
  PythonBinding<mx::TypeSpecifiersPipe>::load,
  PythonBinding<mx::TypeTrait>::load,
  PythonBinding<mx::UnaryExprOrTypeTrait>::load,
  PythonBinding<mx::UnaryOperatorKind>::load,
  PythonBinding<mx::APValueKind>::load,
  PythonBinding<mx::VectorKind>::load,
  PythonBinding<mx::Visibility>::load,
  PythonBinding<mx::VisibilityForcedKinds>::load,
  PythonBinding<mx::VisibilityFromDLLStorageClassKinds>::load,
  PythonBinding<mx::AttributeSyntax>::load,
  PythonBinding<mx::DeclCategory>::load,
  PythonBinding<mx::PseudoKind>::load,
  PythonBinding<mx::CXXCtorInitializer>::load,
  PythonBinding<mx::Designator>::load,
  PythonBinding<mx::CXXBaseSpecifier>::load,
  PythonBinding<mx::TemplateParameterList>::load,
  PythonBinding<mx::TemplateArgument>::load,
  PythonBinding<mx::Attr>::load,
  PythonBinding<mx::AlignValueAttr>::load,
  PythonBinding<mx::AliasAttr>::load,
  PythonBinding<mx::AbiTagAttr>::load,
  PythonBinding<mx::TypeAttr>::load,
  PythonBinding<mx::SPtrAttr>::load,
  PythonBinding<mx::Ptr64Attr>::load,
  PythonBinding<mx::Ptr32Attr>::load,
  PythonBinding<mx::OpenCLPrivateAddressSpaceAttr>::load,
  PythonBinding<mx::OpenCLLocalAddressSpaceAttr>::load,
  PythonBinding<mx::OpenCLGlobalHostAddressSpaceAttr>::load,
  PythonBinding<mx::OpenCLGlobalDeviceAddressSpaceAttr>::load,
  PythonBinding<mx::OpenCLGlobalAddressSpaceAttr>::load,
  PythonBinding<mx::OpenCLGenericAddressSpaceAttr>::load,
  PythonBinding<mx::OpenCLConstantAddressSpaceAttr>::load,
  PythonBinding<mx::ObjCKindOfAttr>::load,
  PythonBinding<mx::ObjCInertUnsafeUnretainedAttr>::load,
  PythonBinding<mx::ObjCGCAttr>::load,
  PythonBinding<mx::NoDerefAttr>::load,
  PythonBinding<mx::HLSLParamModifierAttr>::load,
  PythonBinding<mx::HLSLGroupSharedAddressSpaceAttr>::load,
  PythonBinding<mx::CmseNSCallAttr>::load,
  PythonBinding<mx::BTFTypeTagAttr>::load,
  PythonBinding<mx::ArmStreamingCompatibleAttr>::load,
  PythonBinding<mx::ArmStreamingAttr>::load,
  PythonBinding<mx::ArmPreservesAttr>::load,
  PythonBinding<mx::ArmOutAttr>::load,
  PythonBinding<mx::ArmMveStrictPolymorphismAttr>::load,
  PythonBinding<mx::ArmInOutAttr>::load,
  PythonBinding<mx::ArmInAttr>::load,
  PythonBinding<mx::AnnotateTypeAttr>::load,
  PythonBinding<mx::AddressSpaceAttr>::load,
  PythonBinding<mx::WebAssemblyFuncrefAttr>::load,
  PythonBinding<mx::UPtrAttr>::load,
  PythonBinding<mx::TypeNullableResultAttr>::load,
  PythonBinding<mx::TypeNullableAttr>::load,
  PythonBinding<mx::TypeNullUnspecifiedAttr>::load,
  PythonBinding<mx::TypeNonNullAttr>::load,
  PythonBinding<mx::ThreadAttr>::load,
  PythonBinding<mx::SwiftVersionedRemovalAttr>::load,
  PythonBinding<mx::SwiftVersionedAdditionAttr>::load,
  PythonBinding<mx::SwiftObjCMembersAttr>::load,
  PythonBinding<mx::StmtAttr>::load,
  PythonBinding<mx::OpenCLUnrollHintAttr>::load,
  PythonBinding<mx::MustTailAttr>::load,
  PythonBinding<mx::LikelyAttr>::load,
  PythonBinding<mx::FallThroughAttr>::load,
  PythonBinding<mx::CodeAlignAttr>::load,
  PythonBinding<mx::UnlikelyAttr>::load,
  PythonBinding<mx::RenderScriptKernelAttr>::load,
  PythonBinding<mx::OverloadableAttr>::load,
  PythonBinding<mx::OpenCLAccessAttr>::load,
  PythonBinding<mx::ObjCRuntimeVisibleAttr>::load,
  PythonBinding<mx::ObjCRuntimeNameAttr>::load,
  PythonBinding<mx::ObjCNonRuntimeProtocolAttr>::load,
  PythonBinding<mx::ObjCNonLazyClassAttr>::load,
  PythonBinding<mx::ObjCDirectMembersAttr>::load,
  PythonBinding<mx::ObjCDirectAttr>::load,
  PythonBinding<mx::ObjCDesignatedInitializerAttr>::load,
  PythonBinding<mx::ObjCClassStubAttr>::load,
  PythonBinding<mx::ObjCBoxableAttr>::load,
  PythonBinding<mx::OMPReferencedVarAttr>::load,
  PythonBinding<mx::OMPDeclareSimdDeclAttr>::load,
  PythonBinding<mx::OMPCaptureKindAttr>::load,
  PythonBinding<mx::NoEscapeAttr>::load,
  PythonBinding<mx::NoBuiltinAttr>::load,
  PythonBinding<mx::ModeAttr>::load,
  PythonBinding<mx::LoopHintAttr>::load,
  PythonBinding<mx::LoaderUninitializedAttr>::load,
  PythonBinding<mx::InitSegAttr>::load,
  PythonBinding<mx::InheritableAttr>::load,
  PythonBinding<mx::IBOutletCollectionAttr>::load,
  PythonBinding<mx::IBOutletAttr>::load,
  PythonBinding<mx::IBActionAttr>::load,
  PythonBinding<mx::HotAttr>::load,
  PythonBinding<mx::HLSLShaderAttr>::load,
  PythonBinding<mx::HLSLResourceBindingAttr>::load,
  PythonBinding<mx::HLSLResourceAttr>::load,
  PythonBinding<mx::HLSLNumThreadsAttr>::load,
  PythonBinding<mx::HLSLAnnotationAttr>::load,
  PythonBinding<mx::HLSLSV_GroupIndexAttr>::load,
  PythonBinding<mx::HLSLSV_DispatchThreadIDAttr>::load,
  PythonBinding<mx::HIPManagedAttr>::load,
  PythonBinding<mx::GuardedVarAttr>::load,
  PythonBinding<mx::GuardedByAttr>::load,
  PythonBinding<mx::GNUInlineAttr>::load,
  PythonBinding<mx::FunctionReturnThunksAttr>::load,
  PythonBinding<mx::FormatAttr>::load,
  PythonBinding<mx::FormatArgAttr>::load,
  PythonBinding<mx::FlattenAttr>::load,
  PythonBinding<mx::FlagEnumAttr>::load,
  PythonBinding<mx::FinalAttr>::load,
  PythonBinding<mx::FastCallAttr>::load,
  PythonBinding<mx::ExternalSourceSymbolAttr>::load,
  PythonBinding<mx::ExclusiveTrylockFunctionAttr>::load,
  PythonBinding<mx::ExcludeFromExplicitInstantiationAttr>::load,
  PythonBinding<mx::ErrorAttr>::load,
  PythonBinding<mx::EnumExtensibilityAttr>::load,
  PythonBinding<mx::EnforceTCBLeafAttr>::load,
  PythonBinding<mx::EnforceTCBAttr>::load,
  PythonBinding<mx::EnableIfAttr>::load,
  PythonBinding<mx::EmptyBasesAttr>::load,
  PythonBinding<mx::DisableTailCallsAttr>::load,
  PythonBinding<mx::DisableSanitizerInstrumentationAttr>::load,
  PythonBinding<mx::DiagnoseIfAttr>::load,
  PythonBinding<mx::DiagnoseAsBuiltinAttr>::load,
  PythonBinding<mx::DestructorAttr>::load,
  PythonBinding<mx::DeprecatedAttr>::load,
  PythonBinding<mx::DeclOrStmtAttr>::load,
  PythonBinding<mx::AlwaysInlineAttr>::load,
  PythonBinding<mx::SuppressAttr>::load,
  PythonBinding<mx::NoMergeAttr>::load,
  PythonBinding<mx::NoInlineAttr>::load,
  PythonBinding<mx::DLLImportStaticLocalAttr>::load,
  PythonBinding<mx::DLLImportAttr>::load,
  PythonBinding<mx::DLLExportStaticLocalAttr>::load,
  PythonBinding<mx::DLLExportAttr>::load,
  PythonBinding<mx::CountedByAttr>::load,
  PythonBinding<mx::CoroWrapperAttr>::load,
  PythonBinding<mx::CoroReturnTypeAttr>::load,
  PythonBinding<mx::CoroOnlyDestroyWhenCompleteAttr>::load,
  PythonBinding<mx::CoroLifetimeBoundAttr>::load,
  PythonBinding<mx::CoroDisableLifetimeBoundAttr>::load,
  PythonBinding<mx::ConvergentAttr>::load,
  PythonBinding<mx::ConsumableSetOnReadAttr>::load,
  PythonBinding<mx::ConsumableAutoCastAttr>::load,
  PythonBinding<mx::ConsumableAttr>::load,
  PythonBinding<mx::ConstructorAttr>::load,
  PythonBinding<mx::ConstInitAttr>::load,
  PythonBinding<mx::ConstAttr>::load,
  PythonBinding<mx::CommonAttr>::load,
  PythonBinding<mx::ColdAttr>::load,
  PythonBinding<mx::CodeSegAttr>::load,
  PythonBinding<mx::CodeModelAttr>::load,
  PythonBinding<mx::CmseNSEntryAttr>::load,
  PythonBinding<mx::CleanupAttr>::load,
  PythonBinding<mx::CapturedRecordAttr>::load,
  PythonBinding<mx::CapabilityAttr>::load,
  PythonBinding<mx::CallbackAttr>::load,
  PythonBinding<mx::CallableWhenAttr>::load,
  PythonBinding<mx::CXX11NoReturnAttr>::load,
  PythonBinding<mx::CUDASharedAttr>::load,
  PythonBinding<mx::CUDALaunchBoundsAttr>::load,
  PythonBinding<mx::CUDAInvalidTargetAttr>::load,
  PythonBinding<mx::CUDAHostAttr>::load,
  PythonBinding<mx::CUDAGlobalAttr>::load,
  PythonBinding<mx::CUDADeviceBuiltinTextureTypeAttr>::load,
  PythonBinding<mx::CUDADeviceBuiltinSurfaceTypeAttr>::load,
  PythonBinding<mx::CUDADeviceAttr>::load,
  PythonBinding<mx::CUDAConstantAttr>::load,
  PythonBinding<mx::CPUSpecificAttr>::load,
  PythonBinding<mx::CPUDispatchAttr>::load,
  PythonBinding<mx::CFUnknownTransferAttr>::load,
  PythonBinding<mx::CFReturnsRetainedAttr>::load,
  PythonBinding<mx::CFReturnsNotRetainedAttr>::load,
  PythonBinding<mx::CFICanonicalJumpTableAttr>::load,
  PythonBinding<mx::CFGuardAttr>::load,
  PythonBinding<mx::CFAuditedTransferAttr>::load,
  PythonBinding<mx::CDeclAttr>::load,
  PythonBinding<mx::C11NoReturnAttr>::load,
  PythonBinding<mx::BuiltinAttr>::load,
  PythonBinding<mx::BlocksAttr>::load,
  PythonBinding<mx::BTFDeclTagAttr>::load,
  PythonBinding<mx::BPFPreserveStaticOffsetAttr>::load,
  PythonBinding<mx::BPFPreserveAccessIndexAttr>::load,
  PythonBinding<mx::AvailableOnlyInDefaultEvalMethodAttr>::load,
  PythonBinding<mx::AvailabilityAttr>::load,
  PythonBinding<mx::AssumptionAttr>::load,
  PythonBinding<mx::AssumeAlignedAttr>::load,
  PythonBinding<mx::AssertSharedLockAttr>::load,
  PythonBinding<mx::AssertExclusiveLockAttr>::load,
  PythonBinding<mx::AssertCapabilityAttr>::load,
  PythonBinding<mx::AsmLabelAttr>::load,
  PythonBinding<mx::ArtificialAttr>::load,
  PythonBinding<mx::ArmNewAttr>::load,
  PythonBinding<mx::ArmLocallyStreamingAttr>::load,
  PythonBinding<mx::ArmBuiltinAliasAttr>::load,
  PythonBinding<mx::ArgumentWithTypeTagAttr>::load,
  PythonBinding<mx::ArcWeakrefUnavailableAttr>::load,
  PythonBinding<mx::AnyX86NoCfCheckAttr>::load,
  PythonBinding<mx::AnyX86NoCallerSavedRegistersAttr>::load,
  PythonBinding<mx::AnyX86InterruptAttr>::load,
  PythonBinding<mx::AnalyzerNoReturnAttr>::load,
  PythonBinding<mx::AlwaysDestroyAttr>::load,
  PythonBinding<mx::AllocSizeAttr>::load,
  PythonBinding<mx::AllocAlignAttr>::load,
  PythonBinding<mx::AlignedAttr>::load,
  PythonBinding<mx::AlignNaturalAttr>::load,
  PythonBinding<mx::AlignMac68kAttr>::load,
  PythonBinding<mx::AcquiredBeforeAttr>::load,
  PythonBinding<mx::AcquiredAfterAttr>::load,
  PythonBinding<mx::AcquireHandleAttr>::load,
  PythonBinding<mx::AcquireCapabilityAttr>::load,
  PythonBinding<mx::AVRSignalAttr>::load,
  PythonBinding<mx::AVRInterruptAttr>::load,
  PythonBinding<mx::ARMInterruptAttr>::load,
  PythonBinding<mx::AMDGPUWavesPerEUAttr>::load,
  PythonBinding<mx::AMDGPUNumVGPRAttr>::load,
  PythonBinding<mx::AMDGPUNumSGPRAttr>::load,
  PythonBinding<mx::AMDGPUKernelCallAttr>::load,
  PythonBinding<mx::AMDGPUFlatWorkGroupSizeAttr>::load,
  PythonBinding<mx::AArch64VectorPcsAttr>::load,
  PythonBinding<mx::AArch64SVEPcsAttr>::load,
  PythonBinding<mx::ZeroCallUsedRegsAttr>::load,
  PythonBinding<mx::XRayLogArgsAttr>::load,
  PythonBinding<mx::XRayInstrumentAttr>::load,
  PythonBinding<mx::X86ForceAlignArgPointerAttr>::load,
  PythonBinding<mx::WorkGroupSizeHintAttr>::load,
  PythonBinding<mx::WebAssemblyImportNameAttr>::load,
  PythonBinding<mx::WebAssemblyImportModuleAttr>::load,
  PythonBinding<mx::WebAssemblyExportNameAttr>::load,
  PythonBinding<mx::WeakRefAttr>::load,
  PythonBinding<mx::WeakImportAttr>::load,
  PythonBinding<mx::WeakAttr>::load,
  PythonBinding<mx::WarnUnusedResultAttr>::load,
  PythonBinding<mx::WarnUnusedAttr>::load,
  PythonBinding<mx::VisibilityAttr>::load,
  PythonBinding<mx::VectorCallAttr>::load,
  PythonBinding<mx::VecTypeHintAttr>::load,
  PythonBinding<mx::VecReturnAttr>::load,
  PythonBinding<mx::UuidAttr>::load,
  PythonBinding<mx::UsingIfExistsAttr>::load,
  PythonBinding<mx::UsedAttr>::load,
  PythonBinding<mx::UnusedAttr>::load,
  PythonBinding<mx::UnsafeBufferUsageAttr>::load,
  PythonBinding<mx::UninitializedAttr>::load,
  PythonBinding<mx::UnavailableAttr>::load,
  PythonBinding<mx::TypeVisibilityAttr>::load,
  PythonBinding<mx::TypeTagForDatatypeAttr>::load,
  PythonBinding<mx::TryAcquireCapabilityAttr>::load,
  PythonBinding<mx::TrivialABIAttr>::load,
  PythonBinding<mx::TransparentUnionAttr>::load,
  PythonBinding<mx::ThisCallAttr>::load,
  PythonBinding<mx::TestTypestateAttr>::load,
  PythonBinding<mx::TargetVersionAttr>::load,
  PythonBinding<mx::TargetClonesAttr>::load,
  PythonBinding<mx::TargetAttr>::load,
  PythonBinding<mx::TLSModelAttr>::load,
  PythonBinding<mx::SysVABIAttr>::load,
  PythonBinding<mx::SwiftPrivateAttr>::load,
  PythonBinding<mx::SwiftNewTypeAttr>::load,
  PythonBinding<mx::SwiftNameAttr>::load,
  PythonBinding<mx::SwiftImportPropertyAsAccessorsAttr>::load,
  PythonBinding<mx::SwiftImportAsNonGenericAttr>::load,
  PythonBinding<mx::SwiftErrorAttr>::load,
  PythonBinding<mx::SwiftCallAttr>::load,
  PythonBinding<mx::SwiftBridgedTypedefAttr>::load,
  PythonBinding<mx::SwiftBridgeAttr>::load,
  PythonBinding<mx::SwiftAttrAttr>::load,
  PythonBinding<mx::SwiftAsyncNameAttr>::load,
  PythonBinding<mx::SwiftAsyncErrorAttr>::load,
  PythonBinding<mx::SwiftAsyncCallAttr>::load,
  PythonBinding<mx::SwiftAsyncAttr>::load,
  PythonBinding<mx::StrictGuardStackCheckAttr>::load,
  PythonBinding<mx::StrictFPAttr>::load,
  PythonBinding<mx::StdCallAttr>::load,
  PythonBinding<mx::StandaloneDebugAttr>::load,
  PythonBinding<mx::SpeculativeLoadHardeningAttr>::load,
  PythonBinding<mx::SharedTrylockFunctionAttr>::load,
  PythonBinding<mx::SetTypestateAttr>::load,
  PythonBinding<mx::SentinelAttr>::load,
  PythonBinding<mx::SelectAnyAttr>::load,
  PythonBinding<mx::SectionAttr>::load,
  PythonBinding<mx::ScopedLockableAttr>::load,
  PythonBinding<mx::SYCLSpecialClassAttr>::load,
  PythonBinding<mx::SYCLKernelAttr>::load,
  PythonBinding<mx::ReturnsTwiceAttr>::load,
  PythonBinding<mx::ReturnsNonNullAttr>::load,
  PythonBinding<mx::ReturnTypestateAttr>::load,
  PythonBinding<mx::RetainAttr>::load,
  PythonBinding<mx::RestrictAttr>::load,
  PythonBinding<mx::RequiresCapabilityAttr>::load,
  PythonBinding<mx::ReqdWorkGroupSizeAttr>::load,
  PythonBinding<mx::ReleaseCapabilityAttr>::load,
  PythonBinding<mx::ReinitializesAttr>::load,
  PythonBinding<mx::RegCallAttr>::load,
  PythonBinding<mx::ReadOnlyPlacementAttr>::load,
  PythonBinding<mx::RandomizeLayoutAttr>::load,
  PythonBinding<mx::RISCVInterruptAttr>::load,
  PythonBinding<mx::PureAttr>::load,
  PythonBinding<mx::PtGuardedVarAttr>::load,
  PythonBinding<mx::PtGuardedByAttr>::load,
  PythonBinding<mx::PreserveMostAttr>::load,
  PythonBinding<mx::PreserveAllAttr>::load,
  PythonBinding<mx::PreferredTypeAttr>::load,
  PythonBinding<mx::PreferredNameAttr>::load,
  PythonBinding<mx::PragmaClangTextSectionAttr>::load,
  PythonBinding<mx::PragmaClangRodataSectionAttr>::load,
  PythonBinding<mx::PragmaClangRelroSectionAttr>::load,
  PythonBinding<mx::PragmaClangDataSectionAttr>::load,
  PythonBinding<mx::PragmaClangBSSSectionAttr>::load,
  PythonBinding<mx::PointerAttr>::load,
  PythonBinding<mx::PcsAttr>::load,
  PythonBinding<mx::PatchableFunctionEntryAttr>::load,
  PythonBinding<mx::PascalAttr>::load,
  PythonBinding<mx::ParamTypestateAttr>::load,
  PythonBinding<mx::PackedAttr>::load,
  PythonBinding<mx::OwnershipAttr>::load,
  PythonBinding<mx::OwnerAttr>::load,
  PythonBinding<mx::OverrideAttr>::load,
  PythonBinding<mx::OptimizeNoneAttr>::load,
  PythonBinding<mx::OpenCLKernelAttr>::load,
  PythonBinding<mx::OpenCLIntelReqdSubGroupSizeAttr>::load,
  PythonBinding<mx::ObjCSubclassingRestrictedAttr>::load,
  PythonBinding<mx::ObjCRootClassAttr>::load,
  PythonBinding<mx::ObjCReturnsInnerPointerAttr>::load,
  PythonBinding<mx::ObjCRequiresSuperAttr>::load,
  PythonBinding<mx::ObjCRequiresPropertyDefsAttr>::load,
  PythonBinding<mx::ObjCPreciseLifetimeAttr>::load,
  PythonBinding<mx::ObjCOwnershipAttr>::load,
  PythonBinding<mx::ObjCNSObjectAttr>::load,
  PythonBinding<mx::ObjCMethodFamilyAttr>::load,
  PythonBinding<mx::ObjCIndependentClassAttr>::load,
  PythonBinding<mx::ObjCExternallyRetainedAttr>::load,
  PythonBinding<mx::ObjCExplicitProtocolImplAttr>::load,
  PythonBinding<mx::ObjCExceptionAttr>::load,
  PythonBinding<mx::ObjCBridgeRelatedAttr>::load,
  PythonBinding<mx::ObjCBridgeMutableAttr>::load,
  PythonBinding<mx::ObjCBridgeAttr>::load,
  PythonBinding<mx::OSReturnsRetainedOnZeroAttr>::load,
  PythonBinding<mx::OSReturnsRetainedOnNonZeroAttr>::load,
  PythonBinding<mx::OSReturnsRetainedAttr>::load,
  PythonBinding<mx::OSReturnsNotRetainedAttr>::load,
  PythonBinding<mx::OSConsumesThisAttr>::load,
  PythonBinding<mx::OMPThreadPrivateDeclAttr>::load,
  PythonBinding<mx::OMPDeclareVariantAttr>::load,
  PythonBinding<mx::OMPDeclareTargetDeclAttr>::load,
  PythonBinding<mx::OMPCaptureNoInitAttr>::load,
  PythonBinding<mx::OMPAllocateDeclAttr>::load,
  PythonBinding<mx::NotTailCalledAttr>::load,
  PythonBinding<mx::NoUwtableAttr>::load,
  PythonBinding<mx::NoUniqueAddressAttr>::load,
  PythonBinding<mx::NoThrowAttr>::load,
  PythonBinding<mx::NoThreadSafetyAnalysisAttr>::load,
  PythonBinding<mx::NoStackProtectorAttr>::load,
  PythonBinding<mx::NoSplitStackAttr>::load,
  PythonBinding<mx::NoSpeculativeLoadHardeningAttr>::load,
  PythonBinding<mx::NoSanitizeAttr>::load,
  PythonBinding<mx::NoReturnAttr>::load,
  PythonBinding<mx::NoRandomizeLayoutAttr>::load,
  PythonBinding<mx::NoProfileFunctionAttr>::load,
  PythonBinding<mx::NoMips16Attr>::load,
  PythonBinding<mx::NoMicroMipsAttr>::load,
  PythonBinding<mx::NoInstrumentFunctionAttr>::load,
  PythonBinding<mx::NoDuplicateAttr>::load,
  PythonBinding<mx::NoDestroyAttr>::load,
  PythonBinding<mx::NoDebugAttr>::load,
  PythonBinding<mx::NoCommonAttr>::load,
  PythonBinding<mx::NoAliasAttr>::load,
  PythonBinding<mx::NakedAttr>::load,
  PythonBinding<mx::NVPTXKernelAttr>::load,
  PythonBinding<mx::NSReturnsRetainedAttr>::load,
  PythonBinding<mx::NSReturnsNotRetainedAttr>::load,
  PythonBinding<mx::NSReturnsAutoreleasedAttr>::load,
  PythonBinding<mx::NSErrorDomainAttr>::load,
  PythonBinding<mx::NSConsumesSelfAttr>::load,
  PythonBinding<mx::MipsShortCallAttr>::load,
  PythonBinding<mx::MipsLongCallAttr>::load,
  PythonBinding<mx::MipsInterruptAttr>::load,
  PythonBinding<mx::Mips16Attr>::load,
  PythonBinding<mx::MinVectorWidthAttr>::load,
  PythonBinding<mx::MinSizeAttr>::load,
  PythonBinding<mx::MicroMipsAttr>::load,
  PythonBinding<mx::MaybeUndefAttr>::load,
  PythonBinding<mx::MayAliasAttr>::load,
  PythonBinding<mx::MaxFieldAlignmentAttr>::load,
  PythonBinding<mx::MSVtorDispAttr>::load,
  PythonBinding<mx::MSStructAttr>::load,
  PythonBinding<mx::MSP430InterruptAttr>::load,
  PythonBinding<mx::MSNoVTableAttr>::load,
  PythonBinding<mx::MSInheritanceAttr>::load,
  PythonBinding<mx::MSConstexprAttr>::load,
  PythonBinding<mx::MSAllocatorAttr>::load,
  PythonBinding<mx::MSABIAttr>::load,
  PythonBinding<mx::MIGServerRoutineAttr>::load,
  PythonBinding<mx::M68kRTDAttr>::load,
  PythonBinding<mx::M68kInterruptAttr>::load,
  PythonBinding<mx::LocksExcludedAttr>::load,
  PythonBinding<mx::LockReturnedAttr>::load,
  PythonBinding<mx::LifetimeBoundAttr>::load,
  PythonBinding<mx::LeafAttr>::load,
  PythonBinding<mx::LayoutVersionAttr>::load,
  PythonBinding<mx::LTOVisibilityPublicAttr>::load,
  PythonBinding<mx::InternalLinkageAttr>::load,
  PythonBinding<mx::IntelOclBiccAttr>::load,
  PythonBinding<mx::InitPriorityAttr>::load,
  PythonBinding<mx::InheritableParamAttr>::load,
  PythonBinding<mx::CarriesDependencyAttr>::load,
  PythonBinding<mx::CFConsumedAttr>::load,
  PythonBinding<mx::AnnotateAttr>::load,
  PythonBinding<mx::UseHandleAttr>::load,
  PythonBinding<mx::ReleaseHandleAttr>::load,
  PythonBinding<mx::PassObjectSizeAttr>::load,
  PythonBinding<mx::ParameterABIAttr>::load,
  PythonBinding<mx::SwiftIndirectResultAttr>::load,
  PythonBinding<mx::SwiftErrorResultAttr>::load,
  PythonBinding<mx::SwiftContextAttr>::load,
  PythonBinding<mx::SwiftAsyncContextAttr>::load,
  PythonBinding<mx::OSConsumedAttr>::load,
  PythonBinding<mx::NonNullAttr>::load,
  PythonBinding<mx::NSConsumedAttr>::load,
  PythonBinding<mx::IFuncAttr>::load,
  PythonBinding<mx::CalledOnceAttr>::load,
  PythonBinding<mx::BuiltinAliasAttr>::load,
  PythonBinding<mx::Type>::load,
  PythonBinding<mx::TemplateTypeParmType>::load,
  PythonBinding<mx::TemplateSpecializationType>::load,
  PythonBinding<mx::TagType>::load,
  PythonBinding<mx::RecordType>::load,
  PythonBinding<mx::EnumType>::load,
  PythonBinding<mx::SubstTemplateTypeParmType>::load,
  PythonBinding<mx::SubstTemplateTypeParmPackType>::load,
  PythonBinding<mx::ReferenceType>::load,
  PythonBinding<mx::RValueReferenceType>::load,
  PythonBinding<mx::LValueReferenceType>::load,
  PythonBinding<mx::QualifiedType>::load,
  PythonBinding<mx::PointerType>::load,
  PythonBinding<mx::PipeType>::load,
  PythonBinding<mx::ParenType>::load,
  PythonBinding<mx::PackExpansionType>::load,
  PythonBinding<mx::ObjCTypeParamType>::load,
  PythonBinding<mx::ObjCObjectType>::load,
  PythonBinding<mx::ObjCInterfaceType>::load,
  PythonBinding<mx::ObjCObjectPointerType>::load,
  PythonBinding<mx::MemberPointerType>::load,
  PythonBinding<mx::MatrixType>::load,
  PythonBinding<mx::DependentSizedMatrixType>::load,
  PythonBinding<mx::ConstantMatrixType>::load,
  PythonBinding<mx::MacroQualifiedType>::load,
  PythonBinding<mx::InjectedClassNameType>::load,
  PythonBinding<mx::FunctionType>::load,
  PythonBinding<mx::FunctionProtoType>::load,
  PythonBinding<mx::FunctionNoProtoType>::load,
  PythonBinding<mx::DependentVectorType>::load,
  PythonBinding<mx::DependentSizedExtVectorType>::load,
  PythonBinding<mx::DependentBitIntType>::load,
  PythonBinding<mx::DependentAddressSpaceType>::load,
  PythonBinding<mx::DeducedType>::load,
  PythonBinding<mx::DeducedTemplateSpecializationType>::load,
  PythonBinding<mx::AutoType>::load,
  PythonBinding<mx::DecltypeType>::load,
  PythonBinding<mx::ComplexType>::load,
  PythonBinding<mx::BuiltinType>::load,
  PythonBinding<mx::BlockPointerType>::load,
  PythonBinding<mx::BitIntType>::load,
  PythonBinding<mx::BTFTagAttributedType>::load,
  PythonBinding<mx::AttributedType>::load,
  PythonBinding<mx::AtomicType>::load,
  PythonBinding<mx::ArrayType>::load,
  PythonBinding<mx::VariableArrayType>::load,
  PythonBinding<mx::IncompleteArrayType>::load,
  PythonBinding<mx::DependentSizedArrayType>::load,
  PythonBinding<mx::ConstantArrayType>::load,
  PythonBinding<mx::AdjustedType>::load,
  PythonBinding<mx::DecayedType>::load,
  PythonBinding<mx::TypeWithKeyword>::load,
  PythonBinding<mx::ElaboratedType>::load,
  PythonBinding<mx::DependentTemplateSpecializationType>::load,
  PythonBinding<mx::DependentNameType>::load,
  PythonBinding<mx::VectorType>::load,
  PythonBinding<mx::ExtVectorType>::load,
  PythonBinding<mx::UsingType>::load,
  PythonBinding<mx::UnresolvedUsingType>::load,
  PythonBinding<mx::UnaryTransformType>::load,
  PythonBinding<mx::TypedefType>::load,
  PythonBinding<mx::TypeOfType>::load,
  PythonBinding<mx::TypeOfExprType>::load,
  PythonBinding<mx::Stmt>::load,
  PythonBinding<mx::SEHTryStmt>::load,
  PythonBinding<mx::SEHLeaveStmt>::load,
  PythonBinding<mx::SEHFinallyStmt>::load,
  PythonBinding<mx::SEHExceptStmt>::load,
  PythonBinding<mx::ReturnStmt>::load,
  PythonBinding<mx::ObjCForCollectionStmt>::load,
  PythonBinding<mx::ObjCAutoreleasePoolStmt>::load,
  PythonBinding<mx::ObjCAtTryStmt>::load,
  PythonBinding<mx::ObjCAtThrowStmt>::load,
  PythonBinding<mx::ObjCAtSynchronizedStmt>::load,
  PythonBinding<mx::ObjCAtFinallyStmt>::load,
  PythonBinding<mx::ObjCAtCatchStmt>::load,
  PythonBinding<mx::OMPExecutableDirective>::load,
  PythonBinding<mx::OMPErrorDirective>::load,
  PythonBinding<mx::OMPDispatchDirective>::load,
  PythonBinding<mx::OMPDepobjDirective>::load,
  PythonBinding<mx::OMPCriticalDirective>::load,
  PythonBinding<mx::OMPCancellationPointDirective>::load,
  PythonBinding<mx::OMPCancelDirective>::load,
  PythonBinding<mx::OMPBarrierDirective>::load,
  PythonBinding<mx::OMPAtomicDirective>::load,
  PythonBinding<mx::OMPTeamsDirective>::load,
  PythonBinding<mx::OMPTaskyieldDirective>::load,
  PythonBinding<mx::OMPTaskwaitDirective>::load,
  PythonBinding<mx::OMPTaskgroupDirective>::load,
  PythonBinding<mx::OMPTaskDirective>::load,
  PythonBinding<mx::OMPTargetUpdateDirective>::load,
  PythonBinding<mx::OMPTargetTeamsDirective>::load,
  PythonBinding<mx::OMPTargetParallelDirective>::load,
  PythonBinding<mx::OMPTargetExitDataDirective>::load,
  PythonBinding<mx::OMPTargetEnterDataDirective>::load,
  PythonBinding<mx::OMPTargetDirective>::load,
  PythonBinding<mx::OMPTargetDataDirective>::load,
  PythonBinding<mx::OMPSingleDirective>::load,
  PythonBinding<mx::OMPSectionsDirective>::load,
  PythonBinding<mx::OMPSectionDirective>::load,
  PythonBinding<mx::OMPScopeDirective>::load,
  PythonBinding<mx::OMPScanDirective>::load,
  PythonBinding<mx::OMPParallelSectionsDirective>::load,
  PythonBinding<mx::OMPParallelMasterDirective>::load,
  PythonBinding<mx::OMPParallelMaskedDirective>::load,
  PythonBinding<mx::OMPParallelDirective>::load,
  PythonBinding<mx::OMPOrderedDirective>::load,
  PythonBinding<mx::OMPMetaDirective>::load,
  PythonBinding<mx::OMPMasterDirective>::load,
  PythonBinding<mx::OMPMaskedDirective>::load,
  PythonBinding<mx::OMPLoopBasedDirective>::load,
  PythonBinding<mx::OMPLoopTransformationDirective>::load,
  PythonBinding<mx::OMPUnrollDirective>::load,
  PythonBinding<mx::OMPTileDirective>::load,
  PythonBinding<mx::OMPLoopDirective>::load,
  PythonBinding<mx::OMPGenericLoopDirective>::load,
  PythonBinding<mx::OMPForSimdDirective>::load,
  PythonBinding<mx::OMPForDirective>::load,
  PythonBinding<mx::OMPDistributeSimdDirective>::load,
  PythonBinding<mx::OMPDistributeParallelForSimdDirective>::load,
  PythonBinding<mx::OMPDistributeParallelForDirective>::load,
  PythonBinding<mx::OMPDistributeDirective>::load,
  PythonBinding<mx::OMPTeamsGenericLoopDirective>::load,
  PythonBinding<mx::OMPTeamsDistributeSimdDirective>::load,
  PythonBinding<mx::OMPTeamsDistributeParallelForSimdDirective>::load,
  PythonBinding<mx::OMPTeamsDistributeParallelForDirective>::load,
  PythonBinding<mx::OMPTeamsDistributeDirective>::load,
  PythonBinding<mx::OMPTaskLoopSimdDirective>::load,
  PythonBinding<mx::OMPTaskLoopDirective>::load,
  PythonBinding<mx::OMPTargetTeamsGenericLoopDirective>::load,
  PythonBinding<mx::OMPTargetTeamsDistributeSimdDirective>::load,
  PythonBinding<mx::OMPTargetTeamsDistributeParallelForSimdDirective>::load,
  PythonBinding<mx::OMPTargetTeamsDistributeParallelForDirective>::load,
  PythonBinding<mx::OMPTargetTeamsDistributeDirective>::load,
  PythonBinding<mx::OMPTargetSimdDirective>::load,
  PythonBinding<mx::OMPTargetParallelGenericLoopDirective>::load,
  PythonBinding<mx::OMPTargetParallelForSimdDirective>::load,
  PythonBinding<mx::OMPTargetParallelForDirective>::load,
  PythonBinding<mx::OMPSimdDirective>::load,
  PythonBinding<mx::OMPParallelMasterTaskLoopSimdDirective>::load,
  PythonBinding<mx::OMPParallelMasterTaskLoopDirective>::load,
  PythonBinding<mx::OMPParallelMaskedTaskLoopSimdDirective>::load,
  PythonBinding<mx::OMPParallelMaskedTaskLoopDirective>::load,
  PythonBinding<mx::OMPParallelGenericLoopDirective>::load,
  PythonBinding<mx::OMPParallelForSimdDirective>::load,
  PythonBinding<mx::OMPParallelForDirective>::load,
  PythonBinding<mx::OMPMasterTaskLoopSimdDirective>::load,
  PythonBinding<mx::OMPMasterTaskLoopDirective>::load,
  PythonBinding<mx::OMPMaskedTaskLoopSimdDirective>::load,
  PythonBinding<mx::OMPMaskedTaskLoopDirective>::load,
  PythonBinding<mx::OMPInteropDirective>::load,
  PythonBinding<mx::OMPFlushDirective>::load,
  PythonBinding<mx::OMPCanonicalLoop>::load,
  PythonBinding<mx::NullStmt>::load,
  PythonBinding<mx::MSDependentExistsStmt>::load,
  PythonBinding<mx::IndirectGotoStmt>::load,
  PythonBinding<mx::IfStmt>::load,
  PythonBinding<mx::GotoStmt>::load,
  PythonBinding<mx::ForStmt>::load,
  PythonBinding<mx::DoStmt>::load,
  PythonBinding<mx::DeclStmt>::load,
  PythonBinding<mx::CoroutineBodyStmt>::load,
  PythonBinding<mx::CoreturnStmt>::load,
  PythonBinding<mx::ContinueStmt>::load,
  PythonBinding<mx::CompoundStmt>::load,
  PythonBinding<mx::CapturedStmt>::load,
  PythonBinding<mx::CXXTryStmt>::load,
  PythonBinding<mx::CXXForRangeStmt>::load,
  PythonBinding<mx::CXXCatchStmt>::load,
  PythonBinding<mx::BreakStmt>::load,
  PythonBinding<mx::AsmStmt>::load,
  PythonBinding<mx::MSAsmStmt>::load,
  PythonBinding<mx::GCCAsmStmt>::load,
  PythonBinding<mx::WhileStmt>::load,
  PythonBinding<mx::ValueStmt>::load,
  PythonBinding<mx::LabelStmt>::load,
  PythonBinding<mx::Expr>::load,
  PythonBinding<mx::DesignatedInitUpdateExpr>::load,
  PythonBinding<mx::DesignatedInitExpr>::load,
  PythonBinding<mx::DependentScopeDeclRefExpr>::load,
  PythonBinding<mx::DependentCoawaitExpr>::load,
  PythonBinding<mx::DeclRefExpr>::load,
  PythonBinding<mx::CoroutineSuspendExpr>::load,
  PythonBinding<mx::CoawaitExpr>::load,
  PythonBinding<mx::CoyieldExpr>::load,
  PythonBinding<mx::ConvertVectorExpr>::load,
  PythonBinding<mx::ConceptSpecializationExpr>::load,
  PythonBinding<mx::CompoundLiteralExpr>::load,
  PythonBinding<mx::ChooseExpr>::load,
  PythonBinding<mx::CharacterLiteral>::load,
  PythonBinding<mx::CastExpr>::load,
  PythonBinding<mx::ImplicitCastExpr>::load,
  PythonBinding<mx::ExplicitCastExpr>::load,
  PythonBinding<mx::CXXNamedCastExpr>::load,
  PythonBinding<mx::CXXDynamicCastExpr>::load,
  PythonBinding<mx::CXXConstCastExpr>::load,
  PythonBinding<mx::CXXAddrspaceCastExpr>::load,
  PythonBinding<mx::CXXStaticCastExpr>::load,
  PythonBinding<mx::CXXReinterpretCastExpr>::load,
  PythonBinding<mx::CXXFunctionalCastExpr>::load,
  PythonBinding<mx::CStyleCastExpr>::load,
  PythonBinding<mx::BuiltinBitCastExpr>::load,
  PythonBinding<mx::ObjCBridgedCastExpr>::load,
  PythonBinding<mx::CallExpr>::load,
  PythonBinding<mx::CXXOperatorCallExpr>::load,
  PythonBinding<mx::CXXMemberCallExpr>::load,
  PythonBinding<mx::CUDAKernelCallExpr>::load,
  PythonBinding<mx::UserDefinedLiteral>::load,
  PythonBinding<mx::CXXUuidofExpr>::load,
  PythonBinding<mx::CXXUnresolvedConstructExpr>::load,
  PythonBinding<mx::CXXTypeidExpr>::load,
  PythonBinding<mx::CXXThrowExpr>::load,
  PythonBinding<mx::CXXThisExpr>::load,
  PythonBinding<mx::CXXStdInitializerListExpr>::load,
  PythonBinding<mx::CXXScalarValueInitExpr>::load,
  PythonBinding<mx::CXXRewrittenBinaryOperator>::load,
  PythonBinding<mx::CXXPseudoDestructorExpr>::load,
  PythonBinding<mx::CXXParenListInitExpr>::load,
  PythonBinding<mx::CXXNullPtrLiteralExpr>::load,
  PythonBinding<mx::CXXNoexceptExpr>::load,
  PythonBinding<mx::CXXNewExpr>::load,
  PythonBinding<mx::CXXInheritedCtorInitExpr>::load,
  PythonBinding<mx::CXXFoldExpr>::load,
  PythonBinding<mx::CXXDependentScopeMemberExpr>::load,
  PythonBinding<mx::CXXDeleteExpr>::load,
  PythonBinding<mx::CXXDefaultInitExpr>::load,
  PythonBinding<mx::CXXDefaultArgExpr>::load,
  PythonBinding<mx::CXXConstructExpr>::load,
  PythonBinding<mx::CXXTemporaryObjectExpr>::load,
  PythonBinding<mx::CXXBoolLiteralExpr>::load,
  PythonBinding<mx::CXXBindTemporaryExpr>::load,
  PythonBinding<mx::BlockExpr>::load,
  PythonBinding<mx::BinaryOperator>::load,
  PythonBinding<mx::CompoundAssignOperator>::load,
  PythonBinding<mx::AtomicExpr>::load,
  PythonBinding<mx::AsTypeExpr>::load,
  PythonBinding<mx::ArrayTypeTraitExpr>::load,
  PythonBinding<mx::ArraySubscriptExpr>::load,
  PythonBinding<mx::ArrayInitLoopExpr>::load,
  PythonBinding<mx::ArrayInitIndexExpr>::load,
  PythonBinding<mx::AddrLabelExpr>::load,
  PythonBinding<mx::AbstractConditionalOperator>::load,
  PythonBinding<mx::ConditionalOperator>::load,
  PythonBinding<mx::BinaryConditionalOperator>::load,
  PythonBinding<mx::VAArgExpr>::load,
  PythonBinding<mx::UnaryOperator>::load,
  PythonBinding<mx::UnaryExprOrTypeTraitExpr>::load,
  PythonBinding<mx::TypoExpr>::load,
  PythonBinding<mx::TypeTraitExpr>::load,
  PythonBinding<mx::SubstNonTypeTemplateParmPackExpr>::load,
  PythonBinding<mx::SubstNonTypeTemplateParmExpr>::load,
  PythonBinding<mx::StringLiteral>::load,
  PythonBinding<mx::StmtExpr>::load,
  PythonBinding<mx::SourceLocExpr>::load,
  PythonBinding<mx::SizeOfPackExpr>::load,
  PythonBinding<mx::ShuffleVectorExpr>::load,
  PythonBinding<mx::SYCLUniqueStableNameExpr>::load,
  PythonBinding<mx::RequiresExpr>::load,
  PythonBinding<mx::RecoveryExpr>::load,
  PythonBinding<mx::PseudoObjectExpr>::load,
  PythonBinding<mx::PredefinedExpr>::load,
  PythonBinding<mx::ParenListExpr>::load,
  PythonBinding<mx::ParenExpr>::load,
  PythonBinding<mx::PackExpansionExpr>::load,
  PythonBinding<mx::OverloadExpr>::load,
  PythonBinding<mx::UnresolvedMemberExpr>::load,
  PythonBinding<mx::UnresolvedLookupExpr>::load,
  PythonBinding<mx::OpaqueValueExpr>::load,
  PythonBinding<mx::OffsetOfExpr>::load,
  PythonBinding<mx::ObjCSubscriptRefExpr>::load,
  PythonBinding<mx::ObjCStringLiteral>::load,
  PythonBinding<mx::ObjCSelectorExpr>::load,
  PythonBinding<mx::ObjCProtocolExpr>::load,
  PythonBinding<mx::ObjCPropertyRefExpr>::load,
  PythonBinding<mx::ObjCMessageExpr>::load,
  PythonBinding<mx::ObjCIvarRefExpr>::load,
  PythonBinding<mx::ObjCIsaExpr>::load,
  PythonBinding<mx::ObjCIndirectCopyRestoreExpr>::load,
  PythonBinding<mx::ObjCEncodeExpr>::load,
  PythonBinding<mx::ObjCDictionaryLiteral>::load,
  PythonBinding<mx::ObjCBoxedExpr>::load,
  PythonBinding<mx::ObjCBoolLiteralExpr>::load,
  PythonBinding<mx::ObjCAvailabilityCheckExpr>::load,
  PythonBinding<mx::ObjCArrayLiteral>::load,
  PythonBinding<mx::OMPIteratorExpr>::load,
  PythonBinding<mx::OMPArrayShapingExpr>::load,
  PythonBinding<mx::OMPArraySectionExpr>::load,
  PythonBinding<mx::NoInitExpr>::load,
  PythonBinding<mx::MemberExpr>::load,
  PythonBinding<mx::MatrixSubscriptExpr>::load,
  PythonBinding<mx::MaterializeTemporaryExpr>::load,
  PythonBinding<mx::MSPropertySubscriptExpr>::load,
  PythonBinding<mx::MSPropertyRefExpr>::load,
  PythonBinding<mx::LambdaExpr>::load,
  PythonBinding<mx::IntegerLiteral>::load,
  PythonBinding<mx::InitListExpr>::load,
  PythonBinding<mx::ImplicitValueInitExpr>::load,
  PythonBinding<mx::ImaginaryLiteral>::load,
  PythonBinding<mx::GenericSelectionExpr>::load,
  PythonBinding<mx::GNUNullExpr>::load,
  PythonBinding<mx::FunctionParmPackExpr>::load,
  PythonBinding<mx::FullExpr>::load,
  PythonBinding<mx::ExprWithCleanups>::load,
  PythonBinding<mx::ConstantExpr>::load,
  PythonBinding<mx::FloatingLiteral>::load,
  PythonBinding<mx::FixedPointLiteral>::load,
  PythonBinding<mx::ExtVectorElementExpr>::load,
  PythonBinding<mx::ExpressionTraitExpr>::load,
  PythonBinding<mx::AttributedStmt>::load,
  PythonBinding<mx::SwitchStmt>::load,
  PythonBinding<mx::SwitchCase>::load,
  PythonBinding<mx::DefaultStmt>::load,
  PythonBinding<mx::CaseStmt>::load,
  PythonBinding<mx::Decl>::load,
  PythonBinding<mx::CapturedDecl>::load,
  PythonBinding<mx::BlockDecl>::load,
  PythonBinding<mx::AccessSpecDecl>::load,
  PythonBinding<mx::OMPDeclarativeDirectiveDecl>::load,
  PythonBinding<mx::OMPThreadPrivateDecl>::load,
  PythonBinding<mx::OMPRequiresDecl>::load,
  PythonBinding<mx::OMPAllocateDecl>::load,
  PythonBinding<mx::TranslationUnitDecl>::load,
  PythonBinding<mx::TopLevelStmtDecl>::load,
  PythonBinding<mx::StaticAssertDecl>::load,
  PythonBinding<mx::RequiresExprBodyDecl>::load,
  PythonBinding<mx::PragmaDetectMismatchDecl>::load,
  PythonBinding<mx::PragmaCommentDecl>::load,
  PythonBinding<mx::ObjCPropertyImplDecl>::load,
  PythonBinding<mx::NamedDecl>::load,
  PythonBinding<mx::LabelDecl>::load,
  PythonBinding<mx::HLSLBufferDecl>::load,
  PythonBinding<mx::BaseUsingDecl>::load,
  PythonBinding<mx::UsingEnumDecl>::load,
  PythonBinding<mx::UsingDecl>::load,
  PythonBinding<mx::ValueDecl>::load,
  PythonBinding<mx::UnresolvedUsingValueDecl>::load,
  PythonBinding<mx::UnnamedGlobalConstantDecl>::load,
  PythonBinding<mx::TemplateParamObjectDecl>::load,
  PythonBinding<mx::OMPDeclareReductionDecl>::load,
  PythonBinding<mx::MSGuidDecl>::load,
  PythonBinding<mx::IndirectFieldDecl>::load,
  PythonBinding<mx::EnumConstantDecl>::load,
  PythonBinding<mx::DeclaratorDecl>::load,
  PythonBinding<mx::VarDecl>::load,
  PythonBinding<mx::ParmVarDecl>::load,
  PythonBinding<mx::OMPCapturedExprDecl>::load,
  PythonBinding<mx::ImplicitParamDecl>::load,
  PythonBinding<mx::DecompositionDecl>::load,
  PythonBinding<mx::VarTemplateSpecializationDecl>::load,
  PythonBinding<mx::VarTemplatePartialSpecializationDecl>::load,
  PythonBinding<mx::NonTypeTemplateParmDecl>::load,
  PythonBinding<mx::MSPropertyDecl>::load,
  PythonBinding<mx::FunctionDecl>::load,
  PythonBinding<mx::CXXMethodDecl>::load,
  PythonBinding<mx::CXXDestructorDecl>::load,
  PythonBinding<mx::CXXConversionDecl>::load,
  PythonBinding<mx::CXXConstructorDecl>::load,
  PythonBinding<mx::CXXDeductionGuideDecl>::load,
  PythonBinding<mx::FieldDecl>::load,
  PythonBinding<mx::ObjCIvarDecl>::load,
  PythonBinding<mx::ObjCAtDefsFieldDecl>::load,
  PythonBinding<mx::BindingDecl>::load,
  PythonBinding<mx::OMPDeclarativeDirectiveValueDecl>::load,
  PythonBinding<mx::OMPDeclareMapperDecl>::load,
  PythonBinding<mx::UsingShadowDecl>::load,
  PythonBinding<mx::ConstructorUsingShadowDecl>::load,
  PythonBinding<mx::UsingPackDecl>::load,
  PythonBinding<mx::UsingDirectiveDecl>::load,
  PythonBinding<mx::UnresolvedUsingIfExistsDecl>::load,
  PythonBinding<mx::TypeDecl>::load,
  PythonBinding<mx::TemplateTypeParmDecl>::load,
  PythonBinding<mx::TagDecl>::load,
  PythonBinding<mx::RecordDecl>::load,
  PythonBinding<mx::CXXRecordDecl>::load,
  PythonBinding<mx::ClassTemplateSpecializationDecl>::load,
  PythonBinding<mx::ClassTemplatePartialSpecializationDecl>::load,
  PythonBinding<mx::EnumDecl>::load,
  PythonBinding<mx::UnresolvedUsingTypenameDecl>::load,
  PythonBinding<mx::TypedefNameDecl>::load,
  PythonBinding<mx::TypedefDecl>::load,
  PythonBinding<mx::TypeAliasDecl>::load,
  PythonBinding<mx::ObjCTypeParamDecl>::load,
  PythonBinding<mx::TemplateDecl>::load,
  PythonBinding<mx::RedeclarableTemplateDecl>::load,
  PythonBinding<mx::FunctionTemplateDecl>::load,
  PythonBinding<mx::ClassTemplateDecl>::load,
  PythonBinding<mx::VarTemplateDecl>::load,
  PythonBinding<mx::TypeAliasTemplateDecl>::load,
  PythonBinding<mx::ConceptDecl>::load,
  PythonBinding<mx::BuiltinTemplateDecl>::load,
  PythonBinding<mx::TemplateTemplateParmDecl>::load,
  PythonBinding<mx::ObjCPropertyDecl>::load,
  PythonBinding<mx::ObjCMethodDecl>::load,
  PythonBinding<mx::ObjCContainerDecl>::load,
  PythonBinding<mx::ObjCCategoryDecl>::load,
  PythonBinding<mx::ObjCProtocolDecl>::load,
  PythonBinding<mx::ObjCInterfaceDecl>::load,
  PythonBinding<mx::ObjCImplDecl>::load,
  PythonBinding<mx::ObjCCategoryImplDecl>::load,
  PythonBinding<mx::ObjCImplementationDecl>::load,
  PythonBinding<mx::ObjCCompatibleAliasDecl>::load,
  PythonBinding<mx::NamespaceDecl>::load,
  PythonBinding<mx::NamespaceAliasDecl>::load,
  PythonBinding<mx::LinkageSpecDecl>::load,
  PythonBinding<mx::LifetimeExtendedTemporaryDecl>::load,
  PythonBinding<mx::ImportDecl>::load,
  PythonBinding<mx::ImplicitConceptSpecializationDecl>::load,
  PythonBinding<mx::FriendTemplateDecl>::load,
  PythonBinding<mx::FriendDecl>::load,
  PythonBinding<mx::FileScopeAsmDecl>::load,
  PythonBinding<mx::ExternCContextDecl>::load,
  PythonBinding<mx::ExportDecl>::load,
  PythonBinding<mx::EmptyDecl>::load,
};

// multiplier.ir.abi
static PyModuleDef gABIModule = {
  .m_name = "abi",
  .m_doc = PyDoc_STR("Wrapper of IR/ABI"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gABILoaders[] = {
  PythonBinding<mx::ir::abi::Operation>::load,
  PythonBinding<mx::ir::abi::CallArgsOp>::load,
  PythonBinding<mx::ir::abi::CallExecutionOp>::load,
  PythonBinding<mx::ir::abi::CallOp>::load,
  PythonBinding<mx::ir::abi::CallRetsOp>::load,
  PythonBinding<mx::ir::abi::DirectOp>::load,
  PythonBinding<mx::ir::abi::EpilogueOp>::load,
  PythonBinding<mx::ir::abi::FuncOp>::load,
  PythonBinding<mx::ir::abi::IndirectOp>::load,
  PythonBinding<mx::ir::abi::PrologueOp>::load,
  PythonBinding<mx::ir::abi::RetDirectOp>::load,
  PythonBinding<mx::ir::abi::YieldOp>::load,
};

// multiplier.ir.llvm
static PyModuleDef gLLVMModule = {
  .m_name = "llvm",
  .m_doc = PyDoc_STR("Wrapper of IR/LLVM"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gLLVMLoaders[] = {
  PythonBinding<mx::ir::llvm::Attribute>::load,
  PythonBinding<mx::ir::llvm::CConvAttr>::load,
  PythonBinding<mx::ir::llvm::ComdatAttr>::load,
  PythonBinding<mx::ir::llvm::LinkageAttr>::load,
  PythonBinding<mx::ir::llvm::FramePointerKindAttr>::load,
  PythonBinding<mx::ir::llvm::LoopVectorizeAttr>::load,
  PythonBinding<mx::ir::llvm::LoopInterleaveAttr>::load,
  PythonBinding<mx::ir::llvm::LoopUnrollAttr>::load,
  PythonBinding<mx::ir::llvm::LoopUnrollAndJamAttr>::load,
  PythonBinding<mx::ir::llvm::LoopLICMAttr>::load,
  PythonBinding<mx::ir::llvm::LoopDistributeAttr>::load,
  PythonBinding<mx::ir::llvm::LoopPipelineAttr>::load,
  PythonBinding<mx::ir::llvm::LoopPeeledAttr>::load,
  PythonBinding<mx::ir::llvm::LoopUnswitchAttr>::load,
  PythonBinding<mx::ir::llvm::LoopAnnotationAttr>::load,
  PythonBinding<mx::ir::llvm::DIExpressionElemAttr>::load,
  PythonBinding<mx::ir::llvm::DIExpressionAttr>::load,
  PythonBinding<mx::ir::llvm::DINullTypeAttr>::load,
  PythonBinding<mx::ir::llvm::DIBasicTypeAttr>::load,
  PythonBinding<mx::ir::llvm::DICompileUnitAttr>::load,
  PythonBinding<mx::ir::llvm::DICompositeTypeAttr>::load,
  PythonBinding<mx::ir::llvm::DIDerivedTypeAttr>::load,
  PythonBinding<mx::ir::llvm::DIFileAttr>::load,
  PythonBinding<mx::ir::llvm::DIGlobalVariableExpressionAttr>::load,
  PythonBinding<mx::ir::llvm::DIGlobalVariableAttr>::load,
  PythonBinding<mx::ir::llvm::DILexicalBlockAttr>::load,
  PythonBinding<mx::ir::llvm::DILexicalBlockFileAttr>::load,
  PythonBinding<mx::ir::llvm::DILocalVariableAttr>::load,
  PythonBinding<mx::ir::llvm::DISubprogramAttr>::load,
  PythonBinding<mx::ir::llvm::DIModuleAttr>::load,
  PythonBinding<mx::ir::llvm::DINamespaceAttr>::load,
  PythonBinding<mx::ir::llvm::DISubrangeAttr>::load,
  PythonBinding<mx::ir::llvm::DISubroutineTypeAttr>::load,
  PythonBinding<mx::ir::llvm::DILabelAttr>::load,
  PythonBinding<mx::ir::llvm::MemoryEffectsAttr>::load,
  PythonBinding<mx::ir::llvm::AliasScopeDomainAttr>::load,
  PythonBinding<mx::ir::llvm::AliasScopeAttr>::load,
  PythonBinding<mx::ir::llvm::AccessGroupAttr>::load,
  PythonBinding<mx::ir::llvm::TBAARootAttr>::load,
  PythonBinding<mx::ir::llvm::TBAAMemberAttr>::load,
  PythonBinding<mx::ir::llvm::TBAATypeDescriptorAttr>::load,
  PythonBinding<mx::ir::llvm::TBAATagAttr>::load,
  PythonBinding<mx::ir::llvm::VScaleRangeAttr>::load,
  PythonBinding<mx::ir::llvm::TargetFeaturesAttr>::load,
  PythonBinding<mx::ir::llvm::IntegerOverflowFlagsAttr>::load,
  PythonBinding<mx::ir::llvm::FastmathFlagsAttr>::load,
  PythonBinding<mx::ir::llvm::Type>::load,
  PythonBinding<mx::ir::llvm::ArrayType>::load,
  PythonBinding<mx::ir::llvm::FunctionType>::load,
  PythonBinding<mx::ir::llvm::PointerType>::load,
  PythonBinding<mx::ir::llvm::FixedVectorType>::load,
  PythonBinding<mx::ir::llvm::ScalableVectorType>::load,
  PythonBinding<mx::ir::llvm::TargetExtType>::load,
  PythonBinding<mx::ir::llvm::Operation>::load,
  PythonBinding<mx::ir::llvm::AShrOp>::load,
  PythonBinding<mx::ir::llvm::AddOp>::load,
  PythonBinding<mx::ir::llvm::AddrSpaceCastOp>::load,
  PythonBinding<mx::ir::llvm::AddressOfOp>::load,
  PythonBinding<mx::ir::llvm::AllocaOp>::load,
  PythonBinding<mx::ir::llvm::AndOp>::load,
  PythonBinding<mx::ir::llvm::AtomicCmpXchgOp>::load,
  PythonBinding<mx::ir::llvm::AtomicRMWOp>::load,
  PythonBinding<mx::ir::llvm::BitcastOp>::load,
  PythonBinding<mx::ir::llvm::BrOp>::load,
  PythonBinding<mx::ir::llvm::CallIntrinsicOp>::load,
  PythonBinding<mx::ir::llvm::CallOp>::load,
  PythonBinding<mx::ir::llvm::ComdatOp>::load,
  PythonBinding<mx::ir::llvm::ComdatSelectorOp>::load,
  PythonBinding<mx::ir::llvm::CondBrOp>::load,
  PythonBinding<mx::ir::llvm::ConstantOp>::load,
  PythonBinding<mx::ir::llvm::ExtractElementOp>::load,
  PythonBinding<mx::ir::llvm::ExtractValueOp>::load,
  PythonBinding<mx::ir::llvm::FAddOp>::load,
  PythonBinding<mx::ir::llvm::FCmpOp>::load,
  PythonBinding<mx::ir::llvm::FDivOp>::load,
  PythonBinding<mx::ir::llvm::FMulOp>::load,
  PythonBinding<mx::ir::llvm::FNegOp>::load,
  PythonBinding<mx::ir::llvm::FPExtOp>::load,
  PythonBinding<mx::ir::llvm::FPToSIOp>::load,
  PythonBinding<mx::ir::llvm::FPToUIOp>::load,
  PythonBinding<mx::ir::llvm::FPTruncOp>::load,
  PythonBinding<mx::ir::llvm::FRemOp>::load,
  PythonBinding<mx::ir::llvm::FSubOp>::load,
  PythonBinding<mx::ir::llvm::FenceOp>::load,
  PythonBinding<mx::ir::llvm::FreezeOp>::load,
  PythonBinding<mx::ir::llvm::GetElementPtrOp>::load,
  PythonBinding<mx::ir::llvm::GlobalCtorsOp>::load,
  PythonBinding<mx::ir::llvm::GlobalDtorsOp>::load,
  PythonBinding<mx::ir::llvm::GlobalOp>::load,
  PythonBinding<mx::ir::llvm::ICmpOp>::load,
  PythonBinding<mx::ir::llvm::InlineAsmOp>::load,
  PythonBinding<mx::ir::llvm::InsertElementOp>::load,
  PythonBinding<mx::ir::llvm::InsertValueOp>::load,
  PythonBinding<mx::ir::llvm::IntToPtrOp>::load,
  PythonBinding<mx::ir::llvm::InvokeOp>::load,
  PythonBinding<mx::ir::llvm::FuncOp>::load,
  PythonBinding<mx::ir::llvm::LShrOp>::load,
  PythonBinding<mx::ir::llvm::LandingpadOp>::load,
  PythonBinding<mx::ir::llvm::LinkerOptionsOp>::load,
  PythonBinding<mx::ir::llvm::LoadOp>::load,
  PythonBinding<mx::ir::llvm::MulOp>::load,
  PythonBinding<mx::ir::llvm::NoneTokenOp>::load,
  PythonBinding<mx::ir::llvm::OrOp>::load,
  PythonBinding<mx::ir::llvm::PoisonOp>::load,
  PythonBinding<mx::ir::llvm::PtrToIntOp>::load,
  PythonBinding<mx::ir::llvm::ResumeOp>::load,
  PythonBinding<mx::ir::llvm::ReturnOp>::load,
  PythonBinding<mx::ir::llvm::SDivOp>::load,
  PythonBinding<mx::ir::llvm::SExtOp>::load,
  PythonBinding<mx::ir::llvm::SIToFPOp>::load,
  PythonBinding<mx::ir::llvm::SRemOp>::load,
  PythonBinding<mx::ir::llvm::SelectOp>::load,
  PythonBinding<mx::ir::llvm::ShlOp>::load,
  PythonBinding<mx::ir::llvm::ShuffleVectorOp>::load,
  PythonBinding<mx::ir::llvm::StoreOp>::load,
  PythonBinding<mx::ir::llvm::SubOp>::load,
  PythonBinding<mx::ir::llvm::SwitchOp>::load,
  PythonBinding<mx::ir::llvm::TruncOp>::load,
  PythonBinding<mx::ir::llvm::UDivOp>::load,
  PythonBinding<mx::ir::llvm::UIToFPOp>::load,
  PythonBinding<mx::ir::llvm::URemOp>::load,
  PythonBinding<mx::ir::llvm::UndefOp>::load,
  PythonBinding<mx::ir::llvm::UnreachableOp>::load,
  PythonBinding<mx::ir::llvm::XOrOp>::load,
  PythonBinding<mx::ir::llvm::ZExtOp>::load,
  PythonBinding<mx::ir::llvm::ZeroOp>::load,
  PythonBinding<mx::ir::llvm::AbsOp>::load,
  PythonBinding<mx::ir::llvm::AnnotationOp>::load,
  PythonBinding<mx::ir::llvm::AssumeOp>::load,
  PythonBinding<mx::ir::llvm::BitReverseOp>::load,
  PythonBinding<mx::ir::llvm::ByteSwapOp>::load,
  PythonBinding<mx::ir::llvm::CopySignOp>::load,
  PythonBinding<mx::ir::llvm::CoroAlignOp>::load,
  PythonBinding<mx::ir::llvm::CoroBeginOp>::load,
  PythonBinding<mx::ir::llvm::CoroEndOp>::load,
  PythonBinding<mx::ir::llvm::CoroFreeOp>::load,
  PythonBinding<mx::ir::llvm::CoroIdOp>::load,
  PythonBinding<mx::ir::llvm::CoroPromiseOp>::load,
  PythonBinding<mx::ir::llvm::CoroResumeOp>::load,
  PythonBinding<mx::ir::llvm::CoroSaveOp>::load,
  PythonBinding<mx::ir::llvm::CoroSizeOp>::load,
  PythonBinding<mx::ir::llvm::CoroSuspendOp>::load,
  PythonBinding<mx::ir::llvm::CosOp>::load,
  PythonBinding<mx::ir::llvm::CountLeadingZerosOp>::load,
  PythonBinding<mx::ir::llvm::CountTrailingZerosOp>::load,
  PythonBinding<mx::ir::llvm::CtPopOp>::load,
  PythonBinding<mx::ir::llvm::DbgDeclareOp>::load,
  PythonBinding<mx::ir::llvm::DbgLabelOp>::load,
  PythonBinding<mx::ir::llvm::DbgValueOp>::load,
  PythonBinding<mx::ir::llvm::DebugTrapOp>::load,
  PythonBinding<mx::ir::llvm::EhTypeidForOp>::load,
  PythonBinding<mx::ir::llvm::Exp2Op>::load,
  PythonBinding<mx::ir::llvm::ExpOp>::load,
  PythonBinding<mx::ir::llvm::ExpectOp>::load,
  PythonBinding<mx::ir::llvm::ExpectWithProbabilityOp>::load,
  PythonBinding<mx::ir::llvm::FAbsOp>::load,
  PythonBinding<mx::ir::llvm::FCeilOp>::load,
  PythonBinding<mx::ir::llvm::FFloorOp>::load,
  PythonBinding<mx::ir::llvm::FMAOp>::load,
  PythonBinding<mx::ir::llvm::FMulAddOp>::load,
  PythonBinding<mx::ir::llvm::FTruncOp>::load,
  PythonBinding<mx::ir::llvm::FShlOp>::load,
  PythonBinding<mx::ir::llvm::FShrOp>::load,
  PythonBinding<mx::ir::llvm::GetActiveLaneMaskOp>::load,
  PythonBinding<mx::ir::llvm::InvariantEndOp>::load,
  PythonBinding<mx::ir::llvm::InvariantStartOp>::load,
  PythonBinding<mx::ir::llvm::IsConstantOp>::load,
  PythonBinding<mx::ir::llvm::IsFPClassOp>::load,
  PythonBinding<mx::ir::llvm::LifetimeEndOp>::load,
  PythonBinding<mx::ir::llvm::LifetimeStartOp>::load,
  PythonBinding<mx::ir::llvm::RoundAndCastToLongLongOp>::load,
  PythonBinding<mx::ir::llvm::RoundAndCastToNearestLongLongOp>::load,
  PythonBinding<mx::ir::llvm::Log10Op>::load,
  PythonBinding<mx::ir::llvm::Log2Op>::load,
  PythonBinding<mx::ir::llvm::LogOp>::load,
  PythonBinding<mx::ir::llvm::RoundAndCastToLongOp>::load,
  PythonBinding<mx::ir::llvm::RoundAndCastToNearestLongOp>::load,
  PythonBinding<mx::ir::llvm::MaskedLoadOp>::load,
  PythonBinding<mx::ir::llvm::MaskedStoreOp>::load,
  PythonBinding<mx::ir::llvm::MatrixColumnMajorLoadOp>::load,
  PythonBinding<mx::ir::llvm::MatrixColumnMajorStoreOp>::load,
  PythonBinding<mx::ir::llvm::MatrixMultiplyOp>::load,
  PythonBinding<mx::ir::llvm::MatrixTransposeOp>::load,
  PythonBinding<mx::ir::llvm::MaxNumOp>::load,
  PythonBinding<mx::ir::llvm::MaximumOp>::load,
  PythonBinding<mx::ir::llvm::MemcpyInlineOp>::load,
  PythonBinding<mx::ir::llvm::MemcpyOp>::load,
  PythonBinding<mx::ir::llvm::MemmoveOp>::load,
  PythonBinding<mx::ir::llvm::MemsetOp>::load,
  PythonBinding<mx::ir::llvm::MinNumOp>::load,
  PythonBinding<mx::ir::llvm::MinimumOp>::load,
  PythonBinding<mx::ir::llvm::RoundToNearbyIntOp>::load,
  PythonBinding<mx::ir::llvm::NoAliasScopeDeclOp>::load,
  PythonBinding<mx::ir::llvm::PowIOp>::load,
  PythonBinding<mx::ir::llvm::FPowOp>::load,
  PythonBinding<mx::ir::llvm::PrefetchOp>::load,
  PythonBinding<mx::ir::llvm::PtrAnnotationOp>::load,
  PythonBinding<mx::ir::llvm::RoundToIntOp>::load,
  PythonBinding<mx::ir::llvm::RoundToNearestEvenOp>::load,
  PythonBinding<mx::ir::llvm::RoundToNearestOp>::load,
  PythonBinding<mx::ir::llvm::SAddSatOp>::load,
  PythonBinding<mx::ir::llvm::SAddWithOverflowOp>::load,
  PythonBinding<mx::ir::llvm::SMaxOp>::load,
  PythonBinding<mx::ir::llvm::SMinOp>::load,
  PythonBinding<mx::ir::llvm::SMulWithOverflowOp>::load,
  PythonBinding<mx::ir::llvm::SSACopyOp>::load,
  PythonBinding<mx::ir::llvm::SShlSatOp>::load,
  PythonBinding<mx::ir::llvm::SSubSatOp>::load,
  PythonBinding<mx::ir::llvm::SSubWithOverflowOp>::load,
  PythonBinding<mx::ir::llvm::SinOp>::load,
  PythonBinding<mx::ir::llvm::SqrtOp>::load,
  PythonBinding<mx::ir::llvm::StackRestoreOp>::load,
  PythonBinding<mx::ir::llvm::StackSaveOp>::load,
  PythonBinding<mx::ir::llvm::StepVectorOp>::load,
  PythonBinding<mx::ir::llvm::ThreadLocalAddressOp>::load,
  PythonBinding<mx::ir::llvm::TrapOp>::load,
  PythonBinding<mx::ir::llvm::UAddSatOp>::load,
  PythonBinding<mx::ir::llvm::UAddWithOverflowOp>::load,
  PythonBinding<mx::ir::llvm::UBSanTrapOp>::load,
  PythonBinding<mx::ir::llvm::UMaxOp>::load,
  PythonBinding<mx::ir::llvm::UMinOp>::load,
  PythonBinding<mx::ir::llvm::UMulWithOverflowOp>::load,
  PythonBinding<mx::ir::llvm::UShlSatOp>::load,
  PythonBinding<mx::ir::llvm::USubSatOp>::load,
  PythonBinding<mx::ir::llvm::USubWithOverflowOp>::load,
  PythonBinding<mx::ir::llvm::VPAShrOp>::load,
  PythonBinding<mx::ir::llvm::VPAddOp>::load,
  PythonBinding<mx::ir::llvm::VPAndOp>::load,
  PythonBinding<mx::ir::llvm::VPFAddOp>::load,
  PythonBinding<mx::ir::llvm::VPFDivOp>::load,
  PythonBinding<mx::ir::llvm::VPFMulAddOp>::load,
  PythonBinding<mx::ir::llvm::VPFMulOp>::load,
  PythonBinding<mx::ir::llvm::VPFNegOp>::load,
  PythonBinding<mx::ir::llvm::VPFPExtOp>::load,
  PythonBinding<mx::ir::llvm::VPFPToSIOp>::load,
  PythonBinding<mx::ir::llvm::VPFPToUIOp>::load,
  PythonBinding<mx::ir::llvm::VPFPTruncOp>::load,
  PythonBinding<mx::ir::llvm::VPFRemOp>::load,
  PythonBinding<mx::ir::llvm::VPFSubOp>::load,
  PythonBinding<mx::ir::llvm::VPFmaOp>::load,
  PythonBinding<mx::ir::llvm::VPIntToPtrOp>::load,
  PythonBinding<mx::ir::llvm::VPLShrOp>::load,
  PythonBinding<mx::ir::llvm::VPLoadOp>::load,
  PythonBinding<mx::ir::llvm::VPMergeMinOp>::load,
  PythonBinding<mx::ir::llvm::VPMulOp>::load,
  PythonBinding<mx::ir::llvm::VPOrOp>::load,
  PythonBinding<mx::ir::llvm::VPPtrToIntOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceAddOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceAndOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceFAddOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceFMaxOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceFMinOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceFMulOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceMulOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceOrOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceSMaxOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceSMinOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceUMaxOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceUMinOp>::load,
  PythonBinding<mx::ir::llvm::VPReduceXorOp>::load,
  PythonBinding<mx::ir::llvm::VPSDivOp>::load,
  PythonBinding<mx::ir::llvm::VPSExtOp>::load,
  PythonBinding<mx::ir::llvm::VPSIToFPOp>::load,
  PythonBinding<mx::ir::llvm::VPSRemOp>::load,
  PythonBinding<mx::ir::llvm::VPSelectMinOp>::load,
  PythonBinding<mx::ir::llvm::VPShlOp>::load,
  PythonBinding<mx::ir::llvm::VPStoreOp>::load,
  PythonBinding<mx::ir::llvm::VPStridedLoadOp>::load,
  PythonBinding<mx::ir::llvm::VPStridedStoreOp>::load,
  PythonBinding<mx::ir::llvm::VPSubOp>::load,
  PythonBinding<mx::ir::llvm::VPTruncOp>::load,
  PythonBinding<mx::ir::llvm::VPUDivOp>::load,
  PythonBinding<mx::ir::llvm::VPUIToFPOp>::load,
  PythonBinding<mx::ir::llvm::VPURemOp>::load,
  PythonBinding<mx::ir::llvm::VPXorOp>::load,
  PythonBinding<mx::ir::llvm::VPZExtOp>::load,
  PythonBinding<mx::ir::llvm::VaCopyOp>::load,
  PythonBinding<mx::ir::llvm::VaEndOp>::load,
  PythonBinding<mx::ir::llvm::VaStartOp>::load,
  PythonBinding<mx::ir::llvm::VarAnnotationOp>::load,
  PythonBinding<mx::ir::llvm::MaskedCompressStoreOp>::load,
  PythonBinding<mx::ir::llvm::MaskedExpandLoadOp>::load,
  PythonBinding<mx::ir::llvm::MaskedGatherOp>::load,
  PythonBinding<mx::ir::llvm::MaskedScatterOp>::load,
  PythonBinding<mx::ir::llvm::VectorExtractOp>::load,
  PythonBinding<mx::ir::llvm::VectorInsertOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceAddOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceAndOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceFAddOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceFMaxOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceFMaximumOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceFMinOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceFMinimumOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceFMulOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceMulOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceOrOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceSMaxOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceSMinOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceUMaxOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceUMinOp>::load,
  PythonBinding<mx::ir::llvm::VectorReduceXorOp>::load,
  PythonBinding<mx::ir::llvm::VScaleOp>::load,
};

// multiplier.ir.core
static PyModuleDef gCoreModule = {
  .m_name = "core",
  .m_doc = PyDoc_STR("Wrapper of IR/Core"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gCoreLoaders[] = {
  PythonBinding<mx::ir::core::Attribute>::load,
  PythonBinding<mx::ir::core::BooleanAttr>::load,
  PythonBinding<mx::ir::core::IntegerAttr>::load,
  PythonBinding<mx::ir::core::FloatAttr>::load,
  PythonBinding<mx::ir::core::VoidAttr>::load,
  PythonBinding<mx::ir::core::SourceLanguageAttr>::load,
  PythonBinding<mx::ir::core::GlobalLinkageKindAttr>::load,
  PythonBinding<mx::ir::core::Type>::load,
  PythonBinding<mx::ir::core::FunctionType>::load,
  PythonBinding<mx::ir::core::Operation>::load,
  PythonBinding<mx::ir::core::BinLAndOp>::load,
  PythonBinding<mx::ir::core::BinLOrOp>::load,
  PythonBinding<mx::ir::core::ImplicitReturnOp>::load,
  PythonBinding<mx::ir::core::LazyOp>::load,
  PythonBinding<mx::ir::core::ModuleOp>::load,
  PythonBinding<mx::ir::core::ScopeOp>::load,
  PythonBinding<mx::ir::core::SelectOp>::load,
};

// multiplier.ir.meta
static PyModuleDef gMetaModule = {
  .m_name = "meta",
  .m_doc = PyDoc_STR("Wrapper of IR/Meta"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gMetaLoaders[] = {
  PythonBinding<mx::ir::meta::Attribute>::load,
  PythonBinding<mx::ir::meta::IdentifierAttr>::load,
};

// multiplier.frontend
static PyModuleDef gFrontendModule = {
  .m_name = "frontend",
  .m_doc = PyDoc_STR("Wrapper of Frontend"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gFrontendLoaders[] = {
  PythonBinding<mx::TokenContext>::load,
  PythonBinding<mx::Compilation>::load,
  PythonBinding<mx::Token>::load,
  PythonBinding<mx::TokenRange>::load,
  PythonBinding<mx::File>::load,
  PythonBinding<mx::MacroKind>::load,
  PythonBinding<mx::Macro>::load,
  PythonBinding<mx::MacroSubstitution>::load,
  PythonBinding<mx::MacroVAOpt>::load,
  PythonBinding<mx::TokenTree>::load,
  PythonBinding<mx::TokenTreeNodeKind>::load,
  PythonBinding<mx::TokenTreeNode>::load,
  PythonBinding<mx::EmptyTokenTreeNode>::load,
  PythonBinding<mx::TokenTokenTreeNode>::load,
  PythonBinding<mx::ChoiceTokenTreeNode>::load,
  PythonBinding<mx::SubstitutionTokenTreeNode>::load,
  PythonBinding<mx::SequenceTokenTreeNode>::load,
  PythonBinding<mx::RegexQueryMatch>::load,
  PythonBinding<mx::TokenKind>::load,
  PythonBinding<mx::PathKind>::load,
  PythonBinding<mx::FileType>::load,
  PythonBinding<mx::CompilerName>::load,
  PythonBinding<mx::IncludePathLocation>::load,
  PythonBinding<mx::TargetLanguage>::load,
  PythonBinding<mx::TokenCategory>::load,
  PythonBinding<mx::MacroVAOptArgument>::load,
  PythonBinding<mx::MacroConcatenate>::load,
  PythonBinding<mx::MacroStringify>::load,
  PythonBinding<mx::MacroExpansion>::load,
  PythonBinding<mx::MacroParameterSubstitution>::load,
  PythonBinding<mx::MacroArgument>::load,
  PythonBinding<mx::MacroParameter>::load,
  PythonBinding<mx::MacroDirective>::load,
  PythonBinding<mx::DefineMacroDirective>::load,
  PythonBinding<mx::PragmaMacroDirective>::load,
  PythonBinding<mx::UndefineMacroDirective>::load,
  PythonBinding<mx::OtherMacroDirective>::load,
  PythonBinding<mx::ConditionalMacroDirective>::load,
  PythonBinding<mx::EndIfMacroDirective>::load,
  PythonBinding<mx::ElseMacroDirective>::load,
  PythonBinding<mx::ElseIfNotDefinedMacroDirective>::load,
  PythonBinding<mx::ElseIfDefinedMacroDirective>::load,
  PythonBinding<mx::ElseIfMacroDirective>::load,
  PythonBinding<mx::IfNotDefinedMacroDirective>::load,
  PythonBinding<mx::IfDefinedMacroDirective>::load,
  PythonBinding<mx::IfMacroDirective>::load,
  PythonBinding<mx::IncludeLikeMacroDirective>::load,
  PythonBinding<mx::ImportMacroDirective>::load,
  PythonBinding<mx::IncludeMacrosMacroDirective>::load,
  PythonBinding<mx::IncludeNextMacroDirective>::load,
  PythonBinding<mx::IncludeMacroDirective>::load,
};

// multiplier.ir.memref
static PyModuleDef gMemRefModule = {
  .m_name = "memref",
  .m_doc = PyDoc_STR("Wrapper of IR/MemRef"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gMemRefLoaders[] = {
  PythonBinding<mx::ir::memref::Operation>::load,
  PythonBinding<mx::ir::memref::AssumeAlignmentOp>::load,
  PythonBinding<mx::ir::memref::AtomicRMWOp>::load,
  PythonBinding<mx::ir::memref::AtomicYieldOp>::load,
  PythonBinding<mx::ir::memref::CopyOp>::load,
  PythonBinding<mx::ir::memref::GenericAtomicRMWOp>::load,
  PythonBinding<mx::ir::memref::LoadOp>::load,
  PythonBinding<mx::ir::memref::AllocOp>::load,
  PythonBinding<mx::ir::memref::AllocaOp>::load,
  PythonBinding<mx::ir::memref::AllocaScopeOp>::load,
  PythonBinding<mx::ir::memref::AllocaScopeReturnOp>::load,
  PythonBinding<mx::ir::memref::CastOp>::load,
  PythonBinding<mx::ir::memref::CollapseShapeOp>::load,
  PythonBinding<mx::ir::memref::DeallocOp>::load,
  PythonBinding<mx::ir::memref::DimOp>::load,
  PythonBinding<mx::ir::memref::DMAStartOp>::load,
  PythonBinding<mx::ir::memref::DMAWaitOp>::load,
  PythonBinding<mx::ir::memref::ExpandShapeOp>::load,
  PythonBinding<mx::ir::memref::ExtractAlignedPointerAsIndexOp>::load,
  PythonBinding<mx::ir::memref::ExtractStridedMetadataOp>::load,
  PythonBinding<mx::ir::memref::GetGlobalOp>::load,
  PythonBinding<mx::ir::memref::GlobalOp>::load,
  PythonBinding<mx::ir::memref::MemorySpaceCastOp>::load,
  PythonBinding<mx::ir::memref::PrefetchOp>::load,
  PythonBinding<mx::ir::memref::RankOp>::load,
  PythonBinding<mx::ir::memref::ReallocOp>::load,
  PythonBinding<mx::ir::memref::ReinterpretCastOp>::load,
  PythonBinding<mx::ir::memref::ReshapeOp>::load,
  PythonBinding<mx::ir::memref::StoreOp>::load,
  PythonBinding<mx::ir::memref::TransposeOp>::load,
  PythonBinding<mx::ir::memref::ViewOp>::load,
  PythonBinding<mx::ir::memref::SubViewOp>::load,
};

// multiplier.ir.builtin
static PyModuleDef gBuiltinModule = {
  .m_name = "builtin",
  .m_doc = PyDoc_STR("Wrapper of IR/Builtin"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gBuiltinLoaders[] = {
  PythonBinding<mx::ir::builtin::Attribute>::load,
  PythonBinding<mx::ir::builtin::TypedAttr>::load,
  PythonBinding<mx::ir::builtin::ElementsAttr>::load,
  PythonBinding<mx::ir::builtin::AffineMapAttr>::load,
  PythonBinding<mx::ir::builtin::ArrayAttr>::load,
  PythonBinding<mx::ir::builtin::DenseArrayAttr>::load,
  PythonBinding<mx::ir::builtin::DenseIntOrFPElementsAttr>::load,
  PythonBinding<mx::ir::builtin::DenseStringElementsAttr>::load,
  PythonBinding<mx::ir::builtin::DenseResourceElementsAttr>::load,
  PythonBinding<mx::ir::builtin::DictionaryAttr>::load,
  PythonBinding<mx::ir::builtin::FloatAttr>::load,
  PythonBinding<mx::ir::builtin::IntegerAttr>::load,
  PythonBinding<mx::ir::builtin::IntegerSetAttr>::load,
  PythonBinding<mx::ir::builtin::OpaqueAttr>::load,
  PythonBinding<mx::ir::builtin::SparseElementsAttr>::load,
  PythonBinding<mx::ir::builtin::StridedLayoutAttr>::load,
  PythonBinding<mx::ir::builtin::StringAttr>::load,
  PythonBinding<mx::ir::builtin::SymbolRefAttr>::load,
  PythonBinding<mx::ir::builtin::TypeAttr>::load,
  PythonBinding<mx::ir::builtin::UnitAttr>::load,
  PythonBinding<mx::ir::builtin::BoolAttr>::load,
  PythonBinding<mx::ir::builtin::FlatSymbolRefAttr>::load,
  PythonBinding<mx::ir::builtin::DenseIntElementsAttr>::load,
  PythonBinding<mx::ir::builtin::DataLayoutSpecAttr>::load,
  PythonBinding<mx::ir::builtin::Type>::load,
  PythonBinding<mx::ir::builtin::ShapedType>::load,
  PythonBinding<mx::ir::builtin::FloatType>::load,
  PythonBinding<mx::ir::builtin::ComplexType>::load,
  PythonBinding<mx::ir::builtin::Float8E5M2Type>::load,
  PythonBinding<mx::ir::builtin::Float8E4M3FNType>::load,
  PythonBinding<mx::ir::builtin::Float8E5M2FNUZType>::load,
  PythonBinding<mx::ir::builtin::Float8E4M3FNUZType>::load,
  PythonBinding<mx::ir::builtin::Float8E4M3B11FNUZType>::load,
  PythonBinding<mx::ir::builtin::BFloat16Type>::load,
  PythonBinding<mx::ir::builtin::Float16Type>::load,
  PythonBinding<mx::ir::builtin::FloatTF32Type>::load,
  PythonBinding<mx::ir::builtin::Float32Type>::load,
  PythonBinding<mx::ir::builtin::Float64Type>::load,
  PythonBinding<mx::ir::builtin::Float80Type>::load,
  PythonBinding<mx::ir::builtin::Float128Type>::load,
  PythonBinding<mx::ir::builtin::FunctionType>::load,
  PythonBinding<mx::ir::builtin::IndexType>::load,
  PythonBinding<mx::ir::builtin::IntegerType>::load,
  PythonBinding<mx::ir::builtin::MemRefType>::load,
  PythonBinding<mx::ir::builtin::NoneType>::load,
  PythonBinding<mx::ir::builtin::OpaqueType>::load,
  PythonBinding<mx::ir::builtin::RankedTensorType>::load,
  PythonBinding<mx::ir::builtin::TupleType>::load,
  PythonBinding<mx::ir::builtin::UnrankedMemRefType>::load,
  PythonBinding<mx::ir::builtin::UnrankedTensorType>::load,
  PythonBinding<mx::ir::builtin::VectorType>::load,
  PythonBinding<mx::ir::builtin::Operation>::load,
  PythonBinding<mx::ir::builtin::ModuleOp>::load,
  PythonBinding<mx::ir::builtin::UnrealizedConversionCastOp>::load,
};

// multiplier.ir.lowlevel
static PyModuleDef gLowLevelModule = {
  .m_name = "lowlevel",
  .m_doc = PyDoc_STR("Wrapper of IR/LowLevel"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gLowLevelLoaders[] = {
  PythonBinding<mx::ir::ll::Operation>::load,
  PythonBinding<mx::ir::ll::AllocaOp>::load,
  PythonBinding<mx::ir::ll::ArgAllocaOp>::load,
  PythonBinding<mx::ir::ll::BrOp>::load,
  PythonBinding<mx::ir::ll::ConcatOp>::load,
  PythonBinding<mx::ir::ll::CondBrOp>::load,
  PythonBinding<mx::ir::ll::CondScopeRetOp>::load,
  PythonBinding<mx::ir::ll::ExtractOp>::load,
  PythonBinding<mx::ir::ll::InitializeVarOp>::load,
  PythonBinding<mx::ir::ll::InlineScopeOp>::load,
  PythonBinding<mx::ir::ll::LoadOp>::load,
  PythonBinding<mx::ir::ll::FuncOp>::load,
  PythonBinding<mx::ir::ll::StructGEPOp>::load,
  PythonBinding<mx::ir::ll::ReturnOp>::load,
  PythonBinding<mx::ir::ll::ScopeOp>::load,
  PythonBinding<mx::ir::ll::ScopeRecurseOp>::load,
  PythonBinding<mx::ir::ll::ScopeRetOp>::load,
  PythonBinding<mx::ir::ll::StoreOp>::load,
  PythonBinding<mx::ir::ll::SubscriptOp>::load,
  PythonBinding<mx::ir::ll::UninitializedVarOp>::load,
};

// multiplier.ir.highlevel
static PyModuleDef gHighLevelModule = {
  .m_name = "highlevel",
  .m_doc = PyDoc_STR("Wrapper of IR/HighLevel"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gHighLevelLoaders[] = {
  PythonBinding<mx::ir::hl::Attribute>::load,
  PythonBinding<mx::ir::hl::AnnotationAttr>::load,
  PythonBinding<mx::ir::hl::FormatAttr>::load,
  PythonBinding<mx::ir::hl::SectionAttr>::load,
  PythonBinding<mx::ir::hl::AliasAttr>::load,
  PythonBinding<mx::ir::hl::ErrorAttr>::load,
  PythonBinding<mx::ir::hl::CountedByAttr>::load,
  PythonBinding<mx::ir::hl::CleanupAttr>::load,
  PythonBinding<mx::ir::hl::AlignedAttr>::load,
  PythonBinding<mx::ir::hl::AlwaysInlineAttr>::load,
  PythonBinding<mx::ir::hl::NoInlineAttr>::load,
  PythonBinding<mx::ir::hl::ConstAttr>::load,
  PythonBinding<mx::ir::hl::LoaderUninitializedAttr>::load,
  PythonBinding<mx::ir::hl::NoInstrumentFunctionAttr>::load,
  PythonBinding<mx::ir::hl::PackedAttr>::load,
  PythonBinding<mx::ir::hl::PureAttr>::load,
  PythonBinding<mx::ir::hl::WarnUnusedResultAttr>::load,
  PythonBinding<mx::ir::hl::RestrictAttr>::load,
  PythonBinding<mx::ir::hl::NoThrowAttr>::load,
  PythonBinding<mx::ir::hl::NonNullAttr>::load,
  PythonBinding<mx::ir::hl::LeafAttr>::load,
  PythonBinding<mx::ir::hl::ColdAttr>::load,
  PythonBinding<mx::ir::hl::TransparentUnionAttr>::load,
  PythonBinding<mx::ir::hl::ReturnsTwiceAttr>::load,
  PythonBinding<mx::ir::hl::MayAliasAttr>::load,
  PythonBinding<mx::ir::hl::UnusedAttr>::load,
  PythonBinding<mx::ir::hl::UsedAttr>::load,
  PythonBinding<mx::ir::hl::GNUInlineAttr>::load,
  PythonBinding<mx::ir::hl::NoCfCheckAttr>::load,
  PythonBinding<mx::ir::hl::AvailableOnlyInDefaultEvalMethodAttr>::load,
  PythonBinding<mx::ir::hl::AvailabilityAttrAttr>::load,
  PythonBinding<mx::ir::hl::FallthroughAttr>::load,
  PythonBinding<mx::ir::hl::NoProfileInstrumentFunctionAttr>::load,
  PythonBinding<mx::ir::hl::AsmLabelAttr>::load,
  PythonBinding<mx::ir::hl::ModeAttr>::load,
  PythonBinding<mx::ir::hl::BuiltinAttr>::load,
  PythonBinding<mx::ir::hl::AllocAlignAttr>::load,
  PythonBinding<mx::ir::hl::AllocSizeAttr>::load,
  PythonBinding<mx::ir::hl::DeprecatedAttr>::load,
  PythonBinding<mx::ir::hl::MaxFieldAlignmentAttr>::load,
  PythonBinding<mx::ir::hl::VisibilityAttr>::load,
  PythonBinding<mx::ir::hl::AssumeAlignedAttr>::load,
  PythonBinding<mx::ir::hl::CVQualifiersAttr>::load,
  PythonBinding<mx::ir::hl::UCVQualifiersAttr>::load,
  PythonBinding<mx::ir::hl::CVRQualifiersAttr>::load,
  PythonBinding<mx::ir::hl::OffsetOfNodeAttr>::load,
  PythonBinding<mx::ir::hl::Type>::load,
  PythonBinding<mx::ir::hl::RecordType>::load,
  PythonBinding<mx::ir::hl::EnumType>::load,
  PythonBinding<mx::ir::hl::TypedefType>::load,
  PythonBinding<mx::ir::hl::ElaboratedType>::load,
  PythonBinding<mx::ir::hl::LabelType>::load,
  PythonBinding<mx::ir::hl::ParenType>::load,
  PythonBinding<mx::ir::hl::LValueType>::load,
  PythonBinding<mx::ir::hl::RValueType>::load,
  PythonBinding<mx::ir::hl::VoidType>::load,
  PythonBinding<mx::ir::hl::BoolType>::load,
  PythonBinding<mx::ir::hl::CharType>::load,
  PythonBinding<mx::ir::hl::ShortType>::load,
  PythonBinding<mx::ir::hl::IntType>::load,
  PythonBinding<mx::ir::hl::LongType>::load,
  PythonBinding<mx::ir::hl::LongLongType>::load,
  PythonBinding<mx::ir::hl::Int128Type>::load,
  PythonBinding<mx::ir::hl::HalfType>::load,
  PythonBinding<mx::ir::hl::BFloat16Type>::load,
  PythonBinding<mx::ir::hl::FloatType>::load,
  PythonBinding<mx::ir::hl::DoubleType>::load,
  PythonBinding<mx::ir::hl::LongDoubleType>::load,
  PythonBinding<mx::ir::hl::Float128Type>::load,
  PythonBinding<mx::ir::hl::ComplexType>::load,
  PythonBinding<mx::ir::hl::PointerType>::load,
  PythonBinding<mx::ir::hl::ArrayType>::load,
  PythonBinding<mx::ir::hl::VectorType>::load,
  PythonBinding<mx::ir::hl::DecayedType>::load,
  PythonBinding<mx::ir::hl::AttributedType>::load,
  PythonBinding<mx::ir::hl::AdjustedType>::load,
  PythonBinding<mx::ir::hl::ReferenceType>::load,
  PythonBinding<mx::ir::hl::TypeOfExprType>::load,
  PythonBinding<mx::ir::hl::TypeOfTypeType>::load,
  PythonBinding<mx::ir::hl::AutoType>::load,
  PythonBinding<mx::ir::hl::AtomicType>::load,
  PythonBinding<mx::ir::hl::Operation>::load,
  PythonBinding<mx::ir::hl::RefOp>::load,
  PythonBinding<mx::ir::hl::AccessSpecifierOp>::load,
  PythonBinding<mx::ir::hl::AddFAssignOp>::load,
  PythonBinding<mx::ir::hl::AddFOp>::load,
  PythonBinding<mx::ir::hl::AddIAssignOp>::load,
  PythonBinding<mx::ir::hl::AddIOp>::load,
  PythonBinding<mx::ir::hl::AddrLabelExprOp>::load,
  PythonBinding<mx::ir::hl::AddressOfOp>::load,
  PythonBinding<mx::ir::hl::AlignOfExprOp>::load,
  PythonBinding<mx::ir::hl::AlignOfTypeOp>::load,
  PythonBinding<mx::ir::hl::AsmOp>::load,
  PythonBinding<mx::ir::hl::AssignOp>::load,
  PythonBinding<mx::ir::hl::AttributedStmtOp>::load,
  PythonBinding<mx::ir::hl::BinAShrAssignOp>::load,
  PythonBinding<mx::ir::hl::BinAShrOp>::load,
  PythonBinding<mx::ir::hl::BinAndAssignOp>::load,
  PythonBinding<mx::ir::hl::BinAndOp>::load,
  PythonBinding<mx::ir::hl::BinCommaOp>::load,
  PythonBinding<mx::ir::hl::BinLAndOp>::load,
  PythonBinding<mx::ir::hl::BinLOrOp>::load,
  PythonBinding<mx::ir::hl::BinLShrAssignOp>::load,
  PythonBinding<mx::ir::hl::BinLShrOp>::load,
  PythonBinding<mx::ir::hl::BinOrAssignOp>::load,
  PythonBinding<mx::ir::hl::BinOrOp>::load,
  PythonBinding<mx::ir::hl::BinShlAssignOp>::load,
  PythonBinding<mx::ir::hl::BinShlOp>::load,
  PythonBinding<mx::ir::hl::BinXorAssignOp>::load,
  PythonBinding<mx::ir::hl::BinXorOp>::load,
  PythonBinding<mx::ir::hl::BinaryCondOp>::load,
  PythonBinding<mx::ir::hl::BreakOp>::load,
  PythonBinding<mx::ir::hl::BuiltinBitCastOp>::load,
  PythonBinding<mx::ir::hl::BuiltinTypesCompatiblePOp>::load,
  PythonBinding<mx::ir::hl::CStyleCastOp>::load,
  PythonBinding<mx::ir::hl::CallOp>::load,
  PythonBinding<mx::ir::hl::CaseOp>::load,
  PythonBinding<mx::ir::hl::ChooseExprOp>::load,
  PythonBinding<mx::ir::hl::ClassDeclOp>::load,
  PythonBinding<mx::ir::hl::CmpOp>::load,
  PythonBinding<mx::ir::hl::CompoundLiteralOp>::load,
  PythonBinding<mx::ir::hl::CondOp>::load,
  PythonBinding<mx::ir::hl::CondYieldOp>::load,
  PythonBinding<mx::ir::hl::ConstantOp>::load,
  PythonBinding<mx::ir::hl::ContinueOp>::load,
  PythonBinding<mx::ir::hl::CxxBaseSpecifierOp>::load,
  PythonBinding<mx::ir::hl::CxxStructDeclOp>::load,
  PythonBinding<mx::ir::hl::DeclRefOp>::load,
  PythonBinding<mx::ir::hl::DefaultOp>::load,
  PythonBinding<mx::ir::hl::DerefOp>::load,
  PythonBinding<mx::ir::hl::DivFAssignOp>::load,
  PythonBinding<mx::ir::hl::DivFOp>::load,
  PythonBinding<mx::ir::hl::DivSAssignOp>::load,
  PythonBinding<mx::ir::hl::DivSOp>::load,
  PythonBinding<mx::ir::hl::DivUAssignOp>::load,
  PythonBinding<mx::ir::hl::DivUOp>::load,
  PythonBinding<mx::ir::hl::DoOp>::load,
  PythonBinding<mx::ir::hl::EmptyDeclOp>::load,
  PythonBinding<mx::ir::hl::EnumConstantOp>::load,
  PythonBinding<mx::ir::hl::EnumDeclOp>::load,
  PythonBinding<mx::ir::hl::EnumRefOp>::load,
  PythonBinding<mx::ir::hl::ExprOp>::load,
  PythonBinding<mx::ir::hl::ExtensionOp>::load,
  PythonBinding<mx::ir::hl::FCmpOp>::load,
  PythonBinding<mx::ir::hl::FieldDeclOp>::load,
  PythonBinding<mx::ir::hl::FileScopeAsmOp>::load,
  PythonBinding<mx::ir::hl::ForOp>::load,
  PythonBinding<mx::ir::hl::FuncOp>::load,
  PythonBinding<mx::ir::hl::FuncRefOp>::load,
  PythonBinding<mx::ir::hl::GenericAssocExprOp>::load,
  PythonBinding<mx::ir::hl::GenericSelectionExprOp>::load,
  PythonBinding<mx::ir::hl::GlobalRefOp>::load,
  PythonBinding<mx::ir::hl::GotoStmtOp>::load,
  PythonBinding<mx::ir::hl::IfOp>::load,
  PythonBinding<mx::ir::hl::ImagOp>::load,
  PythonBinding<mx::ir::hl::ImplicitCastOp>::load,
  PythonBinding<mx::ir::hl::IndirectCallOp>::load,
  PythonBinding<mx::ir::hl::IndirectGotoStmtOp>::load,
  PythonBinding<mx::ir::hl::InitListExprOp>::load,
  PythonBinding<mx::ir::hl::InitializedConstantOp>::load,
  PythonBinding<mx::ir::hl::LNotOp>::load,
  PythonBinding<mx::ir::hl::LabelDeclOp>::load,
  PythonBinding<mx::ir::hl::LabelStmtOp>::load,
  PythonBinding<mx::ir::hl::MinusOp>::load,
  PythonBinding<mx::ir::hl::MulFAssignOp>::load,
  PythonBinding<mx::ir::hl::MulFOp>::load,
  PythonBinding<mx::ir::hl::MulIAssignOp>::load,
  PythonBinding<mx::ir::hl::MulIOp>::load,
  PythonBinding<mx::ir::hl::NotOp>::load,
  PythonBinding<mx::ir::hl::NullStmtOp>::load,
  PythonBinding<mx::ir::hl::OffsetOfExprOp>::load,
  PythonBinding<mx::ir::hl::OpaqueValueExprOp>::load,
  PythonBinding<mx::ir::hl::PlusOp>::load,
  PythonBinding<mx::ir::hl::PostDecOp>::load,
  PythonBinding<mx::ir::hl::PostIncOp>::load,
  PythonBinding<mx::ir::hl::PreDecOp>::load,
  PythonBinding<mx::ir::hl::PreIncOp>::load,
  PythonBinding<mx::ir::hl::PredefinedExprOp>::load,
  PythonBinding<mx::ir::hl::PreferredAlignOfExprOp>::load,
  PythonBinding<mx::ir::hl::PreferredAlignOfTypeOp>::load,
  PythonBinding<mx::ir::hl::RealOp>::load,
  PythonBinding<mx::ir::hl::RecordMemberOp>::load,
  PythonBinding<mx::ir::hl::RemFAssignOp>::load,
  PythonBinding<mx::ir::hl::RemFOp>::load,
  PythonBinding<mx::ir::hl::RemSAssignOp>::load,
  PythonBinding<mx::ir::hl::RemSOp>::load,
  PythonBinding<mx::ir::hl::RemUAssignOp>::load,
  PythonBinding<mx::ir::hl::RemUOp>::load,
  PythonBinding<mx::ir::hl::ReturnOp>::load,
  PythonBinding<mx::ir::hl::SizeOfExprOp>::load,
  PythonBinding<mx::ir::hl::SizeOfTypeOp>::load,
  PythonBinding<mx::ir::hl::StaticAssertDeclOp>::load,
  PythonBinding<mx::ir::hl::StmtExprOp>::load,
  PythonBinding<mx::ir::hl::StructDeclOp>::load,
  PythonBinding<mx::ir::hl::SubFAssignOp>::load,
  PythonBinding<mx::ir::hl::SubFOp>::load,
  PythonBinding<mx::ir::hl::SubIAssignOp>::load,
  PythonBinding<mx::ir::hl::SubIOp>::load,
  PythonBinding<mx::ir::hl::SubscriptOp>::load,
  PythonBinding<mx::ir::hl::SwitchOp>::load,
  PythonBinding<mx::ir::hl::ThisOp>::load,
  PythonBinding<mx::ir::hl::TranslationUnitOp>::load,
  PythonBinding<mx::ir::hl::TypeAliasOp>::load,
  PythonBinding<mx::ir::hl::TypeDeclOp>::load,
  PythonBinding<mx::ir::hl::TypeDefOp>::load,
  PythonBinding<mx::ir::hl::TypeOfExprOp>::load,
  PythonBinding<mx::ir::hl::TypeYieldOp>::load,
  PythonBinding<mx::ir::hl::UnionDeclOp>::load,
  PythonBinding<mx::ir::hl::UnreachableOp>::load,
  PythonBinding<mx::ir::hl::VAArgExprOp>::load,
  PythonBinding<mx::ir::hl::ValueYieldOp>::load,
  PythonBinding<mx::ir::hl::VarDeclOp>::load,
  PythonBinding<mx::ir::hl::WhileOp>::load,
};

// multiplier.ir.unsupported
static PyModuleDef gUnsupportedModule = {
  .m_name = "unsupported",
  .m_doc = PyDoc_STR("Wrapper of IR/Unsupported"),
  .m_size = 0,
  .m_methods = gEmptyMethods,
  .m_slots = {},
  .m_traverse = {},
  .m_clear = {},
  .m_free = {},
};

static LoaderFunc * const gUnsupportedLoaders[] = {
  PythonBinding<mx::ir::unsup::Type>::load,
  PythonBinding<mx::ir::unsup::UnsupportedType>::load,
  PythonBinding<mx::ir::unsup::Operation>::load,
  PythonBinding<mx::ir::unsup::UnsupportedDeclOp>::load,
  PythonBinding<mx::ir::unsup::UnsupportedStmtOp>::load,
};

}  // namespace
}  // namespace mx

PyMODINIT_FUNC PyInit_multiplier(void) {
  PyObject * const dummym = nullptr;

  auto m = PyModule_Create(&mx::gModule);
  if (!m) {
    return nullptr;
  }

  // Fake injected base class for `Decl`, `Stmt`, etc.
  if (!mx::PythonBinding<mx::VariantEntity>::load(m)) {
    Py_DECREF(m);
    return nullptr;
  }

  for (auto loader : mx::gLoaders) {
    if (!loader(m)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (dummym) {
    if (0 != PyModule_AddObjectRef(dummym, "", m)) {
      Py_DECREF(m);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto irm = PyModule_Create(&mx::gIRModule);
  if (!irm) {
    return nullptr;
  }

  for (auto loader : mx::gIRLoaders) {
    if (!loader(irm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (m) {
    if (0 != PyModule_AddObjectRef(m, "ir", irm)) {
      Py_DECREF(irm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto astm = PyModule_Create(&mx::gASTModule);
  if (!astm) {
    return nullptr;
  }

  for (auto loader : mx::gASTLoaders) {
    if (!loader(astm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (m) {
    if (0 != PyModule_AddObjectRef(m, "ast", astm)) {
      Py_DECREF(astm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto abim = PyModule_Create(&mx::gABIModule);
  if (!abim) {
    return nullptr;
  }

  for (auto loader : mx::gABILoaders) {
    if (!loader(abim)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "abi", abim)) {
      Py_DECREF(abim);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto llvmm = PyModule_Create(&mx::gLLVMModule);
  if (!llvmm) {
    return nullptr;
  }

  for (auto loader : mx::gLLVMLoaders) {
    if (!loader(llvmm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "llvm", llvmm)) {
      Py_DECREF(llvmm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto corem = PyModule_Create(&mx::gCoreModule);
  if (!corem) {
    return nullptr;
  }

  for (auto loader : mx::gCoreLoaders) {
    if (!loader(corem)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "core", corem)) {
      Py_DECREF(corem);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto metam = PyModule_Create(&mx::gMetaModule);
  if (!metam) {
    return nullptr;
  }

  for (auto loader : mx::gMetaLoaders) {
    if (!loader(metam)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "meta", metam)) {
      Py_DECREF(metam);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto frontendm = PyModule_Create(&mx::gFrontendModule);
  if (!frontendm) {
    return nullptr;
  }

  for (auto loader : mx::gFrontendLoaders) {
    if (!loader(frontendm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (m) {
    if (0 != PyModule_AddObjectRef(m, "frontend", frontendm)) {
      Py_DECREF(frontendm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto memrefm = PyModule_Create(&mx::gMemRefModule);
  if (!memrefm) {
    return nullptr;
  }

  for (auto loader : mx::gMemRefLoaders) {
    if (!loader(memrefm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "memref", memrefm)) {
      Py_DECREF(memrefm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto builtinm = PyModule_Create(&mx::gBuiltinModule);
  if (!builtinm) {
    return nullptr;
  }

  for (auto loader : mx::gBuiltinLoaders) {
    if (!loader(builtinm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "builtin", builtinm)) {
      Py_DECREF(builtinm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto lowlevelm = PyModule_Create(&mx::gLowLevelModule);
  if (!lowlevelm) {
    return nullptr;
  }

  for (auto loader : mx::gLowLevelLoaders) {
    if (!loader(lowlevelm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "lowlevel", lowlevelm)) {
      Py_DECREF(lowlevelm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto highlevelm = PyModule_Create(&mx::gHighLevelModule);
  if (!highlevelm) {
    return nullptr;
  }

  for (auto loader : mx::gHighLevelLoaders) {
    if (!loader(highlevelm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "highlevel", highlevelm)) {
      Py_DECREF(highlevelm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  auto unsupportedm = PyModule_Create(&mx::gUnsupportedModule);
  if (!unsupportedm) {
    return nullptr;
  }

  for (auto loader : mx::gUnsupportedLoaders) {
    if (!loader(unsupportedm)) {
      Py_DECREF(m);
      return nullptr;
    }
  }

  if (irm) {
    if (0 != PyModule_AddObjectRef(irm, "unsupported", unsupportedm)) {
      Py_DECREF(unsupportedm);
      Py_DECREF(m);
      return nullptr;
    }
  }

  // Doesn't have any methods, so no schema is made for it. We manually inject
  // this so that we can handle `Token::location`.
  if (!mx::PythonBinding<mx::FileLocationCache>::load(frontendm)) {
    Py_DECREF(m);
    return nullptr;
  }

  // Doesn't have any methods, so no schema is made fo rit. We manually inject
  // this so that we can handle `NamedDecl::qualified_name`.
  if (!mx::PythonBinding<mx::QualifiedNameRenderOptions>::load(astm)) {
    Py_DECREF(m);
    return nullptr;
  }

  // Doesn't have any methods, so no schema is made for it. We manually inject
  // this so that we can handle `TokenRange::create`.
  if (!mx::PythonBinding<mx::UserToken>::load(frontendm)) {
    Py_DECREF(m);
    return nullptr;
  }

  // Has virtual methods that we need to manually trampoline.
  if (!mx::PythonBinding<mx::ProxyTokenTreeVisitor>::load(frontendm)) {
    Py_DECREF(m);
    return nullptr;
  }

  return m;
}
