// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#pragma once

#include <multiplier/AST.h>
#include <multiplier/AST.capnp.h>

namespace pasta {
class Decl;
class EmptyDecl;
class ExportDecl;
class ExternCContextDecl;
class FileScopeAsmDecl;
class FriendDecl;
class FriendTemplateDecl;
class ImportDecl;
class LifetimeExtendedTemporaryDecl;
class LinkageSpecDecl;
class NamedDecl;
class NamespaceAliasDecl;
class NamespaceDecl;
class ObjCCompatibleAliasDecl;
class ObjCContainerDecl;
class ObjCImplDecl;
class ObjCImplementationDecl;
class ObjCInterfaceDecl;
class ObjCMethodDecl;
class ObjCPropertyDecl;
class ObjCPropertyImplDecl;
class ObjCProtocolDecl;
class PragmaCommentDecl;
class PragmaDetectMismatchDecl;
class RequiresExprBodyDecl;
class StaticAssertDecl;
class TemplateDecl;
class TemplateTemplateParmDecl;
class TranslationUnitDecl;
class TypeDecl;
class TypedefNameDecl;
class UnresolvedUsingIfExistsDecl;
class UnresolvedUsingTypenameDecl;
class UsingDirectiveDecl;
class UsingPackDecl;
class UsingShadowDecl;
class ValueDecl;
class OMPDeclarativeDirectiveDecl;
class OMPDeclarativeDirectiveValueDecl;
class AccessSpecDecl;
class BaseUsingDecl;
class BindingDecl;
class BlockDecl;
class BuiltinTemplateDecl;
class CapturedDecl;
class ClassScopeFunctionSpecializationDecl;
class ConceptDecl;
class ConstructorUsingShadowDecl;
class DeclaratorDecl;
class EnumConstantDecl;
class FieldDecl;
class FunctionDecl;
class IndirectFieldDecl;
class LabelDecl;
class MSGuidDecl;
class MSPropertyDecl;
class NonTypeTemplateParmDecl;
class OMPAllocateDecl;
class OMPDeclareMapperDecl;
class OMPDeclareReductionDecl;
class OMPRequiresDecl;
class OMPThreadPrivateDecl;
class ObjCAtDefsFieldDecl;
class ObjCCategoryDecl;
class ObjCCategoryImplDecl;
class ObjCIvarDecl;
class ObjCTypeParamDecl;
class RedeclarableTemplateDecl;
class TagDecl;
class TemplateParamObjectDecl;
class TemplateTypeParmDecl;
class TypeAliasDecl;
class TypeAliasTemplateDecl;
class TypedefDecl;
class UnresolvedUsingValueDecl;
class UsingDecl;
class UsingEnumDecl;
class VarDecl;
class VarTemplateDecl;
class VarTemplateSpecializationDecl;
class CXXDeductionGuideDecl;
class CXXMethodDecl;
class ClassTemplateDecl;
class DecompositionDecl;
class EnumDecl;
class FunctionTemplateDecl;
class ImplicitParamDecl;
class OMPCapturedExprDecl;
class ParmVarDecl;
class RecordDecl;
class VarTemplatePartialSpecializationDecl;
class CXXConstructorDecl;
class CXXConversionDecl;
class CXXDestructorDecl;
class CXXRecordDecl;
class ClassTemplateSpecializationDecl;
class ClassTemplatePartialSpecializationDecl;
class Stmt;
class SwitchCase;
class SwitchStmt;
class ValueStmt;
class WhileStmt;
class AsmStmt;
class AttributedStmt;
class BreakStmt;
class CXXCatchStmt;
class CXXForRangeStmt;
class CXXTryStmt;
class CapturedStmt;
class CaseStmt;
class CompoundStmt;
class ContinueStmt;
class CoreturnStmt;
class CoroutineBodyStmt;
class DeclStmt;
class DefaultStmt;
class DoStmt;
class Expr;
class ExpressionTraitExpr;
class ExtVectorElementExpr;
class FixedPointLiteral;
class FloatingLiteral;
class ForStmt;
class FullExpr;
class FunctionParmPackExpr;
class GCCAsmStmt;
class GNUNullExpr;
class GenericSelectionExpr;
class GotoStmt;
class IfStmt;
class ImaginaryLiteral;
class ImplicitValueInitExpr;
class IndirectGotoStmt;
class InitListExpr;
class IntegerLiteral;
class LabelStmt;
class LambdaExpr;
class MSAsmStmt;
class MSDependentExistsStmt;
class MSPropertyRefExpr;
class MSPropertySubscriptExpr;
class MaterializeTemporaryExpr;
class MatrixSubscriptExpr;
class MemberExpr;
class NoInitExpr;
class NullStmt;
class OMPArraySectionExpr;
class OMPArrayShapingExpr;
class OMPCanonicalLoop;
class OMPExecutableDirective;
class OMPFlushDirective;
class OMPInteropDirective;
class OMPIteratorExpr;
class OMPLoopBasedDirective;
class OMPLoopDirective;
class OMPMaskedDirective;
class OMPMasterDirective;
class OMPMasterTaskLoopDirective;
class OMPMasterTaskLoopSimdDirective;
class OMPOrderedDirective;
class OMPParallelDirective;
class OMPParallelForDirective;
class OMPParallelForSimdDirective;
class OMPParallelMasterDirective;
class OMPParallelMasterTaskLoopDirective;
class OMPParallelMasterTaskLoopSimdDirective;
class OMPParallelSectionsDirective;
class OMPScanDirective;
class OMPSectionDirective;
class OMPSectionsDirective;
class OMPSimdDirective;
class OMPSingleDirective;
class OMPTargetDataDirective;
class OMPTargetDirective;
class OMPTargetEnterDataDirective;
class OMPTargetExitDataDirective;
class OMPTargetParallelDirective;
class OMPTargetParallelForDirective;
class OMPTargetParallelForSimdDirective;
class OMPTargetSimdDirective;
class OMPTargetTeamsDirective;
class OMPTargetTeamsDistributeDirective;
class OMPTargetTeamsDistributeParallelForDirective;
class OMPTargetTeamsDistributeParallelForSimdDirective;
class OMPTargetTeamsDistributeSimdDirective;
class OMPTargetUpdateDirective;
class OMPTaskDirective;
class OMPTaskLoopDirective;
class OMPTaskLoopSimdDirective;
class OMPTaskgroupDirective;
class OMPTaskwaitDirective;
class OMPTaskyieldDirective;
class OMPTeamsDirective;
class OMPTeamsDistributeDirective;
class OMPTeamsDistributeParallelForDirective;
class OMPTeamsDistributeParallelForSimdDirective;
class OMPTeamsDistributeSimdDirective;
class OMPTileDirective;
class OMPUnrollDirective;
class ObjCArrayLiteral;
class ObjCAtCatchStmt;
class ObjCAtFinallyStmt;
class ObjCAtSynchronizedStmt;
class ObjCAtThrowStmt;
class ObjCAtTryStmt;
class ObjCAutoreleasePoolStmt;
class ObjCAvailabilityCheckExpr;
class ObjCBoolLiteralExpr;
class ObjCBoxedExpr;
class ObjCDictionaryLiteral;
class ObjCEncodeExpr;
class ObjCForCollectionStmt;
class ObjCIndirectCopyRestoreExpr;
class ObjCIsaExpr;
class ObjCIvarRefExpr;
class ObjCMessageExpr;
class ObjCPropertyRefExpr;
class ObjCProtocolExpr;
class ObjCSelectorExpr;
class ObjCStringLiteral;
class ObjCSubscriptRefExpr;
class OffsetOfExpr;
class OpaqueValueExpr;
class OverloadExpr;
class PackExpansionExpr;
class ParenExpr;
class ParenListExpr;
class PredefinedExpr;
class PseudoObjectExpr;
class RecoveryExpr;
class RequiresExpr;
class ReturnStmt;
class SEHExceptStmt;
class SEHFinallyStmt;
class SEHLeaveStmt;
class SEHTryStmt;
class SYCLUniqueStableNameExpr;
class ShuffleVectorExpr;
class SizeOfPackExpr;
class SourceLocExpr;
class StmtExpr;
class StringLiteral;
class SubstNonTypeTemplateParmExpr;
class SubstNonTypeTemplateParmPackExpr;
class TypeTraitExpr;
class TypoExpr;
class UnaryExprOrTypeTraitExpr;
class UnaryOperator;
class UnresolvedLookupExpr;
class UnresolvedMemberExpr;
class VAArgExpr;
class AbstractConditionalOperator;
class AddrLabelExpr;
class ArrayInitIndexExpr;
class ArrayInitLoopExpr;
class ArraySubscriptExpr;
class ArrayTypeTraitExpr;
class AsTypeExpr;
class AtomicExpr;
class BinaryConditionalOperator;
class BinaryOperator;
class BlockExpr;
class CXXBindTemporaryExpr;
class CXXBoolLiteralExpr;
class CXXConstructExpr;
class CXXDefaultArgExpr;
class CXXDefaultInitExpr;
class CXXDeleteExpr;
class CXXDependentScopeMemberExpr;
class CXXFoldExpr;
class CXXInheritedCtorInitExpr;
class CXXNewExpr;
class CXXNoexceptExpr;
class CXXNullPtrLiteralExpr;
class CXXPseudoDestructorExpr;
class CXXRewrittenBinaryOperator;
class CXXScalarValueInitExpr;
class CXXStdInitializerListExpr;
class CXXTemporaryObjectExpr;
class CXXThisExpr;
class CXXThrowExpr;
class CXXTypeidExpr;
class CXXUnresolvedConstructExpr;
class CXXUuidofExpr;
class CallExpr;
class CastExpr;
class CharacterLiteral;
class ChooseExpr;
class CompoundAssignOperator;
class CompoundLiteralExpr;
class ConceptSpecializationExpr;
class ConditionalOperator;
class ConstantExpr;
class ConvertVectorExpr;
class CoroutineSuspendExpr;
class CoyieldExpr;
class DeclRefExpr;
class DependentCoawaitExpr;
class DependentScopeDeclRefExpr;
class DesignatedInitExpr;
class DesignatedInitUpdateExpr;
class ExplicitCastExpr;
class ExprWithCleanups;
class ImplicitCastExpr;
class OMPAtomicDirective;
class OMPBarrierDirective;
class OMPCancelDirective;
class OMPCancellationPointDirective;
class OMPCriticalDirective;
class OMPDepobjDirective;
class OMPDispatchDirective;
class OMPDistributeDirective;
class OMPDistributeParallelForDirective;
class OMPDistributeParallelForSimdDirective;
class OMPDistributeSimdDirective;
class OMPForDirective;
class OMPForSimdDirective;
class ObjCBridgedCastExpr;
class UserDefinedLiteral;
class BuiltinBitCastExpr;
class CStyleCastExpr;
class CUDAKernelCallExpr;
class CXXFunctionalCastExpr;
class CXXMemberCallExpr;
class CXXNamedCastExpr;
class CXXOperatorCallExpr;
class CXXReinterpretCastExpr;
class CXXStaticCastExpr;
class CoawaitExpr;
class CXXAddrspaceCastExpr;
class CXXConstCastExpr;
class CXXDynamicCastExpr;
class Token;
class TokenRange;
class CXXBaseSpecifier;
class TemplateArgument;
class TemplateParameterList;
class FileToken;
enum class DeclKind : unsigned;
enum class ArrayTypeArraySizeModifier : unsigned;
enum class AtomicExprAtomicOp : unsigned;
enum class BuiltinTypeKind : unsigned;
enum class CXXConstructExprConstructionKind : unsigned;
enum class CXXNewExprInitializationStyle : unsigned;
enum class CallExprADLCallKind : bool;
enum class CapturedStmtVariableCaptureKind : unsigned;
enum class CharacterLiteralCharacterKind : unsigned;
enum class ConstantExprResultStorageKind : unsigned;
enum class DeclFriendObjectKind : unsigned;
enum class DeclIdentifierNamespace : unsigned;
enum class DeclModuleOwnershipKind : unsigned;
enum class DeclObjCDeclQualifier : unsigned;
enum class ExprConstantExprKind : int;
enum class ExprLValueClassification : unsigned;
enum class ExprNullPointerConstantKind : unsigned;
enum class ExprNullPointerConstantValueDependence : unsigned;
enum class ExprSideEffectsKind : unsigned;
enum class ExprisModifiableLvalueResult : unsigned;
enum class FunctionDeclTemplatedKind : unsigned;
enum class ImplicitCastExprOnStack : unsigned;
enum class ImplicitParamDeclImplicitParamKind : unsigned;
enum class LinkageSpecDeclLanguageIDs : unsigned;
enum class NamedDeclExplicitVisibilityKind : unsigned;
enum class OMPDeclareReductionDeclInitKind : unsigned;
enum class ObjCIvarDeclAccessControl : unsigned;
enum class ObjCMessageExprReceiverKind : unsigned;
enum class ObjCMethodDeclImplementationControl : unsigned;
enum class ObjCPropertyDeclPropertyControl : unsigned;
enum class ObjCPropertyDeclSetterKind : unsigned;
enum class ObjCPropertyImplDeclKind : unsigned;
enum class PredefinedExprIdentKind : unsigned;
enum class QualTypeDestructionKind : unsigned;
enum class QualTypePrimitiveCopyKind : unsigned;
enum class QualTypePrimitiveDefaultInitializeKind : unsigned;
enum class RecordDeclArgPassingKind : unsigned;
enum class SourceLocExprIdentKind : unsigned;
enum class StmtLikelihood : int;
enum class StmtKind : unsigned;
enum class StringLiteralStringKind : unsigned;
enum class TemplateArgumentKind : unsigned;
enum class TypeScalarTypeKind : unsigned;
enum class TypeKind : unsigned;
enum class UnaryTransformTypeUTTKind : unsigned;
enum class UserDefinedLiteralLiteralOperatorKind : unsigned;
enum class VarDeclDefinitionKind : unsigned;
enum class VarDeclInitializationStyle : unsigned;
enum class VarDeclTLSKind : unsigned;
enum class VectorTypeVectorKind : unsigned;
enum class ASTDumpOutputFormat : unsigned;
enum class AccessSpecifier : unsigned;
enum class AddrSpaceMapMangling : unsigned;
enum class AllocatorTypeTy : unsigned;
enum class AltivecSrcCompatKind : int;
enum class ArgumentKind : unsigned;
enum class ArrayTypeTrait : unsigned;
enum class AtomicScopeModelKind : int;
enum class AttributeKind : unsigned;
enum class AutoTypeKeyword : int;
enum class AvailabilityResult : unsigned;
enum class BinaryOperatorKind : unsigned;
enum class Bits : unsigned char;
enum class BlockType : unsigned;
enum class BranchStateTy : unsigned;
enum class CallingConv : unsigned;
enum class CanThrowResult : unsigned;
enum class CapturedRegionKind : unsigned;
enum class CastKind : unsigned;
enum class ClangABI : int;
enum class CommentKind : unsigned;
enum class ComparisonCategoryResult : unsigned char;
enum class ComparisonCategoryType : unsigned char;
enum class CompilingModuleKind : unsigned;
enum class ConstexprSpecKind : int;
enum class ConsumedState : unsigned;
enum class ConventionKind : unsigned;
enum class CoreFoundationABI : int;
enum class DefaultArgKind : unsigned;
enum class DefaultCallingConvention : unsigned;
enum class DevTypeTy : unsigned;
enum class DiagnosticLevelMask : unsigned;
enum class DiagnosticType : unsigned;
enum class ElaboratedTypeKeyword : unsigned;
enum class EmbedBitcodeKind : unsigned;
enum class ExceptionHandlingKind : int;
enum class ExceptionSpecificationType : unsigned;
enum class ExplicitSpecKind : unsigned;
enum class ExprDependence : unsigned char;
enum class ExprObjectKind : unsigned;
enum class ExprOffsets : int;
enum class ExprValueKind : unsigned;
enum class ExpressionTrait : unsigned;
enum class ExtKind : unsigned;
enum class ExtendArgsKind : int;
enum class FPExceptionModeKind : unsigned;
enum class FPModeKind : unsigned;
enum class FamilyKind : unsigned;
enum class FiniteLoopsKind : unsigned;
enum class FramePointerKind : int;
enum class GC : unsigned;
enum class GCMode : unsigned;
enum class GVALinkage : unsigned;
enum class GetBuiltinTypeError : unsigned;
enum class GuardArg : unsigned;
enum class ID : unsigned;
enum class IdentifierInfoFlag : unsigned;
enum class ImbueAttribute : int;
enum class ImplicitReason : unsigned;
enum class InClassInitStyle : unsigned;
enum class InheritedDesignatedInitializersState : unsigned;
enum class InitStorageKind : unsigned;
enum class InlineVariableDefinitionKind : int;
enum class InliningMethod : unsigned;
enum class InterruptType : unsigned;
enum class Kinds : unsigned;
enum class LambdaCaptureDefault : unsigned;
enum class LambdaCaptureKind : unsigned;
enum class LangAS : unsigned;
enum class LangFeatures : unsigned;
enum class Language : unsigned char;
enum class LanguageLinkage : unsigned;
enum class LaxVectorConversionKind : int;
enum class Level : unsigned;
enum class Linkage : unsigned char;
enum class LoopHintState : unsigned;
enum class MSInheritanceModel : int;
enum class MSVCMajorVersion : unsigned;
enum class MSVtorDispMode : int;
enum class MapTypeTy : unsigned;
enum class MethodRefFlags : unsigned;
enum class ModifiableType : unsigned;
enum class MultiVersionKind : int;
enum class NameKind : unsigned;
enum class NeedExtraManglingDecl : unsigned;
enum class NestedNameSpecifierDependence : unsigned char;
enum class NewtypeKind : unsigned;
enum class NonOdrUseReason : unsigned;
enum class NonceObjCInterface : unsigned;
enum class NullabilityKind : unsigned char;
enum class ObjCBridgeCastKind : unsigned;
enum class ObjCDispatchMethodKind : unsigned;
enum class ObjCInstanceTypeFamily : unsigned;
enum class ObjCKeywordKind : unsigned;
enum class ObjCLifetime : unsigned;
enum class ObjCMethodFamily : unsigned;
enum class ObjCPropertyQueryKind : unsigned char;
enum class ObjCStringFormatFamily : unsigned;
enum class ObjCSubstitutionContext : int;
enum class ObjCTypeParamVariance : unsigned char;
enum class OnOffSwitch : unsigned;
enum class OnStackType : unsigned;
enum class OpenMPAtomicDefaultMemOrderClauseKind : unsigned;
enum class OpenMPDefaultmapClauseKind : unsigned;
enum class OpenMPDefaultmapClauseModifier : unsigned;
enum class OpenMPDependClauseKind : unsigned;
enum class OpenMPDeviceClauseModifier : unsigned;
enum class OpenMPDeviceType : unsigned;
enum class OpenMPDistScheduleClauseKind : unsigned;
enum class OpenMPLastprivateModifier : unsigned;
enum class OpenMPLinearClauseKind : unsigned;
enum class OpenMPMapClauseKind : unsigned;
enum class OpenMPMapModifierKind : unsigned;
enum class OpenMPMotionModifierKind : unsigned;
enum class OpenMPOrderClauseKind : unsigned;
enum class OpenMPReductionClauseModifier : unsigned;
enum class OpenMPScheduleClauseKind : unsigned;
enum class OpenMPScheduleClauseModifier : unsigned;
enum class OptionType : unsigned;
enum class OverloadedOperatorKind : int;
enum class OverloadsShown : unsigned;
enum class OwnershipKind : unsigned;
enum class PCSType : unsigned;
enum class PPKeywordKind : unsigned;
enum class ParameterABI : int;
enum class ParenLocsOffsets : int;
enum class PragmaFloatControlKind : unsigned;
enum class PragmaMSCommentKind : unsigned;
enum class PragmaMSPointersToMembersKind : unsigned;
enum class PragmaMSStructKind : unsigned;
enum class PragmaSectionFlag : unsigned;
enum class ProfileInstrKind : unsigned;
enum class RangeExprOffset : int;
enum class RangeLocOffset : int;
enum class RefQualifierKind : unsigned;
enum class RemarkKind : unsigned;
enum class ReservedIdentifierStatus : int;
enum class SFINAEResponse : unsigned;
enum class SYCLMajorVersion : unsigned;
enum class SanitizerOrdinal : unsigned long long;
enum class SelectorLocationsKind : unsigned;
enum class SignReturnAddressKeyKind : int;
enum class SignReturnAddressScopeKind : int;
enum class SignedOverflowBehaviorTy : unsigned;
enum class SpecialMemberFlags : unsigned;
enum class SpecifierKind : unsigned;
enum class Spelling : unsigned;
enum class StackProtectorMode : unsigned;
enum class StorageClass : unsigned;
enum class StorageDuration : unsigned;
enum class StoredNameKind : unsigned;
enum class StoredSpecifierKind : unsigned;
enum class StructReturnConventionKind : unsigned;
enum class SubExpr : unsigned;
enum class SubStmt : unsigned;
enum class SyncScope : int;
enum class Syntax : unsigned;
enum class TLSModel : unsigned;
enum class TQ : unsigned;
enum class TagTypeKind : unsigned;
enum class TailPaddingUseRules : unsigned;
enum class TemplateArgumentDependence : unsigned char;
enum class TemplateNameDependence : unsigned char;
enum class TemplateSpecializationKind : unsigned;
enum class TextDiagnosticFormat : unsigned;
enum class ThreadModelKind : int;
enum class ThreadStorageClassSpecifier : unsigned;
enum class TokenKind : unsigned short;
enum class TrailingAllocKind : unsigned;
enum class TranslationUnitKind : unsigned;
enum class TrivialAutoVarInitKind : int;
enum class TypeDependence : unsigned char;
enum class TypeLocClass : unsigned;
enum class TypeSpecifierSign : int;
enum class TypeSpecifierType : unsigned;
enum class TypeSpecifierWidth : int;
enum class TypeSpecifiersPipe : int;
enum class TypeTrait : unsigned;
enum class UnaryExprOrTypeTrait : unsigned;
enum class UnaryOperatorKind : unsigned;
enum class APValueKind : unsigned;
enum class VectorLibrary : unsigned;
enum class Visibility : unsigned;
enum class VisibilityType : unsigned;
enum class PathKind : signed char;
enum class FileType : signed char;
enum class CompilerName : unsigned;
enum class IncludePathLocation : unsigned;
enum class TargetLanguage : unsigned;
}  // namespace pasta
namespace indexer {
class EntitySerializer;
void Serialize(EntitySerializer &, const pasta::Decl &);
void SerializeDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::Decl &);
void SerializeEmptyDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::EmptyDecl &);
void SerializeExportDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ExportDecl &);
void SerializeExternCContextDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ExternCContextDecl &);
void SerializeFileScopeAsmDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::FileScopeAsmDecl &);
void SerializeFriendDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::FriendDecl &);
void SerializeFriendTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::FriendTemplateDecl &);
void SerializeImportDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ImportDecl &);
void SerializeLifetimeExtendedTemporaryDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::LifetimeExtendedTemporaryDecl &);
void SerializeLinkageSpecDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::LinkageSpecDecl &);
void SerializeNamedDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::NamedDecl &);
void SerializeNamespaceAliasDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::NamespaceAliasDecl &);
void SerializeNamespaceDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::NamespaceDecl &);
void SerializeObjCCompatibleAliasDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCCompatibleAliasDecl &);
void SerializeObjCContainerDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCContainerDecl &);
void SerializeObjCImplDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCImplDecl &);
void SerializeObjCImplementationDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCImplementationDecl &);
void SerializeObjCInterfaceDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCInterfaceDecl &);
void SerializeObjCMethodDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCMethodDecl &);
void SerializeObjCPropertyDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCPropertyDecl &);
void SerializeObjCPropertyImplDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCPropertyImplDecl &);
void SerializeObjCProtocolDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCProtocolDecl &);
void SerializePragmaCommentDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::PragmaCommentDecl &);
void SerializePragmaDetectMismatchDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::PragmaDetectMismatchDecl &);
void SerializeRequiresExprBodyDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::RequiresExprBodyDecl &);
void SerializeStaticAssertDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::StaticAssertDecl &);
void SerializeTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TemplateDecl &);
void SerializeTemplateTemplateParmDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TemplateTemplateParmDecl &);
void SerializeTranslationUnitDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TranslationUnitDecl &);
void SerializeTypeDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TypeDecl &);
void SerializeTypedefNameDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TypedefNameDecl &);
void SerializeUnresolvedUsingIfExistsDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UnresolvedUsingIfExistsDecl &);
void SerializeUnresolvedUsingTypenameDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UnresolvedUsingTypenameDecl &);
void SerializeUsingDirectiveDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UsingDirectiveDecl &);
void SerializeUsingPackDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UsingPackDecl &);
void SerializeUsingShadowDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UsingShadowDecl &);
void SerializeValueDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ValueDecl &);
void SerializeOMPDeclarativeDirectiveDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPDeclarativeDirectiveDecl &);
void SerializeOMPDeclarativeDirectiveValueDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPDeclarativeDirectiveValueDecl &);
void SerializeAccessSpecDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::AccessSpecDecl &);
void SerializeBaseUsingDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::BaseUsingDecl &);
void SerializeBindingDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::BindingDecl &);
void SerializeBlockDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::BlockDecl &);
void SerializeBuiltinTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::BuiltinTemplateDecl &);
void SerializeCapturedDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::CapturedDecl &);
void SerializeClassScopeFunctionSpecializationDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ClassScopeFunctionSpecializationDecl &);
void SerializeConceptDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ConceptDecl &);
void SerializeConstructorUsingShadowDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ConstructorUsingShadowDecl &);
void SerializeDeclaratorDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::DeclaratorDecl &);
void SerializeEnumConstantDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::EnumConstantDecl &);
void SerializeFieldDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::FieldDecl &);
void SerializeFunctionDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::FunctionDecl &);
void SerializeIndirectFieldDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::IndirectFieldDecl &);
void SerializeLabelDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::LabelDecl &);
void SerializeMSGuidDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::MSGuidDecl &);
void SerializeMSPropertyDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::MSPropertyDecl &);
void SerializeNonTypeTemplateParmDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::NonTypeTemplateParmDecl &);
void SerializeOMPAllocateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPAllocateDecl &);
void SerializeOMPDeclareMapperDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPDeclareMapperDecl &);
void SerializeOMPDeclareReductionDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPDeclareReductionDecl &);
void SerializeOMPRequiresDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPRequiresDecl &);
void SerializeOMPThreadPrivateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPThreadPrivateDecl &);
void SerializeObjCAtDefsFieldDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCAtDefsFieldDecl &);
void SerializeObjCCategoryDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCCategoryDecl &);
void SerializeObjCCategoryImplDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCCategoryImplDecl &);
void SerializeObjCIvarDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCIvarDecl &);
void SerializeObjCTypeParamDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ObjCTypeParamDecl &);
void SerializeRedeclarableTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::RedeclarableTemplateDecl &);
void SerializeTagDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TagDecl &);
void SerializeTemplateParamObjectDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TemplateParamObjectDecl &);
void SerializeTemplateTypeParmDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TemplateTypeParmDecl &);
void SerializeTypeAliasDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TypeAliasDecl &);
void SerializeTypeAliasTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TypeAliasTemplateDecl &);
void SerializeTypedefDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::TypedefDecl &);
void SerializeUnresolvedUsingValueDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UnresolvedUsingValueDecl &);
void SerializeUsingDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UsingDecl &);
void SerializeUsingEnumDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::UsingEnumDecl &);
void SerializeVarDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::VarDecl &);
void SerializeVarTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::VarTemplateDecl &);
void SerializeVarTemplateSpecializationDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::VarTemplateSpecializationDecl &);
void SerializeCXXDeductionGuideDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::CXXDeductionGuideDecl &);
void SerializeCXXMethodDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::CXXMethodDecl &);
void SerializeClassTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ClassTemplateDecl &);
void SerializeDecompositionDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::DecompositionDecl &);
void SerializeEnumDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::EnumDecl &);
void SerializeFunctionTemplateDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::FunctionTemplateDecl &);
void SerializeImplicitParamDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ImplicitParamDecl &);
void SerializeOMPCapturedExprDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::OMPCapturedExprDecl &);
void SerializeParmVarDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ParmVarDecl &);
void SerializeRecordDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::RecordDecl &);
void SerializeVarTemplatePartialSpecializationDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::VarTemplatePartialSpecializationDecl &);
void SerializeCXXConstructorDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::CXXConstructorDecl &);
void SerializeCXXConversionDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::CXXConversionDecl &);
void SerializeCXXDestructorDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::CXXDestructorDecl &);
void SerializeCXXRecordDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::CXXRecordDecl &);
void SerializeClassTemplateSpecializationDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ClassTemplateSpecializationDecl &);
void SerializeClassTemplatePartialSpecializationDecl(EntitySerializer &, mx::ast::Decl::Builder, const pasta::ClassTemplatePartialSpecializationDecl &);
void SerializeStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::Stmt &);
void SerializeSwitchCase(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SwitchCase &);
void SerializeSwitchStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SwitchStmt &);
void SerializeValueStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ValueStmt &);
void SerializeWhileStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::WhileStmt &);
void SerializeAsmStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::AsmStmt &);
void SerializeAttributedStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::AttributedStmt &);
void SerializeBreakStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::BreakStmt &);
void SerializeCXXCatchStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXCatchStmt &);
void SerializeCXXForRangeStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXForRangeStmt &);
void SerializeCXXTryStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXTryStmt &);
void SerializeCapturedStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CapturedStmt &);
void SerializeCaseStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CaseStmt &);
void SerializeCompoundStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CompoundStmt &);
void SerializeContinueStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ContinueStmt &);
void SerializeCoreturnStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CoreturnStmt &);
void SerializeCoroutineBodyStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CoroutineBodyStmt &);
void SerializeDeclStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DeclStmt &);
void SerializeDefaultStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DefaultStmt &);
void SerializeDoStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DoStmt &);
void SerializeExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::Expr &);
void SerializeExpressionTraitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ExpressionTraitExpr &);
void SerializeExtVectorElementExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ExtVectorElementExpr &);
void SerializeFixedPointLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::FixedPointLiteral &);
void SerializeFloatingLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::FloatingLiteral &);
void SerializeForStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ForStmt &);
void SerializeFullExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::FullExpr &);
void SerializeFunctionParmPackExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::FunctionParmPackExpr &);
void SerializeGCCAsmStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::GCCAsmStmt &);
void SerializeGNUNullExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::GNUNullExpr &);
void SerializeGenericSelectionExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::GenericSelectionExpr &);
void SerializeGotoStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::GotoStmt &);
void SerializeIfStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::IfStmt &);
void SerializeImaginaryLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ImaginaryLiteral &);
void SerializeImplicitValueInitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ImplicitValueInitExpr &);
void SerializeIndirectGotoStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::IndirectGotoStmt &);
void SerializeInitListExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::InitListExpr &);
void SerializeIntegerLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::IntegerLiteral &);
void SerializeLabelStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::LabelStmt &);
void SerializeLambdaExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::LambdaExpr &);
void SerializeMSAsmStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::MSAsmStmt &);
void SerializeMSDependentExistsStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::MSDependentExistsStmt &);
void SerializeMSPropertyRefExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::MSPropertyRefExpr &);
void SerializeMSPropertySubscriptExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::MSPropertySubscriptExpr &);
void SerializeMaterializeTemporaryExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::MaterializeTemporaryExpr &);
void SerializeMatrixSubscriptExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::MatrixSubscriptExpr &);
void SerializeMemberExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::MemberExpr &);
void SerializeNoInitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::NoInitExpr &);
void SerializeNullStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::NullStmt &);
void SerializeOMPArraySectionExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPArraySectionExpr &);
void SerializeOMPArrayShapingExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPArrayShapingExpr &);
void SerializeOMPCanonicalLoop(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPCanonicalLoop &);
void SerializeOMPExecutableDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPExecutableDirective &);
void SerializeOMPFlushDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPFlushDirective &);
void SerializeOMPInteropDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPInteropDirective &);
void SerializeOMPIteratorExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPIteratorExpr &);
void SerializeOMPLoopBasedDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPLoopBasedDirective &);
void SerializeOMPLoopDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPLoopDirective &);
void SerializeOMPMaskedDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPMaskedDirective &);
void SerializeOMPMasterDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPMasterDirective &);
void SerializeOMPMasterTaskLoopDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPMasterTaskLoopDirective &);
void SerializeOMPMasterTaskLoopSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPMasterTaskLoopSimdDirective &);
void SerializeOMPOrderedDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPOrderedDirective &);
void SerializeOMPParallelDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPParallelDirective &);
void SerializeOMPParallelForDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPParallelForDirective &);
void SerializeOMPParallelForSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPParallelForSimdDirective &);
void SerializeOMPParallelMasterDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPParallelMasterDirective &);
void SerializeOMPParallelMasterTaskLoopDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPParallelMasterTaskLoopDirective &);
void SerializeOMPParallelMasterTaskLoopSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPParallelMasterTaskLoopSimdDirective &);
void SerializeOMPParallelSectionsDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPParallelSectionsDirective &);
void SerializeOMPScanDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPScanDirective &);
void SerializeOMPSectionDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPSectionDirective &);
void SerializeOMPSectionsDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPSectionsDirective &);
void SerializeOMPSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPSimdDirective &);
void SerializeOMPSingleDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPSingleDirective &);
void SerializeOMPTargetDataDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetDataDirective &);
void SerializeOMPTargetDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetDirective &);
void SerializeOMPTargetEnterDataDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetEnterDataDirective &);
void SerializeOMPTargetExitDataDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetExitDataDirective &);
void SerializeOMPTargetParallelDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetParallelDirective &);
void SerializeOMPTargetParallelForDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetParallelForDirective &);
void SerializeOMPTargetParallelForSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetParallelForSimdDirective &);
void SerializeOMPTargetSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetSimdDirective &);
void SerializeOMPTargetTeamsDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDirective &);
void SerializeOMPTargetTeamsDistributeDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeDirective &);
void SerializeOMPTargetTeamsDistributeParallelForDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeParallelForDirective &);
void SerializeOMPTargetTeamsDistributeParallelForSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeParallelForSimdDirective &);
void SerializeOMPTargetTeamsDistributeSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeSimdDirective &);
void SerializeOMPTargetUpdateDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTargetUpdateDirective &);
void SerializeOMPTaskDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTaskDirective &);
void SerializeOMPTaskLoopDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTaskLoopDirective &);
void SerializeOMPTaskLoopSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTaskLoopSimdDirective &);
void SerializeOMPTaskgroupDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTaskgroupDirective &);
void SerializeOMPTaskwaitDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTaskwaitDirective &);
void SerializeOMPTaskyieldDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTaskyieldDirective &);
void SerializeOMPTeamsDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDirective &);
void SerializeOMPTeamsDistributeDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeDirective &);
void SerializeOMPTeamsDistributeParallelForDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeParallelForDirective &);
void SerializeOMPTeamsDistributeParallelForSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeParallelForSimdDirective &);
void SerializeOMPTeamsDistributeSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeSimdDirective &);
void SerializeOMPTileDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPTileDirective &);
void SerializeOMPUnrollDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPUnrollDirective &);
void SerializeObjCArrayLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCArrayLiteral &);
void SerializeObjCAtCatchStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCAtCatchStmt &);
void SerializeObjCAtFinallyStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCAtFinallyStmt &);
void SerializeObjCAtSynchronizedStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCAtSynchronizedStmt &);
void SerializeObjCAtThrowStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCAtThrowStmt &);
void SerializeObjCAtTryStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCAtTryStmt &);
void SerializeObjCAutoreleasePoolStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCAutoreleasePoolStmt &);
void SerializeObjCAvailabilityCheckExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCAvailabilityCheckExpr &);
void SerializeObjCBoolLiteralExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCBoolLiteralExpr &);
void SerializeObjCBoxedExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCBoxedExpr &);
void SerializeObjCDictionaryLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCDictionaryLiteral &);
void SerializeObjCEncodeExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCEncodeExpr &);
void SerializeObjCForCollectionStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCForCollectionStmt &);
void SerializeObjCIndirectCopyRestoreExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCIndirectCopyRestoreExpr &);
void SerializeObjCIsaExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCIsaExpr &);
void SerializeObjCIvarRefExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCIvarRefExpr &);
void SerializeObjCMessageExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCMessageExpr &);
void SerializeObjCPropertyRefExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCPropertyRefExpr &);
void SerializeObjCProtocolExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCProtocolExpr &);
void SerializeObjCSelectorExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCSelectorExpr &);
void SerializeObjCStringLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCStringLiteral &);
void SerializeObjCSubscriptRefExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCSubscriptRefExpr &);
void SerializeOffsetOfExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OffsetOfExpr &);
void SerializeOpaqueValueExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OpaqueValueExpr &);
void SerializeOverloadExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OverloadExpr &);
void SerializePackExpansionExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::PackExpansionExpr &);
void SerializeParenExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ParenExpr &);
void SerializeParenListExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ParenListExpr &);
void SerializePredefinedExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::PredefinedExpr &);
void SerializePseudoObjectExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::PseudoObjectExpr &);
void SerializeRecoveryExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::RecoveryExpr &);
void SerializeRequiresExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::RequiresExpr &);
void SerializeReturnStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ReturnStmt &);
void SerializeSEHExceptStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SEHExceptStmt &);
void SerializeSEHFinallyStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SEHFinallyStmt &);
void SerializeSEHLeaveStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SEHLeaveStmt &);
void SerializeSEHTryStmt(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SEHTryStmt &);
void SerializeSYCLUniqueStableNameExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SYCLUniqueStableNameExpr &);
void SerializeShuffleVectorExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ShuffleVectorExpr &);
void SerializeSizeOfPackExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SizeOfPackExpr &);
void SerializeSourceLocExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SourceLocExpr &);
void SerializeStmtExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::StmtExpr &);
void SerializeStringLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::StringLiteral &);
void SerializeSubstNonTypeTemplateParmExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SubstNonTypeTemplateParmExpr &);
void SerializeSubstNonTypeTemplateParmPackExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::SubstNonTypeTemplateParmPackExpr &);
void SerializeTypeTraitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::TypeTraitExpr &);
void SerializeTypoExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::TypoExpr &);
void SerializeUnaryExprOrTypeTraitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::UnaryExprOrTypeTraitExpr &);
void SerializeUnaryOperator(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::UnaryOperator &);
void SerializeUnresolvedLookupExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::UnresolvedLookupExpr &);
void SerializeUnresolvedMemberExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::UnresolvedMemberExpr &);
void SerializeVAArgExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::VAArgExpr &);
void SerializeAbstractConditionalOperator(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::AbstractConditionalOperator &);
void SerializeAddrLabelExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::AddrLabelExpr &);
void SerializeArrayInitIndexExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ArrayInitIndexExpr &);
void SerializeArrayInitLoopExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ArrayInitLoopExpr &);
void SerializeArraySubscriptExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ArraySubscriptExpr &);
void SerializeArrayTypeTraitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ArrayTypeTraitExpr &);
void SerializeAsTypeExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::AsTypeExpr &);
void SerializeAtomicExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::AtomicExpr &);
void SerializeBinaryConditionalOperator(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::BinaryConditionalOperator &);
void SerializeBinaryOperator(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::BinaryOperator &);
void SerializeBlockExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::BlockExpr &);
void SerializeCXXBindTemporaryExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXBindTemporaryExpr &);
void SerializeCXXBoolLiteralExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXBoolLiteralExpr &);
void SerializeCXXConstructExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXConstructExpr &);
void SerializeCXXDefaultArgExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXDefaultArgExpr &);
void SerializeCXXDefaultInitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXDefaultInitExpr &);
void SerializeCXXDeleteExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXDeleteExpr &);
void SerializeCXXDependentScopeMemberExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXDependentScopeMemberExpr &);
void SerializeCXXFoldExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXFoldExpr &);
void SerializeCXXInheritedCtorInitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXInheritedCtorInitExpr &);
void SerializeCXXNewExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXNewExpr &);
void SerializeCXXNoexceptExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXNoexceptExpr &);
void SerializeCXXNullPtrLiteralExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXNullPtrLiteralExpr &);
void SerializeCXXPseudoDestructorExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXPseudoDestructorExpr &);
void SerializeCXXRewrittenBinaryOperator(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXRewrittenBinaryOperator &);
void SerializeCXXScalarValueInitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXScalarValueInitExpr &);
void SerializeCXXStdInitializerListExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXStdInitializerListExpr &);
void SerializeCXXTemporaryObjectExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXTemporaryObjectExpr &);
void SerializeCXXThisExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXThisExpr &);
void SerializeCXXThrowExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXThrowExpr &);
void SerializeCXXTypeidExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXTypeidExpr &);
void SerializeCXXUnresolvedConstructExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXUnresolvedConstructExpr &);
void SerializeCXXUuidofExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXUuidofExpr &);
void SerializeCallExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CallExpr &);
void SerializeCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CastExpr &);
void SerializeCharacterLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CharacterLiteral &);
void SerializeChooseExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ChooseExpr &);
void SerializeCompoundAssignOperator(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CompoundAssignOperator &);
void SerializeCompoundLiteralExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CompoundLiteralExpr &);
void SerializeConceptSpecializationExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ConceptSpecializationExpr &);
void SerializeConditionalOperator(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ConditionalOperator &);
void SerializeConstantExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ConstantExpr &);
void SerializeConvertVectorExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ConvertVectorExpr &);
void SerializeCoroutineSuspendExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CoroutineSuspendExpr &);
void SerializeCoyieldExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CoyieldExpr &);
void SerializeDeclRefExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DeclRefExpr &);
void SerializeDependentCoawaitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DependentCoawaitExpr &);
void SerializeDependentScopeDeclRefExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DependentScopeDeclRefExpr &);
void SerializeDesignatedInitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DesignatedInitExpr &);
void SerializeDesignatedInitUpdateExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::DesignatedInitUpdateExpr &);
void SerializeExplicitCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ExplicitCastExpr &);
void SerializeExprWithCleanups(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ExprWithCleanups &);
void SerializeImplicitCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ImplicitCastExpr &);
void SerializeOMPAtomicDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPAtomicDirective &);
void SerializeOMPBarrierDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPBarrierDirective &);
void SerializeOMPCancelDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPCancelDirective &);
void SerializeOMPCancellationPointDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPCancellationPointDirective &);
void SerializeOMPCriticalDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPCriticalDirective &);
void SerializeOMPDepobjDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPDepobjDirective &);
void SerializeOMPDispatchDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPDispatchDirective &);
void SerializeOMPDistributeDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPDistributeDirective &);
void SerializeOMPDistributeParallelForDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPDistributeParallelForDirective &);
void SerializeOMPDistributeParallelForSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPDistributeParallelForSimdDirective &);
void SerializeOMPDistributeSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPDistributeSimdDirective &);
void SerializeOMPForDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPForDirective &);
void SerializeOMPForSimdDirective(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::OMPForSimdDirective &);
void SerializeObjCBridgedCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::ObjCBridgedCastExpr &);
void SerializeUserDefinedLiteral(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::UserDefinedLiteral &);
void SerializeBuiltinBitCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::BuiltinBitCastExpr &);
void SerializeCStyleCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CStyleCastExpr &);
void SerializeCUDAKernelCallExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CUDAKernelCallExpr &);
void SerializeCXXFunctionalCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXFunctionalCastExpr &);
void SerializeCXXMemberCallExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXMemberCallExpr &);
void SerializeCXXNamedCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXNamedCastExpr &);
void SerializeCXXOperatorCallExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXOperatorCallExpr &);
void SerializeCXXReinterpretCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXReinterpretCastExpr &);
void SerializeCXXStaticCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXStaticCastExpr &);
void SerializeCoawaitExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CoawaitExpr &);
void SerializeCXXAddrspaceCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXAddrspaceCastExpr &);
void SerializeCXXConstCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXConstCastExpr &);
void SerializeCXXDynamicCastExpr(EntitySerializer &, mx::ast::Stmt::Builder, const pasta::CXXDynamicCastExpr &);
void SerializeCXXBaseSpecifier(EntitySerializer &, mx::ast::Pseudo::Builder, const pasta::CXXBaseSpecifier &);
void SerializeTemplateArgument(EntitySerializer &, mx::ast::Pseudo::Builder, const pasta::TemplateArgument &);
void SerializeTemplateParameterList(EntitySerializer &, mx::ast::Pseudo::Builder, const pasta::TemplateParameterList &);
}  // namespace indexer
