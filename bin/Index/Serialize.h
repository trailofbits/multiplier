// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#pragma once

#include <multiplier/AST.h>
#include <multiplier/AST.capnp.h>

namespace pasta {
class Decl;
class EmptyDecl;
class ExportDecl;
class ExternCContextDecl;
class FileScopeAsmDecl;
class FriendDecl;
class FriendTemplateDecl;
class ImportDecl;
class LifetimeExtendedTemporaryDecl;
class LinkageSpecDecl;
class NamedDecl;
class NamespaceAliasDecl;
class NamespaceDecl;
class ObjCCompatibleAliasDecl;
class ObjCContainerDecl;
class ObjCImplDecl;
class ObjCImplementationDecl;
class ObjCInterfaceDecl;
class ObjCMethodDecl;
class ObjCPropertyDecl;
class ObjCPropertyImplDecl;
class ObjCProtocolDecl;
class PragmaCommentDecl;
class PragmaDetectMismatchDecl;
class RequiresExprBodyDecl;
class StaticAssertDecl;
class TemplateDecl;
class TemplateTemplateParmDecl;
class TranslationUnitDecl;
class TypeDecl;
class TypedefNameDecl;
class UnresolvedUsingIfExistsDecl;
class UnresolvedUsingTypenameDecl;
class UsingDirectiveDecl;
class UsingPackDecl;
class UsingShadowDecl;
class ValueDecl;
class OMPDeclarativeDirectiveDecl;
class OMPDeclarativeDirectiveValueDecl;
class AccessSpecDecl;
class BaseUsingDecl;
class BindingDecl;
class BlockDecl;
class BuiltinTemplateDecl;
class CapturedDecl;
class ClassScopeFunctionSpecializationDecl;
class ConceptDecl;
class ConstructorUsingShadowDecl;
class DeclaratorDecl;
class EnumConstantDecl;
class FieldDecl;
class FunctionDecl;
class IndirectFieldDecl;
class LabelDecl;
class MSGuidDecl;
class MSPropertyDecl;
class NonTypeTemplateParmDecl;
class OMPAllocateDecl;
class OMPDeclareMapperDecl;
class OMPDeclareReductionDecl;
class OMPRequiresDecl;
class OMPThreadPrivateDecl;
class ObjCAtDefsFieldDecl;
class ObjCCategoryDecl;
class ObjCCategoryImplDecl;
class ObjCIvarDecl;
class ObjCTypeParamDecl;
class RedeclarableTemplateDecl;
class TagDecl;
class TemplateParamObjectDecl;
class TemplateTypeParmDecl;
class TypeAliasDecl;
class TypeAliasTemplateDecl;
class TypedefDecl;
class UnnamedGlobalConstantDecl;
class UnresolvedUsingValueDecl;
class UsingDecl;
class UsingEnumDecl;
class VarDecl;
class VarTemplateDecl;
class VarTemplateSpecializationDecl;
class CXXDeductionGuideDecl;
class CXXMethodDecl;
class ClassTemplateDecl;
class DecompositionDecl;
class EnumDecl;
class FunctionTemplateDecl;
class ImplicitParamDecl;
class OMPCapturedExprDecl;
class ParmVarDecl;
class RecordDecl;
class VarTemplatePartialSpecializationDecl;
class CXXConstructorDecl;
class CXXConversionDecl;
class CXXDestructorDecl;
class CXXRecordDecl;
class ClassTemplateSpecializationDecl;
class ClassTemplatePartialSpecializationDecl;
class Stmt;
class SwitchCase;
class SwitchStmt;
class ValueStmt;
class WhileStmt;
class AsmStmt;
class AttributedStmt;
class BreakStmt;
class CXXCatchStmt;
class CXXForRangeStmt;
class CXXTryStmt;
class CapturedStmt;
class CaseStmt;
class CompoundStmt;
class ContinueStmt;
class CoreturnStmt;
class CoroutineBodyStmt;
class DeclStmt;
class DefaultStmt;
class DoStmt;
class Expr;
class ExpressionTraitExpr;
class ExtVectorElementExpr;
class FixedPointLiteral;
class FloatingLiteral;
class ForStmt;
class FullExpr;
class FunctionParmPackExpr;
class GCCAsmStmt;
class GNUNullExpr;
class GenericSelectionExpr;
class GotoStmt;
class IfStmt;
class ImaginaryLiteral;
class ImplicitValueInitExpr;
class IndirectGotoStmt;
class InitListExpr;
class IntegerLiteral;
class LabelStmt;
class LambdaExpr;
class MSAsmStmt;
class MSDependentExistsStmt;
class MSPropertyRefExpr;
class MSPropertySubscriptExpr;
class MaterializeTemporaryExpr;
class MatrixSubscriptExpr;
class MemberExpr;
class NoInitExpr;
class NullStmt;
class OMPArraySectionExpr;
class OMPArrayShapingExpr;
class OMPCanonicalLoop;
class OMPExecutableDirective;
class OMPFlushDirective;
class OMPInteropDirective;
class OMPIteratorExpr;
class OMPLoopBasedDirective;
class OMPLoopDirective;
class OMPLoopTransformationDirective;
class OMPMaskedDirective;
class OMPMaskedTaskLoopDirective;
class OMPMaskedTaskLoopSimdDirective;
class OMPMasterDirective;
class OMPMasterTaskLoopDirective;
class OMPMasterTaskLoopSimdDirective;
class OMPMetaDirective;
class OMPOrderedDirective;
class OMPParallelDirective;
class OMPParallelForDirective;
class OMPParallelForSimdDirective;
class OMPParallelGenericLoopDirective;
class OMPParallelMaskedDirective;
class OMPParallelMaskedTaskLoopDirective;
class OMPParallelMaskedTaskLoopSimdDirective;
class OMPParallelMasterDirective;
class OMPParallelMasterTaskLoopDirective;
class OMPParallelMasterTaskLoopSimdDirective;
class OMPParallelSectionsDirective;
class OMPScanDirective;
class OMPSectionDirective;
class OMPSectionsDirective;
class OMPSimdDirective;
class OMPSingleDirective;
class OMPTargetDataDirective;
class OMPTargetDirective;
class OMPTargetEnterDataDirective;
class OMPTargetExitDataDirective;
class OMPTargetParallelDirective;
class OMPTargetParallelForDirective;
class OMPTargetParallelForSimdDirective;
class OMPTargetParallelGenericLoopDirective;
class OMPTargetSimdDirective;
class OMPTargetTeamsDirective;
class OMPTargetTeamsDistributeDirective;
class OMPTargetTeamsDistributeParallelForDirective;
class OMPTargetTeamsDistributeParallelForSimdDirective;
class OMPTargetTeamsDistributeSimdDirective;
class OMPTargetTeamsGenericLoopDirective;
class OMPTargetUpdateDirective;
class OMPTaskDirective;
class OMPTaskLoopDirective;
class OMPTaskLoopSimdDirective;
class OMPTaskgroupDirective;
class OMPTaskwaitDirective;
class OMPTaskyieldDirective;
class OMPTeamsDirective;
class OMPTeamsDistributeDirective;
class OMPTeamsDistributeParallelForDirective;
class OMPTeamsDistributeParallelForSimdDirective;
class OMPTeamsDistributeSimdDirective;
class OMPTeamsGenericLoopDirective;
class OMPTileDirective;
class OMPUnrollDirective;
class ObjCArrayLiteral;
class ObjCAtCatchStmt;
class ObjCAtFinallyStmt;
class ObjCAtSynchronizedStmt;
class ObjCAtThrowStmt;
class ObjCAtTryStmt;
class ObjCAutoreleasePoolStmt;
class ObjCAvailabilityCheckExpr;
class ObjCBoolLiteralExpr;
class ObjCBoxedExpr;
class ObjCDictionaryLiteral;
class ObjCEncodeExpr;
class ObjCForCollectionStmt;
class ObjCIndirectCopyRestoreExpr;
class ObjCIsaExpr;
class ObjCIvarRefExpr;
class ObjCMessageExpr;
class ObjCPropertyRefExpr;
class ObjCProtocolExpr;
class ObjCSelectorExpr;
class ObjCStringLiteral;
class ObjCSubscriptRefExpr;
class OffsetOfExpr;
class OpaqueValueExpr;
class OverloadExpr;
class PackExpansionExpr;
class ParenExpr;
class ParenListExpr;
class PredefinedExpr;
class PseudoObjectExpr;
class RecoveryExpr;
class RequiresExpr;
class ReturnStmt;
class SEHExceptStmt;
class SEHFinallyStmt;
class SEHLeaveStmt;
class SEHTryStmt;
class SYCLUniqueStableNameExpr;
class ShuffleVectorExpr;
class SizeOfPackExpr;
class SourceLocExpr;
class StmtExpr;
class StringLiteral;
class SubstNonTypeTemplateParmExpr;
class SubstNonTypeTemplateParmPackExpr;
class TypeTraitExpr;
class TypoExpr;
class UnaryExprOrTypeTraitExpr;
class UnaryOperator;
class UnresolvedLookupExpr;
class UnresolvedMemberExpr;
class VAArgExpr;
class AbstractConditionalOperator;
class AddrLabelExpr;
class ArrayInitIndexExpr;
class ArrayInitLoopExpr;
class ArraySubscriptExpr;
class ArrayTypeTraitExpr;
class AsTypeExpr;
class AtomicExpr;
class BinaryConditionalOperator;
class BinaryOperator;
class BlockExpr;
class CXXBindTemporaryExpr;
class CXXBoolLiteralExpr;
class CXXConstructExpr;
class CXXDefaultArgExpr;
class CXXDefaultInitExpr;
class CXXDeleteExpr;
class CXXDependentScopeMemberExpr;
class CXXFoldExpr;
class CXXInheritedCtorInitExpr;
class CXXNewExpr;
class CXXNoexceptExpr;
class CXXNullPtrLiteralExpr;
class CXXPseudoDestructorExpr;
class CXXRewrittenBinaryOperator;
class CXXScalarValueInitExpr;
class CXXStdInitializerListExpr;
class CXXTemporaryObjectExpr;
class CXXThisExpr;
class CXXThrowExpr;
class CXXTypeidExpr;
class CXXUnresolvedConstructExpr;
class CXXUuidofExpr;
class CallExpr;
class CastExpr;
class CharacterLiteral;
class ChooseExpr;
class CompoundAssignOperator;
class CompoundLiteralExpr;
class ConceptSpecializationExpr;
class ConditionalOperator;
class ConstantExpr;
class ConvertVectorExpr;
class CoroutineSuspendExpr;
class CoyieldExpr;
class DeclRefExpr;
class DependentCoawaitExpr;
class DependentScopeDeclRefExpr;
class DesignatedInitExpr;
class DesignatedInitUpdateExpr;
class ExplicitCastExpr;
class ExprWithCleanups;
class ImplicitCastExpr;
class OMPAtomicDirective;
class OMPBarrierDirective;
class OMPCancelDirective;
class OMPCancellationPointDirective;
class OMPCriticalDirective;
class OMPDepobjDirective;
class OMPDispatchDirective;
class OMPDistributeDirective;
class OMPDistributeParallelForDirective;
class OMPDistributeParallelForSimdDirective;
class OMPDistributeSimdDirective;
class OMPForDirective;
class OMPForSimdDirective;
class OMPGenericLoopDirective;
class ObjCBridgedCastExpr;
class UserDefinedLiteral;
class BuiltinBitCastExpr;
class CStyleCastExpr;
class CUDAKernelCallExpr;
class CXXFunctionalCastExpr;
class CXXMemberCallExpr;
class CXXNamedCastExpr;
class CXXOperatorCallExpr;
class CXXReinterpretCastExpr;
class CXXStaticCastExpr;
class CoawaitExpr;
class CXXAddrspaceCastExpr;
class CXXConstCastExpr;
class CXXDynamicCastExpr;
class Type;
class TypeOfExprType;
class TypeOfType;
class TypedefType;
class UnaryTransformType;
class UnresolvedUsingType;
class UsingType;
class VectorType;
class TypeWithKeyword;
class AdjustedType;
class ArrayType;
class AtomicType;
class AttributedType;
class BTFTagAttributedType;
class BitIntType;
class BlockPointerType;
class BuiltinType;
class ComplexType;
class ConstantArrayType;
class DecayedType;
class DecltypeType;
class DeducedType;
class DependentAddressSpaceType;
class DependentBitIntType;
class DependentNameType;
class DependentSizedArrayType;
class DependentSizedExtVectorType;
class DependentTemplateSpecializationType;
class DependentVectorType;
class ElaboratedType;
class ExtVectorType;
class FunctionType;
class IncompleteArrayType;
class InjectedClassNameType;
class MacroQualifiedType;
class MatrixType;
class MemberPointerType;
class ObjCObjectPointerType;
class ObjCObjectType;
class ObjCTypeParamType;
class PackExpansionType;
class ParenType;
class PipeType;
class PointerType;
class ReferenceType;
class SubstTemplateTypeParmPackType;
class SubstTemplateTypeParmType;
class TagType;
class TemplateSpecializationType;
class TemplateTypeParmType;
class VariableArrayType;
class AutoType;
class ConstantMatrixType;
class DeducedTemplateSpecializationType;
class DependentSizedMatrixType;
class EnumType;
class FunctionNoProtoType;
class FunctionProtoType;
class LValueReferenceType;
class ObjCInterfaceType;
class RValueReferenceType;
class RecordType;
class Attr;
class BuiltinAliasAttr;
class CalledOnceAttr;
class IFuncAttr;
class InheritableAttr;
class InheritableParamAttr;
class InitPriorityAttr;
class InitSegAttr;
class IntelOclBiccAttr;
class InternalLinkageAttr;
class LTOVisibilityPublicAttr;
class LayoutVersionAttr;
class LeafAttr;
class LifetimeBoundAttr;
class LoaderUninitializedAttr;
class LockReturnedAttr;
class LocksExcludedAttr;
class LoopHintAttr;
class M68kInterruptAttr;
class MIGServerRoutineAttr;
class MSABIAttr;
class MSAllocatorAttr;
class MSInheritanceAttr;
class MSNoVTableAttr;
class MSP430InterruptAttr;
class MSStructAttr;
class MSVtorDispAttr;
class MaxFieldAlignmentAttr;
class MayAliasAttr;
class MicroMipsAttr;
class MinSizeAttr;
class MinVectorWidthAttr;
class Mips16Attr;
class MipsInterruptAttr;
class MipsLongCallAttr;
class MipsShortCallAttr;
class ModeAttr;
class NSConsumedAttr;
class NSConsumesSelfAttr;
class NSErrorDomainAttr;
class NSReturnsAutoreleasedAttr;
class NSReturnsNotRetainedAttr;
class NSReturnsRetainedAttr;
class NakedAttr;
class NoAliasAttr;
class NoBuiltinAttr;
class NoCommonAttr;
class NoDebugAttr;
class NoDestroyAttr;
class NoDuplicateAttr;
class NoEscapeAttr;
class NoInstrumentFunctionAttr;
class NoMicroMipsAttr;
class NoMips16Attr;
class NoProfileFunctionAttr;
class NoRandomizeLayoutAttr;
class NoReturnAttr;
class NoSanitizeAttr;
class NoSpeculativeLoadHardeningAttr;
class NoSplitStackAttr;
class NoStackProtectorAttr;
class NoThreadSafetyAnalysisAttr;
class NoThrowAttr;
class NoUniqueAddressAttr;
class NonNullAttr;
class NotTailCalledAttr;
class OMPAllocateDeclAttr;
class OMPCaptureKindAttr;
class OMPCaptureNoInitAttr;
class OMPDeclareSimdDeclAttr;
class OMPDeclareTargetDeclAttr;
class OMPDeclareVariantAttr;
class OMPReferencedVarAttr;
class OMPThreadPrivateDeclAttr;
class OSConsumedAttr;
class OSConsumesThisAttr;
class OSReturnsNotRetainedAttr;
class OSReturnsRetainedAttr;
class OSReturnsRetainedOnNonZeroAttr;
class OSReturnsRetainedOnZeroAttr;
class ObjCBoxableAttr;
class ObjCBridgeAttr;
class ObjCBridgeMutableAttr;
class ObjCBridgeRelatedAttr;
class ObjCClassStubAttr;
class ObjCDesignatedInitializerAttr;
class ObjCDirectAttr;
class ObjCDirectMembersAttr;
class ObjCExceptionAttr;
class ObjCExplicitProtocolImplAttr;
class ObjCExternallyRetainedAttr;
class ObjCIndependentClassAttr;
class ObjCMethodFamilyAttr;
class ObjCNSObjectAttr;
class ObjCNonLazyClassAttr;
class ObjCNonRuntimeProtocolAttr;
class ObjCOwnershipAttr;
class ObjCPreciseLifetimeAttr;
class ObjCRequiresPropertyDefsAttr;
class ObjCRequiresSuperAttr;
class ObjCReturnsInnerPointerAttr;
class ObjCRootClassAttr;
class ObjCRuntimeNameAttr;
class ObjCRuntimeVisibleAttr;
class ObjCSubclassingRestrictedAttr;
class OpenCLAccessAttr;
class OpenCLIntelReqdSubGroupSizeAttr;
class OpenCLKernelAttr;
class OptimizeNoneAttr;
class OverloadableAttr;
class OverrideAttr;
class OwnerAttr;
class OwnershipAttr;
class PackedAttr;
class ParamTypestateAttr;
class ParameterABIAttr;
class PascalAttr;
class PassObjectSizeAttr;
class PatchableFunctionEntryAttr;
class PcsAttr;
class PointerAttr;
class PragmaClangBSSSectionAttr;
class PragmaClangDataSectionAttr;
class PragmaClangRelroSectionAttr;
class PragmaClangRodataSectionAttr;
class PragmaClangTextSectionAttr;
class PreferredNameAttr;
class PreserveAllAttr;
class PreserveMostAttr;
class PtGuardedByAttr;
class PtGuardedVarAttr;
class PureAttr;
class RISCVInterruptAttr;
class RandomizeLayoutAttr;
class RegCallAttr;
class ReinitializesAttr;
class ReleaseCapabilityAttr;
class ReleaseHandleAttr;
class RenderScriptKernelAttr;
class ReqdWorkGroupSizeAttr;
class RequiresCapabilityAttr;
class RestrictAttr;
class RetainAttr;
class ReturnTypestateAttr;
class ReturnsNonNullAttr;
class ReturnsTwiceAttr;
class SYCLKernelAttr;
class SYCLSpecialClassAttr;
class ScopedLockableAttr;
class SectionAttr;
class SelectAnyAttr;
class SentinelAttr;
class SetTypestateAttr;
class SharedTrylockFunctionAttr;
class SpeculativeLoadHardeningAttr;
class StandaloneDebugAttr;
class StdCallAttr;
class StmtAttr;
class StrictFPAttr;
class SuppressAttr;
class SwiftAsyncAttr;
class SwiftAsyncCallAttr;
class SwiftAsyncContextAttr;
class SwiftAsyncErrorAttr;
class SwiftAsyncNameAttr;
class SwiftAttrAttr;
class SwiftBridgeAttr;
class SwiftBridgedTypedefAttr;
class SwiftCallAttr;
class SwiftContextAttr;
class SwiftErrorAttr;
class SwiftErrorResultAttr;
class SwiftIndirectResultAttr;
class SwiftNameAttr;
class SwiftNewTypeAttr;
class SwiftObjCMembersAttr;
class SwiftPrivateAttr;
class SysVABIAttr;
class TLSModelAttr;
class TargetAttr;
class TargetClonesAttr;
class TestTypestateAttr;
class ThisCallAttr;
class ThreadAttr;
class TransparentUnionAttr;
class TrivialABIAttr;
class TryAcquireCapabilityAttr;
class TypeAttr;
class TypeNonNullAttr;
class TypeNullUnspecifiedAttr;
class TypeNullableAttr;
class TypeNullableResultAttr;
class TypeTagForDatatypeAttr;
class TypeVisibilityAttr;
class UPtrAttr;
class UnavailableAttr;
class UninitializedAttr;
class UnlikelyAttr;
class UnusedAttr;
class UseHandleAttr;
class UsedAttr;
class UsingIfExistsAttr;
class UuidAttr;
class VecReturnAttr;
class VecTypeHintAttr;
class VectorCallAttr;
class VisibilityAttr;
class WarnUnusedAttr;
class WarnUnusedResultAttr;
class WeakAttr;
class WeakImportAttr;
class WeakRefAttr;
class WebAssemblyExportNameAttr;
class WebAssemblyImportModuleAttr;
class WebAssemblyImportNameAttr;
class WorkGroupSizeHintAttr;
class X86ForceAlignArgPointerAttr;
class XRayInstrumentAttr;
class XRayLogArgsAttr;
class ZeroCallUsedRegsAttr;
class AArch64SVEPcsAttr;
class AArch64VectorPcsAttr;
class AMDGPUFlatWorkGroupSizeAttr;
class AMDGPUKernelCallAttr;
class AMDGPUNumSGPRAttr;
class AMDGPUNumVGPRAttr;
class AMDGPUWavesPerEUAttr;
class ARMInterruptAttr;
class AVRInterruptAttr;
class AVRSignalAttr;
class AbiTagAttr;
class AcquireCapabilityAttr;
class AcquireHandleAttr;
class AcquiredAfterAttr;
class AcquiredBeforeAttr;
class AddressSpaceAttr;
class AliasAttr;
class AlignMac68kAttr;
class AlignNaturalAttr;
class AlignValueAttr;
class AlignedAttr;
class AllocAlignAttr;
class AllocSizeAttr;
class AlwaysDestroyAttr;
class AnalyzerNoReturnAttr;
class AnnotateAttr;
class AnnotateTypeAttr;
class AnyX86InterruptAttr;
class AnyX86NoCallerSavedRegistersAttr;
class AnyX86NoCfCheckAttr;
class ArcWeakrefUnavailableAttr;
class ArgumentWithTypeTagAttr;
class ArmBuiltinAliasAttr;
class ArmMveStrictPolymorphismAttr;
class ArtificialAttr;
class AsmLabelAttr;
class AssertCapabilityAttr;
class AssertExclusiveLockAttr;
class AssertSharedLockAttr;
class AssumeAlignedAttr;
class AssumptionAttr;
class AvailabilityAttr;
class BPFPreserveAccessIndexAttr;
class BTFDeclTagAttr;
class BTFTypeTagAttr;
class BlocksAttr;
class BuiltinAttr;
class C11NoReturnAttr;
class CDeclAttr;
class CFAuditedTransferAttr;
class CFConsumedAttr;
class CFGuardAttr;
class CFICanonicalJumpTableAttr;
class CFReturnsNotRetainedAttr;
class CFReturnsRetainedAttr;
class CFUnknownTransferAttr;
class CPUDispatchAttr;
class CPUSpecificAttr;
class CUDAConstantAttr;
class CUDADeviceAttr;
class CUDADeviceBuiltinSurfaceTypeAttr;
class CUDADeviceBuiltinTextureTypeAttr;
class CUDAGlobalAttr;
class CUDAHostAttr;
class CUDAInvalidTargetAttr;
class CUDALaunchBoundsAttr;
class CUDASharedAttr;
class CXX11NoReturnAttr;
class CallableWhenAttr;
class CallbackAttr;
class CapabilityAttr;
class CapturedRecordAttr;
class CarriesDependencyAttr;
class CleanupAttr;
class CmseNSCallAttr;
class CmseNSEntryAttr;
class CodeSegAttr;
class ColdAttr;
class CommonAttr;
class ConstAttr;
class ConstInitAttr;
class ConstructorAttr;
class ConsumableAttr;
class ConsumableAutoCastAttr;
class ConsumableSetOnReadAttr;
class ConvergentAttr;
class DLLExportAttr;
class DLLExportStaticLocalAttr;
class DLLImportAttr;
class DLLImportStaticLocalAttr;
class DeclOrStmtAttr;
class DeprecatedAttr;
class DestructorAttr;
class DiagnoseAsBuiltinAttr;
class DiagnoseIfAttr;
class DisableSanitizerInstrumentationAttr;
class DisableTailCallsAttr;
class EmptyBasesAttr;
class EnableIfAttr;
class EnforceTCBAttr;
class EnforceTCBLeafAttr;
class EnumExtensibilityAttr;
class ErrorAttr;
class ExcludeFromExplicitInstantiationAttr;
class ExclusiveTrylockFunctionAttr;
class ExternalSourceSymbolAttr;
class FallThroughAttr;
class FastCallAttr;
class FinalAttr;
class FlagEnumAttr;
class FlattenAttr;
class FormatArgAttr;
class FormatAttr;
class FunctionReturnThunksAttr;
class GNUInlineAttr;
class GuardedByAttr;
class GuardedVarAttr;
class HIPManagedAttr;
class HLSLNumThreadsAttr;
class HLSLSV_GroupIndexAttr;
class HLSLShaderAttr;
class HotAttr;
class IBActionAttr;
class IBOutletAttr;
class IBOutletCollectionAttr;
class LikelyAttr;
class MustTailAttr;
class NoDerefAttr;
class NoInlineAttr;
class NoMergeAttr;
class ObjCGCAttr;
class ObjCInertUnsafeUnretainedAttr;
class ObjCKindOfAttr;
class OpenCLConstantAddressSpaceAttr;
class OpenCLGenericAddressSpaceAttr;
class OpenCLGlobalAddressSpaceAttr;
class OpenCLGlobalDeviceAddressSpaceAttr;
class OpenCLGlobalHostAddressSpaceAttr;
class OpenCLLocalAddressSpaceAttr;
class OpenCLPrivateAddressSpaceAttr;
class OpenCLUnrollHintAttr;
class Ptr32Attr;
class Ptr64Attr;
class SPtrAttr;
class AlwaysInlineAttr;
class Token;
class TokenRange;
class CXXBaseSpecifier;
class TemplateArgument;
class TemplateParameterList;
class Designator;
class FileToken;
enum class TokenRole : unsigned short;
enum class DeclKind : unsigned;
enum class AttrKind : unsigned;
enum class AArch64SVEPcsAttrSpelling : unsigned;
enum class AArch64VectorPcsAttrSpelling : unsigned;
enum class AMDGPUFlatWorkGroupSizeAttrSpelling : unsigned;
enum class AMDGPUKernelCallAttrSpelling : unsigned;
enum class AMDGPUNumSGPRAttrSpelling : unsigned;
enum class AMDGPUNumVGPRAttrSpelling : unsigned;
enum class AMDGPUWavesPerEUAttrSpelling : unsigned;
enum class ARMInterruptAttrInterruptType : unsigned;
enum class ARMInterruptAttrSpelling : unsigned;
enum class AVRInterruptAttrSpelling : unsigned;
enum class AVRSignalAttrSpelling : unsigned;
enum class AbiTagAttrSpelling : unsigned;
enum class AcquireCapabilityAttrSpelling : unsigned;
enum class AcquireHandleAttrSpelling : unsigned;
enum class AddressSpaceAttrSpelling : unsigned;
enum class AliasAttrSpelling : unsigned;
enum class AlignedAttrSpelling : unsigned;
enum class AllocAlignAttrSpelling : unsigned;
enum class AllocSizeAttrSpelling : unsigned;
enum class AlwaysDestroyAttrSpelling : unsigned;
enum class AlwaysInlineAttrSpelling : unsigned;
enum class AnnotateAttrSpelling : unsigned;
enum class AnnotateTypeAttrSpelling : unsigned;
enum class AnyX86InterruptAttrSpelling : unsigned;
enum class AnyX86NoCallerSavedRegistersAttrSpelling : unsigned;
enum class AnyX86NoCfCheckAttrSpelling : unsigned;
enum class ArcWeakrefUnavailableAttrSpelling : unsigned;
enum class ArgumentWithTypeTagAttrSpelling : unsigned;
enum class ArmBuiltinAliasAttrSpelling : unsigned;
enum class ArmMveStrictPolymorphismAttrSpelling : unsigned;
enum class ArrayTypeArraySizeModifier : unsigned;
enum class ArtificialAttrSpelling : unsigned;
enum class AsmLabelAttrSpelling : unsigned;
enum class AssertCapabilityAttrSpelling : unsigned;
enum class AssumeAlignedAttrSpelling : unsigned;
enum class AssumptionAttrSpelling : unsigned;
enum class AtomicExprAtomicOp : unsigned;
enum class AvailabilityAttrSpelling : unsigned;
enum class BPFPreserveAccessIndexAttrSpelling : unsigned;
enum class BTFDeclTagAttrSpelling : unsigned;
enum class BTFTypeTagAttrSpelling : unsigned;
enum class BlocksAttrBlockType : unsigned;
enum class BlocksAttrSpelling : unsigned;
enum class BuiltinAliasAttrSpelling : unsigned;
enum class BuiltinTypeKind : unsigned;
enum class CDeclAttrSpelling : unsigned;
enum class CFAuditedTransferAttrSpelling : unsigned;
enum class CFConsumedAttrSpelling : unsigned;
enum class CFGuardAttrGuardArg : unsigned;
enum class CFICanonicalJumpTableAttrSpelling : unsigned;
enum class CFReturnsNotRetainedAttrSpelling : unsigned;
enum class CFReturnsRetainedAttrSpelling : unsigned;
enum class CFUnknownTransferAttrSpelling : unsigned;
enum class CPUDispatchAttrSpelling : unsigned;
enum class CPUSpecificAttrSpelling : unsigned;
enum class CUDAConstantAttrSpelling : unsigned;
enum class CUDADeviceAttrSpelling : unsigned;
enum class CUDADeviceBuiltinSurfaceTypeAttrSpelling : unsigned;
enum class CUDADeviceBuiltinTextureTypeAttrSpelling : unsigned;
enum class CUDAGlobalAttrSpelling : unsigned;
enum class CUDAHostAttrSpelling : unsigned;
enum class CUDALaunchBoundsAttrSpelling : unsigned;
enum class CUDASharedAttrSpelling : unsigned;
enum class CXX11NoReturnAttrSpelling : unsigned;
enum class CXXConstructExprConstructionKind : unsigned;
enum class CXXNewExprInitializationStyle : unsigned;
enum class CXXRecordDeclLambdaDependencyKind : unsigned;
enum class CallExprADLCallKind : bool;
enum class CallableWhenAttrConsumedState : unsigned;
enum class CallableWhenAttrSpelling : unsigned;
enum class CallbackAttrSpelling : unsigned;
enum class CalledOnceAttrSpelling : unsigned;
enum class CapabilityAttrSpelling : unsigned;
enum class CapturedStmtVariableCaptureKind : unsigned;
enum class CarriesDependencyAttrSpelling : unsigned;
enum class CharacterLiteralCharacterKind : unsigned;
enum class CleanupAttrSpelling : unsigned;
enum class ColdAttrSpelling : unsigned;
enum class CommonAttrSpelling : unsigned;
enum class ConstAttrSpelling : unsigned;
enum class ConstInitAttrSpelling : unsigned;
enum class ConstantExprResultStorageKind : unsigned;
enum class ConstructorAttrSpelling : unsigned;
enum class ConsumableAttrConsumedState : unsigned;
enum class ConsumableAttrSpelling : unsigned;
enum class ConsumableAutoCastAttrSpelling : unsigned;
enum class ConsumableSetOnReadAttrSpelling : unsigned;
enum class ConvergentAttrSpelling : unsigned;
enum class DLLExportAttrSpelling : unsigned;
enum class DLLImportAttrSpelling : unsigned;
enum class DeclFriendObjectKind : unsigned;
enum class DeclIdentifierNamespace : unsigned;
enum class DeclModuleOwnershipKind : unsigned;
enum class DeclObjCDeclQualifier : unsigned;
enum class DeprecatedAttrSpelling : unsigned;
enum class DestructorAttrSpelling : unsigned;
enum class DiagnoseAsBuiltinAttrSpelling : unsigned;
enum class DiagnoseIfAttrDiagnosticType : unsigned;
enum class DisableSanitizerInstrumentationAttrSpelling : unsigned;
enum class DisableTailCallsAttrSpelling : unsigned;
enum class EnforceTCBAttrSpelling : unsigned;
enum class EnforceTCBLeafAttrSpelling : unsigned;
enum class EnumExtensibilityAttrKind : unsigned;
enum class EnumExtensibilityAttrSpelling : unsigned;
enum class ErrorAttrSpelling : unsigned;
enum class ExcludeFromExplicitInstantiationAttrSpelling : unsigned;
enum class ExprConstantExprKind : int;
enum class ExprLValueClassification : unsigned;
enum class ExprNullPointerConstantKind : unsigned;
enum class ExprNullPointerConstantValueDependence : unsigned;
enum class ExprSideEffectsKind : unsigned;
enum class ExprisModifiableLvalueResult : unsigned;
enum class ExternalSourceSymbolAttrSpelling : unsigned;
enum class FallThroughAttrSpelling : unsigned;
enum class FastCallAttrSpelling : unsigned;
enum class FinalAttrSpelling : unsigned;
enum class FlagEnumAttrSpelling : unsigned;
enum class FlattenAttrSpelling : unsigned;
enum class FormatArgAttrSpelling : unsigned;
enum class FormatAttrSpelling : unsigned;
enum class FunctionDeclTemplatedKind : unsigned;
enum class FunctionReturnThunksAttrKind : unsigned;
enum class FunctionReturnThunksAttrSpelling : unsigned;
enum class GNUInlineAttrSpelling : unsigned;
enum class GuardedVarAttrSpelling : unsigned;
enum class HIPManagedAttrSpelling : unsigned;
enum class HLSLShaderAttrShaderType : unsigned;
enum class HotAttrSpelling : unsigned;
enum class IBActionAttrSpelling : unsigned;
enum class IBOutletAttrSpelling : unsigned;
enum class IBOutletCollectionAttrSpelling : unsigned;
enum class IFuncAttrSpelling : unsigned;
enum class ImplicitCastExprOnStack : unsigned;
enum class ImplicitParamDeclImplicitParamKind : unsigned;
enum class InitPriorityAttrSpelling : unsigned;
enum class IntelOclBiccAttrSpelling : unsigned;
enum class InternalLinkageAttrSpelling : unsigned;
enum class LTOVisibilityPublicAttrSpelling : unsigned;
enum class LeafAttrSpelling : unsigned;
enum class LifetimeBoundAttrSpelling : unsigned;
enum class LikelyAttrSpelling : unsigned;
enum class LinkageSpecDeclLanguageIDs : unsigned;
enum class LoaderUninitializedAttrSpelling : unsigned;
enum class LoopHintAttrLoopHintState : unsigned;
enum class LoopHintAttrOptionType : unsigned;
enum class LoopHintAttrSpelling : unsigned;
enum class MIGServerRoutineAttrSpelling : unsigned;
enum class MSABIAttrSpelling : unsigned;
enum class MSInheritanceAttrSpelling : unsigned;
enum class MSP430InterruptAttrSpelling : unsigned;
enum class MSStructAttrSpelling : unsigned;
enum class MayAliasAttrSpelling : unsigned;
enum class MicroMipsAttrSpelling : unsigned;
enum class MinSizeAttrSpelling : unsigned;
enum class MinVectorWidthAttrSpelling : unsigned;
enum class Mips16AttrSpelling : unsigned;
enum class MipsInterruptAttrInterruptType : unsigned;
enum class MipsInterruptAttrSpelling : unsigned;
enum class MipsLongCallAttrSpelling : unsigned;
enum class MipsShortCallAttrSpelling : unsigned;
enum class ModeAttrSpelling : unsigned;
enum class MustTailAttrSpelling : unsigned;
enum class NSConsumedAttrSpelling : unsigned;
enum class NSConsumesSelfAttrSpelling : unsigned;
enum class NSReturnsAutoreleasedAttrSpelling : unsigned;
enum class NSReturnsNotRetainedAttrSpelling : unsigned;
enum class NSReturnsRetainedAttrSpelling : unsigned;
enum class NakedAttrSpelling : unsigned;
enum class NamedDeclExplicitVisibilityKind : unsigned;
enum class NoBuiltinAttrSpelling : unsigned;
enum class NoCommonAttrSpelling : unsigned;
enum class NoDebugAttrSpelling : unsigned;
enum class NoDerefAttrSpelling : unsigned;
enum class NoDestroyAttrSpelling : unsigned;
enum class NoDuplicateAttrSpelling : unsigned;
enum class NoEscapeAttrSpelling : unsigned;
enum class NoInlineAttrSpelling : unsigned;
enum class NoInstrumentFunctionAttrSpelling : unsigned;
enum class NoMergeAttrSpelling : unsigned;
enum class NoMicroMipsAttrSpelling : unsigned;
enum class NoMips16AttrSpelling : unsigned;
enum class NoProfileFunctionAttrSpelling : unsigned;
enum class NoRandomizeLayoutAttrSpelling : unsigned;
enum class NoReturnAttrSpelling : unsigned;
enum class NoSanitizeAttrSpelling : unsigned;
enum class NoSpeculativeLoadHardeningAttrSpelling : unsigned;
enum class NoSplitStackAttrSpelling : unsigned;
enum class NoStackProtectorAttrSpelling : unsigned;
enum class NoThreadSafetyAnalysisAttrSpelling : unsigned;
enum class NoThrowAttrSpelling : unsigned;
enum class NonNullAttrSpelling : unsigned;
enum class NotTailCalledAttrSpelling : unsigned;
enum class OMPAllocateDeclAttrAllocatorTypeTy : unsigned;
enum class OMPDeclareReductionDeclInitKind : unsigned;
enum class OMPDeclareSimdDeclAttrBranchStateTy : unsigned;
enum class OMPDeclareTargetDeclAttrDevTypeTy : unsigned;
enum class OMPDeclareTargetDeclAttrMapTypeTy : unsigned;
enum class OMPDeclareVariantAttrInteropType : unsigned;
enum class OSConsumedAttrSpelling : unsigned;
enum class OSConsumesThisAttrSpelling : unsigned;
enum class OSReturnsNotRetainedAttrSpelling : unsigned;
enum class OSReturnsRetainedAttrSpelling : unsigned;
enum class OSReturnsRetainedOnNonZeroAttrSpelling : unsigned;
enum class OSReturnsRetainedOnZeroAttrSpelling : unsigned;
enum class ObjCBoxableAttrSpelling : unsigned;
enum class ObjCBridgeAttrSpelling : unsigned;
enum class ObjCBridgeMutableAttrSpelling : unsigned;
enum class ObjCBridgeRelatedAttrSpelling : unsigned;
enum class ObjCClassStubAttrSpelling : unsigned;
enum class ObjCDesignatedInitializerAttrSpelling : unsigned;
enum class ObjCDirectAttrSpelling : unsigned;
enum class ObjCDirectMembersAttrSpelling : unsigned;
enum class ObjCExceptionAttrSpelling : unsigned;
enum class ObjCExplicitProtocolImplAttrSpelling : unsigned;
enum class ObjCExternallyRetainedAttrSpelling : unsigned;
enum class ObjCGCAttrSpelling : unsigned;
enum class ObjCIndependentClassAttrSpelling : unsigned;
enum class ObjCIvarDeclAccessControl : unsigned;
enum class ObjCMessageExprReceiverKind : unsigned;
enum class ObjCMethodDeclImplementationControl : unsigned;
enum class ObjCMethodFamilyAttrFamilyKind : unsigned;
enum class ObjCMethodFamilyAttrSpelling : unsigned;
enum class ObjCNSObjectAttrSpelling : unsigned;
enum class ObjCNonLazyClassAttrSpelling : unsigned;
enum class ObjCNonRuntimeProtocolAttrSpelling : unsigned;
enum class ObjCOwnershipAttrSpelling : unsigned;
enum class ObjCPreciseLifetimeAttrSpelling : unsigned;
enum class ObjCPropertyDeclPropertyControl : unsigned;
enum class ObjCPropertyDeclSetterKind : unsigned;
enum class ObjCPropertyImplDeclKind : unsigned;
enum class ObjCRequiresPropertyDefsAttrSpelling : unsigned;
enum class ObjCRequiresSuperAttrSpelling : unsigned;
enum class ObjCReturnsInnerPointerAttrSpelling : unsigned;
enum class ObjCRootClassAttrSpelling : unsigned;
enum class ObjCRuntimeNameAttrSpelling : unsigned;
enum class ObjCRuntimeVisibleAttrSpelling : unsigned;
enum class ObjCSubclassingRestrictedAttrSpelling : unsigned;
enum class OpenCLAccessAttrSpelling : unsigned;
enum class OpenCLConstantAddressSpaceAttrSpelling : unsigned;
enum class OpenCLGenericAddressSpaceAttrSpelling : unsigned;
enum class OpenCLGlobalAddressSpaceAttrSpelling : unsigned;
enum class OpenCLGlobalDeviceAddressSpaceAttrSpelling : unsigned;
enum class OpenCLGlobalHostAddressSpaceAttrSpelling : unsigned;
enum class OpenCLKernelAttrSpelling : unsigned;
enum class OpenCLLocalAddressSpaceAttrSpelling : unsigned;
enum class OpenCLPrivateAddressSpaceAttrSpelling : unsigned;
enum class OptimizeNoneAttrSpelling : unsigned;
enum class OverloadableAttrSpelling : unsigned;
enum class OwnershipAttrOwnershipKind : unsigned;
enum class OwnershipAttrSpelling : unsigned;
enum class PackedAttrSpelling : unsigned;
enum class ParamTypestateAttrConsumedState : unsigned;
enum class ParamTypestateAttrSpelling : unsigned;
enum class PascalAttrSpelling : unsigned;
enum class PassObjectSizeAttrSpelling : unsigned;
enum class PatchableFunctionEntryAttrSpelling : unsigned;
enum class PcsAttrPCSType : unsigned;
enum class PcsAttrSpelling : unsigned;
enum class PredefinedExprIdentKind : unsigned;
enum class PreferredNameAttrSpelling : unsigned;
enum class PreserveAllAttrSpelling : unsigned;
enum class PreserveMostAttrSpelling : unsigned;
enum class PtGuardedVarAttrSpelling : unsigned;
enum class PureAttrSpelling : unsigned;
enum class QualTypeDestructionKind : unsigned;
enum class QualTypePrimitiveCopyKind : unsigned;
enum class QualTypePrimitiveDefaultInitializeKind : unsigned;
enum class RISCVInterruptAttrInterruptType : unsigned;
enum class RISCVInterruptAttrSpelling : unsigned;
enum class RandomizeLayoutAttrSpelling : unsigned;
enum class RecordDeclArgPassingKind : unsigned;
enum class RegCallAttrSpelling : unsigned;
enum class ReinitializesAttrSpelling : unsigned;
enum class ReleaseCapabilityAttrSpelling : unsigned;
enum class ReleaseHandleAttrSpelling : unsigned;
enum class RequiresCapabilityAttrSpelling : unsigned;
enum class RestrictAttrSpelling : unsigned;
enum class RetainAttrSpelling : unsigned;
enum class ReturnTypestateAttrConsumedState : unsigned;
enum class ReturnTypestateAttrSpelling : unsigned;
enum class ReturnsNonNullAttrSpelling : unsigned;
enum class ReturnsTwiceAttrSpelling : unsigned;
enum class SYCLKernelAttrSpelling : unsigned;
enum class SYCLSpecialClassAttrSpelling : unsigned;
enum class ScopedLockableAttrSpelling : unsigned;
enum class SectionAttrSpelling : unsigned;
enum class SelectAnyAttrSpelling : unsigned;
enum class SentinelAttrSpelling : unsigned;
enum class SetTypestateAttrConsumedState : unsigned;
enum class SetTypestateAttrSpelling : unsigned;
enum class SourceLocExprIdentKind : unsigned;
enum class SpeculativeLoadHardeningAttrSpelling : unsigned;
enum class StandaloneDebugAttrSpelling : unsigned;
enum class StdCallAttrSpelling : unsigned;
enum class StmtLikelihood : int;
enum class StmtKind : unsigned;
enum class StringLiteralStringKind : unsigned;
enum class SwiftAsyncAttrKind : unsigned;
enum class SwiftAsyncAttrSpelling : unsigned;
enum class SwiftAsyncCallAttrSpelling : unsigned;
enum class SwiftAsyncContextAttrSpelling : unsigned;
enum class SwiftAsyncErrorAttrConventionKind : unsigned;
enum class SwiftAsyncErrorAttrSpelling : unsigned;
enum class SwiftCallAttrSpelling : unsigned;
enum class SwiftContextAttrSpelling : unsigned;
enum class SwiftErrorAttrConventionKind : unsigned;
enum class SwiftErrorResultAttrSpelling : unsigned;
enum class SwiftIndirectResultAttrSpelling : unsigned;
enum class SwiftNewTypeAttrNewtypeKind : unsigned;
enum class SwiftNewTypeAttrSpelling : unsigned;
enum class SysVABIAttrSpelling : unsigned;
enum class TLSModelAttrSpelling : unsigned;
enum class TargetAttrSpelling : unsigned;
enum class TargetClonesAttrSpelling : unsigned;
enum class TemplateArgumentKind : unsigned;
enum class TestTypestateAttrConsumedState : unsigned;
enum class TestTypestateAttrSpelling : unsigned;
enum class ThisCallAttrSpelling : unsigned;
enum class TransparentUnionAttrSpelling : unsigned;
enum class TrivialABIAttrSpelling : unsigned;
enum class TryAcquireCapabilityAttrSpelling : unsigned;
enum class TypeScalarTypeKind : unsigned;
enum class TypeKind : unsigned;
enum class TypeTagForDatatypeAttrSpelling : unsigned;
enum class TypeVisibilityAttrSpelling : unsigned;
enum class TypeVisibilityAttrVisibilityType : unsigned;
enum class UnaryTransformTypeUTTKind : unsigned;
enum class UnavailableAttrImplicitReason : unsigned;
enum class UnavailableAttrSpelling : unsigned;
enum class UninitializedAttrSpelling : unsigned;
enum class UnlikelyAttrSpelling : unsigned;
enum class UnusedAttrSpelling : unsigned;
enum class UseHandleAttrSpelling : unsigned;
enum class UsedAttrSpelling : unsigned;
enum class UserDefinedLiteralLiteralOperatorKind : unsigned;
enum class UsingIfExistsAttrSpelling : unsigned;
enum class UuidAttrSpelling : unsigned;
enum class VarDeclDefinitionKind : unsigned;
enum class VarDeclInitializationStyle : unsigned;
enum class VarDeclTLSKind : unsigned;
enum class VecReturnAttrSpelling : unsigned;
enum class VectorCallAttrSpelling : unsigned;
enum class VectorTypeVectorKind : unsigned;
enum class VisibilityAttrSpelling : unsigned;
enum class VisibilityAttrVisibilityType : unsigned;
enum class WarnUnusedAttrSpelling : unsigned;
enum class WarnUnusedResultAttrSpelling : unsigned;
enum class WeakAttrSpelling : unsigned;
enum class WeakImportAttrSpelling : unsigned;
enum class WeakRefAttrSpelling : unsigned;
enum class WebAssemblyExportNameAttrSpelling : unsigned;
enum class WebAssemblyImportModuleAttrSpelling : unsigned;
enum class WebAssemblyImportNameAttrSpelling : unsigned;
enum class X86ForceAlignArgPointerAttrSpelling : unsigned;
enum class XRayInstrumentAttrSpelling : unsigned;
enum class XRayLogArgsAttrSpelling : unsigned;
enum class ZeroCallUsedRegsAttrSpelling : unsigned;
enum class ZeroCallUsedRegsAttrZeroCallUsedRegsKind : unsigned;
enum class ASTDumpOutputFormat : unsigned;
enum class AccessSpecifier : unsigned;
enum class AddrSpaceMapMangling : unsigned;
enum class AlignRequirementKind : int;
enum class AltivecSrcCompatKind : int;
enum class ArgumentKind : unsigned;
enum class ArrayTypeTrait : unsigned;
enum class AtomicScopeModelKind : int;
enum class AutoTypeKeyword : int;
enum class AvailabilityResult : unsigned;
enum class BinaryOperatorKind : unsigned;
enum class Bits : unsigned char;
enum class CallingConv : unsigned;
enum class CanThrowResult : unsigned;
enum class CapturedRegionKind : unsigned;
enum class CastKind : unsigned;
enum class ClangABI : int;
enum class CommentKind : unsigned;
enum class ComparisonCategoryResult : unsigned char;
enum class ComparisonCategoryType : unsigned char;
enum class CompilingModuleKind : unsigned;
enum class ConstexprSpecKind : int;
enum class CoreFoundationABI : int;
enum class DataPositionTy : unsigned long;
enum class DefaultArgKind : unsigned;
enum class DefaultCallingConvention : unsigned;
enum class DefaultVisiblityExportMapping : int;
enum class DiagnosticLevelMask : unsigned;
enum class ElaboratedTypeKeyword : unsigned;
enum class EmbedBitcodeKind : unsigned;
enum class EscapeChar : int;
enum class ExceptionHandlingKind : int;
enum class ExceptionSpecificationType : unsigned;
enum class ExplicitSpecKind : unsigned;
enum class ExprDependence : unsigned char;
enum class ExprObjectKind : unsigned;
enum class ExprOffsets : int;
enum class ExprValueKind : unsigned;
enum class ExpressionTrait : unsigned;
enum class ExtKind : unsigned;
enum class ExtendArgsKind : int;
enum class FPEvalMethodKind : int;
enum class FPExceptionModeKind : unsigned;
enum class FPModeKind : unsigned;
enum class FiniteLoopsKind : unsigned;
enum class FramePointerKind : int;
enum class GC : unsigned;
enum class GCMode : unsigned;
enum class GPUDefaultStreamKind : int;
enum class GVALinkage : unsigned;
enum class GetBuiltinTypeError : unsigned;
enum class HLSLLangStd : unsigned;
enum class ID : unsigned;
enum class IdentifierInfoFlag : unsigned;
enum class IfStatementKind : unsigned;
enum class ImbueAttribute : int;
enum class InClassInitStyle : unsigned;
enum class InheritedDesignatedInitializersState : unsigned;
enum class InitStorageKind : unsigned;
enum class InlineAsmDialectKind : unsigned;
enum class InlineVariableDefinitionKind : int;
enum class InliningMethod : unsigned;
enum class Kinds : unsigned;
enum class LambdaCaptureDefault : unsigned;
enum class LambdaCaptureKind : unsigned;
enum class LangAS : unsigned;
enum class LangFeatures : unsigned;
enum class Language : unsigned char;
enum class LanguageLinkage : unsigned;
enum class LaxVectorConversionKind : int;
enum class Level : unsigned;
enum class Linkage : unsigned char;
enum class MSInheritanceModel : int;
enum class MSVCMajorVersion : unsigned;
enum class MSVtorDispMode : int;
enum class MethodRefFlags : unsigned;
enum class ModifiableType : unsigned;
enum class MultiVersionKind : int;
enum class NameKind : unsigned;
enum class NeedExtraManglingDecl : unsigned;
enum class NestedNameSpecifierDependence : unsigned char;
enum class NonOdrUseReason : unsigned;
enum class NonceObjCInterface : unsigned;
enum class NullabilityKind : unsigned char;
enum class ObjCBridgeCastKind : unsigned;
enum class ObjCDispatchMethodKind : unsigned;
enum class ObjCInstanceTypeFamily : unsigned;
enum class ObjCKeywordKind : unsigned;
enum class ObjCLifetime : unsigned;
enum class ObjCMethodFamily : unsigned;
enum class ObjCPropertyQueryKind : unsigned char;
enum class ObjCStringFormatFamily : unsigned;
enum class ObjCSubstitutionContext : int;
enum class ObjCTypeParamVariance : unsigned char;
enum class OnOffSwitch : unsigned;
enum class OnStackType : unsigned;
enum class OpenMPAdjustArgsOpKind : unsigned;
enum class OpenMPAtomicDefaultMemOrderClauseKind : unsigned;
enum class OpenMPBindClauseKind : unsigned;
enum class OpenMPDefaultmapClauseKind : unsigned;
enum class OpenMPDefaultmapClauseModifier : unsigned;
enum class OpenMPDependClauseKind : unsigned;
enum class OpenMPDeviceClauseModifier : unsigned;
enum class OpenMPDeviceType : unsigned;
enum class OpenMPDistScheduleClauseKind : unsigned;
enum class OpenMPLastprivateModifier : unsigned;
enum class OpenMPLinearClauseKind : unsigned;
enum class OpenMPMapClauseKind : unsigned;
enum class OpenMPMapModifierKind : unsigned;
enum class OpenMPMotionModifierKind : unsigned;
enum class OpenMPOrderClauseKind : unsigned;
enum class OpenMPReductionClauseModifier : unsigned;
enum class OpenMPScheduleClauseKind : unsigned;
enum class OpenMPScheduleClauseModifier : unsigned;
enum class OverloadedOperatorKind : int;
enum class OverloadsShown : unsigned;
enum class PPKeywordKind : unsigned;
enum class ParameterABI : int;
enum class ParenLocsOffsets : int;
enum class PragmaFloatControlKind : unsigned;
enum class PragmaMSCommentKind : unsigned;
enum class PragmaMSPointersToMembersKind : unsigned;
enum class PragmaMSStructKind : unsigned;
enum class PragmaSectionFlag : unsigned;
enum class ProfileInstrKind : unsigned;
enum class Qualified : int;
enum class RangeExprOffset : int;
enum class RangeLocOffset : int;
enum class RefQualifierKind : unsigned;
enum class RemarkKind : unsigned;
enum class ReservedIdentifierStatus : int;
enum class SFINAEResponse : unsigned;
enum class SYCLMajorVersion : unsigned;
enum class SanitizerOrdinal : unsigned long long;
enum class SelectorLocationsKind : unsigned;
enum class ShaderStage : int;
enum class SignReturnAddressKeyKind : int;
enum class SignReturnAddressScopeKind : int;
enum class SignedOverflowBehaviorTy : unsigned;
enum class SpecialMemberFlags : unsigned;
enum class SpecifierKind : unsigned;
enum class StackProtectorMode : unsigned;
enum class StorageClass : unsigned;
enum class StorageDuration : unsigned;
enum class StoredNameKind : unsigned;
enum class StoredSpecifierKind : unsigned;
enum class StructReturnConventionKind : unsigned;
enum class SubExpr : unsigned;
enum class SubStmt : unsigned;
enum class SwiftAsyncFramePointerKind : int;
enum class SyncScope : int;
enum class Syntax : unsigned;
enum class TLSModel : unsigned;
enum class TQ : unsigned;
enum class TagTypeKind : unsigned;
enum class TailPaddingUseRules : unsigned;
enum class TemplateArgumentDependence : unsigned char;
enum class TemplateNameDependence : unsigned char;
enum class TemplateSpecializationKind : unsigned;
enum class TextDiagnosticFormat : unsigned;
enum class ThreadModelKind : int;
enum class ThreadStorageClassSpecifier : unsigned;
enum class TokenKind : unsigned short;
enum class TrailingAllocKind : unsigned;
enum class TranslationUnitKind : unsigned;
enum class TrivialAutoVarInitKind : int;
enum class TypeDependence : unsigned char;
enum class TypeLocClass : unsigned;
enum class TypeSpecifierSign : int;
enum class TypeSpecifierType : unsigned;
enum class TypeSpecifierWidth : int;
enum class TypeSpecifiersPipe : int;
enum class TypeTrait : unsigned;
enum class UnaryExprOrTypeTrait : unsigned;
enum class UnaryOperatorKind : unsigned;
enum class APValueKind : unsigned;
enum class VectorLibrary : unsigned;
enum class Visibility : unsigned;
enum class AttributeSyntax : unsigned;
enum class DeclCategory : unsigned;
enum class MacroNodeKind : unsigned char;
enum class PathKind : signed char;
enum class FileType : signed char;
enum class CompilerName : unsigned;
enum class IncludePathLocation : unsigned;
enum class TargetLanguage : unsigned;
enum class PseudoKind : unsigned char;
}  // namespace pasta
namespace indexer {
class EntityMapper;
void SerializeDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::Decl &);
void SerializeEmptyDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::EmptyDecl &);
void SerializeExportDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ExportDecl &);
void SerializeExternCContextDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ExternCContextDecl &);
void SerializeFileScopeAsmDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::FileScopeAsmDecl &);
void SerializeFriendDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::FriendDecl &);
void SerializeFriendTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::FriendTemplateDecl &);
void SerializeImportDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ImportDecl &);
void SerializeLifetimeExtendedTemporaryDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::LifetimeExtendedTemporaryDecl &);
void SerializeLinkageSpecDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::LinkageSpecDecl &);
void SerializeNamedDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::NamedDecl &);
void SerializeNamespaceAliasDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::NamespaceAliasDecl &);
void SerializeNamespaceDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::NamespaceDecl &);
void SerializeObjCCompatibleAliasDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCCompatibleAliasDecl &);
void SerializeObjCContainerDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCContainerDecl &);
void SerializeObjCImplDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCImplDecl &);
void SerializeObjCImplementationDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCImplementationDecl &);
void SerializeObjCInterfaceDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCInterfaceDecl &);
void SerializeObjCMethodDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCMethodDecl &);
void SerializeObjCPropertyDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCPropertyDecl &);
void SerializeObjCPropertyImplDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCPropertyImplDecl &);
void SerializeObjCProtocolDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCProtocolDecl &);
void SerializePragmaCommentDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::PragmaCommentDecl &);
void SerializePragmaDetectMismatchDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::PragmaDetectMismatchDecl &);
void SerializeRequiresExprBodyDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::RequiresExprBodyDecl &);
void SerializeStaticAssertDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::StaticAssertDecl &);
void SerializeTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TemplateDecl &);
void SerializeTemplateTemplateParmDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TemplateTemplateParmDecl &);
void SerializeTranslationUnitDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TranslationUnitDecl &);
void SerializeTypeDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TypeDecl &);
void SerializeTypedefNameDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TypedefNameDecl &);
void SerializeUnresolvedUsingIfExistsDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UnresolvedUsingIfExistsDecl &);
void SerializeUnresolvedUsingTypenameDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UnresolvedUsingTypenameDecl &);
void SerializeUsingDirectiveDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UsingDirectiveDecl &);
void SerializeUsingPackDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UsingPackDecl &);
void SerializeUsingShadowDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UsingShadowDecl &);
void SerializeValueDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ValueDecl &);
void SerializeOMPDeclarativeDirectiveDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPDeclarativeDirectiveDecl &);
void SerializeOMPDeclarativeDirectiveValueDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPDeclarativeDirectiveValueDecl &);
void SerializeAccessSpecDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::AccessSpecDecl &);
void SerializeBaseUsingDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::BaseUsingDecl &);
void SerializeBindingDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::BindingDecl &);
void SerializeBlockDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::BlockDecl &);
void SerializeBuiltinTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::BuiltinTemplateDecl &);
void SerializeCapturedDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::CapturedDecl &);
void SerializeClassScopeFunctionSpecializationDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ClassScopeFunctionSpecializationDecl &);
void SerializeConceptDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ConceptDecl &);
void SerializeConstructorUsingShadowDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ConstructorUsingShadowDecl &);
void SerializeDeclaratorDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::DeclaratorDecl &);
void SerializeEnumConstantDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::EnumConstantDecl &);
void SerializeFieldDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::FieldDecl &);
void SerializeFunctionDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::FunctionDecl &);
void SerializeIndirectFieldDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::IndirectFieldDecl &);
void SerializeLabelDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::LabelDecl &);
void SerializeMSGuidDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::MSGuidDecl &);
void SerializeMSPropertyDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::MSPropertyDecl &);
void SerializeNonTypeTemplateParmDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::NonTypeTemplateParmDecl &);
void SerializeOMPAllocateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPAllocateDecl &);
void SerializeOMPDeclareMapperDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPDeclareMapperDecl &);
void SerializeOMPDeclareReductionDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPDeclareReductionDecl &);
void SerializeOMPRequiresDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPRequiresDecl &);
void SerializeOMPThreadPrivateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPThreadPrivateDecl &);
void SerializeObjCAtDefsFieldDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCAtDefsFieldDecl &);
void SerializeObjCCategoryDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCCategoryDecl &);
void SerializeObjCCategoryImplDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCCategoryImplDecl &);
void SerializeObjCIvarDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCIvarDecl &);
void SerializeObjCTypeParamDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ObjCTypeParamDecl &);
void SerializeRedeclarableTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::RedeclarableTemplateDecl &);
void SerializeTagDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TagDecl &);
void SerializeTemplateParamObjectDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TemplateParamObjectDecl &);
void SerializeTemplateTypeParmDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TemplateTypeParmDecl &);
void SerializeTypeAliasDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TypeAliasDecl &);
void SerializeTypeAliasTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TypeAliasTemplateDecl &);
void SerializeTypedefDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::TypedefDecl &);
void SerializeUnnamedGlobalConstantDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UnnamedGlobalConstantDecl &);
void SerializeUnresolvedUsingValueDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UnresolvedUsingValueDecl &);
void SerializeUsingDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UsingDecl &);
void SerializeUsingEnumDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::UsingEnumDecl &);
void SerializeVarDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::VarDecl &);
void SerializeVarTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::VarTemplateDecl &);
void SerializeVarTemplateSpecializationDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::VarTemplateSpecializationDecl &);
void SerializeCXXDeductionGuideDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::CXXDeductionGuideDecl &);
void SerializeCXXMethodDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::CXXMethodDecl &);
void SerializeClassTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ClassTemplateDecl &);
void SerializeDecompositionDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::DecompositionDecl &);
void SerializeEnumDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::EnumDecl &);
void SerializeFunctionTemplateDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::FunctionTemplateDecl &);
void SerializeImplicitParamDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ImplicitParamDecl &);
void SerializeOMPCapturedExprDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::OMPCapturedExprDecl &);
void SerializeParmVarDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ParmVarDecl &);
void SerializeRecordDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::RecordDecl &);
void SerializeVarTemplatePartialSpecializationDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::VarTemplatePartialSpecializationDecl &);
void SerializeCXXConstructorDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::CXXConstructorDecl &);
void SerializeCXXConversionDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::CXXConversionDecl &);
void SerializeCXXDestructorDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::CXXDestructorDecl &);
void SerializeCXXRecordDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::CXXRecordDecl &);
void SerializeClassTemplateSpecializationDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ClassTemplateSpecializationDecl &);
void SerializeClassTemplatePartialSpecializationDecl(EntityMapper &, mx::ast::Decl::Builder, const pasta::ClassTemplatePartialSpecializationDecl &);
void SerializeStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::Stmt &);
void SerializeSwitchCase(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SwitchCase &);
void SerializeSwitchStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SwitchStmt &);
void SerializeValueStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ValueStmt &);
void SerializeWhileStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::WhileStmt &);
void SerializeAsmStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::AsmStmt &);
void SerializeAttributedStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::AttributedStmt &);
void SerializeBreakStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::BreakStmt &);
void SerializeCXXCatchStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXCatchStmt &);
void SerializeCXXForRangeStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXForRangeStmt &);
void SerializeCXXTryStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXTryStmt &);
void SerializeCapturedStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CapturedStmt &);
void SerializeCaseStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CaseStmt &);
void SerializeCompoundStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CompoundStmt &);
void SerializeContinueStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ContinueStmt &);
void SerializeCoreturnStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CoreturnStmt &);
void SerializeCoroutineBodyStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CoroutineBodyStmt &);
void SerializeDeclStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DeclStmt &);
void SerializeDefaultStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DefaultStmt &);
void SerializeDoStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DoStmt &);
void SerializeExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::Expr &);
void SerializeExpressionTraitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ExpressionTraitExpr &);
void SerializeExtVectorElementExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ExtVectorElementExpr &);
void SerializeFixedPointLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::FixedPointLiteral &);
void SerializeFloatingLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::FloatingLiteral &);
void SerializeForStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ForStmt &);
void SerializeFullExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::FullExpr &);
void SerializeFunctionParmPackExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::FunctionParmPackExpr &);
void SerializeGCCAsmStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::GCCAsmStmt &);
void SerializeGNUNullExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::GNUNullExpr &);
void SerializeGenericSelectionExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::GenericSelectionExpr &);
void SerializeGotoStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::GotoStmt &);
void SerializeIfStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::IfStmt &);
void SerializeImaginaryLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ImaginaryLiteral &);
void SerializeImplicitValueInitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ImplicitValueInitExpr &);
void SerializeIndirectGotoStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::IndirectGotoStmt &);
void SerializeInitListExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::InitListExpr &);
void SerializeIntegerLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::IntegerLiteral &);
void SerializeLabelStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::LabelStmt &);
void SerializeLambdaExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::LambdaExpr &);
void SerializeMSAsmStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::MSAsmStmt &);
void SerializeMSDependentExistsStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::MSDependentExistsStmt &);
void SerializeMSPropertyRefExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::MSPropertyRefExpr &);
void SerializeMSPropertySubscriptExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::MSPropertySubscriptExpr &);
void SerializeMaterializeTemporaryExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::MaterializeTemporaryExpr &);
void SerializeMatrixSubscriptExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::MatrixSubscriptExpr &);
void SerializeMemberExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::MemberExpr &);
void SerializeNoInitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::NoInitExpr &);
void SerializeNullStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::NullStmt &);
void SerializeOMPArraySectionExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPArraySectionExpr &);
void SerializeOMPArrayShapingExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPArrayShapingExpr &);
void SerializeOMPCanonicalLoop(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPCanonicalLoop &);
void SerializeOMPExecutableDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPExecutableDirective &);
void SerializeOMPFlushDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPFlushDirective &);
void SerializeOMPInteropDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPInteropDirective &);
void SerializeOMPIteratorExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPIteratorExpr &);
void SerializeOMPLoopBasedDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPLoopBasedDirective &);
void SerializeOMPLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPLoopDirective &);
void SerializeOMPLoopTransformationDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPLoopTransformationDirective &);
void SerializeOMPMaskedDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPMaskedDirective &);
void SerializeOMPMaskedTaskLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPMaskedTaskLoopDirective &);
void SerializeOMPMaskedTaskLoopSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPMaskedTaskLoopSimdDirective &);
void SerializeOMPMasterDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPMasterDirective &);
void SerializeOMPMasterTaskLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPMasterTaskLoopDirective &);
void SerializeOMPMasterTaskLoopSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPMasterTaskLoopSimdDirective &);
void SerializeOMPMetaDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPMetaDirective &);
void SerializeOMPOrderedDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPOrderedDirective &);
void SerializeOMPParallelDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelDirective &);
void SerializeOMPParallelForDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelForDirective &);
void SerializeOMPParallelForSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelForSimdDirective &);
void SerializeOMPParallelGenericLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelGenericLoopDirective &);
void SerializeOMPParallelMaskedDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelMaskedDirective &);
void SerializeOMPParallelMaskedTaskLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelMaskedTaskLoopDirective &);
void SerializeOMPParallelMaskedTaskLoopSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelMaskedTaskLoopSimdDirective &);
void SerializeOMPParallelMasterDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelMasterDirective &);
void SerializeOMPParallelMasterTaskLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelMasterTaskLoopDirective &);
void SerializeOMPParallelMasterTaskLoopSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelMasterTaskLoopSimdDirective &);
void SerializeOMPParallelSectionsDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPParallelSectionsDirective &);
void SerializeOMPScanDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPScanDirective &);
void SerializeOMPSectionDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPSectionDirective &);
void SerializeOMPSectionsDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPSectionsDirective &);
void SerializeOMPSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPSimdDirective &);
void SerializeOMPSingleDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPSingleDirective &);
void SerializeOMPTargetDataDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetDataDirective &);
void SerializeOMPTargetDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetDirective &);
void SerializeOMPTargetEnterDataDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetEnterDataDirective &);
void SerializeOMPTargetExitDataDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetExitDataDirective &);
void SerializeOMPTargetParallelDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetParallelDirective &);
void SerializeOMPTargetParallelForDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetParallelForDirective &);
void SerializeOMPTargetParallelForSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetParallelForSimdDirective &);
void SerializeOMPTargetParallelGenericLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetParallelGenericLoopDirective &);
void SerializeOMPTargetSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetSimdDirective &);
void SerializeOMPTargetTeamsDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDirective &);
void SerializeOMPTargetTeamsDistributeDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeDirective &);
void SerializeOMPTargetTeamsDistributeParallelForDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeParallelForDirective &);
void SerializeOMPTargetTeamsDistributeParallelForSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeParallelForSimdDirective &);
void SerializeOMPTargetTeamsDistributeSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsDistributeSimdDirective &);
void SerializeOMPTargetTeamsGenericLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetTeamsGenericLoopDirective &);
void SerializeOMPTargetUpdateDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTargetUpdateDirective &);
void SerializeOMPTaskDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTaskDirective &);
void SerializeOMPTaskLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTaskLoopDirective &);
void SerializeOMPTaskLoopSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTaskLoopSimdDirective &);
void SerializeOMPTaskgroupDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTaskgroupDirective &);
void SerializeOMPTaskwaitDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTaskwaitDirective &);
void SerializeOMPTaskyieldDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTaskyieldDirective &);
void SerializeOMPTeamsDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDirective &);
void SerializeOMPTeamsDistributeDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeDirective &);
void SerializeOMPTeamsDistributeParallelForDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeParallelForDirective &);
void SerializeOMPTeamsDistributeParallelForSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeParallelForSimdDirective &);
void SerializeOMPTeamsDistributeSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTeamsDistributeSimdDirective &);
void SerializeOMPTeamsGenericLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTeamsGenericLoopDirective &);
void SerializeOMPTileDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPTileDirective &);
void SerializeOMPUnrollDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPUnrollDirective &);
void SerializeObjCArrayLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCArrayLiteral &);
void SerializeObjCAtCatchStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCAtCatchStmt &);
void SerializeObjCAtFinallyStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCAtFinallyStmt &);
void SerializeObjCAtSynchronizedStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCAtSynchronizedStmt &);
void SerializeObjCAtThrowStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCAtThrowStmt &);
void SerializeObjCAtTryStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCAtTryStmt &);
void SerializeObjCAutoreleasePoolStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCAutoreleasePoolStmt &);
void SerializeObjCAvailabilityCheckExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCAvailabilityCheckExpr &);
void SerializeObjCBoolLiteralExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCBoolLiteralExpr &);
void SerializeObjCBoxedExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCBoxedExpr &);
void SerializeObjCDictionaryLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCDictionaryLiteral &);
void SerializeObjCEncodeExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCEncodeExpr &);
void SerializeObjCForCollectionStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCForCollectionStmt &);
void SerializeObjCIndirectCopyRestoreExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCIndirectCopyRestoreExpr &);
void SerializeObjCIsaExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCIsaExpr &);
void SerializeObjCIvarRefExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCIvarRefExpr &);
void SerializeObjCMessageExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCMessageExpr &);
void SerializeObjCPropertyRefExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCPropertyRefExpr &);
void SerializeObjCProtocolExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCProtocolExpr &);
void SerializeObjCSelectorExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCSelectorExpr &);
void SerializeObjCStringLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCStringLiteral &);
void SerializeObjCSubscriptRefExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCSubscriptRefExpr &);
void SerializeOffsetOfExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OffsetOfExpr &);
void SerializeOpaqueValueExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OpaqueValueExpr &);
void SerializeOverloadExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OverloadExpr &);
void SerializePackExpansionExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::PackExpansionExpr &);
void SerializeParenExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ParenExpr &);
void SerializeParenListExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ParenListExpr &);
void SerializePredefinedExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::PredefinedExpr &);
void SerializePseudoObjectExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::PseudoObjectExpr &);
void SerializeRecoveryExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::RecoveryExpr &);
void SerializeRequiresExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::RequiresExpr &);
void SerializeReturnStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ReturnStmt &);
void SerializeSEHExceptStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SEHExceptStmt &);
void SerializeSEHFinallyStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SEHFinallyStmt &);
void SerializeSEHLeaveStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SEHLeaveStmt &);
void SerializeSEHTryStmt(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SEHTryStmt &);
void SerializeSYCLUniqueStableNameExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SYCLUniqueStableNameExpr &);
void SerializeShuffleVectorExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ShuffleVectorExpr &);
void SerializeSizeOfPackExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SizeOfPackExpr &);
void SerializeSourceLocExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SourceLocExpr &);
void SerializeStmtExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::StmtExpr &);
void SerializeStringLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::StringLiteral &);
void SerializeSubstNonTypeTemplateParmExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SubstNonTypeTemplateParmExpr &);
void SerializeSubstNonTypeTemplateParmPackExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::SubstNonTypeTemplateParmPackExpr &);
void SerializeTypeTraitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::TypeTraitExpr &);
void SerializeTypoExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::TypoExpr &);
void SerializeUnaryExprOrTypeTraitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::UnaryExprOrTypeTraitExpr &);
void SerializeUnaryOperator(EntityMapper &, mx::ast::Stmt::Builder, const pasta::UnaryOperator &);
void SerializeUnresolvedLookupExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::UnresolvedLookupExpr &);
void SerializeUnresolvedMemberExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::UnresolvedMemberExpr &);
void SerializeVAArgExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::VAArgExpr &);
void SerializeAbstractConditionalOperator(EntityMapper &, mx::ast::Stmt::Builder, const pasta::AbstractConditionalOperator &);
void SerializeAddrLabelExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::AddrLabelExpr &);
void SerializeArrayInitIndexExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ArrayInitIndexExpr &);
void SerializeArrayInitLoopExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ArrayInitLoopExpr &);
void SerializeArraySubscriptExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ArraySubscriptExpr &);
void SerializeArrayTypeTraitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ArrayTypeTraitExpr &);
void SerializeAsTypeExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::AsTypeExpr &);
void SerializeAtomicExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::AtomicExpr &);
void SerializeBinaryConditionalOperator(EntityMapper &, mx::ast::Stmt::Builder, const pasta::BinaryConditionalOperator &);
void SerializeBinaryOperator(EntityMapper &, mx::ast::Stmt::Builder, const pasta::BinaryOperator &);
void SerializeBlockExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::BlockExpr &);
void SerializeCXXBindTemporaryExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXBindTemporaryExpr &);
void SerializeCXXBoolLiteralExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXBoolLiteralExpr &);
void SerializeCXXConstructExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXConstructExpr &);
void SerializeCXXDefaultArgExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXDefaultArgExpr &);
void SerializeCXXDefaultInitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXDefaultInitExpr &);
void SerializeCXXDeleteExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXDeleteExpr &);
void SerializeCXXDependentScopeMemberExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXDependentScopeMemberExpr &);
void SerializeCXXFoldExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXFoldExpr &);
void SerializeCXXInheritedCtorInitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXInheritedCtorInitExpr &);
void SerializeCXXNewExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXNewExpr &);
void SerializeCXXNoexceptExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXNoexceptExpr &);
void SerializeCXXNullPtrLiteralExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXNullPtrLiteralExpr &);
void SerializeCXXPseudoDestructorExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXPseudoDestructorExpr &);
void SerializeCXXRewrittenBinaryOperator(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXRewrittenBinaryOperator &);
void SerializeCXXScalarValueInitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXScalarValueInitExpr &);
void SerializeCXXStdInitializerListExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXStdInitializerListExpr &);
void SerializeCXXTemporaryObjectExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXTemporaryObjectExpr &);
void SerializeCXXThisExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXThisExpr &);
void SerializeCXXThrowExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXThrowExpr &);
void SerializeCXXTypeidExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXTypeidExpr &);
void SerializeCXXUnresolvedConstructExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXUnresolvedConstructExpr &);
void SerializeCXXUuidofExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXUuidofExpr &);
void SerializeCallExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CallExpr &);
void SerializeCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CastExpr &);
void SerializeCharacterLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CharacterLiteral &);
void SerializeChooseExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ChooseExpr &);
void SerializeCompoundAssignOperator(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CompoundAssignOperator &);
void SerializeCompoundLiteralExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CompoundLiteralExpr &);
void SerializeConceptSpecializationExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ConceptSpecializationExpr &);
void SerializeConditionalOperator(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ConditionalOperator &);
void SerializeConstantExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ConstantExpr &);
void SerializeConvertVectorExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ConvertVectorExpr &);
void SerializeCoroutineSuspendExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CoroutineSuspendExpr &);
void SerializeCoyieldExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CoyieldExpr &);
void SerializeDeclRefExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DeclRefExpr &);
void SerializeDependentCoawaitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DependentCoawaitExpr &);
void SerializeDependentScopeDeclRefExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DependentScopeDeclRefExpr &);
void SerializeDesignatedInitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DesignatedInitExpr &);
void SerializeDesignatedInitUpdateExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::DesignatedInitUpdateExpr &);
void SerializeExplicitCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ExplicitCastExpr &);
void SerializeExprWithCleanups(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ExprWithCleanups &);
void SerializeImplicitCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ImplicitCastExpr &);
void SerializeOMPAtomicDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPAtomicDirective &);
void SerializeOMPBarrierDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPBarrierDirective &);
void SerializeOMPCancelDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPCancelDirective &);
void SerializeOMPCancellationPointDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPCancellationPointDirective &);
void SerializeOMPCriticalDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPCriticalDirective &);
void SerializeOMPDepobjDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPDepobjDirective &);
void SerializeOMPDispatchDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPDispatchDirective &);
void SerializeOMPDistributeDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPDistributeDirective &);
void SerializeOMPDistributeParallelForDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPDistributeParallelForDirective &);
void SerializeOMPDistributeParallelForSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPDistributeParallelForSimdDirective &);
void SerializeOMPDistributeSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPDistributeSimdDirective &);
void SerializeOMPForDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPForDirective &);
void SerializeOMPForSimdDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPForSimdDirective &);
void SerializeOMPGenericLoopDirective(EntityMapper &, mx::ast::Stmt::Builder, const pasta::OMPGenericLoopDirective &);
void SerializeObjCBridgedCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::ObjCBridgedCastExpr &);
void SerializeUserDefinedLiteral(EntityMapper &, mx::ast::Stmt::Builder, const pasta::UserDefinedLiteral &);
void SerializeBuiltinBitCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::BuiltinBitCastExpr &);
void SerializeCStyleCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CStyleCastExpr &);
void SerializeCUDAKernelCallExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CUDAKernelCallExpr &);
void SerializeCXXFunctionalCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXFunctionalCastExpr &);
void SerializeCXXMemberCallExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXMemberCallExpr &);
void SerializeCXXNamedCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXNamedCastExpr &);
void SerializeCXXOperatorCallExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXOperatorCallExpr &);
void SerializeCXXReinterpretCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXReinterpretCastExpr &);
void SerializeCXXStaticCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXStaticCastExpr &);
void SerializeCoawaitExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CoawaitExpr &);
void SerializeCXXAddrspaceCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXAddrspaceCastExpr &);
void SerializeCXXConstCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXConstCastExpr &);
void SerializeCXXDynamicCastExpr(EntityMapper &, mx::ast::Stmt::Builder, const pasta::CXXDynamicCastExpr &);
void SerializeType(EntityMapper &, mx::ast::Type::Builder, const pasta::Type &);
void SerializeTypeOfExprType(EntityMapper &, mx::ast::Type::Builder, const pasta::TypeOfExprType &);
void SerializeTypeOfType(EntityMapper &, mx::ast::Type::Builder, const pasta::TypeOfType &);
void SerializeTypedefType(EntityMapper &, mx::ast::Type::Builder, const pasta::TypedefType &);
void SerializeUnaryTransformType(EntityMapper &, mx::ast::Type::Builder, const pasta::UnaryTransformType &);
void SerializeUnresolvedUsingType(EntityMapper &, mx::ast::Type::Builder, const pasta::UnresolvedUsingType &);
void SerializeUsingType(EntityMapper &, mx::ast::Type::Builder, const pasta::UsingType &);
void SerializeVectorType(EntityMapper &, mx::ast::Type::Builder, const pasta::VectorType &);
void SerializeTypeWithKeyword(EntityMapper &, mx::ast::Type::Builder, const pasta::TypeWithKeyword &);
void SerializeAdjustedType(EntityMapper &, mx::ast::Type::Builder, const pasta::AdjustedType &);
void SerializeArrayType(EntityMapper &, mx::ast::Type::Builder, const pasta::ArrayType &);
void SerializeAtomicType(EntityMapper &, mx::ast::Type::Builder, const pasta::AtomicType &);
void SerializeAttributedType(EntityMapper &, mx::ast::Type::Builder, const pasta::AttributedType &);
void SerializeBTFTagAttributedType(EntityMapper &, mx::ast::Type::Builder, const pasta::BTFTagAttributedType &);
void SerializeBitIntType(EntityMapper &, mx::ast::Type::Builder, const pasta::BitIntType &);
void SerializeBlockPointerType(EntityMapper &, mx::ast::Type::Builder, const pasta::BlockPointerType &);
void SerializeBuiltinType(EntityMapper &, mx::ast::Type::Builder, const pasta::BuiltinType &);
void SerializeComplexType(EntityMapper &, mx::ast::Type::Builder, const pasta::ComplexType &);
void SerializeConstantArrayType(EntityMapper &, mx::ast::Type::Builder, const pasta::ConstantArrayType &);
void SerializeDecayedType(EntityMapper &, mx::ast::Type::Builder, const pasta::DecayedType &);
void SerializeDecltypeType(EntityMapper &, mx::ast::Type::Builder, const pasta::DecltypeType &);
void SerializeDeducedType(EntityMapper &, mx::ast::Type::Builder, const pasta::DeducedType &);
void SerializeDependentAddressSpaceType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentAddressSpaceType &);
void SerializeDependentBitIntType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentBitIntType &);
void SerializeDependentNameType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentNameType &);
void SerializeDependentSizedArrayType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentSizedArrayType &);
void SerializeDependentSizedExtVectorType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentSizedExtVectorType &);
void SerializeDependentTemplateSpecializationType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentTemplateSpecializationType &);
void SerializeDependentVectorType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentVectorType &);
void SerializeElaboratedType(EntityMapper &, mx::ast::Type::Builder, const pasta::ElaboratedType &);
void SerializeExtVectorType(EntityMapper &, mx::ast::Type::Builder, const pasta::ExtVectorType &);
void SerializeFunctionType(EntityMapper &, mx::ast::Type::Builder, const pasta::FunctionType &);
void SerializeIncompleteArrayType(EntityMapper &, mx::ast::Type::Builder, const pasta::IncompleteArrayType &);
void SerializeInjectedClassNameType(EntityMapper &, mx::ast::Type::Builder, const pasta::InjectedClassNameType &);
void SerializeMacroQualifiedType(EntityMapper &, mx::ast::Type::Builder, const pasta::MacroQualifiedType &);
void SerializeMatrixType(EntityMapper &, mx::ast::Type::Builder, const pasta::MatrixType &);
void SerializeMemberPointerType(EntityMapper &, mx::ast::Type::Builder, const pasta::MemberPointerType &);
void SerializeObjCObjectPointerType(EntityMapper &, mx::ast::Type::Builder, const pasta::ObjCObjectPointerType &);
void SerializeObjCObjectType(EntityMapper &, mx::ast::Type::Builder, const pasta::ObjCObjectType &);
void SerializeObjCTypeParamType(EntityMapper &, mx::ast::Type::Builder, const pasta::ObjCTypeParamType &);
void SerializePackExpansionType(EntityMapper &, mx::ast::Type::Builder, const pasta::PackExpansionType &);
void SerializeParenType(EntityMapper &, mx::ast::Type::Builder, const pasta::ParenType &);
void SerializePipeType(EntityMapper &, mx::ast::Type::Builder, const pasta::PipeType &);
void SerializePointerType(EntityMapper &, mx::ast::Type::Builder, const pasta::PointerType &);
void SerializeReferenceType(EntityMapper &, mx::ast::Type::Builder, const pasta::ReferenceType &);
void SerializeSubstTemplateTypeParmPackType(EntityMapper &, mx::ast::Type::Builder, const pasta::SubstTemplateTypeParmPackType &);
void SerializeSubstTemplateTypeParmType(EntityMapper &, mx::ast::Type::Builder, const pasta::SubstTemplateTypeParmType &);
void SerializeTagType(EntityMapper &, mx::ast::Type::Builder, const pasta::TagType &);
void SerializeTemplateSpecializationType(EntityMapper &, mx::ast::Type::Builder, const pasta::TemplateSpecializationType &);
void SerializeTemplateTypeParmType(EntityMapper &, mx::ast::Type::Builder, const pasta::TemplateTypeParmType &);
void SerializeVariableArrayType(EntityMapper &, mx::ast::Type::Builder, const pasta::VariableArrayType &);
void SerializeAutoType(EntityMapper &, mx::ast::Type::Builder, const pasta::AutoType &);
void SerializeConstantMatrixType(EntityMapper &, mx::ast::Type::Builder, const pasta::ConstantMatrixType &);
void SerializeDeducedTemplateSpecializationType(EntityMapper &, mx::ast::Type::Builder, const pasta::DeducedTemplateSpecializationType &);
void SerializeDependentSizedMatrixType(EntityMapper &, mx::ast::Type::Builder, const pasta::DependentSizedMatrixType &);
void SerializeEnumType(EntityMapper &, mx::ast::Type::Builder, const pasta::EnumType &);
void SerializeFunctionNoProtoType(EntityMapper &, mx::ast::Type::Builder, const pasta::FunctionNoProtoType &);
void SerializeFunctionProtoType(EntityMapper &, mx::ast::Type::Builder, const pasta::FunctionProtoType &);
void SerializeLValueReferenceType(EntityMapper &, mx::ast::Type::Builder, const pasta::LValueReferenceType &);
void SerializeObjCInterfaceType(EntityMapper &, mx::ast::Type::Builder, const pasta::ObjCInterfaceType &);
void SerializeRValueReferenceType(EntityMapper &, mx::ast::Type::Builder, const pasta::RValueReferenceType &);
void SerializeRecordType(EntityMapper &, mx::ast::Type::Builder, const pasta::RecordType &);
void SerializeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::Attr &);
void SerializeBuiltinAliasAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::BuiltinAliasAttr &);
void SerializeCalledOnceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CalledOnceAttr &);
void SerializeIFuncAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::IFuncAttr &);
void SerializeInheritableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::InheritableAttr &);
void SerializeInheritableParamAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::InheritableParamAttr &);
void SerializeInitPriorityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::InitPriorityAttr &);
void SerializeInitSegAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::InitSegAttr &);
void SerializeIntelOclBiccAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::IntelOclBiccAttr &);
void SerializeInternalLinkageAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::InternalLinkageAttr &);
void SerializeLTOVisibilityPublicAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LTOVisibilityPublicAttr &);
void SerializeLayoutVersionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LayoutVersionAttr &);
void SerializeLeafAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LeafAttr &);
void SerializeLifetimeBoundAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LifetimeBoundAttr &);
void SerializeLoaderUninitializedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LoaderUninitializedAttr &);
void SerializeLockReturnedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LockReturnedAttr &);
void SerializeLocksExcludedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LocksExcludedAttr &);
void SerializeLoopHintAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LoopHintAttr &);
void SerializeM68kInterruptAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::M68kInterruptAttr &);
void SerializeMIGServerRoutineAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MIGServerRoutineAttr &);
void SerializeMSABIAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MSABIAttr &);
void SerializeMSAllocatorAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MSAllocatorAttr &);
void SerializeMSInheritanceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MSInheritanceAttr &);
void SerializeMSNoVTableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MSNoVTableAttr &);
void SerializeMSP430InterruptAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MSP430InterruptAttr &);
void SerializeMSStructAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MSStructAttr &);
void SerializeMSVtorDispAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MSVtorDispAttr &);
void SerializeMaxFieldAlignmentAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MaxFieldAlignmentAttr &);
void SerializeMayAliasAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MayAliasAttr &);
void SerializeMicroMipsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MicroMipsAttr &);
void SerializeMinSizeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MinSizeAttr &);
void SerializeMinVectorWidthAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MinVectorWidthAttr &);
void SerializeMips16Attr(EntityMapper &, mx::ast::Attr::Builder, const pasta::Mips16Attr &);
void SerializeMipsInterruptAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MipsInterruptAttr &);
void SerializeMipsLongCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MipsLongCallAttr &);
void SerializeMipsShortCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MipsShortCallAttr &);
void SerializeModeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ModeAttr &);
void SerializeNSConsumedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NSConsumedAttr &);
void SerializeNSConsumesSelfAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NSConsumesSelfAttr &);
void SerializeNSErrorDomainAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NSErrorDomainAttr &);
void SerializeNSReturnsAutoreleasedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NSReturnsAutoreleasedAttr &);
void SerializeNSReturnsNotRetainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NSReturnsNotRetainedAttr &);
void SerializeNSReturnsRetainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NSReturnsRetainedAttr &);
void SerializeNakedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NakedAttr &);
void SerializeNoAliasAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoAliasAttr &);
void SerializeNoBuiltinAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoBuiltinAttr &);
void SerializeNoCommonAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoCommonAttr &);
void SerializeNoDebugAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoDebugAttr &);
void SerializeNoDestroyAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoDestroyAttr &);
void SerializeNoDuplicateAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoDuplicateAttr &);
void SerializeNoEscapeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoEscapeAttr &);
void SerializeNoInstrumentFunctionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoInstrumentFunctionAttr &);
void SerializeNoMicroMipsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoMicroMipsAttr &);
void SerializeNoMips16Attr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoMips16Attr &);
void SerializeNoProfileFunctionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoProfileFunctionAttr &);
void SerializeNoRandomizeLayoutAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoRandomizeLayoutAttr &);
void SerializeNoReturnAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoReturnAttr &);
void SerializeNoSanitizeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoSanitizeAttr &);
void SerializeNoSpeculativeLoadHardeningAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoSpeculativeLoadHardeningAttr &);
void SerializeNoSplitStackAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoSplitStackAttr &);
void SerializeNoStackProtectorAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoStackProtectorAttr &);
void SerializeNoThreadSafetyAnalysisAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoThreadSafetyAnalysisAttr &);
void SerializeNoThrowAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoThrowAttr &);
void SerializeNoUniqueAddressAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoUniqueAddressAttr &);
void SerializeNonNullAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NonNullAttr &);
void SerializeNotTailCalledAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NotTailCalledAttr &);
void SerializeOMPAllocateDeclAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPAllocateDeclAttr &);
void SerializeOMPCaptureKindAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPCaptureKindAttr &);
void SerializeOMPCaptureNoInitAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPCaptureNoInitAttr &);
void SerializeOMPDeclareSimdDeclAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPDeclareSimdDeclAttr &);
void SerializeOMPDeclareTargetDeclAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPDeclareTargetDeclAttr &);
void SerializeOMPDeclareVariantAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPDeclareVariantAttr &);
void SerializeOMPReferencedVarAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPReferencedVarAttr &);
void SerializeOMPThreadPrivateDeclAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OMPThreadPrivateDeclAttr &);
void SerializeOSConsumedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OSConsumedAttr &);
void SerializeOSConsumesThisAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OSConsumesThisAttr &);
void SerializeOSReturnsNotRetainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OSReturnsNotRetainedAttr &);
void SerializeOSReturnsRetainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OSReturnsRetainedAttr &);
void SerializeOSReturnsRetainedOnNonZeroAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OSReturnsRetainedOnNonZeroAttr &);
void SerializeOSReturnsRetainedOnZeroAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OSReturnsRetainedOnZeroAttr &);
void SerializeObjCBoxableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCBoxableAttr &);
void SerializeObjCBridgeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCBridgeAttr &);
void SerializeObjCBridgeMutableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCBridgeMutableAttr &);
void SerializeObjCBridgeRelatedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCBridgeRelatedAttr &);
void SerializeObjCClassStubAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCClassStubAttr &);
void SerializeObjCDesignatedInitializerAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCDesignatedInitializerAttr &);
void SerializeObjCDirectAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCDirectAttr &);
void SerializeObjCDirectMembersAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCDirectMembersAttr &);
void SerializeObjCExceptionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCExceptionAttr &);
void SerializeObjCExplicitProtocolImplAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCExplicitProtocolImplAttr &);
void SerializeObjCExternallyRetainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCExternallyRetainedAttr &);
void SerializeObjCIndependentClassAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCIndependentClassAttr &);
void SerializeObjCMethodFamilyAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCMethodFamilyAttr &);
void SerializeObjCNSObjectAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCNSObjectAttr &);
void SerializeObjCNonLazyClassAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCNonLazyClassAttr &);
void SerializeObjCNonRuntimeProtocolAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCNonRuntimeProtocolAttr &);
void SerializeObjCOwnershipAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCOwnershipAttr &);
void SerializeObjCPreciseLifetimeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCPreciseLifetimeAttr &);
void SerializeObjCRequiresPropertyDefsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCRequiresPropertyDefsAttr &);
void SerializeObjCRequiresSuperAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCRequiresSuperAttr &);
void SerializeObjCReturnsInnerPointerAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCReturnsInnerPointerAttr &);
void SerializeObjCRootClassAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCRootClassAttr &);
void SerializeObjCRuntimeNameAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCRuntimeNameAttr &);
void SerializeObjCRuntimeVisibleAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCRuntimeVisibleAttr &);
void SerializeObjCSubclassingRestrictedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCSubclassingRestrictedAttr &);
void SerializeOpenCLAccessAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLAccessAttr &);
void SerializeOpenCLIntelReqdSubGroupSizeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLIntelReqdSubGroupSizeAttr &);
void SerializeOpenCLKernelAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLKernelAttr &);
void SerializeOptimizeNoneAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OptimizeNoneAttr &);
void SerializeOverloadableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OverloadableAttr &);
void SerializeOverrideAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OverrideAttr &);
void SerializeOwnerAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OwnerAttr &);
void SerializeOwnershipAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OwnershipAttr &);
void SerializePackedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PackedAttr &);
void SerializeParamTypestateAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ParamTypestateAttr &);
void SerializeParameterABIAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ParameterABIAttr &);
void SerializePascalAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PascalAttr &);
void SerializePassObjectSizeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PassObjectSizeAttr &);
void SerializePatchableFunctionEntryAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PatchableFunctionEntryAttr &);
void SerializePcsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PcsAttr &);
void SerializePointerAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PointerAttr &);
void SerializePragmaClangBSSSectionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PragmaClangBSSSectionAttr &);
void SerializePragmaClangDataSectionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PragmaClangDataSectionAttr &);
void SerializePragmaClangRelroSectionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PragmaClangRelroSectionAttr &);
void SerializePragmaClangRodataSectionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PragmaClangRodataSectionAttr &);
void SerializePragmaClangTextSectionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PragmaClangTextSectionAttr &);
void SerializePreferredNameAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PreferredNameAttr &);
void SerializePreserveAllAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PreserveAllAttr &);
void SerializePreserveMostAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PreserveMostAttr &);
void SerializePtGuardedByAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PtGuardedByAttr &);
void SerializePtGuardedVarAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PtGuardedVarAttr &);
void SerializePureAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::PureAttr &);
void SerializeRISCVInterruptAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::RISCVInterruptAttr &);
void SerializeRandomizeLayoutAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::RandomizeLayoutAttr &);
void SerializeRegCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::RegCallAttr &);
void SerializeReinitializesAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ReinitializesAttr &);
void SerializeReleaseCapabilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ReleaseCapabilityAttr &);
void SerializeReleaseHandleAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ReleaseHandleAttr &);
void SerializeRenderScriptKernelAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::RenderScriptKernelAttr &);
void SerializeReqdWorkGroupSizeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ReqdWorkGroupSizeAttr &);
void SerializeRequiresCapabilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::RequiresCapabilityAttr &);
void SerializeRestrictAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::RestrictAttr &);
void SerializeRetainAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::RetainAttr &);
void SerializeReturnTypestateAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ReturnTypestateAttr &);
void SerializeReturnsNonNullAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ReturnsNonNullAttr &);
void SerializeReturnsTwiceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ReturnsTwiceAttr &);
void SerializeSYCLKernelAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SYCLKernelAttr &);
void SerializeSYCLSpecialClassAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SYCLSpecialClassAttr &);
void SerializeScopedLockableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ScopedLockableAttr &);
void SerializeSectionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SectionAttr &);
void SerializeSelectAnyAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SelectAnyAttr &);
void SerializeSentinelAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SentinelAttr &);
void SerializeSetTypestateAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SetTypestateAttr &);
void SerializeSharedTrylockFunctionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SharedTrylockFunctionAttr &);
void SerializeSpeculativeLoadHardeningAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SpeculativeLoadHardeningAttr &);
void SerializeStandaloneDebugAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::StandaloneDebugAttr &);
void SerializeStdCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::StdCallAttr &);
void SerializeStmtAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::StmtAttr &);
void SerializeStrictFPAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::StrictFPAttr &);
void SerializeSuppressAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SuppressAttr &);
void SerializeSwiftAsyncAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftAsyncAttr &);
void SerializeSwiftAsyncCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftAsyncCallAttr &);
void SerializeSwiftAsyncContextAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftAsyncContextAttr &);
void SerializeSwiftAsyncErrorAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftAsyncErrorAttr &);
void SerializeSwiftAsyncNameAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftAsyncNameAttr &);
void SerializeSwiftAttrAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftAttrAttr &);
void SerializeSwiftBridgeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftBridgeAttr &);
void SerializeSwiftBridgedTypedefAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftBridgedTypedefAttr &);
void SerializeSwiftCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftCallAttr &);
void SerializeSwiftContextAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftContextAttr &);
void SerializeSwiftErrorAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftErrorAttr &);
void SerializeSwiftErrorResultAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftErrorResultAttr &);
void SerializeSwiftIndirectResultAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftIndirectResultAttr &);
void SerializeSwiftNameAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftNameAttr &);
void SerializeSwiftNewTypeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftNewTypeAttr &);
void SerializeSwiftObjCMembersAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftObjCMembersAttr &);
void SerializeSwiftPrivateAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SwiftPrivateAttr &);
void SerializeSysVABIAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SysVABIAttr &);
void SerializeTLSModelAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TLSModelAttr &);
void SerializeTargetAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TargetAttr &);
void SerializeTargetClonesAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TargetClonesAttr &);
void SerializeTestTypestateAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TestTypestateAttr &);
void SerializeThisCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ThisCallAttr &);
void SerializeThreadAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ThreadAttr &);
void SerializeTransparentUnionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TransparentUnionAttr &);
void SerializeTrivialABIAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TrivialABIAttr &);
void SerializeTryAcquireCapabilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TryAcquireCapabilityAttr &);
void SerializeTypeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TypeAttr &);
void SerializeTypeNonNullAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TypeNonNullAttr &);
void SerializeTypeNullUnspecifiedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TypeNullUnspecifiedAttr &);
void SerializeTypeNullableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TypeNullableAttr &);
void SerializeTypeNullableResultAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TypeNullableResultAttr &);
void SerializeTypeTagForDatatypeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TypeTagForDatatypeAttr &);
void SerializeTypeVisibilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::TypeVisibilityAttr &);
void SerializeUPtrAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UPtrAttr &);
void SerializeUnavailableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UnavailableAttr &);
void SerializeUninitializedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UninitializedAttr &);
void SerializeUnlikelyAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UnlikelyAttr &);
void SerializeUnusedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UnusedAttr &);
void SerializeUseHandleAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UseHandleAttr &);
void SerializeUsedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UsedAttr &);
void SerializeUsingIfExistsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UsingIfExistsAttr &);
void SerializeUuidAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::UuidAttr &);
void SerializeVecReturnAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::VecReturnAttr &);
void SerializeVecTypeHintAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::VecTypeHintAttr &);
void SerializeVectorCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::VectorCallAttr &);
void SerializeVisibilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::VisibilityAttr &);
void SerializeWarnUnusedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WarnUnusedAttr &);
void SerializeWarnUnusedResultAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WarnUnusedResultAttr &);
void SerializeWeakAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WeakAttr &);
void SerializeWeakImportAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WeakImportAttr &);
void SerializeWeakRefAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WeakRefAttr &);
void SerializeWebAssemblyExportNameAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WebAssemblyExportNameAttr &);
void SerializeWebAssemblyImportModuleAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WebAssemblyImportModuleAttr &);
void SerializeWebAssemblyImportNameAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WebAssemblyImportNameAttr &);
void SerializeWorkGroupSizeHintAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::WorkGroupSizeHintAttr &);
void SerializeX86ForceAlignArgPointerAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::X86ForceAlignArgPointerAttr &);
void SerializeXRayInstrumentAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::XRayInstrumentAttr &);
void SerializeXRayLogArgsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::XRayLogArgsAttr &);
void SerializeZeroCallUsedRegsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ZeroCallUsedRegsAttr &);
void SerializeAArch64SVEPcsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AArch64SVEPcsAttr &);
void SerializeAArch64VectorPcsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AArch64VectorPcsAttr &);
void SerializeAMDGPUFlatWorkGroupSizeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AMDGPUFlatWorkGroupSizeAttr &);
void SerializeAMDGPUKernelCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AMDGPUKernelCallAttr &);
void SerializeAMDGPUNumSGPRAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AMDGPUNumSGPRAttr &);
void SerializeAMDGPUNumVGPRAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AMDGPUNumVGPRAttr &);
void SerializeAMDGPUWavesPerEUAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AMDGPUWavesPerEUAttr &);
void SerializeARMInterruptAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ARMInterruptAttr &);
void SerializeAVRInterruptAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AVRInterruptAttr &);
void SerializeAVRSignalAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AVRSignalAttr &);
void SerializeAbiTagAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AbiTagAttr &);
void SerializeAcquireCapabilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AcquireCapabilityAttr &);
void SerializeAcquireHandleAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AcquireHandleAttr &);
void SerializeAcquiredAfterAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AcquiredAfterAttr &);
void SerializeAcquiredBeforeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AcquiredBeforeAttr &);
void SerializeAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AddressSpaceAttr &);
void SerializeAliasAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AliasAttr &);
void SerializeAlignMac68kAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AlignMac68kAttr &);
void SerializeAlignNaturalAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AlignNaturalAttr &);
void SerializeAlignValueAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AlignValueAttr &);
void SerializeAlignedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AlignedAttr &);
void SerializeAllocAlignAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AllocAlignAttr &);
void SerializeAllocSizeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AllocSizeAttr &);
void SerializeAlwaysDestroyAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AlwaysDestroyAttr &);
void SerializeAnalyzerNoReturnAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AnalyzerNoReturnAttr &);
void SerializeAnnotateAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AnnotateAttr &);
void SerializeAnnotateTypeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AnnotateTypeAttr &);
void SerializeAnyX86InterruptAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AnyX86InterruptAttr &);
void SerializeAnyX86NoCallerSavedRegistersAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AnyX86NoCallerSavedRegistersAttr &);
void SerializeAnyX86NoCfCheckAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AnyX86NoCfCheckAttr &);
void SerializeArcWeakrefUnavailableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ArcWeakrefUnavailableAttr &);
void SerializeArgumentWithTypeTagAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ArgumentWithTypeTagAttr &);
void SerializeArmBuiltinAliasAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ArmBuiltinAliasAttr &);
void SerializeArmMveStrictPolymorphismAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ArmMveStrictPolymorphismAttr &);
void SerializeArtificialAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ArtificialAttr &);
void SerializeAsmLabelAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AsmLabelAttr &);
void SerializeAssertCapabilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AssertCapabilityAttr &);
void SerializeAssertExclusiveLockAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AssertExclusiveLockAttr &);
void SerializeAssertSharedLockAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AssertSharedLockAttr &);
void SerializeAssumeAlignedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AssumeAlignedAttr &);
void SerializeAssumptionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AssumptionAttr &);
void SerializeAvailabilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AvailabilityAttr &);
void SerializeBPFPreserveAccessIndexAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::BPFPreserveAccessIndexAttr &);
void SerializeBTFDeclTagAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::BTFDeclTagAttr &);
void SerializeBTFTypeTagAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::BTFTypeTagAttr &);
void SerializeBlocksAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::BlocksAttr &);
void SerializeBuiltinAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::BuiltinAttr &);
void SerializeC11NoReturnAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::C11NoReturnAttr &);
void SerializeCDeclAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CDeclAttr &);
void SerializeCFAuditedTransferAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CFAuditedTransferAttr &);
void SerializeCFConsumedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CFConsumedAttr &);
void SerializeCFGuardAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CFGuardAttr &);
void SerializeCFICanonicalJumpTableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CFICanonicalJumpTableAttr &);
void SerializeCFReturnsNotRetainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CFReturnsNotRetainedAttr &);
void SerializeCFReturnsRetainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CFReturnsRetainedAttr &);
void SerializeCFUnknownTransferAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CFUnknownTransferAttr &);
void SerializeCPUDispatchAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CPUDispatchAttr &);
void SerializeCPUSpecificAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CPUSpecificAttr &);
void SerializeCUDAConstantAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDAConstantAttr &);
void SerializeCUDADeviceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDADeviceAttr &);
void SerializeCUDADeviceBuiltinSurfaceTypeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDADeviceBuiltinSurfaceTypeAttr &);
void SerializeCUDADeviceBuiltinTextureTypeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDADeviceBuiltinTextureTypeAttr &);
void SerializeCUDAGlobalAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDAGlobalAttr &);
void SerializeCUDAHostAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDAHostAttr &);
void SerializeCUDAInvalidTargetAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDAInvalidTargetAttr &);
void SerializeCUDALaunchBoundsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDALaunchBoundsAttr &);
void SerializeCUDASharedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CUDASharedAttr &);
void SerializeCXX11NoReturnAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CXX11NoReturnAttr &);
void SerializeCallableWhenAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CallableWhenAttr &);
void SerializeCallbackAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CallbackAttr &);
void SerializeCapabilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CapabilityAttr &);
void SerializeCapturedRecordAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CapturedRecordAttr &);
void SerializeCarriesDependencyAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CarriesDependencyAttr &);
void SerializeCleanupAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CleanupAttr &);
void SerializeCmseNSCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CmseNSCallAttr &);
void SerializeCmseNSEntryAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CmseNSEntryAttr &);
void SerializeCodeSegAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CodeSegAttr &);
void SerializeColdAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ColdAttr &);
void SerializeCommonAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::CommonAttr &);
void SerializeConstAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ConstAttr &);
void SerializeConstInitAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ConstInitAttr &);
void SerializeConstructorAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ConstructorAttr &);
void SerializeConsumableAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ConsumableAttr &);
void SerializeConsumableAutoCastAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ConsumableAutoCastAttr &);
void SerializeConsumableSetOnReadAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ConsumableSetOnReadAttr &);
void SerializeConvergentAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ConvergentAttr &);
void SerializeDLLExportAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DLLExportAttr &);
void SerializeDLLExportStaticLocalAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DLLExportStaticLocalAttr &);
void SerializeDLLImportAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DLLImportAttr &);
void SerializeDLLImportStaticLocalAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DLLImportStaticLocalAttr &);
void SerializeDeclOrStmtAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DeclOrStmtAttr &);
void SerializeDeprecatedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DeprecatedAttr &);
void SerializeDestructorAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DestructorAttr &);
void SerializeDiagnoseAsBuiltinAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DiagnoseAsBuiltinAttr &);
void SerializeDiagnoseIfAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DiagnoseIfAttr &);
void SerializeDisableSanitizerInstrumentationAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DisableSanitizerInstrumentationAttr &);
void SerializeDisableTailCallsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::DisableTailCallsAttr &);
void SerializeEmptyBasesAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::EmptyBasesAttr &);
void SerializeEnableIfAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::EnableIfAttr &);
void SerializeEnforceTCBAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::EnforceTCBAttr &);
void SerializeEnforceTCBLeafAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::EnforceTCBLeafAttr &);
void SerializeEnumExtensibilityAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::EnumExtensibilityAttr &);
void SerializeErrorAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ErrorAttr &);
void SerializeExcludeFromExplicitInstantiationAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ExcludeFromExplicitInstantiationAttr &);
void SerializeExclusiveTrylockFunctionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ExclusiveTrylockFunctionAttr &);
void SerializeExternalSourceSymbolAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ExternalSourceSymbolAttr &);
void SerializeFallThroughAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FallThroughAttr &);
void SerializeFastCallAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FastCallAttr &);
void SerializeFinalAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FinalAttr &);
void SerializeFlagEnumAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FlagEnumAttr &);
void SerializeFlattenAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FlattenAttr &);
void SerializeFormatArgAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FormatArgAttr &);
void SerializeFormatAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FormatAttr &);
void SerializeFunctionReturnThunksAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::FunctionReturnThunksAttr &);
void SerializeGNUInlineAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::GNUInlineAttr &);
void SerializeGuardedByAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::GuardedByAttr &);
void SerializeGuardedVarAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::GuardedVarAttr &);
void SerializeHIPManagedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::HIPManagedAttr &);
void SerializeHLSLNumThreadsAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::HLSLNumThreadsAttr &);
void SerializeHLSLSV_GroupIndexAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::HLSLSV_GroupIndexAttr &);
void SerializeHLSLShaderAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::HLSLShaderAttr &);
void SerializeHotAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::HotAttr &);
void SerializeIBActionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::IBActionAttr &);
void SerializeIBOutletAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::IBOutletAttr &);
void SerializeIBOutletCollectionAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::IBOutletCollectionAttr &);
void SerializeLikelyAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::LikelyAttr &);
void SerializeMustTailAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::MustTailAttr &);
void SerializeNoDerefAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoDerefAttr &);
void SerializeNoInlineAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoInlineAttr &);
void SerializeNoMergeAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::NoMergeAttr &);
void SerializeObjCGCAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCGCAttr &);
void SerializeObjCInertUnsafeUnretainedAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCInertUnsafeUnretainedAttr &);
void SerializeObjCKindOfAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::ObjCKindOfAttr &);
void SerializeOpenCLConstantAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLConstantAddressSpaceAttr &);
void SerializeOpenCLGenericAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLGenericAddressSpaceAttr &);
void SerializeOpenCLGlobalAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLGlobalAddressSpaceAttr &);
void SerializeOpenCLGlobalDeviceAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLGlobalDeviceAddressSpaceAttr &);
void SerializeOpenCLGlobalHostAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLGlobalHostAddressSpaceAttr &);
void SerializeOpenCLLocalAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLLocalAddressSpaceAttr &);
void SerializeOpenCLPrivateAddressSpaceAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLPrivateAddressSpaceAttr &);
void SerializeOpenCLUnrollHintAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::OpenCLUnrollHintAttr &);
void SerializePtr32Attr(EntityMapper &, mx::ast::Attr::Builder, const pasta::Ptr32Attr &);
void SerializePtr64Attr(EntityMapper &, mx::ast::Attr::Builder, const pasta::Ptr64Attr &);
void SerializeSPtrAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::SPtrAttr &);
void SerializeAlwaysInlineAttr(EntityMapper &, mx::ast::Attr::Builder, const pasta::AlwaysInlineAttr &);
void SerializeCXXBaseSpecifier(EntityMapper &, mx::ast::Pseudo::Builder, const pasta::CXXBaseSpecifier &);
void SerializeTemplateArgument(EntityMapper &, mx::ast::Pseudo::Builder, const pasta::TemplateArgument &);
void SerializeTemplateParameterList(EntityMapper &, mx::ast::Pseudo::Builder, const pasta::TemplateParameterList &);
void SerializeDesignator(EntityMapper &, mx::ast::Pseudo::Builder, const pasta::Designator &);
}  // namespace indexer
