// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#pragma once

#include <cstdint>

namespace mx {
enum class TokenUseSelector : unsigned short {
  ACCESS_SPECIFIER_TOKEN,
  ACCESSOR_TOKEN,
  ALIAS_TOKEN,
  AMP_AMP_TOKEN,
  ASSEMBLY_TOKEN,
  AT_CATCH_TOKEN,
  AT_FINALLY_TOKEN,
  AT_START_TOKEN,
  AT_SYNCHRONIZED_TOKEN,
  AT_TOKEN,
  AT_TRY_TOKEN,
  ATTRIBUTE_TOKEN,
  BASE_TOKEN_END,
  BASE_TYPE_TOKEN,
  BREAK_TOKEN,
  BRIDGE_KEYWORD_TOKEN,
  BUILTIN_TOKEN,
  CAPTURE_DEFAULT_TOKEN,
  CARET_TOKEN,
  CASE_TOKEN,
  CATCH_TOKEN,
  CATEGORY_NAME_TOKEN,
  COAWAIT_TOKEN,
  COLON_COLON_TOKEN,
  COLON_TOKEN,
  CONTINUE_TOKEN,
  DECLARATOR_END_TOKEN,
  DEFAULT_ARGUMENT_TOKEN,
  DEFAULT_TOKEN,
  DESTROYED_TYPE_TOKEN,
  DO_TOKEN,
  DOT_TOKEN,
  ELLIPSIS_TOKEN,
  ELSE_TOKEN,
  END_OF_DEFINITION_TOKEN,
  ENUM_TOKEN,
  EQUAL_OR_COLON_TOKEN,
  EXCEPT_TOKEN,
  EXPORT_TOKEN,
  EXPRESSION_TOKEN,
  EXTERN_TOKEN,
  FIELD_TOKEN,
  FINALLY_TOKEN,
  FIRST_COLON_TOKEN,
  FIRST_INNER_TOKEN,
  FIRST_OUTER_TOKEN,
  FOR_TOKEN,
  FRIEND_TOKEN,
  GENERIC_TOKEN,
  GETTER_NAME_TOKEN,
  GOTO_TOKEN,
  IDENTIFIER_TOKEN,
  IF_TOKEN,
  INSTANCE_VARIABLE_L_BRACE_TOKEN,
  INSTANCE_VARIABLE_R_BRACE_TOKEN,
  ISA_MEMBER_TOKEN,
  ITERATOR_KW_TOKEN,
  KEYWORD_TOKEN,
  L_ANGLE_TOKEN,
  L_BRACE_TOKEN,
  L_BRACKET_TOKEN,
  L_PAREN_TOKEN,
  LABEL_TOKEN,
  LEAVE_TOKEN,
  LEFT_ANGLE_TOKEN,
  LEFT_BRACE_TOKEN,
  LEFT_BRACKET_TOKEN,
  LEFT_TOKEN,
  MEMBER_TOKEN,
  NAME_TOKEN,
  NAMESPACE_KEY_TOKEN,
  NAMESPACE_TOKEN,
  OPERATION_TOKEN,
  OPERATOR_TOKEN,
  PACK_TOKEN,
  PARAMETER_PACK_TOKEN,
  POINT_OF_INSTANTIATION,
  PROPERTY_INSTANCE_VARIABLE_DECLARATION_TOKEN,
  PROTOCOL_ID_TOKEN,
  QUESTION_TOKEN,
  R_ANGLE_TOKEN,
  R_BRACE_TOKEN,
  R_BRACKET_TOKEN,
  R_PAREN_TOKEN,
  RECEIVER_TOKEN,
  REQUIRES_KEYWORD_TOKEN,
  RETURN_TOKEN,
  RIGHT_ANGLE_TOKEN,
  RIGHT_BRACE_TOKEN,
  RIGHT_BRACKET_TOKEN,
  RIGHT_TOKEN,
  SECOND_COLON_TOKEN,
  SELECTOR_START_TOKEN,
  SEMI_TOKEN,
  SETTER_NAME_TOKEN,
  STAR_TOKEN,
  SUPER_CLASS_TOKEN,
  SUPER_TOKEN,
  SWITCH_TOKEN,
  TARGET_CALL_TOKEN,
  TARGET_NAME_TOKEN,
  TEMPLATE_KEYWORD_TOKEN,
  THROW_TOKEN,
  TILDE_TOKEN,
  TOKEN,
  TOKEN_TOKEN,
  TRY_TOKEN,
  TYPE_SPEC_END_TOKEN,
  TYPE_SPEC_START_TOKEN,
  TYPENAME_TOKEN,
  UD_SUFFIX_TOKEN,
  USED_TOKEN,
  USING_TOKEN,
  VARIANCE_TOKEN,
  WHILE_TOKEN,
};

inline static const char *EnumerationName(TokenUseSelector) {
  return "TokenUseSelector";
}

inline static constexpr unsigned NumEnumerators(TokenUseSelector) {
  return 115;
}

const char *EnumeratorName(TokenUseSelector);

} // namespace mx
