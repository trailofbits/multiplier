// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#pragma once

#include <cstdint>

namespace mx {
enum class DeclUseSelector : unsigned short {
  ACTING_DEFINITION,
  ALIASED_NAMESPACE,
  ANONYMOUS_DECLARATION_WITH_TYPEDEF_NAME,
  ANONYMOUS_FIELD,
  ARRAY_WITH_OBJECTS_METHOD,
  AS_CXX_RECORD_DECLARATION,
  AS_DECLARATION,
  AS_RECORD_DECLARATION,
  AS_TAG_DECLARATION,
  AT_INDEX_METHOD_DECLARATION,
  BLOCK_DECLARATION,
  BLOCK_MANGLING_CONTEXT_DECLARATION,
  BODY,
  BOXING_METHOD,
  CALL_OPERATOR,
  CALLEE_DECLARATION,
  CAPTURED_DECLARATION,
  CAPTURED_RECORD_DECLARATION,
  CATCH_PARAMETER_DECLARATION,
  CATEGORY_DECLARATION,
  CLASS_INTERFACE,
  CLASS_RECEIVER,
  COMMAND_DECLARATION,
  CONDITION_VARIABLE,
  CONSTANT_TARGET,
  CONSTRUCTED_BASE_CLASS,
  CONSTRUCTED_BASE_CLASS_SHADOW_DECLARATION,
  CONSTRUCTOR,
  CONTAINING_INTERFACE,
  CONTEXT_PARAMETER,
  CONVERSION_FUNCTION,
  CORRESPONDING_CONSTRUCTOR,
  DECLARATION,
  DECOMPOSED_DECLARATION,
  DEDUCED_TEMPLATE,
  DEPENDENT_CALL_OPERATOR,
  DEPENDENT_LAMBDA_CALL_OPERATOR,
  DESCRIBED_ALIAS_TEMPLATE,
  DESCRIBED_CLASS_TEMPLATE,
  DESCRIBED_FUNCTION_TEMPLATE,
  DESCRIBED_TEMPLATE,
  DESCRIBED_VARIABLE_TEMPLATE,
  DESTRUCTOR,
  DICTIONARY_WITH_OBJECTS_METHOD,
  DIRECT_CALLEE,
  ENUM_DECLARATION,
  ERROR_DOMAIN,
  EXCEPTION_DECLARATION,
  EXCEPTION_SPEC_DECLARATION,
  EXCEPTION_SPEC_TEMPLATE,
  EXPLICIT_PROPERTY,
  EXTENDING_DECLARATION,
  FIELD,
  FIND_PROPERTY_DECLARATION,
  FIRST_QUALIFIER_FOUND_IN_SCOPE,
  FOUND_DECLARATION,
  FRIEND_DECLARATION,
  FUNCTION,
  FUNCTION_DECLARATION,
  GETTER_METHOD_DECLARATION,
  GUID_DECLARATION,
  HOLDING_VARIABLE,
  IMPLEMENTATION,
  IMPLICIT_PROPERTY_GETTER,
  IMPLICIT_PROPERTY_SETTER,
  INITIALIZED_FIELD_IN_UNION,
  INITIALIZING_DECLARATION,
  INSTANTIATED_FROM_DECLARATION,
  INSTANTIATED_FROM_MEMBER,
  INSTANTIATED_FROM_MEMBER_CLASS,
  INSTANTIATED_FROM_MEMBER_ENUM,
  INSTANTIATED_FROM_MEMBER_FUNCTION,
  INSTANTIATED_FROM_MEMBER_TEMPLATE,
  INSTANTIATED_FROM_STATIC_DATA_MEMBER,
  INSTANTIATED_FROM_USING_DECLARATION,
  INTERFACE,
  INTERFACE_DECLARATION,
  INTRODUCER,
  IS_LOCAL_CLASS,
  IS_OBJ_C_REQUIRES_PROPERTY_DEFINITIONS,
  LABEL,
  LAMBDA_CALL_OPERATOR,
  LAMBDA_CLASS,
  LAMBDA_CONTEXT_DECLARATION,
  LIFETIME_EXTENDED_TEMPORARY_DECLARATION,
  LOOP_VARIABLE,
  MEMBER_DECLARATION,
  METHOD_DECLARATION,
  MOST_RECENT_CXX_RECORD_DECLARATION,
  NAMING_CLASS,
  NEXT_CLASS_CATEGORY,
  NEXT_INSTANCE_VARIABLE,
  NEXT_USING_SHADOW_DECLARATION,
  NOMINATED_BASE_CLASS,
  NOMINATED_BASE_CLASS_SHADOW_DECLARATION,
  NOMINATED_NAMESPACE_AS_WRITTEN,
  NON_CLOSURE_CONTEXT,
  NRVO_CANDIDATE,
  OPERATOR_DELETE,
  OPERATOR_NEW,
  OWNED_TAG_DECLARATION,
  PACK,
  PARAMETER,
  PARAMETER_PACK,
  PARENT,
  POINTEE_CXX_RECORD_DECLARATION,
  PRIMARY_TEMPLATE,
  PROMISE_DECLARATION,
  PROPERTY_DECLARATION,
  PROPERTY_INSTANCE_VARIABLE_DECLARATION,
  PROTOCOL,
  RECEIVER_INTERFACE,
  RECORD_DECLARATION,
  REFERENCED_DECLARATION,
  REFERENCED_DECLARATION_OF_CALLEE,
  SELF_DECLARATION,
  SETTER_METHOD_DECLARATION,
  SINGLE_DECLARATION,
  SOURCE_BIT_FIELD,
  SPECIALIZATION,
  SPECIALIZED_TEMPLATE,
  SUPER_CLASS,
  TARGET_CONSTRUCTOR,
  TARGET_DECLARATION,
  TARGET_UNION_FIELD,
  TEMPLATE_INSTANTIATION_PATTERN,
  TEMPLATED_DECLARATION,
  TYPE_CONSTRAINT_CONCEPT,
  TYPEDEF_NAME_FOR_ANONYMOUS_DECLARATION,
  UNDERLYING_DECLARATION,
  VARIABLE_DECLARATION,
};

inline static const char *EnumerationName(DeclUseSelector) {
  return "DeclUseSelector";
}

inline static constexpr unsigned NumEnumerators(DeclUseSelector) {
  return 131;
}

const char *EnumeratorName(DeclUseSelector);

} // namespace mx
