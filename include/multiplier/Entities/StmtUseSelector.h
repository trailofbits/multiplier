// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#pragma once

#include <cstdint>

namespace mx {
enum class StmtUseSelector : unsigned short {
  ADDRESS_SPACE_EXPRESSION,
  ALIGNMENT,
  ALIGNMENT_EXPRESSION,
  ALLOCATE,
  ALLOCATOR,
  ARGUMENT,
  ARGUMENT_EXPRESSION,
  ARRAY_FILLER,
  ARRAY_SIZE,
  ASSEMBLY_STRING,
  ASSERT_EXPRESSION,
  ASSOCIATED_STATEMENT,
  BASE,
  BASE_EXPRESSION,
  BEGIN_STATEMENT,
  BEST_DYNAMIC_CLASS_TYPE_EXPRESSION,
  BINDING,
  BIT_WIDTH,
  BLOCK,
  BODY,
  CALCULATE_LAST_ITERATION,
  CALLEE,
  CAPTURED_STATEMENT,
  CATCH_BODY,
  CHOSEN_SUB_EXPRESSION,
  COLLECTION,
  COLUMN_EXPRESSION,
  COLUMN_INDEX,
  COMBINED_CONDITION,
  COMBINED_DISTANCE_CONDITION,
  COMBINED_ENSURE_UPPER_BOUND,
  COMBINED_INITIALIZER,
  COMBINED_LOWER_BOUND_VARIABLE,
  COMBINED_NEXT_LOWER_BOUND,
  COMBINED_NEXT_UPPER_BOUND,
  COMBINED_PARALLEL_FOR_IN_DISTANCE_CONDITION,
  COMBINED_UPPER_BOUND_VARIABLE,
  COMBINER,
  COMBINER_IN,
  COMBINER_OUT,
  COMMON,
  COMMON_EXPRESSION,
  COMPOUND_BODY,
  COMPOUND_STATEMENT_BODY,
  CONDITION,
  CONDITION_VARIABLE_DECLARATION_STATEMENT,
  CONFIG,
  CONSTRAINT_EXPRESSION,
  CONSTRUCT_EXPRESSION,
  CONTROLLING_EXPRESSION,
  COOKED_LITERAL,
  DEALLOCATE,
  DEFAULT_ARGUMENT,
  DIMENSION_EXPRESSION,
  DISTANCE_FUNC,
  DISTANCE_INCREMENT,
  ELEMENT,
  ELSE_,
  END_STATEMENT,
  ENSURE_UPPER_BOUND,
  EXCEPT_HANDLER,
  EXCEPTION_HANDLER,
  EXPRESSION,
  EXPRESSION_OPERAND,
  EXPRESSION_STATEMENT,
  FALLTHROUGH_HANDLER,
  FALSE_EXPRESSION,
  FILTER_EXPRESSION,
  FINAL_SUSPEND_STATEMENT,
  FINALLY_BODY,
  FINALLY_HANDLER,
  FINALLY_STATEMENT,
  FIRST_SWITCH_CASE,
  FUNCTION_NAME,
  GETTER_CXX_CONSTRUCTOR,
  HANDLER,
  HANDLER_BLOCK,
  IF_STATEMENT,
  IGNORE_CASTS,
  IGNORE_CONTAINERS,
  IGNORE_CONVERSION_OPERATOR_SINGLE_STEP,
  IGNORE_IMP_CASTS,
  IGNORE_IMPLICIT,
  IGNORE_IMPLICIT_AS_WRITTEN,
  IGNORE_PARENTHESES,
  IGNORE_PARENTHESIS_BASE_CASTS,
  IGNORE_PARENTHESIS_CASTS,
  IGNORE_PARENTHESIS_IMP_CASTS,
  IGNORE_PARENTHESIS_L_VALUE_CASTS,
  IGNORE_PARENTHESIS_NOOP_CASTS,
  IGNORE_UNLESS_SPELLED_IN_SOURCE,
  IMPLICIT_OBJECT_ARGUMENT,
  IN_CLASS_INITIALIZER,
  INCREMENT,
  INDEX,
  INDIRECT_EXPRESSION,
  INITIALIZER,
  INITIALIZER_EXPRESSION,
  INITIALIZER_ORIGINAL,
  INITIALIZER_PRIVATE,
  INITIALIZER_SUSPEND_STATEMENT,
  INNERMOST_CAPTURED_STATEMENT,
  INSTANCE_RECEIVER,
  IS_LAST_ITERATION_VARIABLE,
  ITERATION_VARIABLE,
  KEY_EXPRESSION,
  LAST_ITERATION,
  LENGTH,
  LHS,
  LOOP_STATEMENT,
  LOOP_VARIABLE_FUNC,
  LOOP_VARIABLE_REFERENCE,
  LOOP_VARIABLE_STATEMENT,
  LOWER_BOUND,
  LOWER_BOUND_VARIABLE,
  MAPPER_VARIABLE_REFERENCE,
  MAX,
  MAX_THREADS,
  MESSAGE,
  MIN,
  MIN_BLOCKS,
  NEXT_LOWER_BOUND,
  NEXT_SWITCH_CASE,
  NEXT_UPPER_BOUND,
  NOEXCEPT_EXPRESSION,
  NUM_BITS_EXPRESSION,
  NUM_ITERATIONS,
  OBJ_C_PROPERTY,
  OFFSET,
  OPAQUE_VALUE,
  OPERAND,
  OPERATOR_COAWAIT_LOOKUP,
  OPERATOR_DELETE_THIS_ARGUMENT,
  ORDER,
  ORDER_FAIL,
  PATTERN,
  PLACEHOLDER_TYPE_CONSTRAINT,
  POINTER,
  PRE_CONDITION,
  PRE_INITIALIZERS,
  PREV_ENSURE_UPPER_BOUND,
  PREV_LOWER_BOUND_VARIABLE,
  PREV_UPPER_BOUND_VARIABLE,
  PROMISE_CALL,
  PROMISE_DECLARATION_STATEMENT,
  QUERIED_EXPRESSION,
  RANGE_INITIALIZER,
  RANGE_STATEMENT,
  RAW_STATEMENT,
  READY_EXPRESSION,
  REDUCTION_REFERENCE,
  REFERENCE,
  REPLACEMENT,
  REQUIRES_CLAUSE,
  RESULT_DECLARATION,
  RESULT_EXPRESSION,
  RESUME_EXPRESSION,
  RETURN_STATEMENT,
  RETURN_STATEMENT_ON_ALLOC_FAILURE,
  RETURN_VALUE,
  RETURN_VALUE_INITIALIZER,
  RHS,
  ROW_EXPRESSION,
  ROW_INDEX,
  SCOPE,
  SEMANTIC_FORM,
  SETTER_CXX_ASSIGNMENT,
  SIMDLEN,
  SIZE_EXPRESSION,
  SOURCE_EXPRESSION,
  SRC_EXPRESSION,
  STATEMENT,
  STATEMENT_EXPRESSION_RESULT,
  STRIDE,
  STRIDE_VARIABLE,
  STRING,
  STRIP_LABEL_LIKE_STATEMENTS,
  STRUCTURED_BLOCK,
  SUB_EXPRESSION,
  SUB_EXPRESSION_AS_WRITTEN,
  SUB_STATEMENT,
  SUCCESS_VALUE,
  SUSPEND_EXPRESSION,
  SYNCH_BODY,
  SYNCH_EXPRESSION,
  SYNTACTIC_FORM,
  TARGET,
  TASK_REDUCTION_REFERENCE_EXPRESSION,
  TEMPORARY_EXPRESSION,
  THEN,
  THROW_EXPRESSION,
  TRAILING_REQUIRES_CLAUSE,
  TRANSFORMED_STATEMENT,
  TRUE_EXPRESSION,
  TRY_BLOCK,
  TRY_BODY,
  UNDERLYING_EXPRESSION,
  UNINSTANTIATED_DEFAULT_ARGUMENT,
  UPDATE_EXPRESSION,
  UPDATER,
  UPPER_BOUND_VARIABLE,
  V,
  VALUE,
  VALUE1,
  VALUE2,
  VARIANT_FUNC_REFERENCE,
  WEAK,
  X,
};

inline static const char *EnumerationName(StmtUseSelector) {
  return "StmtUseSelector";
}

inline static constexpr unsigned NumEnumerators(StmtUseSelector) {
  return 208;
}

const char *EnumeratorName(StmtUseSelector);

} // namespace mx
