// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#pragma once

#include <cstdint>

namespace mx {
enum class TypeUseSelector : unsigned short {
  ALIASED_TYPE,
  ALIGNMENT_TYPE,
  ALLOCATED_TYPE,
  ARGUMENT_TYPE,
  ARRAY_ELEMENT_TYPE_NO_TYPE_QUALIFIED,
  AS_COMPLEX_INTEGER_TYPE,
  AS_OBJ_C_INTERFACE_POINTER_TYPE,
  AS_OBJ_C_INTERFACE_TYPE,
  AS_OBJ_C_QUALIFIED_CLASS_TYPE,
  AS_OBJ_C_QUALIFIED_ID_TYPE,
  AS_OBJ_C_QUALIFIED_INTERFACE_TYPE,
  AS_PLACEHOLDER_TYPE,
  AS_STRUCTURE_TYPE,
  AS_TYPE,
  AS_UNION_TYPE,
  ATOMIC_UNQUALIFIED_TYPE,
  BASE_TYPE,
  CALL_RESULT_TYPE,
  CALL_RETURN_TYPE,
  CANONICAL_TYPE,
  CAPTURED_VLA_TYPE,
  CAUGHT_TYPE,
  CLASS_,
  CLASS_RECEIVER,
  CLASS_RECEIVER_TYPE,
  COMPUTATION_LHS_TYPE,
  COMPUTATION_RESULT_TYPE,
  CONTAINED_AUTO_TYPE,
  CONTAINED_DEDUCED_TYPE,
  CONVERSION_TYPE,
  DECLARED_RETURN_TYPE,
  DEFAULT_ARGUMENT,
  DEFAULT_ARGUMENT_INFO,
  DEREF_TYPE,
  DEREF_TYPE_TOKEN,
  DESTROYED_TYPE,
  DESUGAR,
  DESUGARED_TYPE,
  ELEMENT_TYPE,
  ENCODED_TYPE,
  EQUIVALENT_TYPE,
  FRIEND_TYPE,
  FUNCTION_TYPE,
  IGNORE_PARENTHESES,
  INJECTED_SPECIALIZATION_TYPE,
  INJECTED_TST,
  INNER_TYPE,
  INTEGER_TYPE,
  INTERFACE,
  INTERFACE_TOKEN,
  INTERFACE_TYPE,
  LAMBDA_TYPE,
  LOCAL_UNQUALIFIED_TYPE,
  LOCALLY_UNQUALIFIED_SINGLE_STEP_DESUGARED_TYPE,
  MATCHING_C_TYPE,
  MATCHING_C_TYPE_TOKEN,
  MODIFIED_TYPE,
  NAMED_TYPE,
  NON_L_VALUE_EXPRESSION_TYPE,
  NON_PACK_EXPANSION_TYPE,
  NON_REFERENCE_TYPE,
  NULL_POINTER_TYPE,
  OBJECT_TYPE,
  ORIGINAL_TYPE,
  PARAMETER_TYPE,
  PARAMETER_TYPE_FOR_DECLARATION,
  PATTERN,
  POINTEE_OR_ARRAY_ELEMENT_TYPE,
  POINTEE_TYPE,
  POINTEE_TYPE_AS_WRITTEN,
  PROMOTION_TYPE,
  QUERIED_TYPE,
  RECEIVER_TYPE,
  REPLACED_PARAMETER,
  REPLACEMENT_TYPE,
  RESOLVED_TYPE,
  RETURN_TYPE,
  SCOPE_TYPE,
  SIGNATURE_AS_WRITTEN,
  SINGLE_STEP_DESUGARED_TYPE,
  STRIP_OBJ_C_KIND_OF_TYPE,
  STRIP_OBJ_C_KIND_OF_TYPE_AND_QUALIFIERS,
  SUPER_CLASS_TYPE,
  SUPER_RECEIVER_TYPE,
  SUPER_TYPE,
  SVE_ELEMENT_TYPE,
  THIS_OBJECT_TYPE,
  THIS_TYPE,
  TYPE,
  TYPE_AS_WRITTEN,
  TYPE_FOR_DECLARATION,
  TYPE_HINT,
  TYPE_HINT_TOKEN,
  TYPE_OF_ARGUMENT,
  TYPE_OPERAND,
  TYPE_OPERAND_SOURCE_INFO,
  TYPEDEF_TYPE,
  TYPEDEF_TYPE_TOKEN,
  UNDERLYING_TYPE,
  UNQUALIFIED_DESUGARED_TYPE,
  UNQUALIFIED_TYPE,
  VALUE_TYPE,
  WITH_CONST,
  WITH_RESTRICT,
  WITH_VOLATILE,
  WITHOUT_LOCAL_FAST_QUALIFIERS,
  WRAPPED_TYPE,
  WRITTEN_TYPE,
};

inline static const char *EnumerationName(TypeUseSelector) {
  return "TypeUseSelector";
}

inline static constexpr unsigned NumEnumerators(TypeUseSelector) {
  return 108;
}

const char *EnumeratorName(TypeUseSelector);

} // namespace mx
