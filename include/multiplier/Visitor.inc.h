// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#ifndef MX_APPLY_METHOD
#  define MX_APPLY_METHOD(obj, meth) obj.meth()
#endif
#ifndef MX_APPLY_FUNC
#  define MX_APPLY_FUNC(obj, meth) meth(obj)
#endif
#ifndef MX_VISIT_BOOL
#  define MX_VISIT_BOOL(...)
#endif
#ifndef MX_VISIT_INT
#  define MX_VISIT_INT(...)
#endif
#ifndef MX_VISIT_ENUM
#  define MX_VISIT_ENUM(...)
#endif
#ifndef MX_VISIT_TEXT
#  define MX_VISIT_TEXT(...)
#endif
#ifndef MX_VISIT_PATH
#  define MX_VISIT_PATH(...)
#endif
#ifndef MX_VISIT_OPTIONAL_BOOL
#  define MX_VISIT_OPTIONAL_BOOL(...)
#endif
#ifndef MX_VISIT_OPTIONAL_INT
#  define MX_VISIT_OPTIONAL_INT(...)
#endif
#ifndef MX_VISIT_OPTIONAL_ENUM
#  define MX_VISIT_OPTIONAL_ENUM(...)
#endif
#ifndef MX_VISIT_OPTIONAL_TEXT
#  define MX_VISIT_OPTIONAL_TEXT(...)
#endif
#ifndef MX_VISIT_OPTIONAL_PATH
#  define MX_VISIT_OPTIONAL_PATH(...)
#endif
#ifndef MX_VISIT_BOOL_LIST
#  define MX_VISIT_BOOL_LIST(...)
#endif
#ifndef MX_VISIT_INT_LIST
#  define MX_VISIT_INT_LIST(...)
#endif
#ifndef MX_VISIT_ENUM_LIST
#  define MX_VISIT_ENUM_LIST(...)
#endif
#ifndef MX_VISIT_TEXT_LIST
#  define MX_VISIT_TEXT_LIST(...)
#endif
#ifndef MX_VISIT_PATH_LIST
#  define MX_VISIT_PATH_LIST(...)
#endif
#ifndef MX_VISIT_OPTIONAL_BOOL_LIST
#  define MX_VISIT_OPTIONAL_BOOL_LIST(...)
#endif
#ifndef MX_VISIT_OPTIONAL_INT_LIST
#  define MX_VISIT_OPTIONAL_INT_LIST(...)
#endif
#ifndef MX_VISIT_OPTIONAL_ENUM_LIST
#  define MX_VISIT_OPTIONAL_ENUM_LIST(...)
#endif
#ifndef MX_VISIT_OPTIONAL_TEXT_LIST
#  define MX_VISIT_OPTIONAL_TEXT_LIST(...)
#endif
#ifndef MX_VISIT_OPTIONAL_PATH_LIST
#  define MX_VISIT_OPTIONAL_PATH_LIST(...)
#endif
#ifndef MX_VISIT_ENTITY
#  define MX_VISIT_ENTITY(...)
#endif
#ifndef MX_VISIT_OPTIONAL_ENTITY
#  define MX_VISIT_OPTIONAL_ENTITY(...)
#endif
#ifndef MX_VISIT_ENTITY_LIST
#  define MX_VISIT_ENTITY_LIST(...)
#endif
#ifndef MX_VISIT_OPTIONAL_ENTITY_LIST
#  define MX_VISIT_OPTIONAL_ENTITY_LIST(...)
#endif
#ifndef MX_VISIT_DECL_CONTEXT
#  define MX_VISIT_DECL_CONTEXT(...)
#endif
#ifndef MX_VISIT_TOKEN_RANGE
#  define MX_VISIT_TOKEN_RANGE(...)
#endif
#ifndef MX_VISIT_MACRO_RANGE
#  define MX_VISIT_MACRO_RANGE(...)
#endif
#ifndef MX_VISIT_PSEUDO
#  define MX_VISIT_PSEUDO(...)
#endif
#ifndef MX_VISIT_OPTIONAL_PSEUDO
#  define MX_VISIT_OPTIONAL_PSEUDO(...)
#endif
#ifndef MX_VISIT_OPTIONAL_PSEUDO_LIST
#  define MX_VISIT_OPTIONAL_PSEUDO_LIST(...)
#endif
#ifndef MX_VISIT_PSEUDO_LIST
#  define MX_VISIT_PSEUDO_LIST(...)
#endif
#ifndef MX_VISIT_BASE
#  define MX_VISIT_BASE(...)
#endif
#ifndef MX_VISIT_DECL_LINK
#  define MX_VISIT_DECL_LINK(...)
#endif
#ifndef MX_VISIT_STMT_LINK
#  define MX_VISIT_STMT_LINK(...)
#endif
#ifndef MX_BEGIN_VISIT_DECL
#  define MX_BEGIN_VISIT_DECL(...)
#endif
#ifndef MX_BEGIN_VISIT_STMT
#  define MX_BEGIN_VISIT_STMT(...)
#endif
#ifndef MX_BEGIN_VISIT_TYPE
#  define MX_BEGIN_VISIT_TYPE(...)
#endif
#ifndef MX_BEGIN_VISIT_ATTR
#  define MX_BEGIN_VISIT_ATTR(...)
#endif
#ifndef MX_BEGIN_VISIT_MACRO
#  define MX_BEGIN_VISIT_MACRO(...)
#endif
#ifndef MX_BEGIN_VISIT_ABSTRACT_DECL
#  define MX_BEGIN_VISIT_ABSTRACT_DECL MX_BEGIN_VISIT_DECL
#endif
#ifndef MX_BEGIN_VISIT_ABSTRACT_STMT
#  define MX_BEGIN_VISIT_ABSTRACT_STMT MX_BEGIN_VISIT_STMT
#endif
#ifndef MX_BEGIN_VISIT_ABSTRACT_TYPE
#  define MX_BEGIN_VISIT_ABSTRACT_TYPE MX_BEGIN_VISIT_TYPE
#endif
#ifndef MX_BEGIN_VISIT_ABSTRACT_ATTR
#  define MX_BEGIN_VISIT_ABSTRACT_ATTR MX_BEGIN_VISIT_ATTR
#endif
#ifndef MX_BEGIN_VISIT_ABSTRACT_MACRO
#  define MX_BEGIN_VISIT_ABSTRACT_MACRO MX_BEGIN_VISIT_MACRO
#endif
#ifndef MX_BEGIN_VISIT_PSEUDO
#  define MX_BEGIN_VISIT_PSEUDO(...)
#endif
#ifndef MX_END_VISIT_DECL
#  define MX_END_VISIT_DECL(...)
#endif
#ifndef MX_END_VISIT_STMT
#  define MX_END_VISIT_STMT(...)
#endif
#ifndef MX_END_VISIT_TYPE
#  define MX_END_VISIT_TYPE(...)
#endif
#ifndef MX_END_VISIT_ATTR
#  define MX_END_VISIT_ATTR(...)
#endif
#ifndef MX_END_VISIT_MACRO
#  define MX_END_VISIT_MACRO(...)
#endif
#ifndef MX_END_VISIT_PSEUDO
#  define MX_END_VISIT_PSEUDO(...)
#endif
#ifndef MX_VISIT_PSEUDO_KIND
#  define MX_VISIT_PSEUDO_KIND(...)
#endif
#ifndef MX_BEGIN_ENUM_CLASS
#  define MX_BEGIN_ENUM_CLASS(...)
#endif
#ifndef MX_ENUM_CLASS_ENTRY
#  define MX_ENUM_CLASS_ENTRY(...)
#endif
#ifndef MX_END_ENUM_CLASS
#  define MX_END_ENUM_CLASS(...)
#endif

MX_BEGIN_ENUM_CLASS(DeclKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, ACCESS_SPEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, BINDING, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, BLOCK, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, BUILTIN_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CXX_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CXX_CONVERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CXX_DEDUCTION_GUIDE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CXX_DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CXX_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CXX_RECORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CAPTURED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CLASS_SCOPE_FUNCTION_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CLASS_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CLASS_TEMPLATE_PARTIAL_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CLASS_TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CONCEPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, CONSTRUCTOR_USING_SHADOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, DECOMPOSITION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, EMPTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, ENUM_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, EXPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, EXTERN_C_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, FIELD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, FILE_SCOPE_ASM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, FRIEND, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, FRIEND_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, FUNCTION_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, HLSL_BUFFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, IMPLICIT_CONCEPT_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, IMPLICIT_PARAM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, IMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, INDIRECT_FIELD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, LABEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, LIFETIME_EXTENDED_TEMPORARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, LINKAGE_SPEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, MS_GUID, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, MS_PROPERTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, NAMESPACE_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, NAMESPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, NON_TYPE_TEMPLATE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OMP_ALLOCATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OMP_CAPTURED_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OMP_DECLARE_MAPPER, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OMP_DECLARE_REDUCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OMP_REQUIRES, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OMP_THREAD_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_AT_DEFS_FIELD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_CATEGORY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_CATEGORY_IMPL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_COMPATIBLE_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_IMPLEMENTATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_IVAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_PROPERTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_PROPERTY_IMPL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_PROTOCOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, OBJ_C_TYPE_PARAM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, PARM_VAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, PRAGMA_COMMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, PRAGMA_DETECT_MISMATCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, RECORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, REQUIRES_EXPR_BODY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, STATIC_ASSERT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TEMPLATE_PARAM_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TEMPLATE_TEMPLATE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TEMPLATE_TYPE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TOP_LEVEL_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TRANSLATION_UNIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TYPE_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TYPE_ALIAS_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, TYPEDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, UNNAMED_GLOBAL_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, UNRESOLVED_USING_IF_EXISTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, UNRESOLVED_USING_TYPENAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, UNRESOLVED_USING_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, USING, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, USING_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, USING_ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, USING_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, USING_SHADOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, VAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, VAR_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, VAR_TEMPLATE_PARTIAL_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclKind, VAR_TEMPLATE_SPECIALIZATION, unsigned char)
MX_END_ENUM_CLASS(DeclKind)

MX_BEGIN_ENUM_CLASS(AttrKind, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, A_ARCH64_SVE_PCS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, A_ARCH64_VECTOR_PCS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AMDGPU_FLAT_WORK_GROUP_SIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AMDGPU_KERNEL_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AMDGPU_NUM_SGPR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AMDGPU_NUM_VGPR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AMDGPU_WAVES_PER_EU, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ARM_INTERRUPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AVR_INTERRUPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AVR_SIGNAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ABI_TAG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ACQUIRE_CAPABILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ACQUIRE_HANDLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ACQUIRED_AFTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ACQUIRED_BEFORE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALIAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALIGN_MAC68K, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALIGN_NATURAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALIGN_VALUE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALLOC_ALIGN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALLOC_SIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALWAYS_DESTROY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ALWAYS_INLINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ANALYZER_NO_RETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ANNOTATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ANNOTATE_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ANY_X86_INTERRUPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ANY_X86_NO_CALLER_SAVED_REGISTERS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ANY_X86_NO_CF_CHECK, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ARC_WEAKREF_UNAVAILABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ARGUMENT_WITH_TYPE_TAG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ARM_BUILTIN_ALIAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ARM_MVE_STRICT_POLYMORPHISM, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ARM_STREAMING, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ARTIFICIAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ASM_LABEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ASSERT_CAPABILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ASSERT_EXCLUSIVE_LOCK, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ASSERT_SHARED_LOCK, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ASSUME_ALIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ASSUMPTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AVAILABILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, AVAILABLE_ONLY_IN_DEFAULT_EVAL_METHOD, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, BPF_PRESERVE_ACCESS_INDEX, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, BTF_DECL_TAG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, BTF_TYPE_TAG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, BLOCKS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, BUILTIN_ALIAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, BUILTIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, C11_NO_RETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, C_DECL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CF_AUDITED_TRANSFER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CF_CONSUMED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CF_GUARD, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CFI_CANONICAL_JUMP_TABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CF_RETURNS_NOT_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CF_RETURNS_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CF_UNKNOWN_TRANSFER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CPU_DISPATCH, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CPU_SPECIFIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_DEVICE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_DEVICE_BUILTIN_SURFACE_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_DEVICE_BUILTIN_TEXTURE_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_GLOBAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_HOST, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_INVALID_TARGET, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_LAUNCH_BOUNDS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CUDA_SHARED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CXX11_NO_RETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CALLABLE_WHEN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CALLBACK, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CALLED_ONCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CAPABILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CAPTURED_RECORD, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CARRIES_DEPENDENCY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CLEANUP, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CMSE_NS_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CMSE_NS_ENTRY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CODE_SEG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, COLD, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, COMMON, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CONST, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CONST_INIT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CONSTRUCTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CONSUMABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CONSUMABLE_AUTO_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CONSUMABLE_SET_ON_READ, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, CONVERGENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DLL_EXPORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DLL_EXPORT_STATIC_LOCAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DLL_IMPORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DLL_IMPORT_STATIC_LOCAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DEPRECATED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DESTRUCTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DIAGNOSE_AS_BUILTIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DIAGNOSE_IF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DISABLE_SANITIZER_INSTRUMENTATION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, DISABLE_TAIL_CALLS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, EMPTY_BASES, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ENABLE_IF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ENFORCE_TCB, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ENFORCE_TCB_LEAF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ENUM_EXTENSIBILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ERROR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, EXCLUDE_FROM_EXPLICIT_INSTANTIATION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, EXCLUSIVE_TRYLOCK_FUNCTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, EXTERNAL_SOURCE_SYMBOL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FALL_THROUGH, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FAST_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FINAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FLAG_ENUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FLATTEN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FORMAT_ARG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FORMAT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, FUNCTION_RETURN_THUNKS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, GNU_INLINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, GUARDED_BY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, GUARDED_VAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HIP_MANAGED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HLSL_GROUP_SHARED_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HLSL_NUM_THREADS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HLSL_RESOURCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HLSL_RESOURCE_BINDING, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HLSLSV__DISPATCH_THREAD_ID, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HLSLSV__GROUP_INDEX, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HLSL_SHADER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, HOT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, IB_ACTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, IB_OUTLET, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, IB_OUTLET_COLLECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, I_FUNC, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, INIT_PRIORITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, INIT_SEG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, INTEL_OCL_BICC, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, INTERNAL_LINKAGE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LTO_VISIBILITY_PUBLIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LAYOUT_VERSION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LEAF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LIFETIME_BOUND, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LIKELY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LOADER_UNINITIALIZED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LOCK_RETURNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LOCKS_EXCLUDED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, LOOP_HINT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, M68K_INTERRUPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MIG_SERVER_ROUTINE_, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MSABI, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MS_ALLOCATOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MS_INHERITANCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MS_NO_V_TABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MSP430_INTERRUPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MS_STRUCT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MS_VTOR_DISP, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MAX_FIELD_ALIGNMENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MAY_ALIAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MAYBE_UNDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MICRO_MIPS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MIN_SIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MIN_VECTOR_WIDTH, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MIPS16, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MIPS_INTERRUPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MIPS_LONG_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MIPS_SHORT_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MODE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, MUST_TAIL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NS_CONSUMED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NS_CONSUMES_SELF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NS_ERROR_DOMAIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NS_RETURNS_AUTORELEASED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NS_RETURNS_NOT_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NS_RETURNS_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NVPTX_KERNEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NAKED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_ALIAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_BUILTIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_COMMON, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_DEBUG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_DEREF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_DESTROY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_DUPLICATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_ESCAPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_INLINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_INSTRUMENT_FUNCTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_MERGE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_MICRO_MIPS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_MIPS16, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_PROFILE_FUNCTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_RANDOMIZE_LAYOUT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_RETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_SANITIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_SPECULATIVE_LOAD_HARDENING, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_SPLIT_STACK, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_STACK_PROTECTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_THREAD_SAFETY_ANALYSIS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_THROW, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_UNIQUE_ADDRESS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NO_UWTABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NON_NULL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, NOT_TAIL_CALLED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_ALLOCATE_DECL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_CAPTURE_KIND, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_CAPTURE_NO_INIT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_DECLARE_SIMD_DECL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_DECLARE_TARGET_DECL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_DECLARE_VARIANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_REFERENCED_VAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OMP_THREAD_PRIVATE_DECL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OS_CONSUMED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OS_CONSUMES_THIS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OS_RETURNS_NOT_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OS_RETURNS_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OS_RETURNS_RETAINED_ON_NON_ZERO, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OS_RETURNS_RETAINED_ON_ZERO, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_BOXABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_BRIDGE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_BRIDGE_MUTABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_BRIDGE_RELATED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_CLASS_STUB, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_DESIGNATED_INITIALIZER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_DIRECT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_DIRECT_MEMBERS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_EXCEPTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_EXPLICIT_PROTOCOL_IMPL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_EXTERNALLY_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_CGC, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_INDEPENDENT_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_INERT_UNSAFE_UNRETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_KIND_OF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_METHOD_FAMILY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_CNS_OBJECT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_NON_LAZY_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_NON_RUNTIME_PROTOCOL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_OWNERSHIP, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_PRECISE_LIFETIME, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_REQUIRES_PROPERTY_DEFS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_REQUIRES_SUPER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_RETURNS_INNER_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_ROOT_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_RUNTIME_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_RUNTIME_VISIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OBJ_C_SUBCLASSING_RESTRICTED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_ACCESS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_CONSTANT_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_GENERIC_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_GLOBAL_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_GLOBAL_DEVICE_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_GLOBAL_HOST_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_INTEL_REQD_SUB_GROUP_SIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_KERNEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_LOCAL_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_PRIVATE_ADDRESS_SPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPEN_CL_UNROLL_HINT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OPTIMIZE_NONE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OVERLOADABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OVERRIDE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OWNER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, OWNERSHIP, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PACKED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PARAM_TYPESTATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PASCAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PASS_OBJECT_SIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PATCHABLE_FUNCTION_ENTRY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PCS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PRAGMA_CLANG_BSS_SECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PRAGMA_CLANG_DATA_SECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PRAGMA_CLANG_RELRO_SECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PRAGMA_CLANG_RODATA_SECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PRAGMA_CLANG_TEXT_SECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PREFERRED_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PRESERVE_ALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PRESERVE_MOST, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PT_GUARDED_BY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PT_GUARDED_VAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PTR32, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PTR64, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, PURE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RISCV_INTERRUPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RANDOMIZE_LAYOUT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, READ_ONLY_PLACEMENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, REG_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, REINITIALIZES, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RELEASE_CAPABILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RELEASE_HANDLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RENDER_SCRIPT_KERNEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, REQD_WORK_GROUP_SIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, REQUIRES_CAPABILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RESTRICT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RETAIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RETURN_TYPESTATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RETURNS_NON_NULL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, RETURNS_TWICE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, S_PTR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SYCL_KERNEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SYCL_SPECIAL_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SCOPED_LOCKABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SELECT_ANY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SENTINEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SET_TYPESTATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SHARED_TRYLOCK_FUNCTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SPECULATIVE_LOAD_HARDENING, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, STANDALONE_DEBUG, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, STD_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, STRICT_FP, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, STRICT_GUARD_STACK_CHECK, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SUPPRESS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ASYNC, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ASYNC_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ASYNC_CONTEXT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ASYNC_ERROR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ASYNC_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ATTR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_BRIDGE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_BRIDGED_TYPEDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_CONTEXT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ERROR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_ERROR_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_INDIRECT_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_NEW_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_OBJ_C_MEMBERS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SWIFT_PRIVATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, SYS_VABI, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TLS_MODEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TARGET, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TARGET_CLONES, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TARGET_VERSION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TEST_TYPESTATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, THIS_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, THREAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TRANSPARENT_UNION, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TRIVIAL_ABI, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TRY_ACQUIRE_CAPABILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TYPE_NON_NULL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TYPE_NULL_UNSPECIFIED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TYPE_NULLABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TYPE_NULLABLE_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TYPE_TAG_FOR_DATATYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, TYPE_VISIBILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, U_PTR, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, UNAVAILABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, UNINITIALIZED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, UNLIKELY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, UNSAFE_BUFFER_USAGE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, UNUSED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, USE_HANDLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, USED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, USING_IF_EXISTS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, UUID, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, VEC_RETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, VEC_TYPE_HINT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, VECTOR_CALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, VISIBILITY, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WARN_UNUSED, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WARN_UNUSED_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WEAK, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WEAK_IMPORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WEAK_REF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WEB_ASSEMBLY_EXPORT_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WEB_ASSEMBLY_FUNCREF, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WEB_ASSEMBLY_IMPORT_MODULE, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WEB_ASSEMBLY_IMPORT_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, WORK_GROUP_SIZE_HINT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, X86_FORCE_ALIGN_ARG_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, X_RAY_INSTRUMENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, X_RAY_LOG_ARGS, unsigned short)
  MX_ENUM_CLASS_ENTRY(AttrKind, ZERO_CALL_USED_REGS, unsigned short)
MX_END_ENUM_CLASS(AttrKind)

MX_BEGIN_ENUM_CLASS(AArch64SVEPcsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64SVEPcsAttrSpelling, GNU_AARCH64_SVE_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64SVEPcsAttrSpelling, CXX11_CLANG_AARCH64_SVE_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64SVEPcsAttrSpelling, C2X_CLANG_AARCH64_SVE_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64SVEPcsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AArch64SVEPcsAttrSpelling)

MX_BEGIN_ENUM_CLASS(AArch64VectorPcsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64VectorPcsAttrSpelling, GNU_AARCH64_VECTOR_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64VectorPcsAttrSpelling, CXX11_CLANG_AARCH64_VECTOR_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64VectorPcsAttrSpelling, C2X_CLANG_AARCH64_VECTOR_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AArch64VectorPcsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AArch64VectorPcsAttrSpelling)

MX_BEGIN_ENUM_CLASS(AMDGPUFlatWorkGroupSizeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUFlatWorkGroupSizeAttrSpelling, GNU_AMDGPU_FLAT_WORK_GROUP_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUFlatWorkGroupSizeAttrSpelling, CXX11_CLANG_AMDGPU_FLAT_WORK_GROUP_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUFlatWorkGroupSizeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AMDGPUFlatWorkGroupSizeAttrSpelling)

MX_BEGIN_ENUM_CLASS(AMDGPUKernelCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUKernelCallAttrSpelling, GNU_AMDGPU_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUKernelCallAttrSpelling, CXX11_CLANG_AMDGPU_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUKernelCallAttrSpelling, C2X_CLANG_AMDGPU_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUKernelCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AMDGPUKernelCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(AMDGPUNumSGPRAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUNumSGPRAttrSpelling, GNU_AMDGPU_NUM_SGPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUNumSGPRAttrSpelling, CXX11_CLANG_AMDGPU_NUM_SGPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUNumSGPRAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AMDGPUNumSGPRAttrSpelling)

MX_BEGIN_ENUM_CLASS(AMDGPUNumVGPRAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUNumVGPRAttrSpelling, GNU_AMDGPU_NUM_VGPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUNumVGPRAttrSpelling, CXX11_CLANG_AMDGPU_NUM_VGPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUNumVGPRAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AMDGPUNumVGPRAttrSpelling)

MX_BEGIN_ENUM_CLASS(AMDGPUWavesPerEUAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUWavesPerEUAttrSpelling, GNU_AMDGPU_WAVES_PER_EU, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUWavesPerEUAttrSpelling, CXX11_CLANG_AMDGPU_WAVES_PER_EU, unsigned char)
  MX_ENUM_CLASS_ENTRY(AMDGPUWavesPerEUAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AMDGPUWavesPerEUAttrSpelling)

MX_BEGIN_ENUM_CLASS(ARMInterruptAttrInterruptType, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrInterruptType, IRQ, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrInterruptType, FIQ, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrInterruptType, SWI, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrInterruptType, ABORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrInterruptType, UNDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrInterruptType, GENERIC, unsigned char)
MX_END_ENUM_CLASS(ARMInterruptAttrInterruptType)

MX_BEGIN_ENUM_CLASS(ARMInterruptAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrSpelling, GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrSpelling, CXX11_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrSpelling, C2X_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ARMInterruptAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ARMInterruptAttrSpelling)

MX_BEGIN_ENUM_CLASS(AVRInterruptAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRInterruptAttrSpelling, GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRInterruptAttrSpelling, CXX11_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRInterruptAttrSpelling, C2X_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRInterruptAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AVRInterruptAttrSpelling)

MX_BEGIN_ENUM_CLASS(AVRSignalAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRSignalAttrSpelling, GNU_SIGNAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRSignalAttrSpelling, CXX11_GNU_SIGNAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRSignalAttrSpelling, C2X_GNU_SIGNAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(AVRSignalAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AVRSignalAttrSpelling)

MX_BEGIN_ENUM_CLASS(AbiTagAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AbiTagAttrSpelling, GNU_ABI_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(AbiTagAttrSpelling, CXX11_GNU_ABI_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(AbiTagAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AbiTagAttrSpelling)

MX_BEGIN_ENUM_CLASS(AcquireCapabilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireCapabilityAttrSpelling, GNU_ACQUIRE_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireCapabilityAttrSpelling, CXX11_CLANG_ACQUIRE_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireCapabilityAttrSpelling, GNU_ACQUIRE_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireCapabilityAttrSpelling, CXX11_CLANG_ACQUIRE_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireCapabilityAttrSpelling, GNU_EXCLUSIVE_LOCK_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireCapabilityAttrSpelling, GNU_SHARED_LOCK_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireCapabilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AcquireCapabilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(AcquireHandleAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireHandleAttrSpelling, GNU_ACQUIRE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireHandleAttrSpelling, CXX11_CLANG_ACQUIRE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireHandleAttrSpelling, C2X_CLANG_ACQUIRE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AcquireHandleAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AcquireHandleAttrSpelling)

MX_BEGIN_ENUM_CLASS(AddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AddressSpaceAttrSpelling, GNU_ADDRESS_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AddressSpaceAttrSpelling, CXX11_CLANG_ADDRESS_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AddressSpaceAttrSpelling, C2X_CLANG_ADDRESS_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(AliasAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AliasAttrSpelling, GNU_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AliasAttrSpelling, CXX11_GNU_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AliasAttrSpelling, C2X_GNU_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AliasAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AliasAttrSpelling)

MX_BEGIN_ENUM_CLASS(AlignedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignedAttrSpelling, GNU_ALIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignedAttrSpelling, CXX11_GNU_ALIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignedAttrSpelling, C2X_GNU_ALIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignedAttrSpelling, DECLSPEC_ALIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignedAttrSpelling, KEYWORD_ALIGNAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignedAttrSpelling, KEYWORD__ALIGNAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AlignedAttrSpelling)

MX_BEGIN_ENUM_CLASS(AllocAlignAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocAlignAttrSpelling, GNU_ALLOC_ALIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocAlignAttrSpelling, CXX11_GNU_ALLOC_ALIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocAlignAttrSpelling, C2X_GNU_ALLOC_ALIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocAlignAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AllocAlignAttrSpelling)

MX_BEGIN_ENUM_CLASS(AllocSizeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocSizeAttrSpelling, GNU_ALLOC_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocSizeAttrSpelling, CXX11_GNU_ALLOC_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocSizeAttrSpelling, C2X_GNU_ALLOC_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AllocSizeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AllocSizeAttrSpelling)

MX_BEGIN_ENUM_CLASS(AlwaysDestroyAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysDestroyAttrSpelling, GNU_ALWAYS_DESTROY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysDestroyAttrSpelling, CXX11_CLANG_ALWAYS_DESTROY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysDestroyAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AlwaysDestroyAttrSpelling)

MX_BEGIN_ENUM_CLASS(AlwaysInlineAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysInlineAttrSpelling, GNU_ALWAYS_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysInlineAttrSpelling, CXX11_GNU_ALWAYS_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysInlineAttrSpelling, C2X_GNU_ALWAYS_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysInlineAttrSpelling, CXX11_CLANG_ALWAYS_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysInlineAttrSpelling, C2X_CLANG_ALWAYS_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysInlineAttrSpelling, KEYWORD_FORCEINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlwaysInlineAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AlwaysInlineAttrSpelling)

MX_BEGIN_ENUM_CLASS(AnnotateAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnnotateAttrSpelling, GNU_ANNOTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnnotateAttrSpelling, CXX11_CLANG_ANNOTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnnotateAttrSpelling, C2X_CLANG_ANNOTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnnotateAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AnnotateAttrSpelling)

MX_BEGIN_ENUM_CLASS(AnnotateTypeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnnotateTypeAttrSpelling, CXX11_CLANG_ANNOTATE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnnotateTypeAttrSpelling, C2X_CLANG_ANNOTATE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnnotateTypeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AnnotateTypeAttrSpelling)

MX_BEGIN_ENUM_CLASS(AnyX86InterruptAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86InterruptAttrSpelling, GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86InterruptAttrSpelling, CXX11_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86InterruptAttrSpelling, C2X_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86InterruptAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AnyX86InterruptAttrSpelling)

MX_BEGIN_ENUM_CLASS(AnyX86NoCallerSavedRegistersAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCallerSavedRegistersAttrSpelling, GNU_NO_CALLER_SAVED_REGISTERS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCallerSavedRegistersAttrSpelling, CXX11_GNU_NO_CALLER_SAVED_REGISTERS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCallerSavedRegistersAttrSpelling, C2X_GNU_NO_CALLER_SAVED_REGISTERS, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCallerSavedRegistersAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AnyX86NoCallerSavedRegistersAttrSpelling)

MX_BEGIN_ENUM_CLASS(AnyX86NoCfCheckAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCfCheckAttrSpelling, GNU_NOCF_CHECK, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCfCheckAttrSpelling, CXX11_GNU_NOCF_CHECK, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCfCheckAttrSpelling, C2X_GNU_NOCF_CHECK, unsigned char)
  MX_ENUM_CLASS_ENTRY(AnyX86NoCfCheckAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AnyX86NoCfCheckAttrSpelling)

MX_BEGIN_ENUM_CLASS(ArcWeakrefUnavailableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArcWeakrefUnavailableAttrSpelling, GNU_OBJC_ARC_WEAK_REFERENCE_UNAVAILABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArcWeakrefUnavailableAttrSpelling, CXX11_CLANG_OBJC_ARC_WEAK_REFERENCE_UNAVAILABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArcWeakrefUnavailableAttrSpelling, C2X_CLANG_OBJC_ARC_WEAK_REFERENCE_UNAVAILABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArcWeakrefUnavailableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ArcWeakrefUnavailableAttrSpelling)

MX_BEGIN_ENUM_CLASS(ArgumentWithTypeTagAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentWithTypeTagAttrSpelling, GNU_ARGUMENT_WITH_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentWithTypeTagAttrSpelling, CXX11_CLANG_ARGUMENT_WITH_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentWithTypeTagAttrSpelling, C2X_CLANG_ARGUMENT_WITH_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentWithTypeTagAttrSpelling, GNU_POINTER_WITH_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentWithTypeTagAttrSpelling, CXX11_CLANG_POINTER_WITH_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentWithTypeTagAttrSpelling, C2X_CLANG_POINTER_WITH_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentWithTypeTagAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ArgumentWithTypeTagAttrSpelling)

MX_BEGIN_ENUM_CLASS(ArmBuiltinAliasAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmBuiltinAliasAttrSpelling, GNU_CLANG_ARM_BUILTIN_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmBuiltinAliasAttrSpelling, CXX11_CLANG_CLANG_ARM_BUILTIN_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmBuiltinAliasAttrSpelling, C2X_CLANG_CLANG_ARM_BUILTIN_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmBuiltinAliasAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ArmBuiltinAliasAttrSpelling)

MX_BEGIN_ENUM_CLASS(ArmMveStrictPolymorphismAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmMveStrictPolymorphismAttrSpelling, GNU_CLANG_ARM_MVE_STRICT_POLYMORPHISM, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmMveStrictPolymorphismAttrSpelling, CXX11_CLANG_CLANG_ARM_MVE_STRICT_POLYMORPHISM, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmMveStrictPolymorphismAttrSpelling, C2X_CLANG_CLANG_ARM_MVE_STRICT_POLYMORPHISM, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArmMveStrictPolymorphismAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ArmMveStrictPolymorphismAttrSpelling)

MX_BEGIN_ENUM_CLASS(ArrayTypeArraySizeModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArrayTypeArraySizeModifier, NORMAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArrayTypeArraySizeModifier, STATIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArrayTypeArraySizeModifier, STAR, unsigned char)
MX_END_ENUM_CLASS(ArrayTypeArraySizeModifier)

MX_BEGIN_ENUM_CLASS(ArtificialAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArtificialAttrSpelling, GNU_ARTIFICIAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArtificialAttrSpelling, CXX11_GNU_ARTIFICIAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArtificialAttrSpelling, C2X_GNU_ARTIFICIAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArtificialAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ArtificialAttrSpelling)

MX_BEGIN_ENUM_CLASS(AsmLabelAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AsmLabelAttrSpelling, KEYWORD_ASSEMBLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AsmLabelAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AsmLabelAttrSpelling)

MX_BEGIN_ENUM_CLASS(AssertCapabilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssertCapabilityAttrSpelling, GNU_ASSERT_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssertCapabilityAttrSpelling, CXX11_CLANG_ASSERT_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssertCapabilityAttrSpelling, GNU_ASSERT_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssertCapabilityAttrSpelling, CXX11_CLANG_ASSERT_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssertCapabilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AssertCapabilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(AssumeAlignedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumeAlignedAttrSpelling, GNU_ASSUME_ALIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumeAlignedAttrSpelling, CXX11_GNU_ASSUME_ALIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumeAlignedAttrSpelling, C2X_GNU_ASSUME_ALIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumeAlignedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AssumeAlignedAttrSpelling)

MX_BEGIN_ENUM_CLASS(AssumptionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumptionAttrSpelling, GNU_ASSUME, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumptionAttrSpelling, CXX11_CLANG_ASSUME, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumptionAttrSpelling, C2X_CLANG_ASSUME, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssumptionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AssumptionAttrSpelling)

MX_BEGIN_ENUM_CLASS(AtomicExprAtomicOp, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_LOAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_STORE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_EXCHANGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_COMPARE_EXCHANGE_STRONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_COMPARE_EXCHANGE_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_ADD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_SUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_AND, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_OR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_XOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_NAND, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_MAX, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, C11_ATOMIC_FETCH_MIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_LOAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_LOAD_N, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_STORE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_STORE_N, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_EXCHANGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_EXCHANGE_N, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_COMPARE_EXCHANGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_COMPARE_EXCHANGE_N, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_ADD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_SUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_AND, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_OR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_XOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_NAND, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_ADD_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_SUB_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_AND_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_OR_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_XOR_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_MAX_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_MIN_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_NAND_FETCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_LOAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_STORE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_EXCHANGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_COMPARE_EXCHANGE_STRONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_COMPARE_EXCHANGE_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_FETCH_ADD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_FETCH_SUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_FETCH_AND, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_FETCH_OR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_FETCH_XOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_FETCH_MIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, OPENCL_ATOMIC_FETCH_MAX, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_MIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, ATOMIC_FETCH_MAX, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_LOAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_STORE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_COMPARE_EXCHANGE_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_COMPARE_EXCHANGE_STRONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_EXCHANGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_FETCH_ADD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_FETCH_SUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_FETCH_AND, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_FETCH_OR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_FETCH_XOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_FETCH_MIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicExprAtomicOp, HIP_ATOMIC_FETCH_MAX, unsigned char)
MX_END_ENUM_CLASS(AtomicExprAtomicOp)

MX_BEGIN_ENUM_CLASS(AvailabilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityAttrSpelling, GNU_AVAILABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityAttrSpelling, CXX11_CLANG_AVAILABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityAttrSpelling, C2X_CLANG_AVAILABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AvailabilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(AvailableOnlyInDefaultEvalMethodAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailableOnlyInDefaultEvalMethodAttrSpelling, GNU_AVAILABLE_ONLY_IN_DEFAULT_EVAL_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailableOnlyInDefaultEvalMethodAttrSpelling, CXX11_CLANG_AVAILABLE_ONLY_IN_DEFAULT_EVAL_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailableOnlyInDefaultEvalMethodAttrSpelling, C2X_CLANG_AVAILABLE_ONLY_IN_DEFAULT_EVAL_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailableOnlyInDefaultEvalMethodAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(AvailableOnlyInDefaultEvalMethodAttrSpelling)

MX_BEGIN_ENUM_CLASS(BPFPreserveAccessIndexAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(BPFPreserveAccessIndexAttrSpelling, GNU_PRESERVE_ACCESS_INDEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(BPFPreserveAccessIndexAttrSpelling, CXX11_CLANG_PRESERVE_ACCESS_INDEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(BPFPreserveAccessIndexAttrSpelling, C2X_CLANG_PRESERVE_ACCESS_INDEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(BPFPreserveAccessIndexAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(BPFPreserveAccessIndexAttrSpelling)

MX_BEGIN_ENUM_CLASS(BTFDeclTagAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFDeclTagAttrSpelling, GNU_BTF_DECLARATION_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFDeclTagAttrSpelling, CXX11_CLANG_BTF_DECLARATION_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFDeclTagAttrSpelling, C2X_CLANG_BTF_DECLARATION_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFDeclTagAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(BTFDeclTagAttrSpelling)

MX_BEGIN_ENUM_CLASS(BTFTypeTagAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFTypeTagAttrSpelling, GNU_BTF_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFTypeTagAttrSpelling, CXX11_CLANG_BTF_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFTypeTagAttrSpelling, C2X_CLANG_BTF_TYPE_TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(BTFTypeTagAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(BTFTypeTagAttrSpelling)

MX_BEGIN_ENUM_CLASS(BlocksAttrBlockType, unsigned char)
  MX_ENUM_CLASS_ENTRY(BlocksAttrBlockType, BY_REFERENCE, unsigned char)
MX_END_ENUM_CLASS(BlocksAttrBlockType)

MX_BEGIN_ENUM_CLASS(BlocksAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(BlocksAttrSpelling, GNU_BLOCKS, unsigned char)
  MX_ENUM_CLASS_ENTRY(BlocksAttrSpelling, CXX11_CLANG_BLOCKS, unsigned char)
  MX_ENUM_CLASS_ENTRY(BlocksAttrSpelling, C2X_CLANG_BLOCKS, unsigned char)
  MX_ENUM_CLASS_ENTRY(BlocksAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(BlocksAttrSpelling)

MX_BEGIN_ENUM_CLASS(BuiltinAliasAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(BuiltinAliasAttrSpelling, CXX11_CLANG_BUILTIN_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(BuiltinAliasAttrSpelling, C2X_CLANG_BUILTIN_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(BuiltinAliasAttrSpelling, GNU_CLANG_BUILTIN_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(BuiltinAliasAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(BuiltinAliasAttrSpelling)

MX_BEGIN_ENUM_CLASS(BuiltinTypeKind, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_ARRAY_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_BUFFER_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_DEPTH_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_DEPTH_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_MSAARO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_MSAARO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_MSAA_DEPTH_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_MSAA_DEPTH_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_3D_RO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_ARRAY_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_BUFFER_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_DEPTH_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_DEPTH_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_MSAAWO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_MSAAWO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_MSAA_DEPTH_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_MSAA_DEPTH_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_3D_WO, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_ARRAY_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_1D_BUFFER_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_DEPTH_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_DEPTH_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_MSAARW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_MSAARW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_MSAA_DEPTH_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_2D_ARRAY_MSAA_DEPTH_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_IMAGE_3D_RW, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_MCE_PAYLOAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_IME_PAYLOAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_REF_PAYLOAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_SIC_PAYLOAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_MCE_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_IME_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_REF_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_SIC_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_IME_RESULT_SINGLE_REFERENCE_STREAMOUT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_IME_RESULT_DUAL_REFERENCE_STREAMOUT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_IME_SINGLE_REFERENCE_STREAMIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_INTEL_SUBGROUP_AVC_IME_DUAL_REFERENCE_STREAMIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT32, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT64, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT32, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT64, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT32, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT64, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_B_FLOAT16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT8X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT16X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT32X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT64X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT8X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT16X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT32X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT64X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT16X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT32X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT64X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_B_FLOAT16X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT8X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT16X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT32X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT64X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT8X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT16X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT32X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT64X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT16X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT32X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT64X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_B_FLOAT16X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT8X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT16X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT32X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_INT64X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT8X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT16X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT32X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_UINT64X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT16X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT32X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_FLOAT64X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_B_FLOAT16X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_BOOLEAN, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_BOOLX2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_BOOLX4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SVE_COUNT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, VECTOR_QUAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, VECTOR_PAIR, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_BOOL1, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_BOOL2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_BOOL4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_BOOL8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_BOOL16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_BOOL32, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_BOOL64, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF8X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF4X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT8M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF8X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF4X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT8M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF4X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT16M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF4X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT16M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT32M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT32M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_INT64M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_UINT64M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF4X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT16M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32MF2X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT32M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1X5, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1X6, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1X7, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M1X8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M2X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M2X3, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M2X4, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, RVV_FLOAT64M4X2, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, WASM_EXTERN_REFERENCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, VOID, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, BOOLEAN, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, CHARACTER_U, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_CHAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, W_CHAR_U, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, CHAR8, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, CHAR16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, CHAR32, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_SHORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_INT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_LONG, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_LONG_LONG, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_INT128, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, CHARACTER_S, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, S_CHAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, W_CHAR_S, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SHORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, INT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, LONG, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, LONG_LONG, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, INT128, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SHORT_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, LONG_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_SHORT_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_LONG_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SHORT_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, LONG_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_SHORT_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, U_LONG_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_SHORT_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_LONG_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_U_SHORT_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_U_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_U_LONG_ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_SHORT_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_LONG_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_U_SHORT_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_U_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, SAT_U_LONG_FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, HALF, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, FLOAT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, DOUBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, LONG_DOUBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, FLOAT16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, B_FLOAT16, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, FLOAT128, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, IBM128, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, NULL_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OBJ_C_ID, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OBJ_C_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OBJ_C_SEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_SAMPLER, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_EVENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_CLK_EVENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_QUEUE, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OCL_RESERVE_ID, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, DEPENDENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OVERLOAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, BOUND_MEMBER, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, PSEUDO_OBJECT, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, UNKNOWN_ANY, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, BUILTIN_FN, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, ARC_UNBRIDGED_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, INCOMPLETE_MATRIX_INDEX, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OMP_ARRAY_SECTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OMP_ARRAY_SHAPING, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, OMP_ITERATOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(BuiltinTypeKind, UNRESOLVED, unsigned short)
MX_END_ENUM_CLASS(BuiltinTypeKind)

MX_BEGIN_ENUM_CLASS(CDeclAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CDeclAttrSpelling, GNU_CDECL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CDeclAttrSpelling, CXX11_GNU_CDECL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CDeclAttrSpelling, C2X_GNU_CDECL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CDeclAttrSpelling, KEYWORD_CDECL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CDeclAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CDeclAttrSpelling)

MX_BEGIN_ENUM_CLASS(CFAuditedTransferAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFAuditedTransferAttrSpelling, GNU_CF_AUDITED_TRANSFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFAuditedTransferAttrSpelling, CXX11_CLANG_CF_AUDITED_TRANSFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFAuditedTransferAttrSpelling, C2X_CLANG_CF_AUDITED_TRANSFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFAuditedTransferAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CFAuditedTransferAttrSpelling)

MX_BEGIN_ENUM_CLASS(CFConsumedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFConsumedAttrSpelling, GNU_CF_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFConsumedAttrSpelling, CXX11_CLANG_CF_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFConsumedAttrSpelling, C2X_CLANG_CF_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFConsumedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CFConsumedAttrSpelling)

MX_BEGIN_ENUM_CLASS(CFGuardAttrGuardArg, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFGuardAttrGuardArg, NOCF, unsigned char)
MX_END_ENUM_CLASS(CFGuardAttrGuardArg)

MX_BEGIN_ENUM_CLASS(CFGuardAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFGuardAttrSpelling, DECLSPEC_GUARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFGuardAttrSpelling, GNU_GUARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFGuardAttrSpelling, CXX11_CLANG_GUARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFGuardAttrSpelling, C2X_CLANG_GUARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFGuardAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CFGuardAttrSpelling)

MX_BEGIN_ENUM_CLASS(CFICanonicalJumpTableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFICanonicalJumpTableAttrSpelling, GNU_CFI_CANONICAL_JUMP_TABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFICanonicalJumpTableAttrSpelling, CXX11_CLANG_CFI_CANONICAL_JUMP_TABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFICanonicalJumpTableAttrSpelling, C2X_CLANG_CFI_CANONICAL_JUMP_TABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFICanonicalJumpTableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CFICanonicalJumpTableAttrSpelling)

MX_BEGIN_ENUM_CLASS(CFReturnsNotRetainedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsNotRetainedAttrSpelling, GNU_CF_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsNotRetainedAttrSpelling, CXX11_CLANG_CF_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsNotRetainedAttrSpelling, C2X_CLANG_CF_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsNotRetainedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CFReturnsNotRetainedAttrSpelling)

MX_BEGIN_ENUM_CLASS(CFReturnsRetainedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsRetainedAttrSpelling, GNU_CF_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsRetainedAttrSpelling, CXX11_CLANG_CF_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsRetainedAttrSpelling, C2X_CLANG_CF_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFReturnsRetainedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CFReturnsRetainedAttrSpelling)

MX_BEGIN_ENUM_CLASS(CFUnknownTransferAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFUnknownTransferAttrSpelling, GNU_CF_UNKNOWN_TRANSFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFUnknownTransferAttrSpelling, CXX11_CLANG_CF_UNKNOWN_TRANSFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFUnknownTransferAttrSpelling, C2X_CLANG_CF_UNKNOWN_TRANSFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CFUnknownTransferAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CFUnknownTransferAttrSpelling)

MX_BEGIN_ENUM_CLASS(CPUDispatchAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUDispatchAttrSpelling, GNU_CPU_DISPATCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUDispatchAttrSpelling, CXX11_CLANG_CPU_DISPATCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUDispatchAttrSpelling, C2X_CLANG_CPU_DISPATCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUDispatchAttrSpelling, DECLSPEC_CPU_DISPATCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUDispatchAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CPUDispatchAttrSpelling)

MX_BEGIN_ENUM_CLASS(CPUSpecificAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUSpecificAttrSpelling, GNU_CPU_SPECIFIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUSpecificAttrSpelling, CXX11_CLANG_CPU_SPECIFIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUSpecificAttrSpelling, C2X_CLANG_CPU_SPECIFIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUSpecificAttrSpelling, DECLSPEC_CPU_SPECIFIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CPUSpecificAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CPUSpecificAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDAConstantAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAConstantAttrSpelling, GNU_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAConstantAttrSpelling, DECLSPEC_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAConstantAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDAConstantAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDADeviceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceAttrSpelling, GNU_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceAttrSpelling, DECLSPEC_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDADeviceAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDADeviceBuiltinSurfaceTypeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceBuiltinSurfaceTypeAttrSpelling, GNU_DEVICE_BUILTIN_SURFACE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceBuiltinSurfaceTypeAttrSpelling, DECLSPEC_DEVICE_BUILTIN_SURFACE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceBuiltinSurfaceTypeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDADeviceBuiltinSurfaceTypeAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDADeviceBuiltinTextureTypeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceBuiltinTextureTypeAttrSpelling, GNU_DEVICE_BUILTIN_TEXTURE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceBuiltinTextureTypeAttrSpelling, DECLSPEC_DEVICE_BUILTIN_TEXTURE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDADeviceBuiltinTextureTypeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDADeviceBuiltinTextureTypeAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDAGlobalAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAGlobalAttrSpelling, GNU_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAGlobalAttrSpelling, DECLSPEC_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAGlobalAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDAGlobalAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDAHostAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAHostAttrSpelling, GNU_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAHostAttrSpelling, DECLSPEC_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDAHostAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDAHostAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDALaunchBoundsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDALaunchBoundsAttrSpelling, GNU_LAUNCH_BOUNDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDALaunchBoundsAttrSpelling, DECLSPEC_LAUNCH_BOUNDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDALaunchBoundsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDALaunchBoundsAttrSpelling)

MX_BEGIN_ENUM_CLASS(CUDASharedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDASharedAttrSpelling, GNU_SHARED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDASharedAttrSpelling, DECLSPEC_SHARED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CUDASharedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CUDASharedAttrSpelling)

MX_BEGIN_ENUM_CLASS(CXX11NoReturnAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXX11NoReturnAttrSpelling, CXX11_NORETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXX11NoReturnAttrSpelling, C2XNORETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXX11NoReturnAttrSpelling, C2X_NORETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXX11NoReturnAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CXX11NoReturnAttrSpelling)

MX_BEGIN_ENUM_CLASS(CXXConstructExprConstructionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXConstructExprConstructionKind, COMPLETE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXConstructExprConstructionKind, NON_VIRTUAL_BASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXConstructExprConstructionKind, VIRTUAL_BASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXConstructExprConstructionKind, DELEGATING, unsigned char)
MX_END_ENUM_CLASS(CXXConstructExprConstructionKind)

MX_BEGIN_ENUM_CLASS(CXXNewExprInitializationStyle, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXNewExprInitializationStyle, NO_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXNewExprInitializationStyle, CALL_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXNewExprInitializationStyle, LIST_INITIALIZER, unsigned char)
MX_END_ENUM_CLASS(CXXNewExprInitializationStyle)

MX_BEGIN_ENUM_CLASS(CXXRecordDeclLambdaDependencyKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXRecordDeclLambdaDependencyKind, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXRecordDeclLambdaDependencyKind, ALWAYS_DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CXXRecordDeclLambdaDependencyKind, NEVER_DEPENDENT, unsigned char)
MX_END_ENUM_CLASS(CXXRecordDeclLambdaDependencyKind)

MX_BEGIN_ENUM_CLASS(CallExprADLCallKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallExprADLCallKind, NOT_ADL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallExprADLCallKind, USES_ADL, unsigned char)
MX_END_ENUM_CLASS(CallExprADLCallKind)

MX_BEGIN_ENUM_CLASS(CallableWhenAttrConsumedState, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallableWhenAttrConsumedState, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallableWhenAttrConsumedState, CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallableWhenAttrConsumedState, UNCONSUMED, unsigned char)
MX_END_ENUM_CLASS(CallableWhenAttrConsumedState)

MX_BEGIN_ENUM_CLASS(CallableWhenAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallableWhenAttrSpelling, GNU_CALLABLE_WHEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallableWhenAttrSpelling, CXX11_CLANG_CALLABLE_WHEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallableWhenAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CallableWhenAttrSpelling)

MX_BEGIN_ENUM_CLASS(CallbackAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallbackAttrSpelling, GNU_CALLBACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallbackAttrSpelling, CXX11_CLANG_CALLBACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallbackAttrSpelling, C2X_CLANG_CALLBACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallbackAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CallbackAttrSpelling)

MX_BEGIN_ENUM_CLASS(CalledOnceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CalledOnceAttrSpelling, GNU_CALLED_ONCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CalledOnceAttrSpelling, CXX11_CLANG_CALLED_ONCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CalledOnceAttrSpelling, C2X_CLANG_CALLED_ONCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CalledOnceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CalledOnceAttrSpelling)

MX_BEGIN_ENUM_CLASS(CapabilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapabilityAttrSpelling, GNU_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapabilityAttrSpelling, CXX11_CLANG_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapabilityAttrSpelling, GNU_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapabilityAttrSpelling, CXX11_CLANG_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapabilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CapabilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(CapturedStmtVariableCaptureKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapturedStmtVariableCaptureKind, THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapturedStmtVariableCaptureKind, BY_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapturedStmtVariableCaptureKind, BY_COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapturedStmtVariableCaptureKind, VLA_TYPE, unsigned char)
MX_END_ENUM_CLASS(CapturedStmtVariableCaptureKind)

MX_BEGIN_ENUM_CLASS(CarriesDependencyAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CarriesDependencyAttrSpelling, GNU_CARRIES_DEPENDENCY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CarriesDependencyAttrSpelling, CXX11_CARRIES_DEPENDENCY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CarriesDependencyAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CarriesDependencyAttrSpelling)

MX_BEGIN_ENUM_CLASS(CharacterLiteralCharacterKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CharacterLiteralCharacterKind, ASCII, unsigned char)
  MX_ENUM_CLASS_ENTRY(CharacterLiteralCharacterKind, WIDE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CharacterLiteralCharacterKind, UTF8, unsigned char)
  MX_ENUM_CLASS_ENTRY(CharacterLiteralCharacterKind, UTF16, unsigned char)
  MX_ENUM_CLASS_ENTRY(CharacterLiteralCharacterKind, UTF32, unsigned char)
MX_END_ENUM_CLASS(CharacterLiteralCharacterKind)

MX_BEGIN_ENUM_CLASS(CleanupAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CleanupAttrSpelling, GNU_CLEANUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(CleanupAttrSpelling, CXX11_GNU_CLEANUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(CleanupAttrSpelling, C2X_GNU_CLEANUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(CleanupAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CleanupAttrSpelling)

MX_BEGIN_ENUM_CLASS(ColdAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ColdAttrSpelling, GNU_COLD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ColdAttrSpelling, CXX11_GNU_COLD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ColdAttrSpelling, C2X_GNU_COLD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ColdAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ColdAttrSpelling)

MX_BEGIN_ENUM_CLASS(CommonAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommonAttrSpelling, GNU_COMMON, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommonAttrSpelling, CXX11_GNU_COMMON, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommonAttrSpelling, C2X_GNU_COMMON, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommonAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(CommonAttrSpelling)

MX_BEGIN_ENUM_CLASS(ConstAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstAttrSpelling, GNU_CONST, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstAttrSpelling, CXX11_GNU_CONST, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstAttrSpelling, C2X_GNU_CONST, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ConstAttrSpelling)

MX_BEGIN_ENUM_CLASS(ConstInitAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstInitAttrSpelling, KEYWORD_CONSTINIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstInitAttrSpelling, GNU_REQUIRE_CONSTANT_INITIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstInitAttrSpelling, CXX11_CLANG_REQUIRE_CONSTANT_INITIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstInitAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ConstInitAttrSpelling)

MX_BEGIN_ENUM_CLASS(ConstantExprResultStorageKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstantExprResultStorageKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstantExprResultStorageKind, INT64, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstantExprResultStorageKind, AP_VALUE, unsigned char)
MX_END_ENUM_CLASS(ConstantExprResultStorageKind)

MX_BEGIN_ENUM_CLASS(ConstructorAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstructorAttrSpelling, GNU_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstructorAttrSpelling, CXX11_GNU_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstructorAttrSpelling, C2X_GNU_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstructorAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ConstructorAttrSpelling)

MX_BEGIN_ENUM_CLASS(ConsumableAttrConsumedState, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAttrConsumedState, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAttrConsumedState, CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAttrConsumedState, UNCONSUMED, unsigned char)
MX_END_ENUM_CLASS(ConsumableAttrConsumedState)

MX_BEGIN_ENUM_CLASS(ConsumableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAttrSpelling, GNU_CONSUMABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAttrSpelling, CXX11_CLANG_CONSUMABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ConsumableAttrSpelling)

MX_BEGIN_ENUM_CLASS(ConsumableAutoCastAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAutoCastAttrSpelling, GNU_CONSUMABLE_AUTO_CAST_STATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAutoCastAttrSpelling, CXX11_CLANG_CONSUMABLE_AUTO_CAST_STATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableAutoCastAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ConsumableAutoCastAttrSpelling)

MX_BEGIN_ENUM_CLASS(ConsumableSetOnReadAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableSetOnReadAttrSpelling, GNU_CONSUMABLE_STATE_ON_READ, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableSetOnReadAttrSpelling, CXX11_CLANG_CONSUMABLE_STATE_ON_READ, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConsumableSetOnReadAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ConsumableSetOnReadAttrSpelling)

MX_BEGIN_ENUM_CLASS(ConvergentAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConvergentAttrSpelling, GNU_CONVERGENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConvergentAttrSpelling, CXX11_CLANG_CONVERGENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConvergentAttrSpelling, C2X_CLANG_CONVERGENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConvergentAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ConvergentAttrSpelling)

MX_BEGIN_ENUM_CLASS(DLLExportAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLExportAttrSpelling, DECLSPEC_DLLEXPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLExportAttrSpelling, GNU_DLLEXPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLExportAttrSpelling, CXX11_GNU_DLLEXPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLExportAttrSpelling, C2X_GNU_DLLEXPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLExportAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(DLLExportAttrSpelling)

MX_BEGIN_ENUM_CLASS(DLLImportAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLImportAttrSpelling, DECLSPEC_DLLIMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLImportAttrSpelling, GNU_DLLIMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLImportAttrSpelling, CXX11_GNU_DLLIMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLImportAttrSpelling, C2X_GNU_DLLIMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DLLImportAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(DLLImportAttrSpelling)

MX_BEGIN_ENUM_CLASS(DeclFriendObjectKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclFriendObjectKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclFriendObjectKind, DECLARED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclFriendObjectKind, UNDECLARED, unsigned char)
MX_END_ENUM_CLASS(DeclFriendObjectKind)

MX_BEGIN_ENUM_CLASS(DeclIdentifierNamespace, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, LABEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, TAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, MEMBER, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, NAMESPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, ORDINARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, OBJ_C_PROTOCOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, ORDINARY_FRIEND, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, TAG_FRIEND, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, USING, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, NON_MEMBER_OPERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, LOCAL_EXTERN, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, OMP_REDUCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclIdentifierNamespace, OMP_MAPPER, unsigned char)
MX_END_ENUM_CLASS(DeclIdentifierNamespace)

MX_BEGIN_ENUM_CLASS(DeclModuleOwnershipKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclModuleOwnershipKind, UNOWNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclModuleOwnershipKind, VISIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclModuleOwnershipKind, VISIBLE_WHEN_IMPORTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclModuleOwnershipKind, REACHABLE_WHEN_IMPORTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclModuleOwnershipKind, MODULE_PRIVATE, unsigned char)
MX_END_ENUM_CLASS(DeclModuleOwnershipKind)

MX_BEGIN_ENUM_CLASS(DeclObjCDeclQualifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, IN, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, INOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, OUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, BYCOPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, BYREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, ONEWAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclObjCDeclQualifier, CS_NULLABILITY, unsigned char)
MX_END_ENUM_CLASS(DeclObjCDeclQualifier)

MX_BEGIN_ENUM_CLASS(DeprecatedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeprecatedAttrSpelling, GNU_DEPRECATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeprecatedAttrSpelling, CXX11_GNU_DEPRECATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeprecatedAttrSpelling, C2X_GNU_DEPRECATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeprecatedAttrSpelling, DECLSPEC_DEPRECATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeprecatedAttrSpelling, CXX11_DEPRECATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeprecatedAttrSpelling, C2X_DEPRECATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeprecatedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(DeprecatedAttrSpelling)

MX_BEGIN_ENUM_CLASS(DestructorAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(DestructorAttrSpelling, GNU_DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DestructorAttrSpelling, CXX11_GNU_DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DestructorAttrSpelling, C2X_GNU_DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DestructorAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(DestructorAttrSpelling)

MX_BEGIN_ENUM_CLASS(DiagnoseAsBuiltinAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnoseAsBuiltinAttrSpelling, GNU_DIAGNOSE_AS_BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnoseAsBuiltinAttrSpelling, CXX11_CLANG_DIAGNOSE_AS_BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnoseAsBuiltinAttrSpelling, C2X_CLANG_DIAGNOSE_AS_BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnoseAsBuiltinAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(DiagnoseAsBuiltinAttrSpelling)

MX_BEGIN_ENUM_CLASS(DiagnoseIfAttrDiagnosticType, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnoseIfAttrDiagnosticType, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnoseIfAttrDiagnosticType, WARNING, unsigned char)
MX_END_ENUM_CLASS(DiagnoseIfAttrDiagnosticType)

MX_BEGIN_ENUM_CLASS(DisableSanitizerInstrumentationAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableSanitizerInstrumentationAttrSpelling, GNU_DISABLE_SANITIZER_INSTRUMENTATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableSanitizerInstrumentationAttrSpelling, CXX11_CLANG_DISABLE_SANITIZER_INSTRUMENTATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableSanitizerInstrumentationAttrSpelling, C2X_CLANG_DISABLE_SANITIZER_INSTRUMENTATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableSanitizerInstrumentationAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(DisableSanitizerInstrumentationAttrSpelling)

MX_BEGIN_ENUM_CLASS(DisableTailCallsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableTailCallsAttrSpelling, GNU_DISABLE_TAIL_CALLS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableTailCallsAttrSpelling, CXX11_CLANG_DISABLE_TAIL_CALLS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableTailCallsAttrSpelling, C2X_CLANG_DISABLE_TAIL_CALLS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DisableTailCallsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(DisableTailCallsAttrSpelling)

MX_BEGIN_ENUM_CLASS(EnforceTCBAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBAttrSpelling, GNU_ENFORCE_TCB, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBAttrSpelling, CXX11_CLANG_ENFORCE_TCB, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBAttrSpelling, C2X_CLANG_ENFORCE_TCB, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(EnforceTCBAttrSpelling)

MX_BEGIN_ENUM_CLASS(EnforceTCBLeafAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBLeafAttrSpelling, GNU_ENFORCE_TCB_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBLeafAttrSpelling, CXX11_CLANG_ENFORCE_TCB_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBLeafAttrSpelling, C2X_CLANG_ENFORCE_TCB_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnforceTCBLeafAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(EnforceTCBLeafAttrSpelling)

MX_BEGIN_ENUM_CLASS(EnumExtensibilityAttrKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnumExtensibilityAttrKind, CLOSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnumExtensibilityAttrKind, OPEN, unsigned char)
MX_END_ENUM_CLASS(EnumExtensibilityAttrKind)

MX_BEGIN_ENUM_CLASS(EnumExtensibilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnumExtensibilityAttrSpelling, GNU_ENUM_EXTENSIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnumExtensibilityAttrSpelling, CXX11_CLANG_ENUM_EXTENSIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnumExtensibilityAttrSpelling, C2X_CLANG_ENUM_EXTENSIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(EnumExtensibilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(EnumExtensibilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(ErrorAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ErrorAttrSpelling, GNU_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ErrorAttrSpelling, CXX11_GNU_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ErrorAttrSpelling, C2X_GNU_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ErrorAttrSpelling, GNU_WARNING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ErrorAttrSpelling, CXX11_GNU_WARNING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ErrorAttrSpelling, C2X_GNU_WARNING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ErrorAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ErrorAttrSpelling)

MX_BEGIN_ENUM_CLASS(ExcludeFromExplicitInstantiationAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExcludeFromExplicitInstantiationAttrSpelling, GNU_EXCLUDE_FROM_EXPLICIT_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExcludeFromExplicitInstantiationAttrSpelling, CXX11_CLANG_EXCLUDE_FROM_EXPLICIT_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExcludeFromExplicitInstantiationAttrSpelling, C2X_CLANG_EXCLUDE_FROM_EXPLICIT_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExcludeFromExplicitInstantiationAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ExcludeFromExplicitInstantiationAttrSpelling)

MX_BEGIN_ENUM_CLASS(ExprConstantExprKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprConstantExprKind, NORMAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprConstantExprKind, NON_CLASS_TEMPLATE_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprConstantExprKind, CLASS_TEMPLATE_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprConstantExprKind, IMMEDIATE_INVOCATION, unsigned char)
MX_END_ENUM_CLASS(ExprConstantExprKind)

MX_BEGIN_ENUM_CLASS(ExprLValueClassification, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, VALID, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, NOT_OBJECT_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, INCOMPLETE_VOID_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, DUPLICATE_VECTOR_COMPONENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, INVALID_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, INVALID_MESSAGE_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, MEMBER_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, SUB_OBJ_C_PROPERTY_SETTING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, CLASS_TEMPORARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprLValueClassification, ARRAY_TEMPORARY, unsigned char)
MX_END_ENUM_CLASS(ExprLValueClassification)

MX_BEGIN_ENUM_CLASS(ExprNullPointerConstantKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantKind, NOT_NULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantKind, ZERO_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantKind, ZERO_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantKind, CXX11_NULLPTR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantKind, GNU_NULL, unsigned char)
MX_END_ENUM_CLASS(ExprNullPointerConstantKind)

MX_BEGIN_ENUM_CLASS(ExprNullPointerConstantValueDependence, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantValueDependence, NEVER_VALUE_DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantValueDependence, VALUE_DEPENDENT_IS_NULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprNullPointerConstantValueDependence, VALUE_DEPENDENT_IS_NOT_NULL, unsigned char)
MX_END_ENUM_CLASS(ExprNullPointerConstantValueDependence)

MX_BEGIN_ENUM_CLASS(ExprSideEffectsKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprSideEffectsKind, NO_SIDE_EFFECTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprSideEffectsKind, ALLOW_UNDEFINED_BEHAVIOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprSideEffectsKind, ALLOW_SIDE_EFFECTS, unsigned char)
MX_END_ENUM_CLASS(ExprSideEffectsKind)

MX_BEGIN_ENUM_CLASS(ExprisModifiableLvalueResult, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, VALID, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, NOT_OBJECT_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, INCOMPLETE_VOID_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, DUPLICATE_VECTOR_COMPONENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, INVALID_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, L_VALUE_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, INCOMPLETE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, CONST_QUALIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, CONST_QUALIFIED_FIELD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, CONST_ADDRESS_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, ARRAY_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, NO_SETTER_PROPERTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, MEMBER_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, SUB_OBJ_C_PROPERTY_SETTING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, INVALID_MESSAGE_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, CLASS_TEMPORARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprisModifiableLvalueResult, ARRAY_TEMPORARY, unsigned char)
MX_END_ENUM_CLASS(ExprisModifiableLvalueResult)

MX_BEGIN_ENUM_CLASS(ExternalSourceSymbolAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExternalSourceSymbolAttrSpelling, GNU_EXTERNAL_SOURCE_SYMBOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExternalSourceSymbolAttrSpelling, CXX11_CLANG_EXTERNAL_SOURCE_SYMBOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExternalSourceSymbolAttrSpelling, C2X_CLANG_EXTERNAL_SOURCE_SYMBOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExternalSourceSymbolAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ExternalSourceSymbolAttrSpelling)

MX_BEGIN_ENUM_CLASS(FallThroughAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FallThroughAttrSpelling, CXX11_FALLTHROUGH, unsigned char)
  MX_ENUM_CLASS_ENTRY(FallThroughAttrSpelling, C2X_FALLTHROUGH, unsigned char)
  MX_ENUM_CLASS_ENTRY(FallThroughAttrSpelling, CXX11_CLANG_FALLTHROUGH, unsigned char)
  MX_ENUM_CLASS_ENTRY(FallThroughAttrSpelling, GNU_FALLTHROUGH, unsigned char)
  MX_ENUM_CLASS_ENTRY(FallThroughAttrSpelling, CXX11_GNU_FALLTHROUGH, unsigned char)
  MX_ENUM_CLASS_ENTRY(FallThroughAttrSpelling, C2X_GNU_FALLTHROUGH, unsigned char)
  MX_ENUM_CLASS_ENTRY(FallThroughAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FallThroughAttrSpelling)

MX_BEGIN_ENUM_CLASS(FastCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FastCallAttrSpelling, GNU_FASTCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(FastCallAttrSpelling, CXX11_GNU_FASTCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(FastCallAttrSpelling, C2X_GNU_FASTCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(FastCallAttrSpelling, KEYWORD_FASTCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(FastCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FastCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(FinalAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FinalAttrSpelling, KEYWORD_FINAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(FinalAttrSpelling, KEYWORD_SEALED, unsigned char)
  MX_ENUM_CLASS_ENTRY(FinalAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FinalAttrSpelling)

MX_BEGIN_ENUM_CLASS(FlagEnumAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlagEnumAttrSpelling, GNU_FLAG_ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlagEnumAttrSpelling, CXX11_CLANG_FLAG_ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlagEnumAttrSpelling, C2X_CLANG_FLAG_ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlagEnumAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FlagEnumAttrSpelling)

MX_BEGIN_ENUM_CLASS(FlattenAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlattenAttrSpelling, GNU_FLATTEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlattenAttrSpelling, CXX11_GNU_FLATTEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlattenAttrSpelling, C2X_GNU_FLATTEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(FlattenAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FlattenAttrSpelling)

MX_BEGIN_ENUM_CLASS(FormatArgAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatArgAttrSpelling, GNU_FORMAT_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatArgAttrSpelling, CXX11_GNU_FORMAT_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatArgAttrSpelling, C2X_GNU_FORMAT_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatArgAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FormatArgAttrSpelling)

MX_BEGIN_ENUM_CLASS(FormatAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatAttrSpelling, GNU_FORMAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatAttrSpelling, CXX11_GNU_FORMAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatAttrSpelling, C2X_GNU_FORMAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FormatAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FormatAttrSpelling)

MX_BEGIN_ENUM_CLASS(FunctionDeclTemplatedKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionDeclTemplatedKind, NON_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionDeclTemplatedKind, FUNCTION_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionDeclTemplatedKind, MEMBER_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionDeclTemplatedKind, FUNCTION_TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionDeclTemplatedKind, DEPENDENT_FUNCTION_TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionDeclTemplatedKind, DEPENDENT_NON_TEMPLATE, unsigned char)
MX_END_ENUM_CLASS(FunctionDeclTemplatedKind)

MX_BEGIN_ENUM_CLASS(FunctionReturnThunksAttrKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionReturnThunksAttrKind, KEEP, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionReturnThunksAttrKind, EXTERN, unsigned char)
MX_END_ENUM_CLASS(FunctionReturnThunksAttrKind)

MX_BEGIN_ENUM_CLASS(FunctionReturnThunksAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionReturnThunksAttrSpelling, GNU_FUNCTION_RETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionReturnThunksAttrSpelling, CXX11_GNU_FUNCTION_RETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionReturnThunksAttrSpelling, C2X_GNU_FUNCTION_RETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(FunctionReturnThunksAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(FunctionReturnThunksAttrSpelling)

MX_BEGIN_ENUM_CLASS(GNUInlineAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(GNUInlineAttrSpelling, GNU_GNU_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GNUInlineAttrSpelling, CXX11_GNU_GNU_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GNUInlineAttrSpelling, C2X_GNU_GNU_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GNUInlineAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(GNUInlineAttrSpelling)

MX_BEGIN_ENUM_CLASS(GuardedVarAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(GuardedVarAttrSpelling, GNU_GUARDED_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GuardedVarAttrSpelling, CXX11_CLANG_GUARDED_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GuardedVarAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(GuardedVarAttrSpelling)

MX_BEGIN_ENUM_CLASS(HIPManagedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(HIPManagedAttrSpelling, GNU_MANAGED, unsigned char)
  MX_ENUM_CLASS_ENTRY(HIPManagedAttrSpelling, DECLSPEC_MANAGED, unsigned char)
  MX_ENUM_CLASS_ENTRY(HIPManagedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(HIPManagedAttrSpelling)

MX_BEGIN_ENUM_CLASS(HLSLResourceAttrResourceClass, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceClass, SRV, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceClass, UAV, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceClass, C_BUFFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceClass, SAMPLER, unsigned char)
MX_END_ENUM_CLASS(HLSLResourceAttrResourceClass)

MX_BEGIN_ENUM_CLASS(HLSLResourceAttrResourceKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE1_D, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE2_D, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE2_DMS, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE3_D, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE_CUBE, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE1_D_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE2_D_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE2_DMS_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TEXTURE_CUBE_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, TYPED_BUFFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, RAW_BUFFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, STRUCTURED_BUFFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, C_BUFFER_KIND, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, SAMPLER_KIND, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, T_BUFFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, RT_ACCELERATION_STRUCTURE, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, FEEDBACK_TEXTURE2_D, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLResourceAttrResourceKind, FEEDBACK_TEXTURE2_D_ARRAY, unsigned char)
MX_END_ENUM_CLASS(HLSLResourceAttrResourceKind)

MX_BEGIN_ENUM_CLASS(HLSLShaderAttrShaderType, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, PIXEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, VERTEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, GEOMETRY, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, HULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, DOMAIN_, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, COMPUTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, LIBRARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, RAY_GENERATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, INTERSECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, ANY_HIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, CLOSEST_HIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, MISS, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, CALLABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, MESH, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLShaderAttrShaderType, AMPLIFICATION, unsigned char)
MX_END_ENUM_CLASS(HLSLShaderAttrShaderType)

MX_BEGIN_ENUM_CLASS(HotAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(HotAttrSpelling, GNU_HOT, unsigned char)
  MX_ENUM_CLASS_ENTRY(HotAttrSpelling, CXX11_GNU_HOT, unsigned char)
  MX_ENUM_CLASS_ENTRY(HotAttrSpelling, C2X_GNU_HOT, unsigned char)
  MX_ENUM_CLASS_ENTRY(HotAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(HotAttrSpelling)

MX_BEGIN_ENUM_CLASS(IBActionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBActionAttrSpelling, GNU_IBACTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBActionAttrSpelling, CXX11_CLANG_IBACTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBActionAttrSpelling, C2X_CLANG_IBACTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBActionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(IBActionAttrSpelling)

MX_BEGIN_ENUM_CLASS(IBOutletAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletAttrSpelling, GNU_IBOUTLET, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletAttrSpelling, CXX11_CLANG_IBOUTLET, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletAttrSpelling, C2X_CLANG_IBOUTLET, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(IBOutletAttrSpelling)

MX_BEGIN_ENUM_CLASS(IBOutletCollectionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletCollectionAttrSpelling, GNU_IBOUTLETCOLLECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletCollectionAttrSpelling, CXX11_CLANG_IBOUTLETCOLLECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletCollectionAttrSpelling, C2X_CLANG_IBOUTLETCOLLECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(IBOutletCollectionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(IBOutletCollectionAttrSpelling)

MX_BEGIN_ENUM_CLASS(IFuncAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(IFuncAttrSpelling, GNU_IFUNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(IFuncAttrSpelling, CXX11_GNU_IFUNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(IFuncAttrSpelling, C2X_GNU_IFUNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(IFuncAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(IFuncAttrSpelling)

MX_BEGIN_ENUM_CLASS(ImplicitCastExprOnStack, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitCastExprOnStack, ON_STACK, unsigned char)
MX_END_ENUM_CLASS(ImplicitCastExprOnStack)

MX_BEGIN_ENUM_CLASS(ImplicitParamDeclImplicitParamKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitParamDeclImplicitParamKind, OBJ_C_SELF, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitParamDeclImplicitParamKind, OBJ_C_CMD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitParamDeclImplicitParamKind, CXX_THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitParamDeclImplicitParamKind, CXXVTT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitParamDeclImplicitParamKind, CAPTURED_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitParamDeclImplicitParamKind, THREAD_PRIVATE_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImplicitParamDeclImplicitParamKind, OTHER, unsigned char)
MX_END_ENUM_CLASS(ImplicitParamDeclImplicitParamKind)

MX_BEGIN_ENUM_CLASS(InitPriorityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(InitPriorityAttrSpelling, GNU_INITIALIZER_PRIORITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(InitPriorityAttrSpelling, CXX11_GNU_INITIALIZER_PRIORITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(InitPriorityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(InitPriorityAttrSpelling)

MX_BEGIN_ENUM_CLASS(IntelOclBiccAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(IntelOclBiccAttrSpelling, GNU_INTEL_OCL_BICC, unsigned char)
  MX_ENUM_CLASS_ENTRY(IntelOclBiccAttrSpelling, CXX11_CLANG_INTEL_OCL_BICC, unsigned char)
  MX_ENUM_CLASS_ENTRY(IntelOclBiccAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(IntelOclBiccAttrSpelling)

MX_BEGIN_ENUM_CLASS(InternalLinkageAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(InternalLinkageAttrSpelling, GNU_INTERNAL_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(InternalLinkageAttrSpelling, CXX11_CLANG_INTERNAL_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(InternalLinkageAttrSpelling, C2X_CLANG_INTERNAL_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(InternalLinkageAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(InternalLinkageAttrSpelling)

MX_BEGIN_ENUM_CLASS(LTOVisibilityPublicAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(LTOVisibilityPublicAttrSpelling, GNU_LTO_VISIBILITY_PUBLIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(LTOVisibilityPublicAttrSpelling, CXX11_CLANG_LTO_VISIBILITY_PUBLIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(LTOVisibilityPublicAttrSpelling, C2X_CLANG_LTO_VISIBILITY_PUBLIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(LTOVisibilityPublicAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(LTOVisibilityPublicAttrSpelling)

MX_BEGIN_ENUM_CLASS(LeafAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(LeafAttrSpelling, GNU_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(LeafAttrSpelling, CXX11_GNU_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(LeafAttrSpelling, C2X_GNU_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(LeafAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(LeafAttrSpelling)

MX_BEGIN_ENUM_CLASS(LifetimeBoundAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(LifetimeBoundAttrSpelling, GNU_LIFETIMEBOUND, unsigned char)
  MX_ENUM_CLASS_ENTRY(LifetimeBoundAttrSpelling, CXX11_CLANG_LIFETIMEBOUND, unsigned char)
  MX_ENUM_CLASS_ENTRY(LifetimeBoundAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(LifetimeBoundAttrSpelling)

MX_BEGIN_ENUM_CLASS(LikelyAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(LikelyAttrSpelling, CXX11_LIKELY, unsigned char)
  MX_ENUM_CLASS_ENTRY(LikelyAttrSpelling, C2X_CLANG_LIKELY, unsigned char)
  MX_ENUM_CLASS_ENTRY(LikelyAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(LikelyAttrSpelling)

MX_BEGIN_ENUM_CLASS(LinkageSpecDeclLanguageIDs, unsigned char)
  MX_ENUM_CLASS_ENTRY(LinkageSpecDeclLanguageIDs, C, unsigned char)
  MX_ENUM_CLASS_ENTRY(LinkageSpecDeclLanguageIDs, CXX, unsigned char)
MX_END_ENUM_CLASS(LinkageSpecDeclLanguageIDs)

MX_BEGIN_ENUM_CLASS(LoaderUninitializedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoaderUninitializedAttrSpelling, GNU_LOADER_UNINITIALIZED, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoaderUninitializedAttrSpelling, CXX11_CLANG_LOADER_UNINITIALIZED, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoaderUninitializedAttrSpelling, C2X_CLANG_LOADER_UNINITIALIZED, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoaderUninitializedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(LoaderUninitializedAttrSpelling)

MX_BEGIN_ENUM_CLASS(LoopHintAttrLoopHintState, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrLoopHintState, ENABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrLoopHintState, DISABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrLoopHintState, NUMERIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrLoopHintState, FIXED_WIDTH, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrLoopHintState, SCALABLE_WIDTH, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrLoopHintState, ASSUME_SAFETY, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrLoopHintState, FULL, unsigned char)
MX_END_ENUM_CLASS(LoopHintAttrLoopHintState)

MX_BEGIN_ENUM_CLASS(LoopHintAttrOptionType, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, VECTORIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, VECTORIZE_WIDTH, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, INTERLEAVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, INTERLEAVE_COUNT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, UNROLL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, UNROLL_COUNT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, UNROLL_AND_JAM, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, UNROLL_AND_JAM_COUNT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, PIPELINE_DISABLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, PIPELINE_INITIATION_INTERVAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, DISTRIBUTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrOptionType, VECTORIZE_PREDICATE, unsigned char)
MX_END_ENUM_CLASS(LoopHintAttrOptionType)

MX_BEGIN_ENUM_CLASS(LoopHintAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrSpelling, PRAGMA_CLANG_LOOP, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrSpelling, PRAGMA_UNROLL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrSpelling, PRAGMA_NOUNROLL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrSpelling, PRAGMA_UNROLL_AND_JAM, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrSpelling, PRAGMA_NOUNROLL_AND_JAM, unsigned char)
  MX_ENUM_CLASS_ENTRY(LoopHintAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(LoopHintAttrSpelling)

MX_BEGIN_ENUM_CLASS(MIGServerRoutineAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MIGServerRoutineAttrSpelling, GNU_MIG_SERVER_ROUTINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MIGServerRoutineAttrSpelling, CXX11_CLANG_MIG_SERVER_ROUTINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MIGServerRoutineAttrSpelling, C2X_CLANG_MIG_SERVER_ROUTINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MIGServerRoutineAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MIGServerRoutineAttrSpelling)

MX_BEGIN_ENUM_CLASS(MSABIAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSABIAttrSpelling, GNU_MS_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSABIAttrSpelling, CXX11_GNU_MS_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSABIAttrSpelling, C2X_GNU_MS_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSABIAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MSABIAttrSpelling)

MX_BEGIN_ENUM_CLASS(MSInheritanceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceAttrSpelling, KEYWORD_SINGLE_INHERITANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceAttrSpelling, KEYWORD_MULTIPLE_INHERITANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceAttrSpelling, KEYWORD_VIRTUAL_INHERITANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceAttrSpelling, KEYWORD_UNSPECIFIED_INHERITANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MSInheritanceAttrSpelling)

MX_BEGIN_ENUM_CLASS(MSP430InterruptAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSP430InterruptAttrSpelling, GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSP430InterruptAttrSpelling, CXX11_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSP430InterruptAttrSpelling, C2X_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSP430InterruptAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MSP430InterruptAttrSpelling)

MX_BEGIN_ENUM_CLASS(MSStructAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSStructAttrSpelling, GNU_MS_STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSStructAttrSpelling, CXX11_GNU_MS_STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSStructAttrSpelling, C2X_GNU_MS_STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSStructAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MSStructAttrSpelling)

MX_BEGIN_ENUM_CLASS(MayAliasAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MayAliasAttrSpelling, GNU_MAY_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(MayAliasAttrSpelling, CXX11_GNU_MAY_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(MayAliasAttrSpelling, C2X_GNU_MAY_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(MayAliasAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MayAliasAttrSpelling)

MX_BEGIN_ENUM_CLASS(MaybeUndefAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MaybeUndefAttrSpelling, GNU_MAYBE_UNDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(MaybeUndefAttrSpelling, CXX11_CLANG_MAYBE_UNDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(MaybeUndefAttrSpelling, C2X_CLANG_MAYBE_UNDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(MaybeUndefAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MaybeUndefAttrSpelling)

MX_BEGIN_ENUM_CLASS(MicroMipsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MicroMipsAttrSpelling, GNU_MICROMIPS, unsigned char)
  MX_ENUM_CLASS_ENTRY(MicroMipsAttrSpelling, CXX11_GNU_MICROMIPS, unsigned char)
  MX_ENUM_CLASS_ENTRY(MicroMipsAttrSpelling, C2X_GNU_MICROMIPS, unsigned char)
  MX_ENUM_CLASS_ENTRY(MicroMipsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MicroMipsAttrSpelling)

MX_BEGIN_ENUM_CLASS(MinSizeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinSizeAttrSpelling, GNU_MINSIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinSizeAttrSpelling, CXX11_CLANG_MINSIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinSizeAttrSpelling, C2X_CLANG_MINSIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinSizeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MinSizeAttrSpelling)

MX_BEGIN_ENUM_CLASS(MinVectorWidthAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinVectorWidthAttrSpelling, GNU_MIN_VECTOR_WIDTH, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinVectorWidthAttrSpelling, CXX11_CLANG_MIN_VECTOR_WIDTH, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinVectorWidthAttrSpelling, C2X_CLANG_MIN_VECTOR_WIDTH, unsigned char)
  MX_ENUM_CLASS_ENTRY(MinVectorWidthAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MinVectorWidthAttrSpelling)

MX_BEGIN_ENUM_CLASS(Mips16AttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(Mips16AttrSpelling, GNU_MIPS16, unsigned char)
  MX_ENUM_CLASS_ENTRY(Mips16AttrSpelling, CXX11_GNU_MIPS16, unsigned char)
  MX_ENUM_CLASS_ENTRY(Mips16AttrSpelling, C2X_GNU_MIPS16, unsigned char)
  MX_ENUM_CLASS_ENTRY(Mips16AttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(Mips16AttrSpelling)

MX_BEGIN_ENUM_CLASS(MipsInterruptAttrInterruptType, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, SW0, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, SW1, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, HW0, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, HW1, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, HW2, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, HW3, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, HW4, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, HW5, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrInterruptType, EIC, unsigned char)
MX_END_ENUM_CLASS(MipsInterruptAttrInterruptType)

MX_BEGIN_ENUM_CLASS(MipsInterruptAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrSpelling, GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrSpelling, CXX11_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrSpelling, C2X_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsInterruptAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MipsInterruptAttrSpelling)

MX_BEGIN_ENUM_CLASS(MipsLongCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsLongCallAttrSpelling, GNU_LONG_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsLongCallAttrSpelling, CXX11_GNU_LONG_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsLongCallAttrSpelling, C2X_GNU_LONG_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsLongCallAttrSpelling, GNU_FAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsLongCallAttrSpelling, CXX11_GNU_FAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsLongCallAttrSpelling, C2X_GNU_FAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsLongCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MipsLongCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(MipsShortCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsShortCallAttrSpelling, GNU_SHORT_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsShortCallAttrSpelling, CXX11_GNU_SHORT_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsShortCallAttrSpelling, C2X_GNU_SHORT_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsShortCallAttrSpelling, GNU_NEAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsShortCallAttrSpelling, CXX11_GNU_NEAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsShortCallAttrSpelling, C2X_GNU_NEAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(MipsShortCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MipsShortCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(ModeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModeAttrSpelling, GNU_MODE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModeAttrSpelling, CXX11_GNU_MODE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModeAttrSpelling, C2X_GNU_MODE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ModeAttrSpelling)

MX_BEGIN_ENUM_CLASS(MustTailAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(MustTailAttrSpelling, GNU_MUSTTAIL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MustTailAttrSpelling, CXX11_CLANG_MUSTTAIL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MustTailAttrSpelling, C2X_CLANG_MUSTTAIL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MustTailAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(MustTailAttrSpelling)

MX_BEGIN_ENUM_CLASS(NSConsumedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumedAttrSpelling, GNU_NS_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumedAttrSpelling, CXX11_CLANG_NS_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumedAttrSpelling, C2X_CLANG_NS_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NSConsumedAttrSpelling)

MX_BEGIN_ENUM_CLASS(NSConsumesSelfAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumesSelfAttrSpelling, GNU_NS_CONSUMES_SELF, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumesSelfAttrSpelling, CXX11_CLANG_NS_CONSUMES_SELF, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumesSelfAttrSpelling, C2X_CLANG_NS_CONSUMES_SELF, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSConsumesSelfAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NSConsumesSelfAttrSpelling)

MX_BEGIN_ENUM_CLASS(NSReturnsAutoreleasedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsAutoreleasedAttrSpelling, GNU_NS_RETURNS_AUTORELEASED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsAutoreleasedAttrSpelling, CXX11_CLANG_NS_RETURNS_AUTORELEASED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsAutoreleasedAttrSpelling, C2X_CLANG_NS_RETURNS_AUTORELEASED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsAutoreleasedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NSReturnsAutoreleasedAttrSpelling)

MX_BEGIN_ENUM_CLASS(NSReturnsNotRetainedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsNotRetainedAttrSpelling, GNU_NS_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsNotRetainedAttrSpelling, CXX11_CLANG_NS_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsNotRetainedAttrSpelling, C2X_CLANG_NS_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsNotRetainedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NSReturnsNotRetainedAttrSpelling)

MX_BEGIN_ENUM_CLASS(NSReturnsRetainedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsRetainedAttrSpelling, GNU_NS_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsRetainedAttrSpelling, CXX11_CLANG_NS_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsRetainedAttrSpelling, C2X_CLANG_NS_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NSReturnsRetainedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NSReturnsRetainedAttrSpelling)

MX_BEGIN_ENUM_CLASS(NVPTXKernelAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NVPTXKernelAttrSpelling, GNU_NVPTX_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(NVPTXKernelAttrSpelling, CXX11_CLANG_NVPTX_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(NVPTXKernelAttrSpelling, C2X_CLANG_NVPTX_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(NVPTXKernelAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NVPTXKernelAttrSpelling)

MX_BEGIN_ENUM_CLASS(NakedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NakedAttrSpelling, GNU_NAKED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NakedAttrSpelling, CXX11_GNU_NAKED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NakedAttrSpelling, C2X_GNU_NAKED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NakedAttrSpelling, DECLSPEC_NAKED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NakedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NakedAttrSpelling)

MX_BEGIN_ENUM_CLASS(NamedDeclExplicitVisibilityKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(NamedDeclExplicitVisibilityKind, VISIBILITY_FOR_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NamedDeclExplicitVisibilityKind, VISIBILITY_FOR_VALUE, unsigned char)
MX_END_ENUM_CLASS(NamedDeclExplicitVisibilityKind)

MX_BEGIN_ENUM_CLASS(NoBuiltinAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoBuiltinAttrSpelling, GNU_NO_BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoBuiltinAttrSpelling, CXX11_CLANG_NO_BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoBuiltinAttrSpelling, C2X_CLANG_NO_BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoBuiltinAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoBuiltinAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoCommonAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoCommonAttrSpelling, GNU_NOCOMMON, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoCommonAttrSpelling, CXX11_GNU_NOCOMMON, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoCommonAttrSpelling, C2X_GNU_NOCOMMON, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoCommonAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoCommonAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoDebugAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDebugAttrSpelling, GNU_NODEBUG, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDebugAttrSpelling, CXX11_GNU_NODEBUG, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDebugAttrSpelling, C2X_GNU_NODEBUG, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDebugAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoDebugAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoDerefAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDerefAttrSpelling, GNU_NODEREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDerefAttrSpelling, CXX11_CLANG_NODEREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDerefAttrSpelling, C2X_CLANG_NODEREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDerefAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoDerefAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoDestroyAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDestroyAttrSpelling, GNU_NO_DESTROY, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDestroyAttrSpelling, CXX11_CLANG_NO_DESTROY, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDestroyAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoDestroyAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoDuplicateAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDuplicateAttrSpelling, GNU_NODUPLICATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDuplicateAttrSpelling, CXX11_CLANG_NODUPLICATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDuplicateAttrSpelling, C2X_CLANG_NODUPLICATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoDuplicateAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoDuplicateAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoEscapeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoEscapeAttrSpelling, GNU_NOESCAPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoEscapeAttrSpelling, CXX11_CLANG_NOESCAPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoEscapeAttrSpelling, C2X_CLANG_NOESCAPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoEscapeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoEscapeAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoInlineAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, KEYWORD_NOINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, GNU_NOINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, CXX11_GNU_NOINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, C2X_GNU_NOINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, CXX11_CLANG_NOINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, C2X_CLANG_NOINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, DECLSPEC_NOINLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInlineAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoInlineAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoInstrumentFunctionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInstrumentFunctionAttrSpelling, GNU_NO_INSTRUMENT_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInstrumentFunctionAttrSpelling, CXX11_GNU_NO_INSTRUMENT_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInstrumentFunctionAttrSpelling, C2X_GNU_NO_INSTRUMENT_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoInstrumentFunctionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoInstrumentFunctionAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoMergeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMergeAttrSpelling, GNU_NOMERGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMergeAttrSpelling, CXX11_CLANG_NOMERGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMergeAttrSpelling, C2X_CLANG_NOMERGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMergeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoMergeAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoMicroMipsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMicroMipsAttrSpelling, GNU_NOMICROMIPS, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMicroMipsAttrSpelling, CXX11_GNU_NOMICROMIPS, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMicroMipsAttrSpelling, C2X_GNU_NOMICROMIPS, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMicroMipsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoMicroMipsAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoMips16AttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMips16AttrSpelling, GNU_NOMIPS16, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMips16AttrSpelling, CXX11_GNU_NOMIPS16, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMips16AttrSpelling, C2X_GNU_NOMIPS16, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoMips16AttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoMips16AttrSpelling)

MX_BEGIN_ENUM_CLASS(NoProfileFunctionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoProfileFunctionAttrSpelling, GNU_NO_PROFILE_INSTRUMENT_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoProfileFunctionAttrSpelling, CXX11_GNU_NO_PROFILE_INSTRUMENT_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoProfileFunctionAttrSpelling, C2X_GNU_NO_PROFILE_INSTRUMENT_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoProfileFunctionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoProfileFunctionAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoRandomizeLayoutAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoRandomizeLayoutAttrSpelling, GNU_NO_RANDOMIZE_LAYOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoRandomizeLayoutAttrSpelling, CXX11_GNU_NO_RANDOMIZE_LAYOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoRandomizeLayoutAttrSpelling, C2X_GNU_NO_RANDOMIZE_LAYOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoRandomizeLayoutAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoRandomizeLayoutAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoReturnAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoReturnAttrSpelling, GNU_NORETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoReturnAttrSpelling, CXX11_GNU_NORETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoReturnAttrSpelling, C2X_GNU_NORETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoReturnAttrSpelling, DECLSPEC_NORETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoReturnAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoReturnAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoSanitizeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSanitizeAttrSpelling, GNU_NO_SANITIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSanitizeAttrSpelling, CXX11_CLANG_NO_SANITIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSanitizeAttrSpelling, C2X_CLANG_NO_SANITIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSanitizeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoSanitizeAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoSpeculativeLoadHardeningAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSpeculativeLoadHardeningAttrSpelling, GNU_NO_SPECULATIVE_LOAD_HARDENING, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSpeculativeLoadHardeningAttrSpelling, CXX11_CLANG_NO_SPECULATIVE_LOAD_HARDENING, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSpeculativeLoadHardeningAttrSpelling, C2X_CLANG_NO_SPECULATIVE_LOAD_HARDENING, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSpeculativeLoadHardeningAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoSpeculativeLoadHardeningAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoSplitStackAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSplitStackAttrSpelling, GNU_NO_SPLIT_STACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSplitStackAttrSpelling, CXX11_GNU_NO_SPLIT_STACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSplitStackAttrSpelling, C2X_GNU_NO_SPLIT_STACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoSplitStackAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoSplitStackAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoStackProtectorAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoStackProtectorAttrSpelling, GNU_NO_STACK_PROTECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoStackProtectorAttrSpelling, CXX11_CLANG_NO_STACK_PROTECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoStackProtectorAttrSpelling, C2X_CLANG_NO_STACK_PROTECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoStackProtectorAttrSpelling, DECLSPEC_SAFEBUFFERS, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoStackProtectorAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoStackProtectorAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoThreadSafetyAnalysisAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThreadSafetyAnalysisAttrSpelling, GNU_NO_THREAD_SAFETY_ANALYSIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThreadSafetyAnalysisAttrSpelling, CXX11_CLANG_NO_THREAD_SAFETY_ANALYSIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThreadSafetyAnalysisAttrSpelling, C2X_CLANG_NO_THREAD_SAFETY_ANALYSIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThreadSafetyAnalysisAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoThreadSafetyAnalysisAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoThrowAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThrowAttrSpelling, GNU_NOTHROW, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThrowAttrSpelling, CXX11_GNU_NOTHROW, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThrowAttrSpelling, C2X_GNU_NOTHROW, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThrowAttrSpelling, DECLSPEC_NOTHROW, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoThrowAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoThrowAttrSpelling)

MX_BEGIN_ENUM_CLASS(NoUwtableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoUwtableAttrSpelling, GNU_NOUWTABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoUwtableAttrSpelling, CXX11_CLANG_NOUWTABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoUwtableAttrSpelling, C2X_CLANG_NOUWTABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NoUwtableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NoUwtableAttrSpelling)

MX_BEGIN_ENUM_CLASS(NonNullAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonNullAttrSpelling, GNU_NONNULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonNullAttrSpelling, CXX11_GNU_NONNULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonNullAttrSpelling, C2X_GNU_NONNULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonNullAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NonNullAttrSpelling)

MX_BEGIN_ENUM_CLASS(NotTailCalledAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(NotTailCalledAttrSpelling, GNU_NOT_TAIL_CALLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NotTailCalledAttrSpelling, CXX11_CLANG_NOT_TAIL_CALLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NotTailCalledAttrSpelling, C2X_CLANG_NOT_TAIL_CALLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NotTailCalledAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(NotTailCalledAttrSpelling)

MX_BEGIN_ENUM_CLASS(OMPAllocateDeclAttrAllocatorTypeTy, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_NULL_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_DEFAULT_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_LARGE_CAP_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_CONST_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_HIGH_BW_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_LOW_LAT_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMPC_GROUP_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMPP_TEAM_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_THREAD_MEMORY_ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPAllocateDeclAttrAllocatorTypeTy, OMP_USER_DEFINED_MEMORY_ALLOC, unsigned char)
MX_END_ENUM_CLASS(OMPAllocateDeclAttrAllocatorTypeTy)

MX_BEGIN_ENUM_CLASS(OMPDeclareReductionDeclInitKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareReductionDeclInitKind, CALL_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareReductionDeclInitKind, DIRECT_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareReductionDeclInitKind, COPY_INITIALIZER, unsigned char)
MX_END_ENUM_CLASS(OMPDeclareReductionDeclInitKind)

MX_BEGIN_ENUM_CLASS(OMPDeclareSimdDeclAttrBranchStateTy, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareSimdDeclAttrBranchStateTy, UNDEFINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareSimdDeclAttrBranchStateTy, INBRANCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareSimdDeclAttrBranchStateTy, NOTINBRANCH, unsigned char)
MX_END_ENUM_CLASS(OMPDeclareSimdDeclAttrBranchStateTy)

MX_BEGIN_ENUM_CLASS(OMPDeclareTargetDeclAttrDevTypeTy, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareTargetDeclAttrDevTypeTy, HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareTargetDeclAttrDevTypeTy, NO_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareTargetDeclAttrDevTypeTy, ANY, unsigned char)
MX_END_ENUM_CLASS(OMPDeclareTargetDeclAttrDevTypeTy)

MX_BEGIN_ENUM_CLASS(OMPDeclareTargetDeclAttrMapTypeTy, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareTargetDeclAttrMapTypeTy, TO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareTargetDeclAttrMapTypeTy, ENTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OMPDeclareTargetDeclAttrMapTypeTy, LINK, unsigned char)
MX_END_ENUM_CLASS(OMPDeclareTargetDeclAttrMapTypeTy)

MX_BEGIN_ENUM_CLASS(OSConsumedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumedAttrSpelling, GNU_OS_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumedAttrSpelling, CXX11_CLANG_OS_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumedAttrSpelling, C2X_CLANG_OS_CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OSConsumedAttrSpelling)

MX_BEGIN_ENUM_CLASS(OSConsumesThisAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumesThisAttrSpelling, GNU_OS_CONSUMES_THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumesThisAttrSpelling, CXX11_CLANG_OS_CONSUMES_THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumesThisAttrSpelling, C2X_CLANG_OS_CONSUMES_THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSConsumesThisAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OSConsumesThisAttrSpelling)

MX_BEGIN_ENUM_CLASS(OSReturnsNotRetainedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsNotRetainedAttrSpelling, GNU_OS_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsNotRetainedAttrSpelling, CXX11_CLANG_OS_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsNotRetainedAttrSpelling, C2X_CLANG_OS_RETURNS_NOT_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsNotRetainedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OSReturnsNotRetainedAttrSpelling)

MX_BEGIN_ENUM_CLASS(OSReturnsRetainedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedAttrSpelling, GNU_OS_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedAttrSpelling, CXX11_CLANG_OS_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedAttrSpelling, C2X_CLANG_OS_RETURNS_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OSReturnsRetainedAttrSpelling)

MX_BEGIN_ENUM_CLASS(OSReturnsRetainedOnNonZeroAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnNonZeroAttrSpelling, GNU_OS_RETURNS_RETAINED_ON_NON_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnNonZeroAttrSpelling, CXX11_CLANG_OS_RETURNS_RETAINED_ON_NON_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnNonZeroAttrSpelling, C2X_CLANG_OS_RETURNS_RETAINED_ON_NON_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnNonZeroAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OSReturnsRetainedOnNonZeroAttrSpelling)

MX_BEGIN_ENUM_CLASS(OSReturnsRetainedOnZeroAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnZeroAttrSpelling, GNU_OS_RETURNS_RETAINED_ON_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnZeroAttrSpelling, CXX11_CLANG_OS_RETURNS_RETAINED_ON_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnZeroAttrSpelling, C2X_CLANG_OS_RETURNS_RETAINED_ON_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OSReturnsRetainedOnZeroAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OSReturnsRetainedOnZeroAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCBoxableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBoxableAttrSpelling, GNU_OBJC_BOXABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBoxableAttrSpelling, CXX11_CLANG_OBJC_BOXABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBoxableAttrSpelling, C2X_CLANG_OBJC_BOXABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBoxableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCBoxableAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCBridgeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeAttrSpelling, GNU_OBJC_BRIDGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeAttrSpelling, CXX11_CLANG_OBJC_BRIDGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeAttrSpelling, C2X_CLANG_OBJC_BRIDGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCBridgeAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCBridgeMutableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeMutableAttrSpelling, GNU_OBJC_BRIDGE_MUTABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeMutableAttrSpelling, CXX11_CLANG_OBJC_BRIDGE_MUTABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeMutableAttrSpelling, C2X_CLANG_OBJC_BRIDGE_MUTABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeMutableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCBridgeMutableAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCBridgeRelatedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeRelatedAttrSpelling, GNU_OBJC_BRIDGE_RELATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeRelatedAttrSpelling, CXX11_CLANG_OBJC_BRIDGE_RELATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeRelatedAttrSpelling, C2X_CLANG_OBJC_BRIDGE_RELATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeRelatedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCBridgeRelatedAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCClassStubAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCClassStubAttrSpelling, GNU_OBJC_CLASS_STUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCClassStubAttrSpelling, CXX11_CLANG_OBJC_CLASS_STUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCClassStubAttrSpelling, C2X_CLANG_OBJC_CLASS_STUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCClassStubAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCClassStubAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCDesignatedInitializerAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDesignatedInitializerAttrSpelling, GNU_OBJC_DESIGNATED_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDesignatedInitializerAttrSpelling, CXX11_CLANG_OBJC_DESIGNATED_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDesignatedInitializerAttrSpelling, C2X_CLANG_OBJC_DESIGNATED_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDesignatedInitializerAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCDesignatedInitializerAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCDirectAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectAttrSpelling, GNU_OBJC_DIRECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectAttrSpelling, CXX11_CLANG_OBJC_DIRECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectAttrSpelling, C2X_CLANG_OBJC_DIRECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCDirectAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCDirectMembersAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectMembersAttrSpelling, GNU_OBJC_DIRECT_MEMBERS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectMembersAttrSpelling, CXX11_CLANG_OBJC_DIRECT_MEMBERS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectMembersAttrSpelling, C2X_CLANG_OBJC_DIRECT_MEMBERS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDirectMembersAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCDirectMembersAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCExceptionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExceptionAttrSpelling, GNU_OBJC_EXCEPTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExceptionAttrSpelling, CXX11_CLANG_OBJC_EXCEPTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExceptionAttrSpelling, C2X_CLANG_OBJC_EXCEPTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExceptionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCExceptionAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCExplicitProtocolImplAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExplicitProtocolImplAttrSpelling, GNU_OBJC_PROTOCOL_REQUIRES_EXPLICIT_IMPLEMENTATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExplicitProtocolImplAttrSpelling, CXX11_CLANG_OBJC_PROTOCOL_REQUIRES_EXPLICIT_IMPLEMENTATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExplicitProtocolImplAttrSpelling, C2X_CLANG_OBJC_PROTOCOL_REQUIRES_EXPLICIT_IMPLEMENTATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExplicitProtocolImplAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCExplicitProtocolImplAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCExternallyRetainedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExternallyRetainedAttrSpelling, GNU_OBJC_EXTERNALLY_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExternallyRetainedAttrSpelling, CXX11_CLANG_OBJC_EXTERNALLY_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExternallyRetainedAttrSpelling, C2X_CLANG_OBJC_EXTERNALLY_RETAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCExternallyRetainedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCExternallyRetainedAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCGCAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCGCAttrSpelling, GNU_OBJC_GC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCGCAttrSpelling, CXX11_CLANG_OBJC_GC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCGCAttrSpelling, C2X_CLANG_OBJC_GC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCGCAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCGCAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCIndependentClassAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIndependentClassAttrSpelling, GNU_OBJC_INDEPENDENT_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIndependentClassAttrSpelling, CXX11_CLANG_OBJC_INDEPENDENT_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIndependentClassAttrSpelling, C2X_CLANG_OBJC_INDEPENDENT_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIndependentClassAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCIndependentClassAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCIvarDeclAccessControl, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIvarDeclAccessControl, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIvarDeclAccessControl, PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIvarDeclAccessControl, PROTECTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIvarDeclAccessControl, PUBLIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCIvarDeclAccessControl, PACKAGE, unsigned char)
MX_END_ENUM_CLASS(ObjCIvarDeclAccessControl)

MX_BEGIN_ENUM_CLASS(ObjCMessageExprReceiverKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMessageExprReceiverKind, CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMessageExprReceiverKind, INSTANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMessageExprReceiverKind, SUPER_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMessageExprReceiverKind, SUPER_INSTANCE, unsigned char)
MX_END_ENUM_CLASS(ObjCMessageExprReceiverKind)

MX_BEGIN_ENUM_CLASS(ObjCMethodDeclImplementationControl, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodDeclImplementationControl, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodDeclImplementationControl, REQUIRED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodDeclImplementationControl, OPTIONAL, unsigned char)
MX_END_ENUM_CLASS(ObjCMethodDeclImplementationControl)

MX_BEGIN_ENUM_CLASS(ObjCMethodFamilyAttrFamilyKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrFamilyKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrFamilyKind, ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrFamilyKind, COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrFamilyKind, INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrFamilyKind, MUTABLE_COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrFamilyKind, NEW, unsigned char)
MX_END_ENUM_CLASS(ObjCMethodFamilyAttrFamilyKind)

MX_BEGIN_ENUM_CLASS(ObjCMethodFamilyAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrSpelling, GNU_OBJC_METHOD_FAMILY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrSpelling, CXX11_CLANG_OBJC_METHOD_FAMILY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrSpelling, C2X_CLANG_OBJC_METHOD_FAMILY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamilyAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCMethodFamilyAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCNSObjectAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNSObjectAttrSpelling, GNUNS_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNSObjectAttrSpelling, CXX11_CLANG_NS_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNSObjectAttrSpelling, C2X_CLANG_NS_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNSObjectAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCNSObjectAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCNonLazyClassAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonLazyClassAttrSpelling, GNU_OBJC_NONLAZY_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonLazyClassAttrSpelling, CXX11_CLANG_OBJC_NONLAZY_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonLazyClassAttrSpelling, C2X_CLANG_OBJC_NONLAZY_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonLazyClassAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCNonLazyClassAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCNonRuntimeProtocolAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonRuntimeProtocolAttrSpelling, GNU_OBJC_NON_RUNTIME_PROTOCOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonRuntimeProtocolAttrSpelling, CXX11_CLANG_OBJC_NON_RUNTIME_PROTOCOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonRuntimeProtocolAttrSpelling, C2X_CLANG_OBJC_NON_RUNTIME_PROTOCOL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCNonRuntimeProtocolAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCNonRuntimeProtocolAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCOwnershipAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCOwnershipAttrSpelling, GNU_OBJC_OWNERSHIP, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCOwnershipAttrSpelling, CXX11_CLANG_OBJC_OWNERSHIP, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCOwnershipAttrSpelling, C2X_CLANG_OBJC_OWNERSHIP, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCOwnershipAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCOwnershipAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCPreciseLifetimeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPreciseLifetimeAttrSpelling, GNU_OBJC_PRECISE_LIFETIME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPreciseLifetimeAttrSpelling, CXX11_CLANG_OBJC_PRECISE_LIFETIME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPreciseLifetimeAttrSpelling, C2X_CLANG_OBJC_PRECISE_LIFETIME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPreciseLifetimeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCPreciseLifetimeAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCPropertyDeclPropertyControl, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyDeclPropertyControl, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyDeclPropertyControl, REQUIRED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyDeclPropertyControl, OPTIONAL, unsigned char)
MX_END_ENUM_CLASS(ObjCPropertyDeclPropertyControl)

MX_BEGIN_ENUM_CLASS(ObjCPropertyDeclSetterKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyDeclSetterKind, ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyDeclSetterKind, RETAIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyDeclSetterKind, COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyDeclSetterKind, WEAK, unsigned char)
MX_END_ENUM_CLASS(ObjCPropertyDeclSetterKind)

MX_BEGIN_ENUM_CLASS(ObjCPropertyImplDeclKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyImplDeclKind, SYNTHESIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyImplDeclKind, DYNAMIC, unsigned char)
MX_END_ENUM_CLASS(ObjCPropertyImplDeclKind)

MX_BEGIN_ENUM_CLASS(ObjCRequiresPropertyDefsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresPropertyDefsAttrSpelling, GNU_OBJC_REQUIRES_PROPERTY_DEFINITIONS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresPropertyDefsAttrSpelling, CXX11_CLANG_OBJC_REQUIRES_PROPERTY_DEFINITIONS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresPropertyDefsAttrSpelling, C2X_CLANG_OBJC_REQUIRES_PROPERTY_DEFINITIONS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresPropertyDefsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCRequiresPropertyDefsAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCRequiresSuperAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresSuperAttrSpelling, GNU_OBJC_REQUIRES_SUPER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresSuperAttrSpelling, CXX11_CLANG_OBJC_REQUIRES_SUPER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresSuperAttrSpelling, C2X_CLANG_OBJC_REQUIRES_SUPER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRequiresSuperAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCRequiresSuperAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCReturnsInnerPointerAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCReturnsInnerPointerAttrSpelling, GNU_OBJC_RETURNS_INNER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCReturnsInnerPointerAttrSpelling, CXX11_CLANG_OBJC_RETURNS_INNER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCReturnsInnerPointerAttrSpelling, C2X_CLANG_OBJC_RETURNS_INNER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCReturnsInnerPointerAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCReturnsInnerPointerAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCRootClassAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRootClassAttrSpelling, GNU_OBJC_ROOT_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRootClassAttrSpelling, CXX11_CLANG_OBJC_ROOT_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRootClassAttrSpelling, C2X_CLANG_OBJC_ROOT_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRootClassAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCRootClassAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCRuntimeNameAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeNameAttrSpelling, GNU_OBJC_RUNTIME_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeNameAttrSpelling, CXX11_CLANG_OBJC_RUNTIME_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeNameAttrSpelling, C2X_CLANG_OBJC_RUNTIME_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeNameAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCRuntimeNameAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCRuntimeVisibleAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeVisibleAttrSpelling, GNU_OBJC_RUNTIME_VISIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeVisibleAttrSpelling, CXX11_CLANG_OBJC_RUNTIME_VISIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeVisibleAttrSpelling, C2X_CLANG_OBJC_RUNTIME_VISIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCRuntimeVisibleAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCRuntimeVisibleAttrSpelling)

MX_BEGIN_ENUM_CLASS(ObjCSubclassingRestrictedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubclassingRestrictedAttrSpelling, GNU_OBJC_SUBCLASSING_RESTRICTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubclassingRestrictedAttrSpelling, CXX11_CLANG_OBJC_SUBCLASSING_RESTRICTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubclassingRestrictedAttrSpelling, C2X_CLANG_OBJC_SUBCLASSING_RESTRICTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubclassingRestrictedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ObjCSubclassingRestrictedAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLAccessAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLAccessAttrSpelling, KEYWORD_READ_ONLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLAccessAttrSpelling, KEYWORD_WRITE_ONLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLAccessAttrSpelling, KEYWORD_READ_WRITE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLAccessAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLAccessAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLConstantAddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLConstantAddressSpaceAttrSpelling, KEYWORD_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLConstantAddressSpaceAttrSpelling, GNU_OPENCL_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLConstantAddressSpaceAttrSpelling, CXX11_CLANG_OPENCL_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLConstantAddressSpaceAttrSpelling, C2X_CLANG_OPENCL_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLConstantAddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLConstantAddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLGenericAddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGenericAddressSpaceAttrSpelling, KEYWORD_GENERIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGenericAddressSpaceAttrSpelling, GNU_OPENCL_GENERIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGenericAddressSpaceAttrSpelling, CXX11_CLANG_OPENCL_GENERIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGenericAddressSpaceAttrSpelling, C2X_CLANG_OPENCL_GENERIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGenericAddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLGenericAddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLGlobalAddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalAddressSpaceAttrSpelling, KEYWORD_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalAddressSpaceAttrSpelling, GNU_OPENCL_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalAddressSpaceAttrSpelling, CXX11_CLANG_OPENCL_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalAddressSpaceAttrSpelling, C2X_CLANG_OPENCL_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalAddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLGlobalAddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLGlobalDeviceAddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalDeviceAddressSpaceAttrSpelling, GNU_OPENCL_GLOBAL_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalDeviceAddressSpaceAttrSpelling, CXX11_CLANG_OPENCL_GLOBAL_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalDeviceAddressSpaceAttrSpelling, C2X_CLANG_OPENCL_GLOBAL_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalDeviceAddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLGlobalDeviceAddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLGlobalHostAddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalHostAddressSpaceAttrSpelling, GNU_OPENCL_GLOBAL_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalHostAddressSpaceAttrSpelling, CXX11_CLANG_OPENCL_GLOBAL_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalHostAddressSpaceAttrSpelling, C2X_CLANG_OPENCL_GLOBAL_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLGlobalHostAddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLGlobalHostAddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLKernelAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLKernelAttrSpelling, KEYWORD_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLKernelAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLKernelAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLLocalAddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLLocalAddressSpaceAttrSpelling, KEYWORD_LOCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLLocalAddressSpaceAttrSpelling, GNU_OPENCL_LOCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLLocalAddressSpaceAttrSpelling, CXX11_CLANG_OPENCL_LOCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLLocalAddressSpaceAttrSpelling, C2X_CLANG_OPENCL_LOCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLLocalAddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLLocalAddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(OpenCLPrivateAddressSpaceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLPrivateAddressSpaceAttrSpelling, KEYWORD_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLPrivateAddressSpaceAttrSpelling, GNU_OPENCL_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLPrivateAddressSpaceAttrSpelling, CXX11_CLANG_OPENCL_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLPrivateAddressSpaceAttrSpelling, C2X_CLANG_OPENCL_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenCLPrivateAddressSpaceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OpenCLPrivateAddressSpaceAttrSpelling)

MX_BEGIN_ENUM_CLASS(OptimizeNoneAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OptimizeNoneAttrSpelling, GNU_OPTNONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OptimizeNoneAttrSpelling, CXX11_CLANG_OPTNONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OptimizeNoneAttrSpelling, C2X_CLANG_OPTNONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OptimizeNoneAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OptimizeNoneAttrSpelling)

MX_BEGIN_ENUM_CLASS(OverloadableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadableAttrSpelling, GNU_OVERLOADABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadableAttrSpelling, CXX11_CLANG_OVERLOADABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadableAttrSpelling, C2X_CLANG_OVERLOADABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OverloadableAttrSpelling)

MX_BEGIN_ENUM_CLASS(OwnershipAttrOwnershipKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrOwnershipKind, HOLDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrOwnershipKind, RETURNS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrOwnershipKind, TAKES, unsigned char)
MX_END_ENUM_CLASS(OwnershipAttrOwnershipKind)

MX_BEGIN_ENUM_CLASS(OwnershipAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, GNU_OWNERSHIP_HOLDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, CXX11_CLANG_OWNERSHIP_HOLDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, C2X_CLANG_OWNERSHIP_HOLDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, GNU_OWNERSHIP_RETURNS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, CXX11_CLANG_OWNERSHIP_RETURNS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, C2X_CLANG_OWNERSHIP_RETURNS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, GNU_OWNERSHIP_TAKES, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, CXX11_CLANG_OWNERSHIP_TAKES, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, C2X_CLANG_OWNERSHIP_TAKES, unsigned char)
  MX_ENUM_CLASS_ENTRY(OwnershipAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(OwnershipAttrSpelling)

MX_BEGIN_ENUM_CLASS(PackedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PackedAttrSpelling, GNU_PACKED, unsigned char)
  MX_ENUM_CLASS_ENTRY(PackedAttrSpelling, CXX11_GNU_PACKED, unsigned char)
  MX_ENUM_CLASS_ENTRY(PackedAttrSpelling, C2X_GNU_PACKED, unsigned char)
  MX_ENUM_CLASS_ENTRY(PackedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PackedAttrSpelling)

MX_BEGIN_ENUM_CLASS(ParamTypestateAttrConsumedState, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParamTypestateAttrConsumedState, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParamTypestateAttrConsumedState, CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParamTypestateAttrConsumedState, UNCONSUMED, unsigned char)
MX_END_ENUM_CLASS(ParamTypestateAttrConsumedState)

MX_BEGIN_ENUM_CLASS(ParamTypestateAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParamTypestateAttrSpelling, GNU_PARAMETER_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParamTypestateAttrSpelling, CXX11_CLANG_PARAMETER_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParamTypestateAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ParamTypestateAttrSpelling)

MX_BEGIN_ENUM_CLASS(PascalAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PascalAttrSpelling, GNU_PASCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(PascalAttrSpelling, CXX11_CLANG_PASCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(PascalAttrSpelling, C2X_CLANG_PASCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(PascalAttrSpelling, KEYWORD_PASCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(PascalAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PascalAttrSpelling)

MX_BEGIN_ENUM_CLASS(PassObjectSizeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PassObjectSizeAttrSpelling, GNU_PASS_OBJECT_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PassObjectSizeAttrSpelling, CXX11_CLANG_PASS_OBJECT_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PassObjectSizeAttrSpelling, C2X_CLANG_PASS_OBJECT_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PassObjectSizeAttrSpelling, GNU_PASS_DYNAMIC_OBJECT_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PassObjectSizeAttrSpelling, CXX11_CLANG_PASS_DYNAMIC_OBJECT_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PassObjectSizeAttrSpelling, C2X_CLANG_PASS_DYNAMIC_OBJECT_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PassObjectSizeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PassObjectSizeAttrSpelling)

MX_BEGIN_ENUM_CLASS(PatchableFunctionEntryAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PatchableFunctionEntryAttrSpelling, GNU_PATCHABLE_FUNCTION_ENTRY, unsigned char)
  MX_ENUM_CLASS_ENTRY(PatchableFunctionEntryAttrSpelling, CXX11_GNU_PATCHABLE_FUNCTION_ENTRY, unsigned char)
  MX_ENUM_CLASS_ENTRY(PatchableFunctionEntryAttrSpelling, C2X_GNU_PATCHABLE_FUNCTION_ENTRY, unsigned char)
  MX_ENUM_CLASS_ENTRY(PatchableFunctionEntryAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PatchableFunctionEntryAttrSpelling)

MX_BEGIN_ENUM_CLASS(PcsAttrPCSType, unsigned char)
  MX_ENUM_CLASS_ENTRY(PcsAttrPCSType, AAPCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(PcsAttrPCSType, VFP, unsigned char)
MX_END_ENUM_CLASS(PcsAttrPCSType)

MX_BEGIN_ENUM_CLASS(PcsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PcsAttrSpelling, GNU_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(PcsAttrSpelling, CXX11_GNU_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(PcsAttrSpelling, C2X_GNU_PCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(PcsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PcsAttrSpelling)

MX_BEGIN_ENUM_CLASS(PredefinedExprIdentKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, FUNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, L_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, FUNC_D_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, FUNC_SIG, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, L_FUNC_SIG, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, PRETTY_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(PredefinedExprIdentKind, PRETTY_FUNCTION_NO_VIRTUAL, unsigned char)
MX_END_ENUM_CLASS(PredefinedExprIdentKind)

MX_BEGIN_ENUM_CLASS(PreferredNameAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreferredNameAttrSpelling, GNU_PREFERRED_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreferredNameAttrSpelling, CXX11_CLANG_PREFERRED_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreferredNameAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PreferredNameAttrSpelling)

MX_BEGIN_ENUM_CLASS(PreserveAllAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveAllAttrSpelling, GNU_PRESERVE_ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveAllAttrSpelling, CXX11_CLANG_PRESERVE_ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveAllAttrSpelling, C2X_CLANG_PRESERVE_ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveAllAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PreserveAllAttrSpelling)

MX_BEGIN_ENUM_CLASS(PreserveMostAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveMostAttrSpelling, GNU_PRESERVE_MOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveMostAttrSpelling, CXX11_CLANG_PRESERVE_MOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveMostAttrSpelling, C2X_CLANG_PRESERVE_MOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(PreserveMostAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PreserveMostAttrSpelling)

MX_BEGIN_ENUM_CLASS(PtGuardedVarAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PtGuardedVarAttrSpelling, GNU_PT_GUARDED_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PtGuardedVarAttrSpelling, CXX11_CLANG_PT_GUARDED_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PtGuardedVarAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PtGuardedVarAttrSpelling)

MX_BEGIN_ENUM_CLASS(PureAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(PureAttrSpelling, GNU_PURE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PureAttrSpelling, CXX11_GNU_PURE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PureAttrSpelling, C2X_GNU_PURE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PureAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(PureAttrSpelling)

MX_BEGIN_ENUM_CLASS(QualifiedTypeDestructionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypeDestructionKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypeDestructionKind, CXX_DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypeDestructionKind, OBJC_STRONG_LIFETIME, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypeDestructionKind, OBJC_WEAK_LIFETIME, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypeDestructionKind, NONTRIVIAL_C_STRUCT, unsigned char)
MX_END_ENUM_CLASS(QualifiedTypeDestructionKind)

MX_BEGIN_ENUM_CLASS(QualifiedTypePrimitiveCopyKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveCopyKind, TRIVIAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveCopyKind, VOLATILE_TRIVIAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveCopyKind, ARC_STRONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveCopyKind, ARC_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveCopyKind, STRUCT, unsigned char)
MX_END_ENUM_CLASS(QualifiedTypePrimitiveCopyKind)

MX_BEGIN_ENUM_CLASS(QualifiedTypePrimitiveDefaultInitializeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveDefaultInitializeKind, TRIVIAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveDefaultInitializeKind, ARC_STRONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveDefaultInitializeKind, ARC_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(QualifiedTypePrimitiveDefaultInitializeKind, STRUCT, unsigned char)
MX_END_ENUM_CLASS(QualifiedTypePrimitiveDefaultInitializeKind)

MX_BEGIN_ENUM_CLASS(RISCVInterruptAttrInterruptType, unsigned char)
  MX_ENUM_CLASS_ENTRY(RISCVInterruptAttrInterruptType, SUPERVISOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(RISCVInterruptAttrInterruptType, MACHINE, unsigned char)
MX_END_ENUM_CLASS(RISCVInterruptAttrInterruptType)

MX_BEGIN_ENUM_CLASS(RISCVInterruptAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(RISCVInterruptAttrSpelling, GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(RISCVInterruptAttrSpelling, CXX11_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(RISCVInterruptAttrSpelling, C2X_GNU_INTERRUPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(RISCVInterruptAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(RISCVInterruptAttrSpelling)

MX_BEGIN_ENUM_CLASS(RandomizeLayoutAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(RandomizeLayoutAttrSpelling, GNU_RANDOMIZE_LAYOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(RandomizeLayoutAttrSpelling, CXX11_GNU_RANDOMIZE_LAYOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(RandomizeLayoutAttrSpelling, C2X_GNU_RANDOMIZE_LAYOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(RandomizeLayoutAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(RandomizeLayoutAttrSpelling)

MX_BEGIN_ENUM_CLASS(ReadOnlyPlacementAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReadOnlyPlacementAttrSpelling, GNU_ENFORCE_READ_ONLY_PLACEMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReadOnlyPlacementAttrSpelling, CXX11_CLANG_ENFORCE_READ_ONLY_PLACEMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReadOnlyPlacementAttrSpelling, C2X_CLANG_ENFORCE_READ_ONLY_PLACEMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReadOnlyPlacementAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ReadOnlyPlacementAttrSpelling)

MX_BEGIN_ENUM_CLASS(RecordDeclArgPassingKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(RecordDeclArgPassingKind, CAN_PASS_IN_REGS, unsigned char)
  MX_ENUM_CLASS_ENTRY(RecordDeclArgPassingKind, CANNOT_PASS_IN_REGS, unsigned char)
  MX_ENUM_CLASS_ENTRY(RecordDeclArgPassingKind, CAN_NEVER_PASS_IN_REGS, unsigned char)
MX_END_ENUM_CLASS(RecordDeclArgPassingKind)

MX_BEGIN_ENUM_CLASS(RegCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(RegCallAttrSpelling, GNU_REGCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(RegCallAttrSpelling, CXX11_GNU_REGCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(RegCallAttrSpelling, C2X_GNU_REGCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(RegCallAttrSpelling, KEYWORD_REGCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(RegCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(RegCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(ReinitializesAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReinitializesAttrSpelling, GNU_REINITIALIZES, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReinitializesAttrSpelling, CXX11_CLANG_REINITIALIZES, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReinitializesAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ReinitializesAttrSpelling)

MX_BEGIN_ENUM_CLASS(ReleaseCapabilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, GNU_RELEASE_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, CXX11_CLANG_RELEASE_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, GNU_RELEASE_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, CXX11_CLANG_RELEASE_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, GNU_RELEASE_GENERIC_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, CXX11_CLANG_RELEASE_GENERIC_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, GNU_UNLOCK_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, CXX11_CLANG_UNLOCK_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseCapabilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ReleaseCapabilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(ReleaseHandleAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseHandleAttrSpelling, GNU_RELEASE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseHandleAttrSpelling, CXX11_CLANG_RELEASE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseHandleAttrSpelling, C2X_CLANG_RELEASE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReleaseHandleAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ReleaseHandleAttrSpelling)

MX_BEGIN_ENUM_CLASS(RequiresCapabilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, GNU_REQUIRES_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, CXX11_CLANG_REQUIRES_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, GNU_EXCLUSIVE_LOCKS_REQUIRED, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, CXX11_CLANG_EXCLUSIVE_LOCKS_REQUIRED, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, GNU_REQUIRES_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, CXX11_CLANG_REQUIRES_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, GNU_SHARED_LOCKS_REQUIRED, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, CXX11_CLANG_SHARED_LOCKS_REQUIRED, unsigned char)
  MX_ENUM_CLASS_ENTRY(RequiresCapabilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(RequiresCapabilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(RestrictAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(RestrictAttrSpelling, DECLSPEC_RESTRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(RestrictAttrSpelling, GNU_MALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(RestrictAttrSpelling, CXX11_GNU_MALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(RestrictAttrSpelling, C2X_GNU_MALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(RestrictAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(RestrictAttrSpelling)

MX_BEGIN_ENUM_CLASS(RetainAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(RetainAttrSpelling, GNU_RETAIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(RetainAttrSpelling, CXX11_GNU_RETAIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(RetainAttrSpelling, C2X_GNU_RETAIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(RetainAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(RetainAttrSpelling)

MX_BEGIN_ENUM_CLASS(ReturnTypestateAttrConsumedState, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnTypestateAttrConsumedState, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnTypestateAttrConsumedState, CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnTypestateAttrConsumedState, UNCONSUMED, unsigned char)
MX_END_ENUM_CLASS(ReturnTypestateAttrConsumedState)

MX_BEGIN_ENUM_CLASS(ReturnTypestateAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnTypestateAttrSpelling, GNU_RETURN_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnTypestateAttrSpelling, CXX11_CLANG_RETURN_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnTypestateAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ReturnTypestateAttrSpelling)

MX_BEGIN_ENUM_CLASS(ReturnsNonNullAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsNonNullAttrSpelling, GNU_RETURNS_NONNULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsNonNullAttrSpelling, CXX11_GNU_RETURNS_NONNULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsNonNullAttrSpelling, C2X_GNU_RETURNS_NONNULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsNonNullAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ReturnsNonNullAttrSpelling)

MX_BEGIN_ENUM_CLASS(ReturnsTwiceAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsTwiceAttrSpelling, GNU_RETURNS_TWICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsTwiceAttrSpelling, CXX11_GNU_RETURNS_TWICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsTwiceAttrSpelling, C2X_GNU_RETURNS_TWICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReturnsTwiceAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ReturnsTwiceAttrSpelling)

MX_BEGIN_ENUM_CLASS(SYCLKernelAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLKernelAttrSpelling, GNU_SYCL_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLKernelAttrSpelling, CXX11_CLANG_SYCL_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLKernelAttrSpelling, C2X_CLANG_SYCL_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLKernelAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SYCLKernelAttrSpelling)

MX_BEGIN_ENUM_CLASS(SYCLSpecialClassAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLSpecialClassAttrSpelling, GNU_SYCL_SPECIAL_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLSpecialClassAttrSpelling, CXX11_CLANG_SYCL_SPECIAL_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLSpecialClassAttrSpelling, C2X_CLANG_SYCL_SPECIAL_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLSpecialClassAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SYCLSpecialClassAttrSpelling)

MX_BEGIN_ENUM_CLASS(ScopedLockableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ScopedLockableAttrSpelling, GNU_SCOPED_LOCKABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ScopedLockableAttrSpelling, CXX11_CLANG_SCOPED_LOCKABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ScopedLockableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ScopedLockableAttrSpelling)

MX_BEGIN_ENUM_CLASS(SectionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SectionAttrSpelling, GNU_SECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SectionAttrSpelling, CXX11_GNU_SECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SectionAttrSpelling, C2X_GNU_SECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SectionAttrSpelling, DECLSPEC_ALLOCATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SectionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SectionAttrSpelling)

MX_BEGIN_ENUM_CLASS(SelectAnyAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectAnyAttrSpelling, DECLSPEC_SELECTANY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectAnyAttrSpelling, GNU_SELECTANY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectAnyAttrSpelling, CXX11_GNU_SELECTANY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectAnyAttrSpelling, C2X_GNU_SELECTANY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectAnyAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SelectAnyAttrSpelling)

MX_BEGIN_ENUM_CLASS(SentinelAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SentinelAttrSpelling, GNU_SENTINEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SentinelAttrSpelling, CXX11_GNU_SENTINEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SentinelAttrSpelling, C2X_GNU_SENTINEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SentinelAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SentinelAttrSpelling)

MX_BEGIN_ENUM_CLASS(SetTypestateAttrConsumedState, unsigned char)
  MX_ENUM_CLASS_ENTRY(SetTypestateAttrConsumedState, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(SetTypestateAttrConsumedState, CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(SetTypestateAttrConsumedState, UNCONSUMED, unsigned char)
MX_END_ENUM_CLASS(SetTypestateAttrConsumedState)

MX_BEGIN_ENUM_CLASS(SetTypestateAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SetTypestateAttrSpelling, GNU_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SetTypestateAttrSpelling, CXX11_CLANG_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SetTypestateAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SetTypestateAttrSpelling)

MX_BEGIN_ENUM_CLASS(SourceLocExprIdentKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SourceLocExprIdentKind, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SourceLocExprIdentKind, FUNC_SIG, unsigned char)
  MX_ENUM_CLASS_ENTRY(SourceLocExprIdentKind, FILE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SourceLocExprIdentKind, FILE_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(SourceLocExprIdentKind, LINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SourceLocExprIdentKind, COLUMN, unsigned char)
  MX_ENUM_CLASS_ENTRY(SourceLocExprIdentKind, SOURCE_TOKEN_STRUCT, unsigned char)
MX_END_ENUM_CLASS(SourceLocExprIdentKind)

MX_BEGIN_ENUM_CLASS(SpeculativeLoadHardeningAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpeculativeLoadHardeningAttrSpelling, GNU_SPECULATIVE_LOAD_HARDENING, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpeculativeLoadHardeningAttrSpelling, CXX11_CLANG_SPECULATIVE_LOAD_HARDENING, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpeculativeLoadHardeningAttrSpelling, C2X_CLANG_SPECULATIVE_LOAD_HARDENING, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpeculativeLoadHardeningAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SpeculativeLoadHardeningAttrSpelling)

MX_BEGIN_ENUM_CLASS(StandaloneDebugAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(StandaloneDebugAttrSpelling, GNU_STANDALONE_DEBUG, unsigned char)
  MX_ENUM_CLASS_ENTRY(StandaloneDebugAttrSpelling, CXX11_CLANG_STANDALONE_DEBUG, unsigned char)
  MX_ENUM_CLASS_ENTRY(StandaloneDebugAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(StandaloneDebugAttrSpelling)

MX_BEGIN_ENUM_CLASS(StdCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(StdCallAttrSpelling, GNU_STDCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StdCallAttrSpelling, CXX11_GNU_STDCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StdCallAttrSpelling, C2X_GNU_STDCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StdCallAttrSpelling, KEYWORD_STDCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StdCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(StdCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(StmtLikelihood, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtLikelihood, UNLIKELY, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtLikelihood, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtLikelihood, LIKELY, unsigned char)
MX_END_ENUM_CLASS(StmtLikelihood)

MX_BEGIN_ENUM_CLASS(StmtKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, GCC_ASM_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, MS_ASM_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, BREAK_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_CATCH_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_FOR_RANGE_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_TRY_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CAPTURED_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, COMPOUND_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CONTINUE_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CORETURN_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, COROUTINE_BODY_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DECL_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DO_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, FOR_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, GOTO_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, IF_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, INDIRECT_GOTO_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, MS_DEPENDENT_EXISTS_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, NULL_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_CANONICAL_LOOP, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_ATOMIC_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_BARRIER_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_CANCEL_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_CANCELLATION_POINT_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_CRITICAL_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_DEPOBJ_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_DISPATCH_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_ERROR_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_FLUSH_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_INTEROP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_DISTRIBUTE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_DISTRIBUTE_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_FOR_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_FOR_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_GENERIC_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_MASKED_TASK_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_MASKED_TASK_LOOP_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_MASTER_TASK_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_MASTER_TASK_LOOP_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_FOR_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_FOR_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_GENERIC_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_MASKED_TASK_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_MASKED_TASK_LOOP_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_MASTER_TASK_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_MASTER_TASK_LOOP_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_PARALLEL_FOR_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_PARALLEL_GENERIC_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_TEAMS_DISTRIBUTE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_TEAMS_DISTRIBUTE_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_TEAMS_GENERIC_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TASK_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TASK_LOOP_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TEAMS_DISTRIBUTE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TEAMS_DISTRIBUTE_SIMD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TEAMS_GENERIC_LOOP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TILE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_UNROLL_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_MASKED_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_MASTER_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_META_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_ORDERED_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_MASKED_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_MASTER_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_PARALLEL_SECTIONS_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_SCAN_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_SECTION_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_SECTIONS_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_SINGLE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_DATA_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_ENTER_DATA_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_EXIT_DATA_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_PARALLEL_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_PARALLEL_FOR_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_TEAMS_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TARGET_UPDATE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TASK_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TASKGROUP_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TASKWAIT_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TASKYIELD_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_TEAMS_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_AT_CATCH_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_AT_FINALLY_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_AT_SYNCHRONIZED_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_AT_THROW_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_AT_TRY_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_AUTORELEASE_POOL_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_FOR_COLLECTION_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, RETURN_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SEH_EXCEPT_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SEH_FINALLY_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SEH_LEAVE_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SEH_TRY_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CASE_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DEFAULT_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SWITCH_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, ATTRIBUTED_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, BINARY_CONDITIONAL_OPERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CONDITIONAL_OPERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, ADDR_LABEL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, ARRAY_INIT_INDEX_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, ARRAY_INIT_LOOP_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, ARRAY_SUBSCRIPT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, ARRAY_TYPE_TRAIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, AS_TYPE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, ATOMIC_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, BINARY_OPERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, COMPOUND_ASSIGN_OPERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, BLOCK_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_BIND_TEMPORARY_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_BOOL_LITERAL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_CONSTRUCT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_TEMPORARY_OBJECT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_DEFAULT_ARG_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_DEFAULT_INIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_DELETE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_DEPENDENT_SCOPE_MEMBER_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_FOLD_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_INHERITED_CTOR_INIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_NEW_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_NOEXCEPT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_NULL_PTR_LITERAL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_PAREN_LIST_INIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_PSEUDO_DESTRUCTOR_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_REWRITTEN_BINARY_OPERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_SCALAR_VALUE_INIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_STD_INITIALIZER_LIST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_THIS_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_THROW_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_TYPEID_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_UNRESOLVED_CONSTRUCT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_UUIDOF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CALL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CUDA_KERNEL_CALL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_MEMBER_CALL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_OPERATOR_CALL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, USER_DEFINED_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, BUILTIN_BIT_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, C_STYLE_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_FUNCTIONAL_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_ADDRSPACE_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_CONST_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_DYNAMIC_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_REINTERPRET_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CXX_STATIC_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_BRIDGED_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, IMPLICIT_CAST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CHARACTER_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CHOOSE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, COMPOUND_LITERAL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CONCEPT_SPECIALIZATION_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CONVERT_VECTOR_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, COAWAIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, COYIELD_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DECL_REF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DEPENDENT_COAWAIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DEPENDENT_SCOPE_DECL_REF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DESIGNATED_INIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, DESIGNATED_INIT_UPDATE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, EXPRESSION_TRAIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, EXT_VECTOR_ELEMENT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, FIXED_POINT_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, FLOATING_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, CONSTANT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, EXPR_WITH_CLEANUPS, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, FUNCTION_PARM_PACK_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, GNU_NULL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, GENERIC_SELECTION_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, IMAGINARY_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, IMPLICIT_VALUE_INIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, INIT_LIST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, INTEGER_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, LAMBDA_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, MS_PROPERTY_REF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, MS_PROPERTY_SUBSCRIPT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, MATERIALIZE_TEMPORARY_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, MATRIX_SUBSCRIPT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, MEMBER_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, NO_INIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_ARRAY_SECTION_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_ARRAY_SHAPING_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OMP_ITERATOR_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_ARRAY_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_AVAILABILITY_CHECK_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_BOOL_LITERAL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_BOXED_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_DICTIONARY_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_ENCODE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_INDIRECT_COPY_RESTORE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_ISA_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_IVAR_REF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_MESSAGE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_PROPERTY_REF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_PROTOCOL_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_SELECTOR_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_STRING_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OBJ_C_SUBSCRIPT_REF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OFFSET_OF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, OPAQUE_VALUE_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, UNRESOLVED_LOOKUP_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, UNRESOLVED_MEMBER_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, PACK_EXPANSION_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, PAREN_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, PAREN_LIST_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, PREDEFINED_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, PSEUDO_OBJECT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, RECOVERY_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, REQUIRES_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SYCL_UNIQUE_STABLE_NAME_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SHUFFLE_VECTOR_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SIZE_OF_PACK_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SOURCE_LOC_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, STMT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, STRING_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SUBST_NON_TYPE_TEMPLATE_PARM_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, SUBST_NON_TYPE_TEMPLATE_PARM_PACK_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, TYPE_TRAIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, TYPO_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, UNARY_EXPR_OR_TYPE_TRAIT_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, UNARY_OPERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, VA_ARG_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, LABEL_STMT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StmtKind, WHILE_STMT, unsigned char)
MX_END_ENUM_CLASS(StmtKind)

MX_BEGIN_ENUM_CLASS(StringLiteralStringKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(StringLiteralStringKind, ORDINARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(StringLiteralStringKind, WIDE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StringLiteralStringKind, UTF8, unsigned char)
  MX_ENUM_CLASS_ENTRY(StringLiteralStringKind, UTF16, unsigned char)
  MX_ENUM_CLASS_ENTRY(StringLiteralStringKind, UTF32, unsigned char)
  MX_ENUM_CLASS_ENTRY(StringLiteralStringKind, UNEVALUATED, unsigned char)
MX_END_ENUM_CLASS(StringLiteralStringKind)

MX_BEGIN_ENUM_CLASS(SwiftAsyncAttrKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncAttrKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncAttrKind, SWIFT_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncAttrKind, NOT_SWIFT_PRIVATE, unsigned char)
MX_END_ENUM_CLASS(SwiftAsyncAttrKind)

MX_BEGIN_ENUM_CLASS(SwiftAsyncAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncAttrSpelling, GNU_SWIFT_ASYNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncAttrSpelling, CXX11_CLANG_SWIFT_ASYNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncAttrSpelling, C2X_CLANG_SWIFT_ASYNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftAsyncAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftAsyncCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncCallAttrSpelling, GNU_SWIFTASYNCCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncCallAttrSpelling, CXX11_CLANG_SWIFTASYNCCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncCallAttrSpelling, C2X_CLANG_SWIFTASYNCCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftAsyncCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftAsyncContextAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncContextAttrSpelling, GNU_SWIFT_ASYNC_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncContextAttrSpelling, CXX11_CLANG_SWIFT_ASYNC_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncContextAttrSpelling, C2X_CLANG_SWIFT_ASYNC_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncContextAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftAsyncContextAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftAsyncErrorAttrConventionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrConventionKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrConventionKind, NON_NULL_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrConventionKind, ZERO_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrConventionKind, NON_ZERO_ARGUMENT, unsigned char)
MX_END_ENUM_CLASS(SwiftAsyncErrorAttrConventionKind)

MX_BEGIN_ENUM_CLASS(SwiftAsyncErrorAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrSpelling, GNU_SWIFT_ASYNC_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrSpelling, CXX11_CLANG_SWIFT_ASYNC_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrSpelling, C2X_CLANG_SWIFT_ASYNC_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncErrorAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftAsyncErrorAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftCallAttrSpelling, GNU_SWIFTCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftCallAttrSpelling, CXX11_CLANG_SWIFTCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftCallAttrSpelling, C2X_CLANG_SWIFTCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftContextAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftContextAttrSpelling, GNU_SWIFT_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftContextAttrSpelling, CXX11_CLANG_SWIFT_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftContextAttrSpelling, C2X_CLANG_SWIFT_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftContextAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftContextAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftErrorAttrConventionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorAttrConventionKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorAttrConventionKind, NON_NULL_ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorAttrConventionKind, NULL_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorAttrConventionKind, ZERO_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorAttrConventionKind, NON_ZERO_RESULT, unsigned char)
MX_END_ENUM_CLASS(SwiftErrorAttrConventionKind)

MX_BEGIN_ENUM_CLASS(SwiftErrorResultAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorResultAttrSpelling, GNU_SWIFT_ERROR_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorResultAttrSpelling, CXX11_CLANG_SWIFT_ERROR_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorResultAttrSpelling, C2X_CLANG_SWIFT_ERROR_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftErrorResultAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftErrorResultAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftIndirectResultAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftIndirectResultAttrSpelling, GNU_SWIFT_INDIRECT_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftIndirectResultAttrSpelling, CXX11_CLANG_SWIFT_INDIRECT_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftIndirectResultAttrSpelling, C2X_CLANG_SWIFT_INDIRECT_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftIndirectResultAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftIndirectResultAttrSpelling)

MX_BEGIN_ENUM_CLASS(SwiftNewTypeAttrNewtypeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftNewTypeAttrNewtypeKind, STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftNewTypeAttrNewtypeKind, ENUM, unsigned char)
MX_END_ENUM_CLASS(SwiftNewTypeAttrNewtypeKind)

MX_BEGIN_ENUM_CLASS(SwiftNewTypeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftNewTypeAttrSpelling, GNU_SWIFT_NEWTYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftNewTypeAttrSpelling, GNU_SWIFT_WRAPPER, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftNewTypeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SwiftNewTypeAttrSpelling)

MX_BEGIN_ENUM_CLASS(SysVABIAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(SysVABIAttrSpelling, GNU_SYSV_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(SysVABIAttrSpelling, CXX11_GNU_SYSV_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(SysVABIAttrSpelling, C2X_GNU_SYSV_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(SysVABIAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(SysVABIAttrSpelling)

MX_BEGIN_ENUM_CLASS(TLSModelAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModelAttrSpelling, GNU_TLS_MODEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModelAttrSpelling, CXX11_GNU_TLS_MODEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModelAttrSpelling, C2X_GNU_TLS_MODEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModelAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TLSModelAttrSpelling)

MX_BEGIN_ENUM_CLASS(TargetAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetAttrSpelling, GNU_TARGET, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetAttrSpelling, CXX11_GNU_TARGET, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetAttrSpelling, C2X_GNU_TARGET, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TargetAttrSpelling)

MX_BEGIN_ENUM_CLASS(TargetClonesAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetClonesAttrSpelling, GNU_TARGET_CLONES, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetClonesAttrSpelling, CXX11_GNU_TARGET_CLONES, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetClonesAttrSpelling, C2X_GNU_TARGET_CLONES, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetClonesAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TargetClonesAttrSpelling)

MX_BEGIN_ENUM_CLASS(TargetVersionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetVersionAttrSpelling, GNU_TARGET_VERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetVersionAttrSpelling, CXX11_GNU_TARGET_VERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetVersionAttrSpelling, C2X_GNU_TARGET_VERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetVersionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TargetVersionAttrSpelling)

MX_BEGIN_ENUM_CLASS(TemplateArgumentKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, EMPTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, DECLARATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, NULL_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, INTEGRAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, TEMPLATE_EXPANSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentKind, PACK, unsigned char)
MX_END_ENUM_CLASS(TemplateArgumentKind)

MX_BEGIN_ENUM_CLASS(TestTypestateAttrConsumedState, unsigned char)
  MX_ENUM_CLASS_ENTRY(TestTypestateAttrConsumedState, CONSUMED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TestTypestateAttrConsumedState, UNCONSUMED, unsigned char)
MX_END_ENUM_CLASS(TestTypestateAttrConsumedState)

MX_BEGIN_ENUM_CLASS(TestTypestateAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TestTypestateAttrSpelling, GNU_TEST_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TestTypestateAttrSpelling, CXX11_CLANG_TEST_TYPESTATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TestTypestateAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TestTypestateAttrSpelling)

MX_BEGIN_ENUM_CLASS(ThisCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThisCallAttrSpelling, GNU_THISCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThisCallAttrSpelling, CXX11_GNU_THISCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThisCallAttrSpelling, C2X_GNU_THISCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThisCallAttrSpelling, KEYWORD_THISCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThisCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ThisCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(TransparentUnionAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TransparentUnionAttrSpelling, GNU_TRANSPARENT_UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TransparentUnionAttrSpelling, CXX11_GNU_TRANSPARENT_UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TransparentUnionAttrSpelling, C2X_GNU_TRANSPARENT_UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TransparentUnionAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TransparentUnionAttrSpelling)

MX_BEGIN_ENUM_CLASS(TrivialABIAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrivialABIAttrSpelling, GNU_TRIVIAL_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrivialABIAttrSpelling, CXX11_CLANG_TRIVIAL_ABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrivialABIAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TrivialABIAttrSpelling)

MX_BEGIN_ENUM_CLASS(TryAcquireCapabilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TryAcquireCapabilityAttrSpelling, GNU_TRY_ACQUIRE_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TryAcquireCapabilityAttrSpelling, CXX11_CLANG_TRY_ACQUIRE_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TryAcquireCapabilityAttrSpelling, GNU_TRY_ACQUIRE_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TryAcquireCapabilityAttrSpelling, CXX11_CLANG_TRY_ACQUIRE_SHARED_CAPABILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TryAcquireCapabilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TryAcquireCapabilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(TypeScalarTypeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, C_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, BLOCK_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, OBJ_C_OBJECT_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, INTEGRAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, FLOATING, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, INTEGRAL_COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, FLOATING_COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeScalarTypeKind, FIXED_POINT, unsigned char)
MX_END_ENUM_CLASS(TypeScalarTypeKind)

MX_BEGIN_ENUM_CLASS(TypeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, ADJUSTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DECAYED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, CONSTANT_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_SIZED_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, INCOMPLETE_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, VARIABLE_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, ATOMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, ATTRIBUTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, BTF_TAG_ATTRIBUTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, BIT_INT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, BLOCK_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DECLTYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEDUCED_TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_ADDRESS_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_BIT_INT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_SIZED_EXT_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, ELABORATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, FUNCTION_NO_PROTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, FUNCTION_PROTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, INJECTED_CLASS_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, MACRO_QUALIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, CONSTANT_MATRIX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, DEPENDENT_SIZED_MATRIX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, OBJ_C_OBJECT_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, OBJ_C_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, OBJ_C_INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, OBJ_C_TYPE_PARAM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, PACK_EXPANSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, PAREN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, PIPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, L_VALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, R_VALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, SUBST_TEMPLATE_TYPE_PARM_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, SUBST_TEMPLATE_TYPE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, RECORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, TEMPLATE_TYPE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, TYPE_OF_EXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, TYPE_OF, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, TYPEDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, UNARY_TRANSFORM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, UNRESOLVED_USING, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, USING, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, EXT_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeKind, QUALIFIED, unsigned char)
MX_END_ENUM_CLASS(TypeKind)

MX_BEGIN_ENUM_CLASS(TypeTagForDatatypeAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTagForDatatypeAttrSpelling, GNU_TYPE_TAG_FOR_DATATYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTagForDatatypeAttrSpelling, CXX11_CLANG_TYPE_TAG_FOR_DATATYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTagForDatatypeAttrSpelling, C2X_CLANG_TYPE_TAG_FOR_DATATYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTagForDatatypeAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TypeTagForDatatypeAttrSpelling)

MX_BEGIN_ENUM_CLASS(TypeVisibilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeVisibilityAttrSpelling, GNU_TYPE_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeVisibilityAttrSpelling, CXX11_CLANG_TYPE_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeVisibilityAttrSpelling, C2X_CLANG_TYPE_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeVisibilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(TypeVisibilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(TypeVisibilityAttrVisibilityType, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeVisibilityAttrVisibilityType, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeVisibilityAttrVisibilityType, HIDDEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeVisibilityAttrVisibilityType, PROTECTED, unsigned char)
MX_END_ENUM_CLASS(TypeVisibilityAttrVisibilityType)

MX_BEGIN_ENUM_CLASS(UnaryTransformTypeUTTKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, ADD_LVALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, ADD_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, ADD_RVALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, DECAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, MAKE_SIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, MAKE_UNSIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_ALL_EXTENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_CONST, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_CV, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_CV_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_EXTENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_RESTRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, REMOVE_VOLATILE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryTransformTypeUTTKind, ENUM_UNDERLYING_TYPE, unsigned char)
MX_END_ENUM_CLASS(UnaryTransformTypeUTTKind)

MX_BEGIN_ENUM_CLASS(UnavailableAttrImplicitReason, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrImplicitReason, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrImplicitReason, ARC_FORBIDDEN_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrImplicitReason, FORBIDDEN_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrImplicitReason, ARC_FORBIDDEN_CONVERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrImplicitReason, ARC_INIT_RETURNS_UNRELATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrImplicitReason, ARC_FIELD_WITH_OWNERSHIP, unsigned char)
MX_END_ENUM_CLASS(UnavailableAttrImplicitReason)

MX_BEGIN_ENUM_CLASS(UnavailableAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrSpelling, GNU_UNAVAILABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrSpelling, CXX11_CLANG_UNAVAILABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrSpelling, C2X_CLANG_UNAVAILABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnavailableAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UnavailableAttrSpelling)

MX_BEGIN_ENUM_CLASS(UninitializedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UninitializedAttrSpelling, GNU_UNINITIALIZED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UninitializedAttrSpelling, CXX11_CLANG_UNINITIALIZED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UninitializedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UninitializedAttrSpelling)

MX_BEGIN_ENUM_CLASS(UnlikelyAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnlikelyAttrSpelling, CXX11_UNLIKELY, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnlikelyAttrSpelling, C2X_CLANG_UNLIKELY, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnlikelyAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UnlikelyAttrSpelling)

MX_BEGIN_ENUM_CLASS(UnsafeBufferUsageAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnsafeBufferUsageAttrSpelling, GNU_UNSAFE_BUFFER_USAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnsafeBufferUsageAttrSpelling, CXX11_CLANG_UNSAFE_BUFFER_USAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnsafeBufferUsageAttrSpelling, C2X_CLANG_UNSAFE_BUFFER_USAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnsafeBufferUsageAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UnsafeBufferUsageAttrSpelling)

MX_BEGIN_ENUM_CLASS(UnusedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnusedAttrSpelling, CXX11_MAYBE_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnusedAttrSpelling, GNU_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnusedAttrSpelling, CXX11_GNU_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnusedAttrSpelling, C2X_GNU_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnusedAttrSpelling, C2X_MAYBE_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnusedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UnusedAttrSpelling)

MX_BEGIN_ENUM_CLASS(UseHandleAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UseHandleAttrSpelling, GNU_USE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UseHandleAttrSpelling, CXX11_CLANG_USE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UseHandleAttrSpelling, C2X_CLANG_USE_HANDLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UseHandleAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UseHandleAttrSpelling)

MX_BEGIN_ENUM_CLASS(UsedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UsedAttrSpelling, GNU_USED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UsedAttrSpelling, CXX11_GNU_USED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UsedAttrSpelling, C2X_GNU_USED, unsigned char)
  MX_ENUM_CLASS_ENTRY(UsedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UsedAttrSpelling)

MX_BEGIN_ENUM_CLASS(UserDefinedLiteralLiteralOperatorKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(UserDefinedLiteralLiteralOperatorKind, RAW, unsigned char)
  MX_ENUM_CLASS_ENTRY(UserDefinedLiteralLiteralOperatorKind, TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UserDefinedLiteralLiteralOperatorKind, INTEGER, unsigned char)
  MX_ENUM_CLASS_ENTRY(UserDefinedLiteralLiteralOperatorKind, FLOATING, unsigned char)
  MX_ENUM_CLASS_ENTRY(UserDefinedLiteralLiteralOperatorKind, STRING, unsigned char)
  MX_ENUM_CLASS_ENTRY(UserDefinedLiteralLiteralOperatorKind, CHARACTER, unsigned char)
MX_END_ENUM_CLASS(UserDefinedLiteralLiteralOperatorKind)

MX_BEGIN_ENUM_CLASS(UsingIfExistsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UsingIfExistsAttrSpelling, GNU_USING_IF_EXISTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(UsingIfExistsAttrSpelling, CXX11_CLANG_USING_IF_EXISTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(UsingIfExistsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UsingIfExistsAttrSpelling)

MX_BEGIN_ENUM_CLASS(UuidAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(UuidAttrSpelling, DECLSPEC_UUID, unsigned char)
  MX_ENUM_CLASS_ENTRY(UuidAttrSpelling, MICROSOFT_UUID, unsigned char)
  MX_ENUM_CLASS_ENTRY(UuidAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(UuidAttrSpelling)

MX_BEGIN_ENUM_CLASS(VarDeclDefinitionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclDefinitionKind, DECLARATION_ONLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclDefinitionKind, TENTATIVE_DEFINITION, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclDefinitionKind, DEFINITION, unsigned char)
MX_END_ENUM_CLASS(VarDeclDefinitionKind)

MX_BEGIN_ENUM_CLASS(VarDeclInitializationStyle, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclInitializationStyle, C_INIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclInitializationStyle, CALL_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclInitializationStyle, LIST_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclInitializationStyle, PARENTHESIS_LIST_INITIALIZER, unsigned char)
MX_END_ENUM_CLASS(VarDeclInitializationStyle)

MX_BEGIN_ENUM_CLASS(VarDeclTLSKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclTLSKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclTLSKind, STATIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(VarDeclTLSKind, DYNAMIC, unsigned char)
MX_END_ENUM_CLASS(VarDeclTLSKind)

MX_BEGIN_ENUM_CLASS(VecReturnAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(VecReturnAttrSpelling, GNU_VECRETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(VecReturnAttrSpelling, CXX11_CLANG_VECRETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(VecReturnAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(VecReturnAttrSpelling)

MX_BEGIN_ENUM_CLASS(VectorCallAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorCallAttrSpelling, GNU_VECTORCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorCallAttrSpelling, CXX11_CLANG_VECTORCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorCallAttrSpelling, C2X_CLANG_VECTORCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorCallAttrSpelling, KEYWORD_VECTORCALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorCallAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(VectorCallAttrSpelling)

MX_BEGIN_ENUM_CLASS(VectorTypeVectorKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, GENERIC_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, ALTI_VEC_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, ALTI_VEC_PIXEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, ALTI_VEC_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, NEON_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, NEON_POLY_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, SVE_FIXED_LENGTH_DATA_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, SVE_FIXED_LENGTH_PREDICATE_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorTypeVectorKind, RVV_FIXED_LENGTH_DATA_VECTOR, unsigned char)
MX_END_ENUM_CLASS(VectorTypeVectorKind)

MX_BEGIN_ENUM_CLASS(VisibilityAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(VisibilityAttrSpelling, GNU_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(VisibilityAttrSpelling, CXX11_GNU_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(VisibilityAttrSpelling, C2X_GNU_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(VisibilityAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(VisibilityAttrSpelling)

MX_BEGIN_ENUM_CLASS(VisibilityAttrVisibilityType, unsigned char)
  MX_ENUM_CLASS_ENTRY(VisibilityAttrVisibilityType, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(VisibilityAttrVisibilityType, HIDDEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(VisibilityAttrVisibilityType, PROTECTED, unsigned char)
MX_END_ENUM_CLASS(VisibilityAttrVisibilityType)

MX_BEGIN_ENUM_CLASS(WarnUnusedAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedAttrSpelling, GNU_WARN_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedAttrSpelling, CXX11_GNU_WARN_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedAttrSpelling, C2X_GNU_WARN_UNUSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WarnUnusedAttrSpelling)

MX_BEGIN_ENUM_CLASS(WarnUnusedResultAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedResultAttrSpelling, CXX11_NODISCARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedResultAttrSpelling, C2X_NODISCARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedResultAttrSpelling, CXX11_CLANG_WARN_UNUSED_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedResultAttrSpelling, GNU_WARN_UNUSED_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedResultAttrSpelling, CXX11_GNU_WARN_UNUSED_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedResultAttrSpelling, C2X_GNU_WARN_UNUSED_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(WarnUnusedResultAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WarnUnusedResultAttrSpelling)

MX_BEGIN_ENUM_CLASS(WeakAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakAttrSpelling, GNU_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakAttrSpelling, CXX11_GNU_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakAttrSpelling, C2X_GNU_WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WeakAttrSpelling)

MX_BEGIN_ENUM_CLASS(WeakImportAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakImportAttrSpelling, GNU_WEAK_IMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakImportAttrSpelling, CXX11_CLANG_WEAK_IMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakImportAttrSpelling, C2X_CLANG_WEAK_IMPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakImportAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WeakImportAttrSpelling)

MX_BEGIN_ENUM_CLASS(WeakRefAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakRefAttrSpelling, GNU_WEAKREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakRefAttrSpelling, CXX11_GNU_WEAKREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakRefAttrSpelling, C2X_GNU_WEAKREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(WeakRefAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WeakRefAttrSpelling)

MX_BEGIN_ENUM_CLASS(WebAssemblyExportNameAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyExportNameAttrSpelling, GNU_EXPORT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyExportNameAttrSpelling, CXX11_CLANG_EXPORT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyExportNameAttrSpelling, C2X_CLANG_EXPORT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyExportNameAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WebAssemblyExportNameAttrSpelling)

MX_BEGIN_ENUM_CLASS(WebAssemblyImportModuleAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportModuleAttrSpelling, GNU_IMPORT_MODULE, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportModuleAttrSpelling, CXX11_CLANG_IMPORT_MODULE, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportModuleAttrSpelling, C2X_CLANG_IMPORT_MODULE, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportModuleAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WebAssemblyImportModuleAttrSpelling)

MX_BEGIN_ENUM_CLASS(WebAssemblyImportNameAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportNameAttrSpelling, GNU_IMPORT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportNameAttrSpelling, CXX11_CLANG_IMPORT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportNameAttrSpelling, C2X_CLANG_IMPORT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(WebAssemblyImportNameAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(WebAssemblyImportNameAttrSpelling)

MX_BEGIN_ENUM_CLASS(X86ForceAlignArgPointerAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(X86ForceAlignArgPointerAttrSpelling, GNU_FORCE_ALIGN_ARGUMENT_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(X86ForceAlignArgPointerAttrSpelling, CXX11_GNU_FORCE_ALIGN_ARGUMENT_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(X86ForceAlignArgPointerAttrSpelling, C2X_GNU_FORCE_ALIGN_ARGUMENT_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(X86ForceAlignArgPointerAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(X86ForceAlignArgPointerAttrSpelling)

MX_BEGIN_ENUM_CLASS(XRayInstrumentAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayInstrumentAttrSpelling, GNU_XRAY_ALWAYS_INSTRUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayInstrumentAttrSpelling, CXX11_CLANG_XRAY_ALWAYS_INSTRUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayInstrumentAttrSpelling, C2X_CLANG_XRAY_ALWAYS_INSTRUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayInstrumentAttrSpelling, GNU_XRAY_NEVER_INSTRUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayInstrumentAttrSpelling, CXX11_CLANG_XRAY_NEVER_INSTRUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayInstrumentAttrSpelling, C2X_CLANG_XRAY_NEVER_INSTRUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayInstrumentAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(XRayInstrumentAttrSpelling)

MX_BEGIN_ENUM_CLASS(XRayLogArgsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayLogArgsAttrSpelling, GNU_XRAY_LOG_ARGUMENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayLogArgsAttrSpelling, CXX11_CLANG_XRAY_LOG_ARGUMENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayLogArgsAttrSpelling, C2X_CLANG_XRAY_LOG_ARGUMENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(XRayLogArgsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(XRayLogArgsAttrSpelling)

MX_BEGIN_ENUM_CLASS(ZeroCallUsedRegsAttrSpelling, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrSpelling, GNU_ZERO_CALL_USED_REGS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrSpelling, CXX11_GNU_ZERO_CALL_USED_REGS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrSpelling, C2X_GNU_ZERO_CALL_USED_REGS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrSpelling, SPELLING_NOT_CALCULATED, unsigned char)
MX_END_ENUM_CLASS(ZeroCallUsedRegsAttrSpelling)

MX_BEGIN_ENUM_CLASS(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, SKIP, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, USED_GPR_ARG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, USED_GPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, USED_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, USED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, ALL_GPR_ARG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, ALL_GPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, ALL_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ZeroCallUsedRegsAttrZeroCallUsedRegsKind, ALL, unsigned char)
MX_END_ENUM_CLASS(ZeroCallUsedRegsAttrZeroCallUsedRegsKind)

MX_BEGIN_ENUM_CLASS(ASTDumpOutputFormat, unsigned char)
  MX_ENUM_CLASS_ENTRY(ASTDumpOutputFormat, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ASTDumpOutputFormat, JSON, unsigned char)
MX_END_ENUM_CLASS(ASTDumpOutputFormat)

MX_BEGIN_ENUM_CLASS(AccessSpecifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(AccessSpecifier, PUBLIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(AccessSpecifier, PROTECTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AccessSpecifier, PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AccessSpecifier, NONE, unsigned char)
MX_END_ENUM_CLASS(AccessSpecifier)

MX_BEGIN_ENUM_CLASS(AddrSpaceMapMangling, unsigned char)
  MX_ENUM_CLASS_ENTRY(AddrSpaceMapMangling, TARGET, unsigned char)
  MX_ENUM_CLASS_ENTRY(AddrSpaceMapMangling, ON, unsigned char)
  MX_ENUM_CLASS_ENTRY(AddrSpaceMapMangling, OFF, unsigned char)
MX_END_ENUM_CLASS(AddrSpaceMapMangling)

MX_BEGIN_ENUM_CLASS(AlignRequirementKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignRequirementKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignRequirementKind, REQUIRED_BY_TYPEDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignRequirementKind, REQUIRED_BY_RECORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AlignRequirementKind, REQUIRED_BY_ENUM, unsigned char)
MX_END_ENUM_CLASS(AlignRequirementKind)

MX_BEGIN_ENUM_CLASS(AltivecSrcCompatKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(AltivecSrcCompatKind, MIXED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AltivecSrcCompatKind, GCC, unsigned char)
  MX_ENUM_CLASS_ENTRY(AltivecSrcCompatKind, XL, unsigned char)
MX_END_ENUM_CLASS(AltivecSrcCompatKind)

MX_BEGIN_ENUM_CLASS(ArgumentKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, STD_STRING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, C_STRING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, SINT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, UINT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, TOKENKIND, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, IDENTIFIERINFO, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, ADDRSPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, QUALIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, QUALTYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, DECLARATIONNAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, NAMEDDECL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, NESTEDNAMESPEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, DECLCONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, QUALTYPE_PAIR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArgumentKind, ATTRIBUTE, unsigned char)
MX_END_ENUM_CLASS(ArgumentKind)

MX_BEGIN_ENUM_CLASS(ArrayTypeTrait, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArrayTypeTrait, ARRAY_RANK, unsigned char)
  MX_ENUM_CLASS_ENTRY(ArrayTypeTrait, ARRAY_EXTENT, unsigned char)
MX_END_ENUM_CLASS(ArrayTypeTrait)

MX_BEGIN_ENUM_CLASS(AssignmentTrackingOpts, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssignmentTrackingOpts, DISABLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssignmentTrackingOpts, ENABLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AssignmentTrackingOpts, FORCED, unsigned char)
MX_END_ENUM_CLASS(AssignmentTrackingOpts)

MX_BEGIN_ENUM_CLASS(AtomicScopeModelKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicScopeModelKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicScopeModelKind, OPEN_CL, unsigned char)
  MX_ENUM_CLASS_ENTRY(AtomicScopeModelKind, HIP, unsigned char)
MX_END_ENUM_CLASS(AtomicScopeModelKind)

MX_BEGIN_ENUM_CLASS(AutoTypeKeyword, unsigned char)
  MX_ENUM_CLASS_ENTRY(AutoTypeKeyword, AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(AutoTypeKeyword, DECLTYPE_AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(AutoTypeKeyword, GNU_AUTO_TYPE, unsigned char)
MX_END_ENUM_CLASS(AutoTypeKeyword)

MX_BEGIN_ENUM_CLASS(AvailabilityResult, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityResult, AVAILABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityResult, NOT_YET_INTRODUCED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityResult, DEPRECATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(AvailabilityResult, UNAVAILABLE, unsigned char)
MX_END_ENUM_CLASS(AvailabilityResult)

MX_BEGIN_ENUM_CLASS(BinaryOperatorKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, POINTER_MEMORY_D, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, POINTER_MEMORY_I, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, MUL, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, DIV, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, REM, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, ADD, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, SUB, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, SHL, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, SHR, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, CMP, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, LT, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, GT, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, LE, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, GE, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, EQ, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, NE, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, AND, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, XOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, OR, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, L_AND, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, L_OR, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, MUL_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, DIV_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, REM_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, ADD_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, SUB_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, SHL_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, SHR_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, AND_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, XOR_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, OR_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(BinaryOperatorKind, COMMA, unsigned char)
MX_END_ENUM_CLASS(BinaryOperatorKind)

MX_BEGIN_ENUM_CLASS(Bits, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, UNEXPANDED_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, VARIABLY_MODIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, SYNTACTIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(Bits, SEMANTIC, unsigned char)
MX_END_ENUM_CLASS(Bits)

MX_BEGIN_ENUM_CLASS(CallingConv, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, C, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, X86_STD_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, X86_FAST_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, X86_THIS_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, X86_VECTOR_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, X86_PASCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, WIN64, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, X8664_SYS_V, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, X86_REG_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, AAPCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, AAPCSVFP, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, INTEL_OCL_BICC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, SPIR_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, OPEN_CL_KERNEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, SWIFT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, SWIFT_ASYNC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, PRESERVE_MOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, PRESERVE_ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, A_ARCH64_VECTOR_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, A_ARCH64_SVEPCS, unsigned char)
  MX_ENUM_CLASS_ENTRY(CallingConv, AMDGPU_KERNEL_CALL, unsigned char)
MX_END_ENUM_CLASS(CallingConv)

MX_BEGIN_ENUM_CLASS(CanThrowResult, unsigned char)
  MX_ENUM_CLASS_ENTRY(CanThrowResult, CANNOT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CanThrowResult, DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CanThrowResult, CAN, unsigned char)
MX_END_ENUM_CLASS(CanThrowResult)

MX_BEGIN_ENUM_CLASS(CapturedRegionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapturedRegionKind, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapturedRegionKind, OBJ_C_AT_FINALLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CapturedRegionKind, OPEN_MP, unsigned char)
MX_END_ENUM_CLASS(CapturedRegionKind)

MX_BEGIN_ENUM_CLASS(CastKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, BIT_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, L_VALUE_BIT_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, L_VALUE_TO_R_VALUE_BIT_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, L_VALUE_TO_R_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, NO_OPERATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, BASE_TO_DERIVED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, DERIVED_TO_BASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, UNCHECKED_DERIVED_TO_BASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, DYNAMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, TO_UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ARRAY_TO_POINTER_DECAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FUNCTION_TO_POINTER_DECAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, NULL_TO_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, NULL_TO_MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, BASE_TO_DERIVED_MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, DERIVED_TO_BASE_MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, MEMBER_POINTER_TO_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, REINTERPRET_MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, USER_DEFINED_CONVERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, CONSTRUCTOR_CONVERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_TO_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, POINTER_TO_INTEGRAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, POINTER_TO_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, TO_VOID, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, MATRIX_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, VECTOR_SPLAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_TO_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_TO_FLOATING, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_TO_FIXED_POINT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FIXED_POINT_TO_FLOATING, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FIXED_POINT_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FIXED_POINT_TO_INTEGRAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_TO_FIXED_POINT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FIXED_POINT_TO_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_TO_INTEGRAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_TO_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, BOOLEAN_TO_SIGNED_INTEGRAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, C_POINTER_TO_OBJ_C_POINTER_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, BLOCK_POINTER_TO_OBJ_C_POINTER_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ANY_POINTER_TO_BLOCK_POINTER_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, OBJ_C_OBJECT_L_VALUE_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_REAL_TO_COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_COMPLEX_TO_REAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_COMPLEX_TO_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_COMPLEX_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, FLOATING_COMPLEX_TO_INTEGRAL_COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_REAL_TO_COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_COMPLEX_TO_REAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_COMPLEX_TO_BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_COMPLEX_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INTEGRAL_COMPLEX_TO_FLOATING_COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ARC_PRODUCE_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ARC_CONSUME_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ARC_RECLAIM_RETURNED_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ARC_EXTEND_BLOCK_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ATOMIC_TO_NON_ATOMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, NON_ATOMIC_TO_ATOMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, COPY_AND_AUTORELEASE_BLOCK_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, BUILTIN_FN_TO_FN_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ZERO_TO_OCL_OPAQUE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, ADDRESS_SPACE_CONVERSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(CastKind, INT_TO_OCL_SAMPLER, unsigned char)
MX_END_ENUM_CLASS(CastKind)

MX_BEGIN_ENUM_CLASS(ClangABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER38, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER4, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER6, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER7, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER9, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER11, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER12, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER14, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, VER15, unsigned char)
  MX_ENUM_CLASS_ENTRY(ClangABI, LATEST, unsigned char)
MX_END_ENUM_CLASS(ClangABI)

MX_BEGIN_ENUM_CLASS(CommentKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, INVALID, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, ORDINARY_BCPL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, ORDINARY_C, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, BCPL_SLASH, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, BCPL_EXCL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, JAVA_DOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, QT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CommentKind, MERGED, unsigned char)
MX_END_ENUM_CLASS(CommentKind)

MX_BEGIN_ENUM_CLASS(ComparisonCategoryResult, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryResult, EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryResult, EQUIVALENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryResult, LESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryResult, GREATER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryResult, UNORDERED, unsigned char)
MX_END_ENUM_CLASS(ComparisonCategoryResult)

MX_BEGIN_ENUM_CLASS(ComparisonCategoryType, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryType, PARTIAL_ORDERING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryType, WEAK_ORDERING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ComparisonCategoryType, STRONG_ORDERING, unsigned char)
MX_END_ENUM_CLASS(ComparisonCategoryType)

MX_BEGIN_ENUM_CLASS(CompilingModuleKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilingModuleKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilingModuleKind, MODULE_MAP, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilingModuleKind, HEADER_UNIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilingModuleKind, MODULE_INTERFACE, unsigned char)
MX_END_ENUM_CLASS(CompilingModuleKind)

MX_BEGIN_ENUM_CLASS(ConstexprSpecKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstexprSpecKind, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstexprSpecKind, CONSTEXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstexprSpecKind, CONSTEVAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ConstexprSpecKind, CONSTINIT, unsigned char)
MX_END_ENUM_CLASS(ConstexprSpecKind)

MX_BEGIN_ENUM_CLASS(CoreFoundationABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(CoreFoundationABI, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(CoreFoundationABI, STANDALONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(CoreFoundationABI, OBJECTIVE_C, unsigned char)
  MX_ENUM_CLASS_ENTRY(CoreFoundationABI, SWIFT, unsigned char)
  MX_ENUM_CLASS_ENTRY(CoreFoundationABI, SWIFT50, unsigned char)
  MX_ENUM_CLASS_ENTRY(CoreFoundationABI, SWIFT42, unsigned char)
  MX_ENUM_CLASS_ENTRY(CoreFoundationABI, SWIFT41, unsigned char)
MX_END_ENUM_CLASS(CoreFoundationABI)

MX_BEGIN_ENUM_CLASS(DataPositionTy, unsigned char)
  MX_ENUM_CLASS_ENTRY(DataPositionTy, POSX, unsigned char)
  MX_ENUM_CLASS_ENTRY(DataPositionTy, POSV, unsigned char)
  MX_ENUM_CLASS_ENTRY(DataPositionTy, POSE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DataPositionTy, POS_UPDATE_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DataPositionTy, POSD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DataPositionTy, POS_CONDITION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DataPositionTy, POSR, unsigned char)
MX_END_ENUM_CLASS(DataPositionTy)

MX_BEGIN_ENUM_CLASS(DebugSrcHashKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(DebugSrcHashKind, DSHMD5, unsigned char)
  MX_ENUM_CLASS_ENTRY(DebugSrcHashKind, DSHSHA1, unsigned char)
  MX_ENUM_CLASS_ENTRY(DebugSrcHashKind, DSHSHA256, unsigned char)
MX_END_ENUM_CLASS(DebugSrcHashKind)

MX_BEGIN_ENUM_CLASS(DeductionCandidate, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeductionCandidate, NORMAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeductionCandidate, COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeductionCandidate, AGGREGATE, unsigned char)
MX_END_ENUM_CLASS(DeductionCandidate)

MX_BEGIN_ENUM_CLASS(DefaultArgKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultArgKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultArgKind, UNPARSED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultArgKind, UNINSTANTIATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultArgKind, NORMAL, unsigned char)
MX_END_ENUM_CLASS(DefaultArgKind)

MX_BEGIN_ENUM_CLASS(DefaultCallingConvention, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultCallingConvention, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultCallingConvention, C_DECL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultCallingConvention, FAST_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultCallingConvention, STD_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultCallingConvention, VECTOR_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultCallingConvention, REG_CALL, unsigned char)
MX_END_ENUM_CLASS(DefaultCallingConvention)

MX_BEGIN_ENUM_CLASS(DefaultVisiblityExportMapping, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultVisiblityExportMapping, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultVisiblityExportMapping, EXPLICIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DefaultVisiblityExportMapping, ALL, unsigned char)
MX_END_ENUM_CLASS(DefaultVisiblityExportMapping)

MX_BEGIN_ENUM_CLASS(DesignatorKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(DesignatorKind, FIELD_DESIGNATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DesignatorKind, ARRAY_DESIGNATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DesignatorKind, ARRAY_RANGE_DESIGNATOR, unsigned char)
MX_END_ENUM_CLASS(DesignatorKind)

MX_BEGIN_ENUM_CLASS(DiagnosticLevelMask, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnosticLevelMask, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnosticLevelMask, NOTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnosticLevelMask, REMARK, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnosticLevelMask, WARNING, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnosticLevelMask, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DiagnosticLevelMask, ALL, unsigned char)
MX_END_ENUM_CLASS(DiagnosticLevelMask)

MX_BEGIN_ENUM_CLASS(ElaboratedTypeKeyword, unsigned char)
  MX_ENUM_CLASS_ENTRY(ElaboratedTypeKeyword, STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ElaboratedTypeKeyword, INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ElaboratedTypeKeyword, UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ElaboratedTypeKeyword, CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ElaboratedTypeKeyword, ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(ElaboratedTypeKeyword, TYPENAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(ElaboratedTypeKeyword, NONE, unsigned char)
MX_END_ENUM_CLASS(ElaboratedTypeKeyword)

MX_BEGIN_ENUM_CLASS(EmbedBitcodeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(EmbedBitcodeKind, EMBED_OFF, unsigned char)
  MX_ENUM_CLASS_ENTRY(EmbedBitcodeKind, EMBED_ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(EmbedBitcodeKind, EMBED_BITCODE, unsigned char)
  MX_ENUM_CLASS_ENTRY(EmbedBitcodeKind, EMBED_MARKER, unsigned char)
MX_END_ENUM_CLASS(EmbedBitcodeKind)

MX_BEGIN_ENUM_CLASS(EscapeChar, unsigned char)
  MX_ENUM_CLASS_ENTRY(EscapeChar, SINGLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(EscapeChar, DOUBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(EscapeChar, SINGLE_AND_DOUBLE, unsigned char)
MX_END_ENUM_CLASS(EscapeChar)

MX_BEGIN_ENUM_CLASS(ExceptionHandlingKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionHandlingKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionHandlingKind, SJ_LJ, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionHandlingKind, WIN_EH, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionHandlingKind, DWARF_CFI, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionHandlingKind, WASM, unsigned char)
MX_END_ENUM_CLASS(ExceptionHandlingKind)

MX_BEGIN_ENUM_CLASS(ExceptionSpecificationType, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, DYNAMIC_NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, DYNAMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, MS_ANY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, NO_THROW, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, BASIC_NOEXCEPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, DEPENDENT_NOEXCEPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, NOEXCEPT_FALSE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, NOEXCEPT_TRUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, UNEVALUATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, UNINSTANTIATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExceptionSpecificationType, UNPARSED, unsigned char)
MX_END_ENUM_CLASS(ExceptionSpecificationType)

MX_BEGIN_ENUM_CLASS(ExcessPrecisionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExcessPrecisionKind, FPP_STANDARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExcessPrecisionKind, FPP_FAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExcessPrecisionKind, FPP_NONE, unsigned char)
MX_END_ENUM_CLASS(ExcessPrecisionKind)

MX_BEGIN_ENUM_CLASS(ExclusionType, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExclusionType, ALLOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExclusionType, SKIP, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExclusionType, FORBID, unsigned char)
MX_END_ENUM_CLASS(ExclusionType)

MX_BEGIN_ENUM_CLASS(ExplicitSpecKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExplicitSpecKind, RESOLVED_FALSE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExplicitSpecKind, RESOLVED_TRUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExplicitSpecKind, UNRESOLVED, unsigned char)
MX_END_ENUM_CLASS(ExplicitSpecKind)

MX_BEGIN_ENUM_CLASS(ExprDependence, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, UNEXPANDED_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, TYPE_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, TYPE_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, VALUE_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, TYPE_VALUE_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprDependence, ERROR_DEPENDENT, unsigned char)
MX_END_ENUM_CLASS(ExprDependence)

MX_BEGIN_ENUM_CLASS(ExprObjectKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprObjectKind, ORDINARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprObjectKind, BIT_FIELD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprObjectKind, VECTOR_COMPONENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprObjectKind, OBJ_C_PROPERTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprObjectKind, OBJ_C_SUBSCRIPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprObjectKind, MATRIX_COMPONENT, unsigned char)
MX_END_ENUM_CLASS(ExprObjectKind)

MX_BEGIN_ENUM_CLASS(ExprOffsets, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprOffsets, ALLOCATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprOffsets, ALLOCATOR_TRAITS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprOffsets, TOTAL, unsigned char)
MX_END_ENUM_CLASS(ExprOffsets)

MX_BEGIN_ENUM_CLASS(ExprValueKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprValueKind, PR_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprValueKind, L_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExprValueKind, X_VALUE, unsigned char)
MX_END_ENUM_CLASS(ExprValueKind)

MX_BEGIN_ENUM_CLASS(ExpressionTrait, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExpressionTrait, IS_L_VALUE_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExpressionTrait, IS_R_VALUE_EXPRESSION, unsigned char)
MX_END_ENUM_CLASS(ExpressionTrait)

MX_BEGIN_ENUM_CLASS(ExtKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExtKind, ALWAYS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExtKind, NEVER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExtKind, REPLY_HAZY, unsigned char)
MX_END_ENUM_CLASS(ExtKind)

MX_BEGIN_ENUM_CLASS(ExtendArgsKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExtendArgsKind, EXTEND_TO32, unsigned char)
  MX_ENUM_CLASS_ENTRY(ExtendArgsKind, EXTEND_TO64, unsigned char)
MX_END_ENUM_CLASS(ExtendArgsKind)

MX_BEGIN_ENUM_CLASS(FPEvalMethodKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPEvalMethodKind, FEM_INDETERMINABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPEvalMethodKind, FEM_SOURCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPEvalMethodKind, FEM_DOUBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPEvalMethodKind, FEM_EXTENDED, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPEvalMethodKind, FEM_UNSET_ON_COMMAND_LINE, unsigned char)
MX_END_ENUM_CLASS(FPEvalMethodKind)

MX_BEGIN_ENUM_CLASS(FPExceptionModeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPExceptionModeKind, IGNORE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPExceptionModeKind, MAY_TRAP, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPExceptionModeKind, STRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPExceptionModeKind, DEFAULT, unsigned char)
MX_END_ENUM_CLASS(FPExceptionModeKind)

MX_BEGIN_ENUM_CLASS(FPModeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPModeKind, OFF, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPModeKind, ON, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPModeKind, FAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(FPModeKind, FAST_HONOR_PRAGMAS, unsigned char)
MX_END_ENUM_CLASS(FPModeKind)

MX_BEGIN_ENUM_CLASS(FiniteLoopsKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(FiniteLoopsKind, LANGUAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FiniteLoopsKind, ALWAYS, unsigned char)
  MX_ENUM_CLASS_ENTRY(FiniteLoopsKind, NEVER, unsigned char)
MX_END_ENUM_CLASS(FiniteLoopsKind)

MX_BEGIN_ENUM_CLASS(Flags, unsigned char)
  MX_ENUM_CLASS_ENTRY(Flags, F_INLINE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Flags, F_NESTED, unsigned char)
MX_END_ENUM_CLASS(Flags)

MX_BEGIN_ENUM_CLASS(FramePointerKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(FramePointerKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FramePointerKind, NON_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(FramePointerKind, ALL, unsigned char)
MX_END_ENUM_CLASS(FramePointerKind)

MX_BEGIN_ENUM_CLASS(GC, unsigned char)
  MX_ENUM_CLASS_ENTRY(GC, GC_NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GC, WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(GC, STRONG, unsigned char)
MX_END_ENUM_CLASS(GC)

MX_BEGIN_ENUM_CLASS(GCMode, unsigned char)
  MX_ENUM_CLASS_ENTRY(GCMode, NON_GC, unsigned char)
  MX_ENUM_CLASS_ENTRY(GCMode, GC_ONLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(GCMode, HYBRID_GC, unsigned char)
MX_END_ENUM_CLASS(GCMode)

MX_BEGIN_ENUM_CLASS(GPUDefaultStreamKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(GPUDefaultStreamKind, LEGACY, unsigned char)
  MX_ENUM_CLASS_ENTRY(GPUDefaultStreamKind, PER_THREAD, unsigned char)
MX_END_ENUM_CLASS(GPUDefaultStreamKind)

MX_BEGIN_ENUM_CLASS(GVALinkage, unsigned char)
  MX_ENUM_CLASS_ENTRY(GVALinkage, INTERNAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(GVALinkage, AVAILABLE_EXTERNALLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(GVALinkage, DISCARDABLE_ODR, unsigned char)
  MX_ENUM_CLASS_ENTRY(GVALinkage, STRONG_EXTERNAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(GVALinkage, STRONG_ODR, unsigned char)
MX_END_ENUM_CLASS(GVALinkage)

MX_BEGIN_ENUM_CLASS(GetBuiltinTypeError, unsigned char)
  MX_ENUM_CLASS_ENTRY(GetBuiltinTypeError, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GetBuiltinTypeError, MISSING_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(GetBuiltinTypeError, MISSING_STDIO, unsigned char)
  MX_ENUM_CLASS_ENTRY(GetBuiltinTypeError, MISSING, unsigned char)
  MX_ENUM_CLASS_ENTRY(GetBuiltinTypeError, MISSING_UCONTEXT, unsigned char)
MX_END_ENUM_CLASS(GetBuiltinTypeError)

MX_BEGIN_ENUM_CLASS(HLSLLangStd, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLLangStd, HLSL_UNSET, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLLangStd, HLSL2015, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLLangStd, HLSL2016, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLLangStd, HLSL2017, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLLangStd, HLSL2018, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLLangStd, HLSL2021, unsigned char)
  MX_ENUM_CLASS_ENTRY(HLSLLangStd, HLSL202X, unsigned char)
MX_END_ENUM_CLASS(HLSLLangStd)

MX_BEGIN_ENUM_CLASS(ID, unsigned char)
  MX_ENUM_CLASS_ENTRY(ID, WORK_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(ID, DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ID, ALL_SVM_DEVICES, unsigned char)
  MX_ENUM_CLASS_ENTRY(ID, SUB_GROUP, unsigned char)
MX_END_ENUM_CLASS(ID)

MX_BEGIN_ENUM_CLASS(IdentifierInfoFlag, unsigned char)
  MX_ENUM_CLASS_ENTRY(IdentifierInfoFlag, ZERO_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(IdentifierInfoFlag, ONE_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(IdentifierInfoFlag, MULTI_ARGUMENT, unsigned char)
MX_END_ENUM_CLASS(IdentifierInfoFlag)

MX_BEGIN_ENUM_CLASS(IfStatementKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(IfStatementKind, ORDINARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(IfStatementKind, CONSTEXPR, unsigned char)
  MX_ENUM_CLASS_ENTRY(IfStatementKind, CONSTEVAL_NON_NEGATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(IfStatementKind, CONSTEVAL_NEGATED, unsigned char)
MX_END_ENUM_CLASS(IfStatementKind)

MX_BEGIN_ENUM_CLASS(ImbueAttribute, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImbueAttribute, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImbueAttribute, ALWAYS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImbueAttribute, NEVER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ImbueAttribute, ALWAYSARG1, unsigned char)
MX_END_ENUM_CLASS(ImbueAttribute)

MX_BEGIN_ENUM_CLASS(InClassInitStyle, unsigned char)
  MX_ENUM_CLASS_ENTRY(InClassInitStyle, NO_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(InClassInitStyle, COPY_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(InClassInitStyle, LIST_INITIALIZER, unsigned char)
MX_END_ENUM_CLASS(InClassInitStyle)

MX_BEGIN_ENUM_CLASS(InheritedDesignatedInitializersState, unsigned char)
  MX_ENUM_CLASS_ENTRY(InheritedDesignatedInitializersState, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(InheritedDesignatedInitializersState, INHERITED, unsigned char)
  MX_ENUM_CLASS_ENTRY(InheritedDesignatedInitializersState, NOT_INHERITED, unsigned char)
MX_END_ENUM_CLASS(InheritedDesignatedInitializersState)

MX_BEGIN_ENUM_CLASS(InitStorageKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(InitStorageKind, NO_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(InitStorageKind, IN_CLASS_COPY_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(InitStorageKind, IN_CLASS_LIST_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(InitStorageKind, CAPTURED_VLA_TYPE, unsigned char)
MX_END_ENUM_CLASS(InitStorageKind)

MX_BEGIN_ENUM_CLASS(InlineAsmDialectKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(InlineAsmDialectKind, IADATT, unsigned char)
  MX_ENUM_CLASS_ENTRY(InlineAsmDialectKind, IAD_INTEL, unsigned char)
MX_END_ENUM_CLASS(InlineAsmDialectKind)

MX_BEGIN_ENUM_CLASS(InlineVariableDefinitionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(InlineVariableDefinitionKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(InlineVariableDefinitionKind, WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(InlineVariableDefinitionKind, WEAK_UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(InlineVariableDefinitionKind, STRONG, unsigned char)
MX_END_ENUM_CLASS(InlineVariableDefinitionKind)

MX_BEGIN_ENUM_CLASS(InliningMethod, unsigned char)
  MX_ENUM_CLASS_ENTRY(InliningMethod, NORMAL_INLINING, unsigned char)
  MX_ENUM_CLASS_ENTRY(InliningMethod, ONLY_HINT_INLINING, unsigned char)
  MX_ENUM_CLASS_ENTRY(InliningMethod, ONLY_ALWAYS_INLINING, unsigned char)
MX_END_ENUM_CLASS(InliningMethod)

MX_BEGIN_ENUM_CLASS(InterestingIdentifierKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, NOT_INTERESTING, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, FILE, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, JMP_BUF, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, SIGJMP_BUF, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, UCONTEXT_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, FLOAT_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, DOUBLE_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(InterestingIdentifierKind, NUMINTERESTINGIDENTIFIERS, unsigned char)
MX_END_ENUM_CLASS(InterestingIdentifierKind)

MX_BEGIN_ENUM_CLASS(Kinds, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, L_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, X_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, VOID, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, ADDRESSABLE_VOID, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, DUPLICATE_VECTOR_COMPONENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, MEMBER_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, SUB_OBJ_C_PROPERTY_SETTING, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, CLASS_TEMPORARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, ARRAY_TEMPORARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, OBJ_C_MESSAGE_R_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Kinds, PR_VALUE, unsigned char)
MX_END_ENUM_CLASS(Kinds)

MX_BEGIN_ENUM_CLASS(LambdaCaptureDefault, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureDefault, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureDefault, BY_COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureDefault, BY_REFERENCE, unsigned char)
MX_END_ENUM_CLASS(LambdaCaptureDefault)

MX_BEGIN_ENUM_CLASS(LambdaCaptureKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureKind, THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureKind, STAR_THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureKind, BY_COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureKind, BY_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LambdaCaptureKind, VLA_TYPE, unsigned char)
MX_END_ENUM_CLASS(LambdaCaptureKind)

MX_BEGIN_ENUM_CLASS(LangAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, OPENCL_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, OPENCL_LOCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, OPENCL_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, OPENCL_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, OPENCL_GENERIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, OPENCL_GLOBAL_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, OPENCL_GLOBAL_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, CUDA_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, CUDA_CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, CUDA_SHARED, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, SYCL_GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, SYCL_GLOBAL_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, SYCL_GLOBAL_HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, SYCL_LOCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, SYCL_PRIVATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, PTR32_SPTR, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, PTR32_UPTR, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, PTR64, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, HLSL_GROUPSHARED, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangAS, WASM_FUNCREF, unsigned char)
MX_END_ENUM_CLASS(LangAS)

MX_BEGIN_ENUM_CLASS(LangFeatures, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, LINE_COMMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C99, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C11, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C17, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C2X, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C_PLUS_PLUS, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C_PLUS_PLUS11, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C_PLUS_PLUS14, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C_PLUS_PLUS17, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C_PLUS_PLUS20, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C_PLUS_PLUS23, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, C_PLUS_PLUS26, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, DIGRAPHS, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, GNU_MODE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, HEX_FLOAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, OPEN_CL, unsigned char)
  MX_ENUM_CLASS_ENTRY(LangFeatures, HLSL, unsigned char)
MX_END_ENUM_CLASS(LangFeatures)

MX_BEGIN_ENUM_CLASS(Language, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, ASSEMBLY, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, LLVMIR, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, C, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, CXX, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, OBJ_C, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, OBJ_CXX, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, OPEN_CL, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, OPEN_CLCXX, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, CUDA, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, RENDER_SCRIPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, HIP, unsigned char)
  MX_ENUM_CLASS_ENTRY(Language, HLSL, unsigned char)
MX_END_ENUM_CLASS(Language)

MX_BEGIN_ENUM_CLASS(LanguageLinkage, unsigned char)
  MX_ENUM_CLASS_ENTRY(LanguageLinkage, C_LANGUAGE_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LanguageLinkage, CXX_LANGUAGE_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LanguageLinkage, NO_LANGUAGE_LINKAGE, unsigned char)
MX_END_ENUM_CLASS(LanguageLinkage)

MX_BEGIN_ENUM_CLASS(LaxVectorConversionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(LaxVectorConversionKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(LaxVectorConversionKind, INTEGER, unsigned char)
  MX_ENUM_CLASS_ENTRY(LaxVectorConversionKind, ALL, unsigned char)
MX_END_ENUM_CLASS(LaxVectorConversionKind)

MX_BEGIN_ENUM_CLASS(Level, unsigned char)
  MX_ENUM_CLASS_ENTRY(Level, IGNORED, unsigned char)
  MX_ENUM_CLASS_ENTRY(Level, NOTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Level, REMARK, unsigned char)
  MX_ENUM_CLASS_ENTRY(Level, WARNING, unsigned char)
  MX_ENUM_CLASS_ENTRY(Level, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(Level, FATAL, unsigned char)
MX_END_ENUM_CLASS(Level)

MX_BEGIN_ENUM_CLASS(Linkage, unsigned char)
  MX_ENUM_CLASS_ENTRY(Linkage, NO_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Linkage, INTERNAL_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Linkage, UNIQUE_EXTERNAL_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Linkage, VISIBLE_NO_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Linkage, MODULE_LINKAGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Linkage, EXTERNAL_LINKAGE, unsigned char)
MX_END_ENUM_CLASS(Linkage)

MX_BEGIN_ENUM_CLASS(MSInheritanceModel, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceModel, SINGLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceModel, MULTIPLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceModel, VIRTUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSInheritanceModel, UNSPECIFIED, unsigned char)
MX_END_ENUM_CLASS(MSInheritanceModel)

MX_BEGIN_ENUM_CLASS(MSVCMajorVersion, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC2010, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC2012, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC2013, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC2015, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC2017, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC20175, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC20177, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC2019, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC20195, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVCMajorVersion, MSVC20198, unsigned char)
MX_END_ENUM_CLASS(MSVCMajorVersion)

MX_BEGIN_ENUM_CLASS(MSVtorDispMode, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVtorDispMode, NEVER, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVtorDispMode, FOR_VIRTUAL_BASE_OVERRIDE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MSVtorDispMode, FOR_VF_TABLE, unsigned char)
MX_END_ENUM_CLASS(MSVtorDispMode)

MX_BEGIN_ENUM_CLASS(MethodRefFlags, unsigned char)
  MX_ENUM_CLASS_ENTRY(MethodRefFlags, METHOD_REFERENCE_NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MethodRefFlags, METHOD_REFERENCE_GETTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(MethodRefFlags, METHOD_REFERENCE_SETTER, unsigned char)
MX_END_ENUM_CLASS(MethodRefFlags)

MX_BEGIN_ENUM_CLASS(ModifiableType, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, UNTESTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, MODIFIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, R_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, L_VALUE_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, NO_SETTER_PROPERTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, CONST_QUALIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, CONST_QUALIFIED_FIELD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, CONST_ADDRESS_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, ARRAY_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ModifiableType, INCOMPLETE_TYPE, unsigned char)
MX_END_ENUM_CLASS(ModifiableType)

MX_BEGIN_ENUM_CLASS(MultiVersionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(MultiVersionKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MultiVersionKind, TARGET, unsigned char)
  MX_ENUM_CLASS_ENTRY(MultiVersionKind, CPU_SPECIFIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(MultiVersionKind, CPU_DISPATCH, unsigned char)
  MX_ENUM_CLASS_ENTRY(MultiVersionKind, TARGET_CLONES, unsigned char)
  MX_ENUM_CLASS_ENTRY(MultiVersionKind, TARGET_VERSION, unsigned char)
MX_END_ENUM_CLASS(MultiVersionKind)

MX_BEGIN_ENUM_CLASS(NameKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, OVERLOADED_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, ASSUMED_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, QUALIFIED_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, DEPENDENT_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, SUBST_TEMPLATE_TEMPLATE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, SUBST_TEMPLATE_TEMPLATE_PARM_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(NameKind, USING_TEMPLATE, unsigned char)
MX_END_ENUM_CLASS(NameKind)

MX_BEGIN_ENUM_CLASS(NeedExtraManglingDecl, unsigned char)
  MX_ENUM_CLASS_ENTRY(NeedExtraManglingDecl, NEED_EXTRA_MANGLING_DECLARATION, unsigned char)
MX_END_ENUM_CLASS(NeedExtraManglingDecl)

MX_BEGIN_ENUM_CLASS(NestedNameSpecifierDependence, unsigned char)
  MX_ENUM_CLASS_ENTRY(NestedNameSpecifierDependence, UNEXPANDED_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(NestedNameSpecifierDependence, INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NestedNameSpecifierDependence, DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(NestedNameSpecifierDependence, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(NestedNameSpecifierDependence, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NestedNameSpecifierDependence, DEPENDENT_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(NestedNameSpecifierDependence, ALL, unsigned char)
MX_END_ENUM_CLASS(NestedNameSpecifierDependence)

MX_BEGIN_ENUM_CLASS(NonOdrUseReason, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonOdrUseReason, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonOdrUseReason, UNEVALUATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonOdrUseReason, CONSTANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonOdrUseReason, DISCARDED, unsigned char)
MX_END_ENUM_CLASS(NonOdrUseReason)

MX_BEGIN_ENUM_CLASS(NonceObjCInterface, unsigned char)
  MX_ENUM_CLASS_ENTRY(NonceObjCInterface, OBJ_C_INTERFACE, unsigned char)
MX_END_ENUM_CLASS(NonceObjCInterface)

MX_BEGIN_ENUM_CLASS(NullabilityKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(NullabilityKind, NON_NULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(NullabilityKind, NULLABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(NullabilityKind, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(NullabilityKind, NULLABLE_RESULT, unsigned char)
MX_END_ENUM_CLASS(NullabilityKind)

MX_BEGIN_ENUM_CLASS(ObjCBridgeCastKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeCastKind, BRIDGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeCastKind, BRIDGE_TRANSFER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCBridgeCastKind, BRIDGE_RETAINED, unsigned char)
MX_END_ENUM_CLASS(ObjCBridgeCastKind)

MX_BEGIN_ENUM_CLASS(ObjCDispatchMethodKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDispatchMethodKind, LEGACY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDispatchMethodKind, NON_LEGACY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCDispatchMethodKind, MIXED, unsigned char)
MX_END_ENUM_CLASS(ObjCDispatchMethodKind)

MX_BEGIN_ENUM_CLASS(ObjCInstanceTypeFamily, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCInstanceTypeFamily, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCInstanceTypeFamily, ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCInstanceTypeFamily, DICTIONARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCInstanceTypeFamily, SINGLETON, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCInstanceTypeFamily, INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCInstanceTypeFamily, RETURNS_SELF, unsigned char)
MX_END_ENUM_CLASS(ObjCInstanceTypeFamily)

MX_BEGIN_ENUM_CLASS(ObjCLifetime, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCLifetime, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCLifetime, EXPLICIT_NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCLifetime, STRONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCLifetime, WEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCLifetime, AUTORELEASING, unsigned char)
MX_END_ENUM_CLASS(ObjCLifetime)

MX_BEGIN_ENUM_CLASS(ObjCMethodFamily, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, MUTABLE_COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, NEW, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, AUTORELEASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, DEALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, FINALIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, RELEASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, RETAIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, RETAIN_COUNT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, SELF, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, INITIALIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCMethodFamily, PERFORM_SELECTOR, unsigned char)
MX_END_ENUM_CLASS(ObjCMethodFamily)

MX_BEGIN_ENUM_CLASS(ObjCPropertyQueryKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyQueryKind, QUERY_UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyQueryKind, QUERY_INSTANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCPropertyQueryKind, QUERY_CLASS, unsigned char)
MX_END_ENUM_CLASS(ObjCPropertyQueryKind)

MX_BEGIN_ENUM_CLASS(ObjCStringFormatFamily, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCStringFormatFamily, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCStringFormatFamily, NS_STRING, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCStringFormatFamily, CF_STRING, unsigned char)
MX_END_ENUM_CLASS(ObjCStringFormatFamily)

MX_BEGIN_ENUM_CLASS(ObjCSubstitutionContext, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubstitutionContext, ORDINARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubstitutionContext, RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubstitutionContext, PARAMETER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubstitutionContext, PROPERTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCSubstitutionContext, SUPERCLASS, unsigned char)
MX_END_ENUM_CLASS(ObjCSubstitutionContext)

MX_BEGIN_ENUM_CLASS(ObjCTypeParamVariance, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCTypeParamVariance, INVARIANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCTypeParamVariance, COVARIANT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ObjCTypeParamVariance, CONTRAVARIANT, unsigned char)
MX_END_ENUM_CLASS(ObjCTypeParamVariance)

MX_BEGIN_ENUM_CLASS(OnOffSwitch, unsigned char)
  MX_ENUM_CLASS_ENTRY(OnOffSwitch, ON, unsigned char)
  MX_ENUM_CLASS_ENTRY(OnOffSwitch, OFF, unsigned char)
  MX_ENUM_CLASS_ENTRY(OnOffSwitch, DEFAULT, unsigned char)
MX_END_ENUM_CLASS(OnOffSwitch)

MX_BEGIN_ENUM_CLASS(OnStackType, unsigned char)
  MX_ENUM_CLASS_ENTRY(OnStackType, ON_STACK, unsigned char)
MX_END_ENUM_CLASS(OnStackType)

MX_BEGIN_ENUM_CLASS(OpenMPAdjustArgsOpKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAdjustArgsOpKind, ADJUSTARGS_NOTHING, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAdjustArgsOpKind, ADJUSTARGS_NEED_DEVICE_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAdjustArgsOpKind, ADJUSTARGS_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPAdjustArgsOpKind)

MX_BEGIN_ENUM_CLASS(OpenMPAtClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAtClauseKind, AT_COMPILATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAtClauseKind, AT_EXECUTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAtClauseKind, AT_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPAtClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPAtomicDefaultMemOrderClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAtomicDefaultMemOrderClauseKind, SEQ_CST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAtomicDefaultMemOrderClauseKind, ACQ_REL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAtomicDefaultMemOrderClauseKind, RELAXED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPAtomicDefaultMemOrderClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPAtomicDefaultMemOrderClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPBindClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPBindClauseKind, BIND_TEAMS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPBindClauseKind, BIND_PARALLEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPBindClauseKind, BIND_THREAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPBindClauseKind, BIND_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPBindClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPDefaultmapClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseKind, SCALAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseKind, AGGREGATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseKind, POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPDefaultmapClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPDefaultmapClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, TO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, FROM, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, TOFROM, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDefaultmapClauseModifier, PRESENT, unsigned char)
MX_END_ENUM_CLASS(OpenMPDefaultmapClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPDependClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, IN, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, OUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, INOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, MUTEXINOUTSET, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, DEPOBJ, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, SOURCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, SINK, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, INOUTSET, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, OUTALLMEMORY, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, INOUTALLMEMORY, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDependClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPDependClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPDeviceClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDeviceClauseModifier, ANCESTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDeviceClauseModifier, DEVICE_NUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDeviceClauseModifier, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPDeviceClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPDeviceType, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDeviceType, HOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDeviceType, NOHOST, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDeviceType, ANY, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDeviceType, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPDeviceType)

MX_BEGIN_ENUM_CLASS(OpenMPDistScheduleClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDistScheduleClauseKind, STATIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDistScheduleClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPDistScheduleClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPDoacrossClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDoacrossClauseModifier, DOACROSS_SOURCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDoacrossClauseModifier, DOACROSS_SINK, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDoacrossClauseModifier, DOACROSS_SINK_OMP_CUR_ITERATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDoacrossClauseModifier, DOACROSS_SOURCE_OMP_CUR_ITERATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPDoacrossClauseModifier, DOACROSS_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPDoacrossClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPGrainsizeClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPGrainsizeClauseModifier, GRAINSIZE_STRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPGrainsizeClauseModifier, GRAINSIZE_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPGrainsizeClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPLastprivateModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPLastprivateModifier, CONDITIONAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPLastprivateModifier, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPLastprivateModifier)

MX_BEGIN_ENUM_CLASS(OpenMPLinearClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPLinearClauseKind, VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPLinearClauseKind, REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPLinearClauseKind, UVAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPLinearClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPLinearClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPMapClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapClauseKind, ALLOC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapClauseKind, TO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapClauseKind, FROM, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapClauseKind, TOFROM, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapClauseKind, DELETE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapClauseKind, RELEASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPMapClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPMapModifierKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapModifierKind, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapModifierKind, ALWAYS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapModifierKind, CLOSE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapModifierKind, MAPPER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapModifierKind, ITERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapModifierKind, PRESENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMapModifierKind, OMPX_HOLD, unsigned char)
MX_END_ENUM_CLASS(OpenMPMapModifierKind)

MX_BEGIN_ENUM_CLASS(OpenMPMotionModifierKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMotionModifierKind, MOTIONMODIFIER_MAPPER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMotionModifierKind, MOTIONMODIFIER_PRESENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPMotionModifierKind, MOTIONMODIFIER_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPMotionModifierKind)

MX_BEGIN_ENUM_CLASS(OpenMPNumTasksClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPNumTasksClauseModifier, NUMTASKS_STRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPNumTasksClauseModifier, NUMTASKS_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPNumTasksClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPOrderClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPOrderClauseKind, CONCURRENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPOrderClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPOrderClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPOrderClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPOrderClauseModifier, MODIFIER_UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPOrderClauseModifier, MODIFIER_REPRODUCIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPOrderClauseModifier, MODIFIER_UNCONSTRAINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPOrderClauseModifier, MODIFIER_LAST, unsigned char)
MX_END_ENUM_CLASS(OpenMPOrderClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPReductionClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPReductionClauseModifier, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPReductionClauseModifier, INSCAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPReductionClauseModifier, TASK, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPReductionClauseModifier, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPReductionClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPScheduleClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseKind, STATIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseKind, DYNAMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseKind, GUIDED, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseKind, AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseKind, RUNTIME, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseKind, UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPScheduleClauseKind)

MX_BEGIN_ENUM_CLASS(OpenMPScheduleClauseModifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseModifier, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseModifier, MONOTONIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseModifier, NONMONOTONIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPScheduleClauseModifier, SIMD, unsigned char)
MX_END_ENUM_CLASS(OpenMPScheduleClauseModifier)

MX_BEGIN_ENUM_CLASS(OpenMPSeverityClauseKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPSeverityClauseKind, SEVERITY_FATAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPSeverityClauseKind, SEVERITY_WARNING, unsigned char)
  MX_ENUM_CLASS_ENTRY(OpenMPSeverityClauseKind, SEVERITY_UNKNOWN, unsigned char)
MX_END_ENUM_CLASS(OpenMPSeverityClauseKind)

MX_BEGIN_ENUM_CLASS(OverloadedOperatorKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, NEW, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, DELETE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, ARRAY_NEW, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, ARRAY_DELETE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PLUS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, MINUS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, STAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, SLASH, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PERCENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, CARET, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, AMP, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PIPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, TILDE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, EXCLAIM, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, LESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, GREATER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PLUS_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, MINUS_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, STAR_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, SLASH_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PERCENT_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, CARET_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, AMP_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PIPE_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, LESS_LESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, GREATER_GREATER, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, LESS_LESS_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, GREATER_GREATER_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, EQUAL_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, EXCLAIM_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, LESS_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, GREATER_EQUAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, SPACESHIP, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, AMP_AMP, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PIPE_PIPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, PLUS_PLUS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, MINUS_MINUS, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, COMMA, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, ARROW_STAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, ARROW, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, SUBSCRIPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, CONDITIONAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadedOperatorKind, COAWAIT, unsigned char)
MX_END_ENUM_CLASS(OverloadedOperatorKind)

MX_BEGIN_ENUM_CLASS(OverloadsShown, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadsShown, ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(OverloadsShown, BEST, unsigned char)
MX_END_ENUM_CLASS(OverloadsShown)

MX_BEGIN_ENUM_CLASS(ParameterABI, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParameterABI, ORDINARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParameterABI, SWIFT_INDIRECT_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParameterABI, SWIFT_ERROR_RESULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParameterABI, SWIFT_CONTEXT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParameterABI, SWIFT_ASYNC_CONTEXT, unsigned char)
MX_END_ENUM_CLASS(ParameterABI)

MX_BEGIN_ENUM_CLASS(ParenLocsOffsets, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParenLocsOffsets, L_PAREN_TOKEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParenLocsOffsets, R_PAREN_TOKEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(ParenLocsOffsets, TOTAL, unsigned char)
MX_END_ENUM_CLASS(ParenLocsOffsets)

MX_BEGIN_ENUM_CLASS(PragmaFloatControlKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaFloatControlKind, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaFloatControlKind, PRECISE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaFloatControlKind, NO_PRECISE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaFloatControlKind, EXCEPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaFloatControlKind, NO_EXCEPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaFloatControlKind, PUSH, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaFloatControlKind, POP, unsigned char)
MX_END_ENUM_CLASS(PragmaFloatControlKind)

MX_BEGIN_ENUM_CLASS(PragmaMSCommentKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSCommentKind, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSCommentKind, LINKER, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSCommentKind, LIB, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSCommentKind, COMPILER, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSCommentKind, EXE_STRING, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSCommentKind, USER, unsigned char)
MX_END_ENUM_CLASS(PragmaMSCommentKind)

MX_BEGIN_ENUM_CLASS(PragmaMSPointersToMembersKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSPointersToMembersKind, BEST_CASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSPointersToMembersKind, FULL_GENERALITY_SINGLE_INHERITANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSPointersToMembersKind, FULL_GENERALITY_MULTIPLE_INHERITANCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSPointersToMembersKind, FULL_GENERALITY_VIRTUAL_INHERITANCE, unsigned char)
MX_END_ENUM_CLASS(PragmaMSPointersToMembersKind)

MX_BEGIN_ENUM_CLASS(PragmaMSStructKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSStructKind, OFF, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaMSStructKind, ON, unsigned char)
MX_END_ENUM_CLASS(PragmaMSStructKind)

MX_BEGIN_ENUM_CLASS(PragmaSectionFlag, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaSectionFlag, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaSectionFlag, READ, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaSectionFlag, WRITE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaSectionFlag, EXECUTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaSectionFlag, IMPLICIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaSectionFlag, ZERO_INITIALIZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(PragmaSectionFlag, INVALID, unsigned char)
MX_END_ENUM_CLASS(PragmaSectionFlag)

MX_BEGIN_ENUM_CLASS(ProfileInstrKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ProfileInstrKind, PROFILE_NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ProfileInstrKind, PROFILE_CLANG_INSTR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ProfileInstrKind, PROFILE_IR_INSTR, unsigned char)
  MX_ENUM_CLASS_ENTRY(ProfileInstrKind, PROFILE_CSIR_INSTR, unsigned char)
MX_END_ENUM_CLASS(ProfileInstrKind)

MX_BEGIN_ENUM_CLASS(Qualified, unsigned char)
  MX_ENUM_CLASS_ENTRY(Qualified, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(Qualified, AS_WRITTEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(Qualified, FULLY, unsigned char)
MX_END_ENUM_CLASS(Qualified)

MX_BEGIN_ENUM_CLASS(RangeExprOffset, unsigned char)
  MX_ENUM_CLASS_ENTRY(RangeExprOffset, BEGIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(RangeExprOffset, END, unsigned char)
  MX_ENUM_CLASS_ENTRY(RangeExprOffset, STEP, unsigned char)
  MX_ENUM_CLASS_ENTRY(RangeExprOffset, TOTAL, unsigned char)
MX_END_ENUM_CLASS(RangeExprOffset)

MX_BEGIN_ENUM_CLASS(RangeLocOffset, unsigned char)
  MX_ENUM_CLASS_ENTRY(RangeLocOffset, ASSIGN_TOKEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(RangeLocOffset, SECOND_COLON_TOKEN, unsigned char)
  MX_ENUM_CLASS_ENTRY(RangeLocOffset, TOTAL, unsigned char)
MX_END_ENUM_CLASS(RangeLocOffset)

MX_BEGIN_ENUM_CLASS(RefQualifierKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(RefQualifierKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(RefQualifierKind, L_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(RefQualifierKind, R_VALUE, unsigned char)
MX_END_ENUM_CLASS(RefQualifierKind)

MX_BEGIN_ENUM_CLASS(RemarkKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(RemarkKind, MISSING, unsigned char)
  MX_ENUM_CLASS_ENTRY(RemarkKind, ENABLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(RemarkKind, ENABLED_EVERYTHING, unsigned char)
  MX_ENUM_CLASS_ENTRY(RemarkKind, DISABLED, unsigned char)
  MX_ENUM_CLASS_ENTRY(RemarkKind, DISABLED_EVERYTHING, unsigned char)
  MX_ENUM_CLASS_ENTRY(RemarkKind, WITH_PATTERN, unsigned char)
MX_END_ENUM_CLASS(RemarkKind)

MX_BEGIN_ENUM_CLASS(ReservedIdentifierStatus, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedIdentifierStatus, NOT_RESERVED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedIdentifierStatus, STARTS_WITH_UNDERSCORE_AT_GLOBAL_SCOPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedIdentifierStatus, STARTS_WITH_UNDERSCORE_AND_IS_EXTERN_C, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedIdentifierStatus, STARTS_WITH_DOUBLE_UNDERSCORE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedIdentifierStatus, STARTS_WITH_UNDERSCORE_FOLLOWED_BY_CAPITAL_LETTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedIdentifierStatus, CONTAINS_DOUBLE_UNDERSCORE, unsigned char)
MX_END_ENUM_CLASS(ReservedIdentifierStatus)

MX_BEGIN_ENUM_CLASS(ReservedLiteralSuffixIdStatus, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedLiteralSuffixIdStatus, NOT_RESERVED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedLiteralSuffixIdStatus, NOT_STARTS_WITH_UNDERSCORE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ReservedLiteralSuffixIdStatus, CONTAINS_DOUBLE_UNDERSCORE, unsigned char)
MX_END_ENUM_CLASS(ReservedLiteralSuffixIdStatus)

MX_BEGIN_ENUM_CLASS(SFINAEResponse, unsigned char)
  MX_ENUM_CLASS_ENTRY(SFINAEResponse, SUBSTITUTION_FAILURE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SFINAEResponse, SUPPRESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SFINAEResponse, REPORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SFINAEResponse, ACCESS_CONTROL, unsigned char)
MX_END_ENUM_CLASS(SFINAEResponse)

MX_BEGIN_ENUM_CLASS(SYCLMajorVersion, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLMajorVersion, VERSION_NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLMajorVersion, VERSION2017, unsigned char)
  MX_ENUM_CLASS_ENTRY(SYCLMajorVersion, VERSION2020, unsigned char)
MX_END_ENUM_CLASS(SYCLMajorVersion)

MX_BEGIN_ENUM_CLASS(SanitizerOrdinal, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, ADDRESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, POINTER_COMPARE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, POINTER_SUBTRACT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, KERNEL_ADDRESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, HW_ADDRESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, KERNEL_HW_ADDRESS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, MEMTAG_STACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, MEMTAG_HEAP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, MEMTAG_GLOBALS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, MEMORY_TAG_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, MEMORY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, KERNEL_MEMORY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, FUZZER, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, FUZZER_NO_LINK, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, THREAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, LEAK, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, ALIGNMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, ARRAY_BOUNDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, FLOAT_CAST_OVERFLOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, FLOAT_DIVIDE_BY_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, INTEGER_DIVIDE_BY_ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, NONNULL_ATTRIBUTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, NULL_, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, NULLABILITY_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, NULLABILITY_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, NULLABILITY_RETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, NULLABILITY_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, OBJECT_SIZE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, POINTER_OVERFLOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, RETURN, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, RETURNS_NONNULL_ATTRIBUTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, SHIFT_BASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, SHIFT_EXPONENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, SHIFT_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, SIGNED_INTEGER_OVERFLOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, UNREACHABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, VLA_BOUND, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, VPTR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, UNSIGNED_INTEGER_OVERFLOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, UNSIGNED_SHIFT_BASE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, DATA_FLOW, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFI_CAST_STRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFI_DERIVED_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFII_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFIMF_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFI_UNRELATED_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFINV_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFIV_CALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, CFI_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, KCFI, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, SAFE_STACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, SHADOW_CALL_STACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, UNDEFINED_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, UNDEFINED_TRAP_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, IMPLICIT_UNSIGNED_INTEGER_TRUNCATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, IMPLICIT_SIGNED_INTEGER_TRUNCATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, IMPLICIT_INTEGER_TRUNCATION_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, IMPLICIT_INTEGER_SIGN_CHANGE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, IMPLICIT_INTEGER_ARITHMETIC_VALUE_CHANGE_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, OBJ_C_CAST, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, IMPLICIT_CONVERSION_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, INTEGER_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, LOCAL_BOUNDS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, BOUNDS_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, SCUDO, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, ALL_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SanitizerOrdinal, COUNT, unsigned char)
MX_END_ENUM_CLASS(SanitizerOrdinal)

MX_BEGIN_ENUM_CLASS(SelectorLocationsKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectorLocationsKind, NON_STANDARD, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectorLocationsKind, STANDARD_NO_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SelectorLocationsKind, STANDARD_WITH_SPACE, unsigned char)
MX_END_ENUM_CLASS(SelectorLocationsKind)

MX_BEGIN_ENUM_CLASS(ShaderStage, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, PIXEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, VERTEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, GEOMETRY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, HULL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, DOMAIN_, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, COMPUTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, LIBRARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, RAY_GENERATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, INTERSECTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, ANY_HIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, CLOSEST_HIT, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, MISS, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, CALLABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, MESH, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, AMPLIFICATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(ShaderStage, INVALID, unsigned char)
MX_END_ENUM_CLASS(ShaderStage)

MX_BEGIN_ENUM_CLASS(SignReturnAddressKeyKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignReturnAddressKeyKind, A_KEY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignReturnAddressKeyKind, B_KEY, unsigned char)
MX_END_ENUM_CLASS(SignReturnAddressKeyKind)

MX_BEGIN_ENUM_CLASS(SignReturnAddressScopeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignReturnAddressScopeKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignReturnAddressScopeKind, NON_LEAF, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignReturnAddressScopeKind, ALL, unsigned char)
MX_END_ENUM_CLASS(SignReturnAddressScopeKind)

MX_BEGIN_ENUM_CLASS(SignedOverflowBehaviorTy, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignedOverflowBehaviorTy, UNDEFINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignedOverflowBehaviorTy, DEFINED, unsigned char)
  MX_ENUM_CLASS_ENTRY(SignedOverflowBehaviorTy, TRAPPING, unsigned char)
MX_END_ENUM_CLASS(SignedOverflowBehaviorTy)

MX_BEGIN_ENUM_CLASS(SpecialMemberFlags, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecialMemberFlags, DEFAULT_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecialMemberFlags, COPY_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecialMemberFlags, MOVE_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecialMemberFlags, COPY_ASSIGNMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecialMemberFlags, MOVE_ASSIGNMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecialMemberFlags, DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecialMemberFlags, ALL, unsigned char)
MX_END_ENUM_CLASS(SpecialMemberFlags)

MX_BEGIN_ENUM_CLASS(SpecifierKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecifierKind, IDENTIFIER, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecifierKind, NAMESPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecifierKind, NAMESPACE_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecifierKind, TYPE_SPEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecifierKind, TYPE_SPEC_WITH_TEMPLATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecifierKind, GLOBAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(SpecifierKind, SUPER, unsigned char)
MX_END_ENUM_CLASS(SpecifierKind)

MX_BEGIN_ENUM_CLASS(StackProtectorMode, unsigned char)
  MX_ENUM_CLASS_ENTRY(StackProtectorMode, OFF, unsigned char)
  MX_ENUM_CLASS_ENTRY(StackProtectorMode, ON, unsigned char)
  MX_ENUM_CLASS_ENTRY(StackProtectorMode, STRONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(StackProtectorMode, REQ, unsigned char)
MX_END_ENUM_CLASS(StackProtectorMode)

MX_BEGIN_ENUM_CLASS(StorageClass, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageClass, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageClass, EXTERN, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageClass, STATIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageClass, PRIVATE_EXTERN, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageClass, AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageClass, REGISTER, unsigned char)
MX_END_ENUM_CLASS(StorageClass)

MX_BEGIN_ENUM_CLASS(StorageDuration, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageDuration, FULL_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageDuration, AUTOMATIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageDuration, THREAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageDuration, STATIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(StorageDuration, DYNAMIC, unsigned char)
MX_END_ENUM_CLASS(StorageDuration)

MX_BEGIN_ENUM_CLASS(StoredNameKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_IDENTIFIER, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_OBJ_C_ZERO_ARGUMENT_SELECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_OBJ_C_ONE_ARGUMENT_SELECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_CXX_CONSTRUCTOR_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_CXX_DESTRUCTOR_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_CXX_CONVERSION_FUNCTION_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_CXX_OPERATOR_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, STORED_DECLARATION_NAME_EXTRA, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredNameKind, UNCOMMON_NAME_KIND_OFFSET, unsigned char)
MX_END_ENUM_CLASS(StoredNameKind)

MX_BEGIN_ENUM_CLASS(StoredSpecifierKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredSpecifierKind, STORED_IDENTIFIER, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredSpecifierKind, STORED_DECLARATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredSpecifierKind, STORED_TYPE_SPEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(StoredSpecifierKind, STORED_TYPE_SPEC_WITH_TEMPLATE, unsigned char)
MX_END_ENUM_CLASS(StoredSpecifierKind)

MX_BEGIN_ENUM_CLASS(StrictFlexArraysLevelKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(StrictFlexArraysLevelKind, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StrictFlexArraysLevelKind, ONE_ZERO_OR_INCOMPLETE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StrictFlexArraysLevelKind, ZERO_OR_INCOMPLETE, unsigned char)
  MX_ENUM_CLASS_ENTRY(StrictFlexArraysLevelKind, INCOMPLETE_ONLY, unsigned char)
MX_END_ENUM_CLASS(StrictFlexArraysLevelKind)

MX_BEGIN_ENUM_CLASS(StructReturnConventionKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(StructReturnConventionKind, DEFAULT, unsigned char)
  MX_ENUM_CLASS_ENTRY(StructReturnConventionKind, ON_STACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(StructReturnConventionKind, IN_REGS, unsigned char)
MX_END_ENUM_CLASS(StructReturnConventionKind)

MX_BEGIN_ENUM_CLASS(SubExpr, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubExpr, CALLEE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubExpr, LHS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubExpr, RHS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubExpr, COUNT, unsigned char)
MX_END_ENUM_CLASS(SubExpr)

MX_BEGIN_ENUM_CLASS(SubStmt, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, BODY, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, PROMISE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, INITIALIZER_SUSPEND, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, FINAL_SUSPEND, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, ON_EXCEPTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, ON_FALLTHROUGH, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, ALLOCATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, DEALLOCATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, RESULT_DECLARATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, RETURN_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, RETURN_STATEMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SubStmt, RETURN_STATEMENT_ON_ALLOC_FAILURE, unsigned char)
MX_END_ENUM_CLASS(SubStmt)

MX_BEGIN_ENUM_CLASS(SwiftAsyncFramePointerKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncFramePointerKind, AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncFramePointerKind, ALWAYS, unsigned char)
  MX_ENUM_CLASS_ENTRY(SwiftAsyncFramePointerKind, NEVER, unsigned char)
MX_END_ENUM_CLASS(SwiftAsyncFramePointerKind)

MX_BEGIN_ENUM_CLASS(SyncScope, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, HIP_SINGLE_THREAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, HIP_WAVEFRONT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, HIP_WORKGROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, HIP_AGENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, HIP_SYSTEM, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, OPEN_CL_WORK_GROUP, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, OPEN_CL_DEVICE, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, OPEN_CL_ALL_SVM_DEVICES, unsigned char)
  MX_ENUM_CLASS_ENTRY(SyncScope, OPEN_CL_SUB_GROUP, unsigned char)
MX_END_ENUM_CLASS(SyncScope)

MX_BEGIN_ENUM_CLASS(Syntax, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, GNU, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, CXX11, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, C2X, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, DECLSPEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, MICROSOFT, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, KEYWORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, PRAGMA, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, CONTEXT_SENSITIVE_KEYWORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, HLSL_SEMANTIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(Syntax, IMPLICIT, unsigned char)
MX_END_ENUM_CLASS(Syntax)

MX_BEGIN_ENUM_CLASS(TLSModel, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModel, GENERAL_DYNAMIC_TLS_MODEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModel, LOCAL_DYNAMIC_TLS_MODEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModel, INITIAL_EXEC_TLS_MODEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TLSModel, LOCAL_EXEC_TLS_MODEL, unsigned char)
MX_END_ENUM_CLASS(TLSModel)

MX_BEGIN_ENUM_CLASS(TQ, unsigned char)
  MX_ENUM_CLASS_ENTRY(TQ, CONST, unsigned char)
  MX_ENUM_CLASS_ENTRY(TQ, RESTRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TQ, VOLATILE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TQ, CVR_MASK, unsigned char)
MX_END_ENUM_CLASS(TQ)

MX_BEGIN_ENUM_CLASS(TagTypeKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TagTypeKind, STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TagTypeKind, INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TagTypeKind, UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TagTypeKind, CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TagTypeKind, ENUM, unsigned char)
MX_END_ENUM_CLASS(TagTypeKind)

MX_BEGIN_ENUM_CLASS(TailPaddingUseRules, unsigned char)
  MX_ENUM_CLASS_ENTRY(TailPaddingUseRules, ALWAYS_USE_TAIL_PADDING, unsigned char)
  MX_ENUM_CLASS_ENTRY(TailPaddingUseRules, USE_TAIL_PADDING_UNLESS_POD03, unsigned char)
  MX_ENUM_CLASS_ENTRY(TailPaddingUseRules, USE_TAIL_PADDING_UNLESS_POD11, unsigned char)
MX_END_ENUM_CLASS(TailPaddingUseRules)

MX_BEGIN_ENUM_CLASS(TemplateArgumentDependence, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentDependence, UNEXPANDED_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentDependence, INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentDependence, DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentDependence, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentDependence, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentDependence, DEPENDENT_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateArgumentDependence, ALL, unsigned char)
MX_END_ENUM_CLASS(TemplateArgumentDependence)

MX_BEGIN_ENUM_CLASS(TemplateNameDependence, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateNameDependence, UNEXPANDED_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateNameDependence, INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateNameDependence, DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateNameDependence, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateNameDependence, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateNameDependence, DEPENDENT_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateNameDependence, ALL, unsigned char)
MX_END_ENUM_CLASS(TemplateNameDependence)

MX_BEGIN_ENUM_CLASS(TemplateSpecializationKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateSpecializationKind, UNDECLARED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateSpecializationKind, IMPLICIT_INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateSpecializationKind, EXPLICIT_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateSpecializationKind, EXPLICIT_INSTANTIATION_DECLARATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TemplateSpecializationKind, EXPLICIT_INSTANTIATION_DEFINITION, unsigned char)
MX_END_ENUM_CLASS(TemplateSpecializationKind)

MX_BEGIN_ENUM_CLASS(TextDiagnosticFormat, unsigned char)
  MX_ENUM_CLASS_ENTRY(TextDiagnosticFormat, CLANG, unsigned char)
  MX_ENUM_CLASS_ENTRY(TextDiagnosticFormat, MSVC, unsigned char)
  MX_ENUM_CLASS_ENTRY(TextDiagnosticFormat, VI, unsigned char)
  MX_ENUM_CLASS_ENTRY(TextDiagnosticFormat, SARIF, unsigned char)
MX_END_ENUM_CLASS(TextDiagnosticFormat)

MX_BEGIN_ENUM_CLASS(ThreadModelKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThreadModelKind, POSIX, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThreadModelKind, SINGLE, unsigned char)
MX_END_ENUM_CLASS(ThreadModelKind)

MX_BEGIN_ENUM_CLASS(ThreadStorageClassSpecifier, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThreadStorageClassSpecifier, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThreadStorageClassSpecifier, __THREAD, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThreadStorageClassSpecifier, THREAD_LOCAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(ThreadStorageClassSpecifier, _THREAD_LOCAL, unsigned char)
MX_END_ENUM_CLASS(ThreadStorageClassSpecifier)

MX_BEGIN_ENUM_CLASS(TokenKind, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, UNKNOWN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, END_OF_FILE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, END_OF_DIRECTIVE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, CODE_COMPLETION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, COMMENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, IDENTIFIER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, WHITESPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, NUMERIC_CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, CHARACTER_CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, WIDE_CHARACTER_CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, UTF8_CHARACTER_CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, UTF16_CHARACTER_CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, UTF32_CHARACTER_CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, STRING_LITERAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, WIDE_STRING_LITERAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, HEADER_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, UTF8_STRING_LITERAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, UTF16_STRING_LITERAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, UTF32_STRING_LITERAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, L_SQUARE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, R_SQUARE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, L_PARENTHESIS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, R_PARENTHESIS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, L_BRACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, R_BRACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PERIOD, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ELLIPSIS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, AMP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, AMP_AMP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, AMP_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, STAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, STAR_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PLUS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PLUS_PLUS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PLUS_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, MINUS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ARROW, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, MINUS_MINUS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, MINUS_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, TILDE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, EXCLAIM, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, EXCLAIM_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, SLASH, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, SLASH_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PERCENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PERCENT_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, LESS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, LESS_LESS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, LESS_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, LESS_LESS_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, SPACESHIP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, GREATER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, GREATER_GREATER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, GREATER_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, GREATER_GREATER_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, CARET, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, CARET_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PIPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PIPE_PIPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PIPE_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, QUESTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, COLON, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, SEMI, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, EQUAL_EQUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, COMMA, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, HASH, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, HASH_HASH, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, HASHAT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PERIOD_STAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ARROW_STAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, COLON_COLON, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, AT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, LESS_LESS_LESS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, GREATER_GREATER_GREATER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, CARETCARET, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_AUTO, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_BREAK, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CASE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CHARACTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CONST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CONTINUE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_DEFAULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_DO, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_DOUBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_ELSE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_ENUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_EXTERN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_FLOAT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_FOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_GOTO, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_INT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__EXT_INT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__BIT_INT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_LONG, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_REGISTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_RETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_SHORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_SIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_SIZEOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_STATIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_STRUCT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_SWITCH, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TYPEDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_UNION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_UNSIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_VOID, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_VOLATILE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_WHILE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__ALIGNAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__ALIGNOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__ATOMIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__BOOLEAN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__COMPLEX, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__GENERIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__IMAGINARY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__NORETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__STATIC_ASSERT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__THREAD_LOCAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FUNC__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___OBJC_YES, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___OBJC_NO, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_ASSEMBLY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_BOOLEAN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CATCH, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CONST_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_DELETE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_DYNAMIC_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_EXPLICIT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_EXPORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_FALSE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_FRIEND, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_MUTABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_NAMESPACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_NEW, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_OPERATOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_PRIVATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_PROTECTED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_PUBLIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_REINTERPRET_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_STATIC_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TEMPLATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_THIS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_THROW, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TRUE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TRY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TYPENAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TYPEID, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_USING, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_VIRTUAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_WCHAR_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_RESTRICT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_INLINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_ALIGNAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_ALIGNOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CHAR16_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CHAR32_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CONSTEXPR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_DECLTYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_NOEXCEPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_NULLPTR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_STATIC_ASSERT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_THREAD_LOCAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CO_AWAIT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CO_RETURN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CO_YIELD, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_MODULE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMPORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CONSTEVAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CONSTINIT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CONCEPT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_REQUIRES, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CHAR8_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__FLOAT16, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TYPEOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TYPEOF_UNQUALIFIED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__ACCUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__FRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__SAT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__DECIMAL32, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__DECIMAL64, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__DECIMAL128, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___NULL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ALIGNOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ATTRIBUTE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_CHOOSE_EXPRESSION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_OFFSETOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_FILE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_FILENAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_FUNCTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_FUNCSIG, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_LINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_COLUMN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_SOURCE_TOKEN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_TYPES_COMPATIBLE_P, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_VA_ARGUMENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___EXTENSION__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FLOAT128, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IBM128, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IMAG, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___INT128, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___LABEL__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___THREAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FUNCTION__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___PRETTYFUNCTION__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___AUTO_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FUNCDNAME__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FUNCSIG__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_LFUNCTION__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_LFUNCSIG__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_INTERFACE_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_SEALED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_DESTRUCTIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_TRIVIALLY_DESTRUCTIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_NOTHROW_DESTRUCTIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_NOTHROW_ASSIGNABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_CONSTRUCTIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_NOTHROW_CONSTRUCTIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_ASSIGNABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_NOTHROW_MOVE_ASSIGN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_TRIVIAL_MOVE_ASSIGN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_TRIVIAL_MOVE_CONSTRUCTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_NOTHROW_ASSIGN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_NOTHROW_COPY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_NOTHROW_CONSTRUCTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_TRIVIAL_ASSIGN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_TRIVIAL_COPY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_TRIVIAL_CONSTRUCTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_TRIVIAL_DESTRUCTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_VIRTUAL_DESTRUCTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_ABSTRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_AGGREGATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_BASE_OF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_CONVERTIBLE_TO, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_EMPTY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_ENUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_FINAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_LITERAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_POD, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_POLYMORPHIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_STANDARD_LAYOUT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_TRIVIAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_TRIVIALLY_ASSIGNABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_TRIVIALLY_CONSTRUCTIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_TRIVIALLY_COPYABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_UNION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___HAS_UNIQUE_OBJECT_REPRESENTATIONS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ADD_LVALUE_REFERENCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ADD_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ADD_RVALUE_REFERENCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___DECAY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___MAKE_SIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___MAKE_UNSIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_ALL_EXTENTS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_CONST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_CV, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_CVREF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_EXTENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_REFERENCE_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_RESTRICT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REMOVE_VOLATILE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___UNDERLYING_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_TRIVIALLY_RELOCATABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_TRIVIALLY_EQUALITY_COMPARABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_BOUNDED_ARRAY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_UNBOUNDED_ARRAY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_NULLPTR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_SCOPED_ENUM, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_REFERENCEABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___CAN_PASS_IN_REGS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REFERENCE_BINDS_TO_TEMPORARY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_LVALUE_EXPRESSION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_RVALUE_EXPRESSION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_ARITHMETIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_FLOATING_POINT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_INTEGRAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_COMPLETE_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_VOID, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_ARRAY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_FUNCTION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_REFERENCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_LVALUE_REFERENCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_RVALUE_REFERENCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_FUNDAMENTAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_OBJECT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_SCALAR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_COMPOUND, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_MEMBER_OBJECT_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_MEMBER_FUNCTION_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_MEMBER_POINTER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_CONST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_VOLATILE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_SIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_UNSIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_SAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IS_CONVERTIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ARRAY_RANK, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ARRAY_EXTENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___PRIVATE_EXTERN__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___MODULE_PRIVATE__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_PTRAUTH_TYPE_DISCRIMINATOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_XNU_TYPE_SIGNATURE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_XNU_TYPE_SUMMARY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_TMO_TYPE_METADATA, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_XNU_TYPES_COMPATIBLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___DECLSPEC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___CDECL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___STDCALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FASTCALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___THISCALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___REGCALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___VECTORCALL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FORCEINLINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___UNALIGNED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___SUPER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___GLOBAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___LOCAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___CONSTANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___PRIVATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___GENERIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___KERNEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___READ_ONLY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___WRITE_ONLY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___READ_WRITE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_ASTYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_VEC_STEP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_1D_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_1D_ARRAY_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_1D_BUFFER_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_ARRAY_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_DEPTH_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_ARRAY_DEPTH_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_MSAA_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_ARRAY_MSAA_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_MSAA_DEPTH_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_2D_ARRAY_MSAA_DEPTH_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_IMAGE_3D_T, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_PIPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_ADDRSPACE_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___NOINLINE__, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_CBUFFER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_TBUFFER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_GROUPSHARED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_OMP_REQUIRED_SIMD_ALIGN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___PASCAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___VECTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___PIXEL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BOOLEAN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BF16, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD_HALF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BRIDGE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BRIDGE_TRANSFER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BRIDGE_RETAINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BRIDGE_RETAIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___COVARIANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___CONTRAVARIANT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___KINDOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__NONNULL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__NULLABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__NULLABLE_RESULT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD__NULL_UNSPECIFIED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FUNCREF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___PTR64, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___PTR32, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___SPTR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___UPTR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___W64, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___UUIDOF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___TRY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___FINALLY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___LEAVE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___INT64, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IF_EXISTS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___IF_NOT_EXISTS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___SINGLE_INHERITANCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___MULTIPLE_INHERITANCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___VIRTUAL_INHERITANCE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___INTERFACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_CONVERTVECTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_BIT_CAST, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_AVAILABLE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___BUILTIN_SYCL_UNIQUE_STABLE_NAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___ARM_STREAMING, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, KEYWORD___UNKNOWN_ANYTYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_CXXSCOPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_TYPENAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_TEMPLATE_ID, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_NON_TYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_NON_TYPE_UNDECLARED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_NON_TYPE_DEPENDENT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_OVERLOAD, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRIMARY_EXPRESSION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_DECLTYPE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_UNUSED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_VIS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_PACK, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_PARSER_CRASH, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_CAPTURED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_DUMP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_MSSTRUCT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_ALIGN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_WEAK, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_WEAKALIAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_REDEFINE_EXTNAME, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_FP_CONTRACT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_FENV_ACCESS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_FENV_ACCESS_MS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_FENV_ROUND, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_FLOAT_CONTROL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_MS_POINTERS_TO_MEMBERS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_MS_VTORDISP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_MS_PRAGMA, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_OPENCL_EXTENSION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_ATTRIBUTE_OPENMP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_OPENMP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_OPENMP_END, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_LOOP_HINT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_FP, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_ATTRIBUTE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_PRAGMA_RISCV, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_MODULE_INCLUDE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_MODULE_BEGIN, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_MODULE_END, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_HEADER_UNIT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, ANNOT_REPL_INPUT_END, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_IF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_IFDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_IFNDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_ELIF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_ELIFDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_ELIFNDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_ELSE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_ENDIF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_DEFINED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_INCLUDE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP___INCLUDE_MACROS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_DEFINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_UNDEF, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_LINE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_ERROR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_PRAGMA, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_IMPORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_INCLUDE_NEXT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_WARNING, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_IDENTIFIER, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_SCCS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_ASSERT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP_UNASSERT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP___PUBLIC_MACRO, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, PP___PRIVATE_MACRO, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_CLASS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_COMPATIBILITY_ALIAS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_DEFINITIONS, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_ENCODE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_OBJC_END, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_IMPLEMENTATION, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_INTERFACE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_PRIVATE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_PROTECTED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_PROTOCOL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_PUBLIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_SELECTOR, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_THROW, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_TRY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_CATCH, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_FINALLY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_SYNCHRONIZED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_AUTORELEASEPOOL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_PROPERTY, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_PACKAGE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_REQUIRED, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_OPTIONAL, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_SYNTHESIZE, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_DYNAMIC, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_IMPORT, unsigned short)
  MX_ENUM_CLASS_ENTRY(TokenKind, OBJC_AT_AVAILABLE, unsigned short)
MX_END_ENUM_CLASS(TokenKind)

MX_BEGIN_ENUM_CLASS(TrailingAllocKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrailingAllocKind, TAK_INHERITS_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrailingAllocKind, TAK_HAS_TAIL_EXPLICIT, unsigned char)
MX_END_ENUM_CLASS(TrailingAllocKind)

MX_BEGIN_ENUM_CLASS(TranslationUnitKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TranslationUnitKind, COMPLETE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TranslationUnitKind, PREFIX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TranslationUnitKind, MODULE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TranslationUnitKind, INCREMENTAL, unsigned char)
MX_END_ENUM_CLASS(TranslationUnitKind)

MX_BEGIN_ENUM_CLASS(TrivialAutoVarInitKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrivialAutoVarInitKind, UNINITIALIZED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrivialAutoVarInitKind, ZERO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TrivialAutoVarInitKind, PATTERN, unsigned char)
MX_END_ENUM_CLASS(TrivialAutoVarInitKind)

MX_BEGIN_ENUM_CLASS(TypeDependence, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, UNEXPANDED_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, INSTANTIATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, DEPENDENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, VARIABLY_MODIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, ERROR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, ALL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeDependence, DEPENDENT_INSTANTIATION, unsigned char)
MX_END_ENUM_CLASS(TypeDependence)

MX_BEGIN_ENUM_CLASS(TypeLocClass, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, ADJUSTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DECAYED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, CONSTANT_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_SIZED_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, INCOMPLETE_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, VARIABLE_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, ATOMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, ATTRIBUTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, BTF_TAG_ATTRIBUTED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, BIT_INT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, BLOCK_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, BUILTIN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, COMPLEX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DECLTYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEDUCED_TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_ADDRESS_SPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_BIT_INT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_SIZED_EXT_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, ELABORATED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, FUNCTION_NO_PROTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, FUNCTION_PROTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, INJECTED_CLASS_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, MACRO_QUALIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, CONSTANT_MATRIX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, DEPENDENT_SIZED_MATRIX, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, OBJ_C_OBJECT_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, OBJ_C_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, OBJ_C_INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, OBJ_C_TYPE_PARAMETER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, PACK_EXPANSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, PARENTHESIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, PIPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, L_VALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, R_VALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, SUBST_TEMPLATE_TYPE_PARM_PACK, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, SUBST_TEMPLATE_TYPE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, RECORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, TEMPLATE_SPECIALIZATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, TEMPLATE_TYPE_PARM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, TYPE_OF_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, TYPE_OF, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, TYPEDEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, UNARY_TRANSFORM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, UNRESOLVED_USING, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, USING, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, EXT_VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeLocClass, QUALIFIED, unsigned char)
MX_END_ENUM_CLASS(TypeLocClass)

MX_BEGIN_ENUM_CLASS(TypeOfKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeOfKind, QUALIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeOfKind, UNQUALIFIED, unsigned char)
MX_END_ENUM_CLASS(TypeOfKind)

MX_BEGIN_ENUM_CLASS(TypeSpecifierSign, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierSign, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierSign, SIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierSign, UNSIGNED, unsigned char)
MX_END_ENUM_CLASS(TypeSpecifierSign)

MX_BEGIN_ENUM_CLASS(TypeSpecifierType, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, VOID, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, CHARACTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, WCHAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, CHAR8, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, CHAR16, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, CHAR32, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, INT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, INT128, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, BITINT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, HALF, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, FLOAT16, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, ACCUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, FRACT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, B_FLOAT16, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, FLOAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, DOUBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, FLOAT128, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IBM128, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, BOOLEAN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, DECIMAL32, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, DECIMAL64, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, DECIMAL128, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, TYPENAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, TYPEOF_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, TYPEOF_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, TYPEOF_UNQUALIFIED_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, TYPEOF_UNQUALIFIED_EXPRESSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, DECLTYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, ADD_LVALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, ADD_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, ADD_RVALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, DECAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, MAKE_SIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, MAKE_UNSIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_ALL_EXTENTS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_CONST, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_CV, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_CVREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_EXTENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_REFERENCE_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_RESTRICT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, REMOVE_VOLATILE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, UNDERLYING_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, DECLTYPE_AUTO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, AUTO_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, UNKNOWN_ANYTYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, ATOMIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_1D_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_1D_ARRAY_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_1D_BUFFER_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_ARRAY_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_DEPTH_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_ARRAY_DEPTH_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_MSAA_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_ARRAY_MSAA_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_MSAA_DEPTH_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_2D_ARRAY_MSAA_DEPTH_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, IMAGE_3D_T, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierType, ERROR, unsigned char)
MX_END_ENUM_CLASS(TypeSpecifierType)

MX_BEGIN_ENUM_CLASS(TypeSpecifierWidth, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierWidth, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierWidth, SHORT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierWidth, LONG, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifierWidth, LONG_LONG, unsigned char)
MX_END_ENUM_CLASS(TypeSpecifierWidth)

MX_BEGIN_ENUM_CLASS(TypeSpecifiersPipe, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifiersPipe, UNSPECIFIED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeSpecifiersPipe, PIPE, unsigned char)
MX_END_ENUM_CLASS(TypeSpecifiersPipe)

MX_BEGIN_ENUM_CLASS(TypeTrait, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_INTERFACE_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_SEALED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_DESTRUCTIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_TRIVIALLY_DESTRUCTIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_NOTHROW_DESTRUCTIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_NOTHROW_MOVE_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_TRIVIAL_MOVE_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_TRIVIAL_MOVE_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_NOTHROW_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_NOTHROW_COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_NOTHROW_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_TRIVIAL_ASSIGN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_TRIVIAL_COPY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_TRIVIAL_DEFAULT_CONSTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_TRIVIAL_DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_VIRTUAL_DESTRUCTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_ABSTRACT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_AGGREGATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_EMPTY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_FINAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_POD, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_POLYMORPHIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_STANDARD_LAYOUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_TRIVIAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_TRIVIALLY_COPYABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, HAS_UNIQUE_OBJECT_REPRESENTATIONS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_TRIVIALLY_RELOCATABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_TRIVIALLY_EQUALITY_COMPARABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_BOUNDED_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_UNBOUNDED_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_NULL_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_SCOPED_ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_REFERENCEABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, CAN_PASS_IN_REGS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_ARITHMETIC, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_FLOATING_POINT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_INTEGRAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_COMPLETE_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_VOID, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_LVALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_RVALUE_REFERENCE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_FUNDAMENTAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_OBJECT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_SCALAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_COMPOUND, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_MEMBER_OBJECT_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_MEMBER_FUNCTION_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_CONST, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_VOLATILE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_SIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_UNSIGNED, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, TYPE_COMPATIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_NOTHROW_ASSIGNABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_ASSIGNABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_BASE_OF, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_CONVERTIBLE_TO, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_TRIVIALLY_ASSIGNABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, REFERENCE_BINDS_TO_TEMPORARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_SAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_CONVERTIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, XNU_TYPE_COMPATIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_CONSTRUCTIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_NOTHROW_CONSTRUCTIBLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TypeTrait, IS_TRIVIALLY_CONSTRUCTIBLE, unsigned char)
MX_END_ENUM_CLASS(TypeTrait)

MX_BEGIN_ENUM_CLASS(UnaryExprOrTypeTrait, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, SIZE_OF, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, ALIGN_OF, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, PREFERRED_ALIGN_OF, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, POINTER_AUTH_TYPE_DISCRIMINATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, XNU_TYPE_SIGNATURE, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, XNU_TYPE_SUMMARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, TMO_TYPE_GET_METADATA, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, VEC_STEP, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryExprOrTypeTrait, OPEN_MP_REQUIRED_SIMD_ALIGN, unsigned char)
MX_END_ENUM_CLASS(UnaryExprOrTypeTrait)

MX_BEGIN_ENUM_CLASS(UnaryOperatorKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, POST_INCREMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, POST_DECREMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, PRE_INCREMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, PRE_DECREMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, ADDRESS_OF, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, DEREF, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, PLUS, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, MINUS, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, NOT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, L_NOT, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, REAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, IMAG, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, EXTENSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(UnaryOperatorKind, COAWAIT, unsigned char)
MX_END_ENUM_CLASS(UnaryOperatorKind)

MX_BEGIN_ENUM_CLASS(APValueKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, INDETERMINATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, INT, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, FLOAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, FIXED_POINT, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, COMPLEX_INT, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, COMPLEX_FLOAT, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, L_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, VECTOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, ARRAY, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, MEMBER_POINTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(APValueKind, ADDRESS_LABEL_DIFF, unsigned char)
MX_END_ENUM_CLASS(APValueKind)

MX_BEGIN_ENUM_CLASS(VectorLibrary, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, NO_LIBRARY, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, ACCELERATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, LIBMVEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, MASSV, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, SVML, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, SLEEF, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, DARWIN_LIBSYSTEM_M, unsigned char)
  MX_ENUM_CLASS_ENTRY(VectorLibrary, ARM_PL, unsigned char)
MX_END_ENUM_CLASS(VectorLibrary)

MX_BEGIN_ENUM_CLASS(Visibility, unsigned char)
  MX_ENUM_CLASS_ENTRY(Visibility, HIDDEN_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(Visibility, PROTECTED_VISIBILITY, unsigned char)
  MX_ENUM_CLASS_ENTRY(Visibility, DEFAULT_VISIBILITY, unsigned char)
MX_END_ENUM_CLASS(Visibility)

MX_BEGIN_ENUM_CLASS(AttributeSyntax, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, GNU, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, CXX11, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, C2X, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, DECLSPEC, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, MICROSOFT, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, KEYWORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, PRAGMA, unsigned char)
  MX_ENUM_CLASS_ENTRY(AttributeSyntax, CONTEXT_SENSITIVE_KEYWORD, unsigned char)
MX_END_ENUM_CLASS(AttributeSyntax)

MX_BEGIN_ENUM_CLASS(DeclCategory, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, LOCAL_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, GLOBAL_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, PARAMETER_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, INSTANCE_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, INSTANCE_MEMBER, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, CLASS_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, CLASS_MEMBER, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, STRUCTURE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, CONCEPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, ENUMERATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, ENUMERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, NAMESPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, TYPE_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, TEMPLATE_TYPE_PARAMETER, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, TEMPLATE_VALUE_PARAMETER, unsigned char)
  MX_ENUM_CLASS_ENTRY(DeclCategory, LABEL, unsigned char)
MX_END_ENUM_CLASS(DeclCategory)

MX_BEGIN_ENUM_CLASS(MacroKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, SUBSTITUTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, EXPANSION, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, PARAMETER, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, OTHER_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, IF_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, IF_DEFINED_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, IF_NOT_DEFINED_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, ELSE_IF_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, ELSE_IF_DEFINED_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, ELSE_IF_NOT_DEFINED_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, ELSE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, END_IF_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, DEFINE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, UNDEFINE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, PRAGMA_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, INCLUDE_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, INCLUDE_NEXT_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, INCLUDE_MACROS_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, IMPORT_DIRECTIVE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, PARAMETER_SUBSTITUTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, STRINGIFY, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, CONCATENATE, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, VA_OPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(MacroKind, VA_OPT_ARGUMENT, unsigned char)
MX_END_ENUM_CLASS(MacroKind)

MX_BEGIN_ENUM_CLASS(PathKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(PathKind, UNIX, unsigned char)
  MX_ENUM_CLASS_ENTRY(PathKind, WINDOWS, unsigned char)
MX_END_ENUM_CLASS(PathKind)

MX_BEGIN_ENUM_CLASS(FileType, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, NONE, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, NOT_FOUND, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, REGULAR, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, DIRECTORY, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, SYMBOLIC_LINK, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, BLOCK, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, CHARACTER, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, FIRST_IN_FIRST_OUT, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, SOCKET, unsigned char)
  MX_ENUM_CLASS_ENTRY(FileType, KNKNOWN, unsigned char)
MX_END_ENUM_CLASS(FileType)

MX_BEGIN_ENUM_CLASS(CompilerName, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilerName, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilerName, CLANG, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilerName, APPLE_CLANG, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilerName, CLANG_CL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilerName, CL, unsigned char)
  MX_ENUM_CLASS_ENTRY(CompilerName, GNU, unsigned char)
MX_END_ENUM_CLASS(CompilerName)

MX_BEGIN_ENUM_CLASS(IncludePathLocation, unsigned char)
  MX_ENUM_CLASS_ENTRY(IncludePathLocation, ABSOLUTE, unsigned char)
  MX_ENUM_CLASS_ENTRY(IncludePathLocation, SYSROOT_RELATIVE, unsigned char)
MX_END_ENUM_CLASS(IncludePathLocation)

MX_BEGIN_ENUM_CLASS(TargetLanguage, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetLanguage, C, unsigned char)
  MX_ENUM_CLASS_ENTRY(TargetLanguage, CXX, unsigned char)
MX_END_ENUM_CLASS(TargetLanguage)

MX_BEGIN_ENUM_CLASS(PseudoKind, unsigned char)
  MX_ENUM_CLASS_ENTRY(PseudoKind, TEMPLATE_ARGUMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(PseudoKind, TEMPLATE_PARAMETER_LIST, unsigned char)
  MX_ENUM_CLASS_ENTRY(PseudoKind, CXX_BASE_SPECIFIER, unsigned char)
  MX_ENUM_CLASS_ENTRY(PseudoKind, DESIGNATOR, unsigned char)
MX_END_ENUM_CLASS(PseudoKind)

MX_BEGIN_ENUM_CLASS(TokenCategory, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, UNKNOWN, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, IDENTIFIER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, MACRO_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, MACRO_PARAMETER_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, MACRO_DIRECTIVE_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, KEYWORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, OBJECTIVE_C_KEYWORD, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, BUILTIN_TYPE_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, PUNCTUATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, LITERAL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, COMMENT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, LOCAL_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, GLOBAL_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, PARAMETER_VARIABLE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, FUNCTION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, INSTANCE_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, INSTANCE_MEMBER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, CLASS_METHOD, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, CLASS_MEMBER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, THIS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, CLASS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, STRUCT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, UNION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, CONCEPT, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, INTERFACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, ENUM, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, ENUMERATOR, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, NAMESPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, TYPE_ALIAS, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, TEMPLATE_PARAMETER_TYPE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, TEMPLATE_PARAMETER_VALUE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, LABEL, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, WHITESPACE, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, FILE_NAME, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, LINE_NUMBER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, COLUMN_NUMBER, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, INFORMATION, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, WARNING, unsigned char)
  MX_ENUM_CLASS_ENTRY(TokenCategory, ERROR, unsigned char)
MX_END_ENUM_CLASS(TokenCategory)

#ifndef MX_ENTER_VISIT_Designator
#  define MX_ENTER_VISIT_Designator
#endif
#ifndef MX_EXIT_VISIT_Designator
#  define MX_EXIT_VISIT_Designator
#endif

MX_BEGIN_VISIT_PSEUDO(Designator)
  MX_ENTER_VISIT_Designator
  MX_VISIT_DECL_LINK(Designator, parent_declaration, 0)
  MX_VISIT_STMT_LINK(Designator, parent_statement, 1)
  MX_VISIT_BOOL(Designator, is_field_designator, 2, MX_APPLY_METHOD, IsFieldDesignator, bool, NthDesignator)
  MX_VISIT_BOOL(Designator, is_array_designator, 3, MX_APPLY_METHOD, IsArrayDesignator, bool, NthDesignator)
  MX_VISIT_BOOL(Designator, is_array_range_designator, 4, MX_APPLY_METHOD, IsArrayRangeDesignator, bool, NthDesignator)
  MX_VISIT_OPTIONAL_ENTITY(Designator, field, 5, MX_APPLY_METHOD, Field, FieldDecl, NthDesignator)
  MX_VISIT_TOKEN_RANGE(Designator, tokens, 6, 7, NthDesignator)
  MX_VISIT_ENTITY(Designator, dot_token, 8, MX_APPLY_METHOD, DotToken, Token, NthDesignator)
  MX_VISIT_ENTITY(Designator, field_token, 9, MX_APPLY_METHOD, FieldToken, Token, NthDesignator)
  MX_VISIT_ENTITY(Designator, left_bracket_token, 10, MX_APPLY_METHOD, LeftBracketToken, Token, NthDesignator)
  MX_VISIT_ENTITY(Designator, right_bracket_token, 11, MX_APPLY_METHOD, RightBracketToken, Token, NthDesignator)
  MX_VISIT_ENTITY(Designator, ellipsis_token, 12, MX_APPLY_METHOD, EllipsisToken, Token, NthDesignator)
  MX_EXIT_VISIT_Designator
MX_END_VISIT_PSEUDO(Designator)

#ifndef MX_ENTER_VISIT_CXXBaseSpecifier
#  define MX_ENTER_VISIT_CXXBaseSpecifier
#endif
#ifndef MX_EXIT_VISIT_CXXBaseSpecifier
#  define MX_EXIT_VISIT_CXXBaseSpecifier
#endif

MX_BEGIN_VISIT_PSEUDO(CXXBaseSpecifier)
  MX_ENTER_VISIT_CXXBaseSpecifier
  MX_VISIT_DECL_LINK(CXXBaseSpecifier, parent_declaration, 0)
  MX_VISIT_TOKEN_RANGE(CXXBaseSpecifier, tokens, 1, 2, NthCXXBaseSpecifier)
  MX_VISIT_ENTITY(CXXBaseSpecifier, base_type_token, 3, MX_APPLY_METHOD, BaseTypeToken, Token, NthCXXBaseSpecifier)
  MX_VISIT_BOOL(CXXBaseSpecifier, is_virtual, 4, MX_APPLY_METHOD, IsVirtual, bool, NthCXXBaseSpecifier)
  MX_VISIT_ENUM(CXXBaseSpecifier, base_kind, 5, MX_APPLY_METHOD, BaseKind, TagTypeKind, NthCXXBaseSpecifier)
  MX_VISIT_BOOL(CXXBaseSpecifier, is_pack_expansion, 6, MX_APPLY_METHOD, IsPackExpansion, bool, NthCXXBaseSpecifier)
  MX_VISIT_BOOL(CXXBaseSpecifier, constructors_are_inherited, 7, MX_APPLY_METHOD, ConstructorsAreInherited, bool, NthCXXBaseSpecifier)
  MX_VISIT_ENTITY(CXXBaseSpecifier, ellipsis_token, 8, MX_APPLY_METHOD, EllipsisToken, Token, NthCXXBaseSpecifier)
  MX_VISIT_ENUM(CXXBaseSpecifier, semantic_access_specifier, 9, MX_APPLY_METHOD, SemanticAccessSpecifier, AccessSpecifier, NthCXXBaseSpecifier)
  MX_VISIT_ENUM(CXXBaseSpecifier, lexical_access_specifier, 10, MX_APPLY_METHOD, LexicalAccessSpecifier, AccessSpecifier, NthCXXBaseSpecifier)
  MX_VISIT_ENTITY(CXXBaseSpecifier, base_type, 11, MX_APPLY_METHOD, BaseType, Type, NthCXXBaseSpecifier)
  MX_EXIT_VISIT_CXXBaseSpecifier
MX_END_VISIT_PSEUDO(CXXBaseSpecifier)

#ifndef MX_ENTER_VISIT_TemplateParameterList
#  define MX_ENTER_VISIT_TemplateParameterList
#endif
#ifndef MX_EXIT_VISIT_TemplateParameterList
#  define MX_EXIT_VISIT_TemplateParameterList
#endif

MX_BEGIN_VISIT_PSEUDO(TemplateParameterList)
  MX_ENTER_VISIT_TemplateParameterList
  MX_VISIT_INT(TemplateParameterList, depth, 0, MX_APPLY_METHOD, Depth, uint32_t, NthTemplateParameterList)
  MX_VISIT_BOOL(TemplateParameterList, has_unexpanded_parameter_pack, 1, MX_APPLY_METHOD, HasUnexpandedParameterPack, bool, NthTemplateParameterList)
  MX_VISIT_BOOL(TemplateParameterList, has_parameter_pack, 2, MX_APPLY_METHOD, HasParameterPack, bool, NthTemplateParameterList)
  MX_VISIT_OPTIONAL_ENTITY(TemplateParameterList, requires_clause, 3, MX_APPLY_METHOD, RequiresClause, Expr, NthTemplateParameterList)
  MX_VISIT_ENTITY(TemplateParameterList, template_keyword_token, 4, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthTemplateParameterList)
  MX_VISIT_ENTITY(TemplateParameterList, left_angle_token, 5, MX_APPLY_METHOD, LeftAngleToken, Token, NthTemplateParameterList)
  MX_VISIT_ENTITY(TemplateParameterList, right_angle_token, 6, MX_APPLY_METHOD, RightAngleToken, Token, NthTemplateParameterList)
  MX_VISIT_TOKEN_RANGE(TemplateParameterList, tokens, 7, 8, NthTemplateParameterList)
  MX_VISIT_ENTITY_LIST(TemplateParameterList, parameters, 9, MX_APPLY_METHOD, Parameters, NamedDecl, NthTemplateParameterList)
  MX_EXIT_VISIT_TemplateParameterList
MX_END_VISIT_PSEUDO(TemplateParameterList)

#ifndef MX_ENTER_VISIT_TemplateArgument
#  define MX_ENTER_VISIT_TemplateArgument
#endif
#ifndef MX_EXIT_VISIT_TemplateArgument
#  define MX_EXIT_VISIT_TemplateArgument
#endif

MX_BEGIN_VISIT_PSEUDO(TemplateArgument)
  MX_ENTER_VISIT_TemplateArgument
  MX_VISIT_DECL_LINK(TemplateArgument, parent_declaration, 0)
  MX_VISIT_STMT_LINK(TemplateArgument, parent_statement, 1)
  MX_VISIT_ENUM(TemplateArgument, kind, 2, MX_APPLY_METHOD, Kind, TemplateArgumentKind, NthTemplateArgument)
  MX_VISIT_BOOL(TemplateArgument, is_empty, 3, MX_APPLY_METHOD, IsEmpty, bool, NthTemplateArgument)
  MX_VISIT_BOOL(TemplateArgument, is_dependent, 4, MX_APPLY_METHOD, IsDependent, bool, NthTemplateArgument)
  MX_VISIT_BOOL(TemplateArgument, is_instantiation_dependent, 5, MX_APPLY_METHOD, IsInstantiationDependent, bool, NthTemplateArgument)
  MX_VISIT_BOOL(TemplateArgument, contains_unexpanded_parameter_pack, 6, MX_APPLY_METHOD, ContainsUnexpandedParameterPack, bool, NthTemplateArgument)
  MX_VISIT_BOOL(TemplateArgument, is_pack_expansion, 7, MX_APPLY_METHOD, IsPackExpansion, bool, NthTemplateArgument)
  MX_VISIT_OPTIONAL_ENTITY(TemplateArgument, as_declaration, 8, MX_APPLY_METHOD, AsDeclaration, ValueDecl, NthTemplateArgument)
  MX_VISIT_OPTIONAL_ENTITY(TemplateArgument, as_type, 9, MX_APPLY_METHOD, AsType, Type, NthTemplateArgument)
  MX_VISIT_OPTIONAL_ENTITY(TemplateArgument, parameter_type_for_declaration, 10, MX_APPLY_METHOD, ParameterTypeForDeclaration, Type, NthTemplateArgument)
  MX_VISIT_OPTIONAL_ENTITY(TemplateArgument, null_pointer_type, 11, MX_APPLY_METHOD, NullPointerType, Type, NthTemplateArgument)
  MX_VISIT_OPTIONAL_ENTITY_LIST(TemplateArgument, pack_elements, 12, MX_APPLY_METHOD, PackElements, TemplateArgument, NthTemplateArgument)
  MX_EXIT_VISIT_TemplateArgument
MX_END_VISIT_PSEUDO(TemplateArgument)

#ifndef MX_ENTER_VISIT_Macro
#  define MX_ENTER_VISIT_Macro
#endif
#ifndef MX_EXIT_VISIT_Macro
#  define MX_EXIT_VISIT_Macro
#endif

MX_BEGIN_VISIT_ABSTRACT_MACRO(Macro)
  MX_ENTER_VISIT_Macro
  MX_VISIT_ENUM(Macro, kind, 0, MX_APPLY_METHOD, Kind, MacroKind, NthMacro)
  MX_VISIT_OPTIONAL_ENTITY(Macro, parent, 1, MX_APPLY_METHOD, Parent, Macro, NthMacro)
  MX_VISIT_MACRO_RANGE(Macro, children, 2, NthMacro)
  MX_EXIT_VISIT_Macro
MX_END_VISIT_MACRO(Macro)

#ifndef MX_ENTER_VISIT_MacroVAOptArgument
#  define MX_ENTER_VISIT_MacroVAOptArgument MX_ENTER_VISIT_Macro
#endif
#ifndef MX_EXIT_VISIT_MacroVAOptArgument
#  define MX_EXIT_VISIT_MacroVAOptArgument MX_EXIT_VISIT_Macro
#endif

MX_BEGIN_VISIT_MACRO(MacroVAOptArgument)
  MX_ENTER_VISIT_MacroVAOptArgument
  MX_VISIT_BASE(MacroVAOptArgument, Macro)
  MX_EXIT_VISIT_MacroVAOptArgument
MX_END_VISIT_MACRO(MacroVAOptArgument)

#ifndef MX_ENTER_VISIT_MacroVAOpt
#  define MX_ENTER_VISIT_MacroVAOpt MX_ENTER_VISIT_Macro
#endif
#ifndef MX_EXIT_VISIT_MacroVAOpt
#  define MX_EXIT_VISIT_MacroVAOpt MX_EXIT_VISIT_Macro
#endif

MX_BEGIN_VISIT_MACRO(MacroVAOpt)
  MX_ENTER_VISIT_MacroVAOpt
  MX_VISIT_BASE(MacroVAOpt, Macro)
  MX_VISIT_BOOL(MacroVAOpt, contents_are_elided, 3, MX_APPLY_METHOD, ContentsAreElided, bool, NthMacro)
  MX_EXIT_VISIT_MacroVAOpt
MX_END_VISIT_MACRO(MacroVAOpt)

#ifndef MX_ENTER_VISIT_MacroSubstitution
#  define MX_ENTER_VISIT_MacroSubstitution MX_ENTER_VISIT_Macro
#endif
#ifndef MX_EXIT_VISIT_MacroSubstitution
#  define MX_EXIT_VISIT_MacroSubstitution MX_EXIT_VISIT_Macro
#endif

MX_BEGIN_VISIT_MACRO(MacroSubstitution)
  MX_ENTER_VISIT_MacroSubstitution
  MX_VISIT_BASE(MacroSubstitution, Macro)
  MX_VISIT_MACRO_RANGE(MacroSubstitution, replacement_children, 4, NthMacro)
  MX_VISIT_ENTITY(MacroSubstitution, first_fully_substituted_token, 5, MX_APPLY_METHOD, FirstFullySubstitutedToken, Token, NthMacro)
  MX_VISIT_ENTITY(MacroSubstitution, last_fully_substituted_token, 6, MX_APPLY_METHOD, LastFullySubstitutedToken, Token, NthMacro)
  MX_VISIT_ENTITY(MacroSubstitution, name_or_operator, 7, MX_APPLY_METHOD, NameOrOperator, Token, NthMacro)
  MX_EXIT_VISIT_MacroSubstitution
MX_END_VISIT_MACRO(MacroSubstitution)

#ifndef MX_ENTER_VISIT_MacroConcatenate
#  define MX_ENTER_VISIT_MacroConcatenate MX_ENTER_VISIT_MacroSubstitution
#endif
#ifndef MX_EXIT_VISIT_MacroConcatenate
#  define MX_EXIT_VISIT_MacroConcatenate MX_EXIT_VISIT_MacroSubstitution
#endif

MX_BEGIN_VISIT_MACRO(MacroConcatenate)
  MX_ENTER_VISIT_MacroConcatenate
  MX_VISIT_BASE(MacroConcatenate, MacroSubstitution)
  MX_VISIT_ENTITY(MacroConcatenate, pasted_token, 8, MX_APPLY_METHOD, PastedToken, Token, NthMacro)
  MX_EXIT_VISIT_MacroConcatenate
MX_END_VISIT_MACRO(MacroConcatenate)

#ifndef MX_ENTER_VISIT_MacroStringify
#  define MX_ENTER_VISIT_MacroStringify MX_ENTER_VISIT_MacroSubstitution
#endif
#ifndef MX_EXIT_VISIT_MacroStringify
#  define MX_EXIT_VISIT_MacroStringify MX_EXIT_VISIT_MacroSubstitution
#endif

MX_BEGIN_VISIT_MACRO(MacroStringify)
  MX_ENTER_VISIT_MacroStringify
  MX_VISIT_BASE(MacroStringify, MacroSubstitution)
  MX_VISIT_ENTITY(MacroStringify, stringified_token, 8, MX_APPLY_METHOD, StringifiedToken, Token, NthMacro)
  MX_EXIT_VISIT_MacroStringify
MX_END_VISIT_MACRO(MacroStringify)

#ifndef MX_ENTER_VISIT_MacroExpansion
#  define MX_ENTER_VISIT_MacroExpansion MX_ENTER_VISIT_MacroSubstitution
#endif
#ifndef MX_EXIT_VISIT_MacroExpansion
#  define MX_EXIT_VISIT_MacroExpansion MX_EXIT_VISIT_MacroSubstitution
#endif

MX_BEGIN_VISIT_MACRO(MacroExpansion)
  MX_ENTER_VISIT_MacroExpansion
  MX_VISIT_BASE(MacroExpansion, MacroSubstitution)
  MX_VISIT_MACRO_RANGE(MacroExpansion, intermediate_children, 9, NthMacro)
  MX_VISIT_OPTIONAL_ENTITY(MacroExpansion, definition, 8, MX_APPLY_METHOD, Definition, DefineMacroDirective, NthMacro)
  MX_VISIT_ENTITY_LIST(MacroExpansion, arguments, 10, MX_APPLY_METHOD, Arguments, MacroArgument, NthMacro)
  MX_EXIT_VISIT_MacroExpansion
MX_END_VISIT_MACRO(MacroExpansion)

#ifndef MX_ENTER_VISIT_MacroParameterSubstitution
#  define MX_ENTER_VISIT_MacroParameterSubstitution MX_ENTER_VISIT_MacroSubstitution
#endif
#ifndef MX_EXIT_VISIT_MacroParameterSubstitution
#  define MX_EXIT_VISIT_MacroParameterSubstitution MX_EXIT_VISIT_MacroSubstitution
#endif

MX_BEGIN_VISIT_MACRO(MacroParameterSubstitution)
  MX_ENTER_VISIT_MacroParameterSubstitution
  MX_VISIT_BASE(MacroParameterSubstitution, MacroSubstitution)
  MX_VISIT_ENTITY(MacroParameterSubstitution, parameter, 8, MX_APPLY_METHOD, Parameter, MacroParameter, NthMacro)
  MX_VISIT_ENTITY(MacroParameterSubstitution, parameter_use, 11, MX_APPLY_METHOD, ParameterUse, Token, NthMacro)
  MX_EXIT_VISIT_MacroParameterSubstitution
MX_END_VISIT_MACRO(MacroParameterSubstitution)

#ifndef MX_ENTER_VISIT_MacroArgument
#  define MX_ENTER_VISIT_MacroArgument MX_ENTER_VISIT_Macro
#endif
#ifndef MX_EXIT_VISIT_MacroArgument
#  define MX_EXIT_VISIT_MacroArgument MX_EXIT_VISIT_Macro
#endif

MX_BEGIN_VISIT_MACRO(MacroArgument)
  MX_ENTER_VISIT_MacroArgument
  MX_VISIT_BASE(MacroArgument, Macro)
  MX_VISIT_BOOL(MacroArgument, is_variadic, 3, MX_APPLY_METHOD, IsVariadic, bool, NthMacro)
  MX_VISIT_INT(MacroArgument, index, 12, MX_APPLY_METHOD, Index, uint32_t, NthMacro)
  MX_EXIT_VISIT_MacroArgument
MX_END_VISIT_MACRO(MacroArgument)

#ifndef MX_ENTER_VISIT_MacroParameter
#  define MX_ENTER_VISIT_MacroParameter MX_ENTER_VISIT_Macro
#endif
#ifndef MX_EXIT_VISIT_MacroParameter
#  define MX_EXIT_VISIT_MacroParameter MX_EXIT_VISIT_Macro
#endif

MX_BEGIN_VISIT_MACRO(MacroParameter)
  MX_ENTER_VISIT_MacroParameter
  MX_VISIT_BASE(MacroParameter, Macro)
  MX_VISIT_ENTITY(MacroParameter, variadic_dots, 5, MX_APPLY_METHOD, VariadicDots, Token, NthMacro)
  MX_VISIT_ENTITY(MacroParameter, name, 6, MX_APPLY_METHOD, Name, Token, NthMacro)
  MX_VISIT_INT(MacroParameter, index, 12, MX_APPLY_METHOD, Index, uint32_t, NthMacro)
  MX_EXIT_VISIT_MacroParameter
MX_END_VISIT_MACRO(MacroParameter)

#ifndef MX_ENTER_VISIT_MacroDirective
#  define MX_ENTER_VISIT_MacroDirective MX_ENTER_VISIT_Macro
#endif
#ifndef MX_EXIT_VISIT_MacroDirective
#  define MX_EXIT_VISIT_MacroDirective MX_EXIT_VISIT_Macro
#endif

MX_BEGIN_VISIT_ABSTRACT_MACRO(MacroDirective)
  MX_ENTER_VISIT_MacroDirective
  MX_VISIT_BASE(MacroDirective, Macro)
  MX_VISIT_ENTITY(MacroDirective, hash, 5, MX_APPLY_METHOD, Hash, Token, NthMacro)
  MX_VISIT_ENTITY(MacroDirective, directive_name, 6, MX_APPLY_METHOD, DirectiveName, Token, NthMacro)
  MX_EXIT_VISIT_MacroDirective
MX_END_VISIT_MACRO(MacroDirective)

#ifndef MX_ENTER_VISIT_DefineMacroDirective
#  define MX_ENTER_VISIT_DefineMacroDirective MX_ENTER_VISIT_MacroDirective
#endif
#ifndef MX_EXIT_VISIT_DefineMacroDirective
#  define MX_EXIT_VISIT_DefineMacroDirective MX_EXIT_VISIT_MacroDirective
#endif

MX_BEGIN_VISIT_MACRO(DefineMacroDirective)
  MX_ENTER_VISIT_DefineMacroDirective
  MX_VISIT_BASE(DefineMacroDirective, MacroDirective)
  MX_VISIT_ENTITY(DefineMacroDirective, name, 7, MX_APPLY_METHOD, Name, Token, NthMacro)
  MX_VISIT_MACRO_RANGE(DefineMacroDirective, body, 4, NthMacro)
  MX_VISIT_BOOL(DefineMacroDirective, is_variadic, 3, MX_APPLY_METHOD, IsVariadic, bool, NthMacro)
  MX_VISIT_BOOL(DefineMacroDirective, is_function_like, 13, MX_APPLY_METHOD, IsFunctionLike, bool, NthMacro)
  MX_VISIT_MACRO_RANGE(DefineMacroDirective, parameters, 9, NthMacro)
  MX_EXIT_VISIT_DefineMacroDirective
MX_END_VISIT_MACRO(DefineMacroDirective)

#ifndef MX_ENTER_VISIT_PragmaMacroDirective
#  define MX_ENTER_VISIT_PragmaMacroDirective MX_ENTER_VISIT_MacroDirective
#endif
#ifndef MX_EXIT_VISIT_PragmaMacroDirective
#  define MX_EXIT_VISIT_PragmaMacroDirective MX_EXIT_VISIT_MacroDirective
#endif

MX_BEGIN_VISIT_MACRO(PragmaMacroDirective)
  MX_ENTER_VISIT_PragmaMacroDirective
  MX_VISIT_BASE(PragmaMacroDirective, MacroDirective)
  MX_EXIT_VISIT_PragmaMacroDirective
MX_END_VISIT_MACRO(PragmaMacroDirective)

#ifndef MX_ENTER_VISIT_UndefineMacroDirective
#  define MX_ENTER_VISIT_UndefineMacroDirective MX_ENTER_VISIT_MacroDirective
#endif
#ifndef MX_EXIT_VISIT_UndefineMacroDirective
#  define MX_EXIT_VISIT_UndefineMacroDirective MX_EXIT_VISIT_MacroDirective
#endif

MX_BEGIN_VISIT_MACRO(UndefineMacroDirective)
  MX_ENTER_VISIT_UndefineMacroDirective
  MX_VISIT_BASE(UndefineMacroDirective, MacroDirective)
  MX_EXIT_VISIT_UndefineMacroDirective
MX_END_VISIT_MACRO(UndefineMacroDirective)

#ifndef MX_ENTER_VISIT_OtherMacroDirective
#  define MX_ENTER_VISIT_OtherMacroDirective MX_ENTER_VISIT_MacroDirective
#endif
#ifndef MX_EXIT_VISIT_OtherMacroDirective
#  define MX_EXIT_VISIT_OtherMacroDirective MX_EXIT_VISIT_MacroDirective
#endif

MX_BEGIN_VISIT_MACRO(OtherMacroDirective)
  MX_ENTER_VISIT_OtherMacroDirective
  MX_VISIT_BASE(OtherMacroDirective, MacroDirective)
  MX_EXIT_VISIT_OtherMacroDirective
MX_END_VISIT_MACRO(OtherMacroDirective)

#ifndef MX_ENTER_VISIT_ConditionalMacroDirective
#  define MX_ENTER_VISIT_ConditionalMacroDirective MX_ENTER_VISIT_MacroDirective
#endif
#ifndef MX_EXIT_VISIT_ConditionalMacroDirective
#  define MX_EXIT_VISIT_ConditionalMacroDirective MX_EXIT_VISIT_MacroDirective
#endif

MX_BEGIN_VISIT_ABSTRACT_MACRO(ConditionalMacroDirective)
  MX_ENTER_VISIT_ConditionalMacroDirective
  MX_VISIT_BASE(ConditionalMacroDirective, MacroDirective)
  MX_EXIT_VISIT_ConditionalMacroDirective
MX_END_VISIT_MACRO(ConditionalMacroDirective)

#ifndef MX_ENTER_VISIT_EndIfMacroDirective
#  define MX_ENTER_VISIT_EndIfMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_EndIfMacroDirective
#  define MX_EXIT_VISIT_EndIfMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(EndIfMacroDirective)
  MX_ENTER_VISIT_EndIfMacroDirective
  MX_VISIT_BASE(EndIfMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_EndIfMacroDirective
MX_END_VISIT_MACRO(EndIfMacroDirective)

#ifndef MX_ENTER_VISIT_ElseMacroDirective
#  define MX_ENTER_VISIT_ElseMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_ElseMacroDirective
#  define MX_EXIT_VISIT_ElseMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(ElseMacroDirective)
  MX_ENTER_VISIT_ElseMacroDirective
  MX_VISIT_BASE(ElseMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_ElseMacroDirective
MX_END_VISIT_MACRO(ElseMacroDirective)

#ifndef MX_ENTER_VISIT_ElseIfNotDefinedMacroDirective
#  define MX_ENTER_VISIT_ElseIfNotDefinedMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_ElseIfNotDefinedMacroDirective
#  define MX_EXIT_VISIT_ElseIfNotDefinedMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(ElseIfNotDefinedMacroDirective)
  MX_ENTER_VISIT_ElseIfNotDefinedMacroDirective
  MX_VISIT_BASE(ElseIfNotDefinedMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_ElseIfNotDefinedMacroDirective
MX_END_VISIT_MACRO(ElseIfNotDefinedMacroDirective)

#ifndef MX_ENTER_VISIT_ElseIfDefinedMacroDirective
#  define MX_ENTER_VISIT_ElseIfDefinedMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_ElseIfDefinedMacroDirective
#  define MX_EXIT_VISIT_ElseIfDefinedMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(ElseIfDefinedMacroDirective)
  MX_ENTER_VISIT_ElseIfDefinedMacroDirective
  MX_VISIT_BASE(ElseIfDefinedMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_ElseIfDefinedMacroDirective
MX_END_VISIT_MACRO(ElseIfDefinedMacroDirective)

#ifndef MX_ENTER_VISIT_ElseIfMacroDirective
#  define MX_ENTER_VISIT_ElseIfMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_ElseIfMacroDirective
#  define MX_EXIT_VISIT_ElseIfMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(ElseIfMacroDirective)
  MX_ENTER_VISIT_ElseIfMacroDirective
  MX_VISIT_BASE(ElseIfMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_ElseIfMacroDirective
MX_END_VISIT_MACRO(ElseIfMacroDirective)

#ifndef MX_ENTER_VISIT_IfNotDefinedMacroDirective
#  define MX_ENTER_VISIT_IfNotDefinedMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_IfNotDefinedMacroDirective
#  define MX_EXIT_VISIT_IfNotDefinedMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(IfNotDefinedMacroDirective)
  MX_ENTER_VISIT_IfNotDefinedMacroDirective
  MX_VISIT_BASE(IfNotDefinedMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_IfNotDefinedMacroDirective
MX_END_VISIT_MACRO(IfNotDefinedMacroDirective)

#ifndef MX_ENTER_VISIT_IfDefinedMacroDirective
#  define MX_ENTER_VISIT_IfDefinedMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_IfDefinedMacroDirective
#  define MX_EXIT_VISIT_IfDefinedMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(IfDefinedMacroDirective)
  MX_ENTER_VISIT_IfDefinedMacroDirective
  MX_VISIT_BASE(IfDefinedMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_IfDefinedMacroDirective
MX_END_VISIT_MACRO(IfDefinedMacroDirective)

#ifndef MX_ENTER_VISIT_IfMacroDirective
#  define MX_ENTER_VISIT_IfMacroDirective MX_ENTER_VISIT_ConditionalMacroDirective
#endif
#ifndef MX_EXIT_VISIT_IfMacroDirective
#  define MX_EXIT_VISIT_IfMacroDirective MX_EXIT_VISIT_ConditionalMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(IfMacroDirective)
  MX_ENTER_VISIT_IfMacroDirective
  MX_VISIT_BASE(IfMacroDirective, ConditionalMacroDirective)
  MX_EXIT_VISIT_IfMacroDirective
MX_END_VISIT_MACRO(IfMacroDirective)

#ifndef MX_ENTER_VISIT_IncludeLikeMacroDirective
#  define MX_ENTER_VISIT_IncludeLikeMacroDirective MX_ENTER_VISIT_MacroDirective
#endif
#ifndef MX_EXIT_VISIT_IncludeLikeMacroDirective
#  define MX_EXIT_VISIT_IncludeLikeMacroDirective MX_EXIT_VISIT_MacroDirective
#endif

MX_BEGIN_VISIT_ABSTRACT_MACRO(IncludeLikeMacroDirective)
  MX_ENTER_VISIT_IncludeLikeMacroDirective
  MX_VISIT_BASE(IncludeLikeMacroDirective, MacroDirective)
  MX_VISIT_OPTIONAL_ENTITY(IncludeLikeMacroDirective, included_file, 7, MX_APPLY_METHOD, IncludedFile, File, NthMacro)
  MX_EXIT_VISIT_IncludeLikeMacroDirective
MX_END_VISIT_MACRO(IncludeLikeMacroDirective)

#ifndef MX_ENTER_VISIT_ImportMacroDirective
#  define MX_ENTER_VISIT_ImportMacroDirective MX_ENTER_VISIT_IncludeLikeMacroDirective
#endif
#ifndef MX_EXIT_VISIT_ImportMacroDirective
#  define MX_EXIT_VISIT_ImportMacroDirective MX_EXIT_VISIT_IncludeLikeMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(ImportMacroDirective)
  MX_ENTER_VISIT_ImportMacroDirective
  MX_VISIT_BASE(ImportMacroDirective, IncludeLikeMacroDirective)
  MX_EXIT_VISIT_ImportMacroDirective
MX_END_VISIT_MACRO(ImportMacroDirective)

#ifndef MX_ENTER_VISIT_IncludeMacrosMacroDirective
#  define MX_ENTER_VISIT_IncludeMacrosMacroDirective MX_ENTER_VISIT_IncludeLikeMacroDirective
#endif
#ifndef MX_EXIT_VISIT_IncludeMacrosMacroDirective
#  define MX_EXIT_VISIT_IncludeMacrosMacroDirective MX_EXIT_VISIT_IncludeLikeMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(IncludeMacrosMacroDirective)
  MX_ENTER_VISIT_IncludeMacrosMacroDirective
  MX_VISIT_BASE(IncludeMacrosMacroDirective, IncludeLikeMacroDirective)
  MX_EXIT_VISIT_IncludeMacrosMacroDirective
MX_END_VISIT_MACRO(IncludeMacrosMacroDirective)

#ifndef MX_ENTER_VISIT_IncludeNextMacroDirective
#  define MX_ENTER_VISIT_IncludeNextMacroDirective MX_ENTER_VISIT_IncludeLikeMacroDirective
#endif
#ifndef MX_EXIT_VISIT_IncludeNextMacroDirective
#  define MX_EXIT_VISIT_IncludeNextMacroDirective MX_EXIT_VISIT_IncludeLikeMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(IncludeNextMacroDirective)
  MX_ENTER_VISIT_IncludeNextMacroDirective
  MX_VISIT_BASE(IncludeNextMacroDirective, IncludeLikeMacroDirective)
  MX_EXIT_VISIT_IncludeNextMacroDirective
MX_END_VISIT_MACRO(IncludeNextMacroDirective)

#ifndef MX_ENTER_VISIT_IncludeMacroDirective
#  define MX_ENTER_VISIT_IncludeMacroDirective MX_ENTER_VISIT_IncludeLikeMacroDirective
#endif
#ifndef MX_EXIT_VISIT_IncludeMacroDirective
#  define MX_EXIT_VISIT_IncludeMacroDirective MX_EXIT_VISIT_IncludeLikeMacroDirective
#endif

MX_BEGIN_VISIT_MACRO(IncludeMacroDirective)
  MX_ENTER_VISIT_IncludeMacroDirective
  MX_VISIT_BASE(IncludeMacroDirective, IncludeLikeMacroDirective)
  MX_EXIT_VISIT_IncludeMacroDirective
MX_END_VISIT_MACRO(IncludeMacroDirective)

#ifndef MX_ENTER_VISIT_Attr
#  define MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_Attr
#  define MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(Attr)
  MX_ENTER_VISIT_Attr
  MX_VISIT_ENTITY(Attr, token, 0, MX_APPLY_METHOD, Token, Token, NthAttr)
  MX_VISIT_BOOL(Attr, is_implicit, 1, MX_APPLY_METHOD, IsImplicit, bool, NthAttr)
  MX_VISIT_BOOL(Attr, is_inherited, 2, MX_APPLY_METHOD, IsInherited, bool, NthAttr)
  MX_VISIT_BOOL(Attr, is_late_parsed, 3, MX_APPLY_METHOD, IsLateParsed, bool, NthAttr)
  MX_VISIT_BOOL(Attr, is_pack_expansion, 4, MX_APPLY_METHOD, IsPackExpansion, bool, NthAttr)
  MX_VISIT_ENUM(Attr, kind, 5, MX_APPLY_METHOD, Kind, AttrKind, NthAttr)
  MX_VISIT_TOKEN_RANGE(Attr, tokens, 6, 7, NthAttr)
  MX_EXIT_VISIT_Attr
MX_END_VISIT_ATTR(Attr)

#ifndef MX_ENTER_VISIT_AlignValueAttr
#  define MX_ENTER_VISIT_AlignValueAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_AlignValueAttr
#  define MX_EXIT_VISIT_AlignValueAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(AlignValueAttr)
  MX_ENTER_VISIT_AlignValueAttr
  MX_VISIT_BASE(AlignValueAttr, Attr)
  MX_VISIT_ENTITY(AlignValueAttr, alignment, 8, MX_APPLY_METHOD, Alignment, Expr, NthAttr)
  MX_EXIT_VISIT_AlignValueAttr
MX_END_VISIT_ATTR(AlignValueAttr)

#ifndef MX_ENTER_VISIT_AliasAttr
#  define MX_ENTER_VISIT_AliasAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_AliasAttr
#  define MX_EXIT_VISIT_AliasAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(AliasAttr)
  MX_ENTER_VISIT_AliasAttr
  MX_VISIT_BASE(AliasAttr, Attr)
  MX_VISIT_TEXT(AliasAttr, aliasee, 9, MX_APPLY_METHOD, Aliasee, basic_string_view, NthAttr)
  MX_EXIT_VISIT_AliasAttr
MX_END_VISIT_ATTR(AliasAttr)

#ifndef MX_ENTER_VISIT_AbiTagAttr
#  define MX_ENTER_VISIT_AbiTagAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_AbiTagAttr
#  define MX_EXIT_VISIT_AbiTagAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(AbiTagAttr)
  MX_ENTER_VISIT_AbiTagAttr
  MX_VISIT_BASE(AbiTagAttr, Attr)
  MX_EXIT_VISIT_AbiTagAttr
MX_END_VISIT_ATTR(AbiTagAttr)

#ifndef MX_ENTER_VISIT_TypeAttr
#  define MX_ENTER_VISIT_TypeAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_TypeAttr
#  define MX_EXIT_VISIT_TypeAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(TypeAttr)
  MX_ENTER_VISIT_TypeAttr
  MX_VISIT_BASE(TypeAttr, Attr)
  MX_EXIT_VISIT_TypeAttr
MX_END_VISIT_ATTR(TypeAttr)

#ifndef MX_ENTER_VISIT_SPtrAttr
#  define MX_ENTER_VISIT_SPtrAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_SPtrAttr
#  define MX_EXIT_VISIT_SPtrAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(SPtrAttr)
  MX_ENTER_VISIT_SPtrAttr
  MX_VISIT_BASE(SPtrAttr, TypeAttr)
  MX_EXIT_VISIT_SPtrAttr
MX_END_VISIT_ATTR(SPtrAttr)

#ifndef MX_ENTER_VISIT_Ptr64Attr
#  define MX_ENTER_VISIT_Ptr64Attr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_Ptr64Attr
#  define MX_EXIT_VISIT_Ptr64Attr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(Ptr64Attr)
  MX_ENTER_VISIT_Ptr64Attr
  MX_VISIT_BASE(Ptr64Attr, TypeAttr)
  MX_EXIT_VISIT_Ptr64Attr
MX_END_VISIT_ATTR(Ptr64Attr)

#ifndef MX_ENTER_VISIT_Ptr32Attr
#  define MX_ENTER_VISIT_Ptr32Attr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_Ptr32Attr
#  define MX_EXIT_VISIT_Ptr32Attr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(Ptr32Attr)
  MX_ENTER_VISIT_Ptr32Attr
  MX_VISIT_BASE(Ptr32Attr, TypeAttr)
  MX_EXIT_VISIT_Ptr32Attr
MX_END_VISIT_ATTR(Ptr32Attr)

#ifndef MX_ENTER_VISIT_OpenCLPrivateAddressSpaceAttr
#  define MX_ENTER_VISIT_OpenCLPrivateAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLPrivateAddressSpaceAttr
#  define MX_EXIT_VISIT_OpenCLPrivateAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLPrivateAddressSpaceAttr)
  MX_ENTER_VISIT_OpenCLPrivateAddressSpaceAttr
  MX_VISIT_BASE(OpenCLPrivateAddressSpaceAttr, TypeAttr)
  MX_VISIT_ENUM(OpenCLPrivateAddressSpaceAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, OpenCLPrivateAddressSpaceAttrSpelling, NthAttr)
  MX_EXIT_VISIT_OpenCLPrivateAddressSpaceAttr
MX_END_VISIT_ATTR(OpenCLPrivateAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_OpenCLLocalAddressSpaceAttr
#  define MX_ENTER_VISIT_OpenCLLocalAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLLocalAddressSpaceAttr
#  define MX_EXIT_VISIT_OpenCLLocalAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLLocalAddressSpaceAttr)
  MX_ENTER_VISIT_OpenCLLocalAddressSpaceAttr
  MX_VISIT_BASE(OpenCLLocalAddressSpaceAttr, TypeAttr)
  MX_VISIT_ENUM(OpenCLLocalAddressSpaceAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, OpenCLLocalAddressSpaceAttrSpelling, NthAttr)
  MX_EXIT_VISIT_OpenCLLocalAddressSpaceAttr
MX_END_VISIT_ATTR(OpenCLLocalAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_OpenCLGlobalHostAddressSpaceAttr
#  define MX_ENTER_VISIT_OpenCLGlobalHostAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLGlobalHostAddressSpaceAttr
#  define MX_EXIT_VISIT_OpenCLGlobalHostAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLGlobalHostAddressSpaceAttr)
  MX_ENTER_VISIT_OpenCLGlobalHostAddressSpaceAttr
  MX_VISIT_BASE(OpenCLGlobalHostAddressSpaceAttr, TypeAttr)
  MX_EXIT_VISIT_OpenCLGlobalHostAddressSpaceAttr
MX_END_VISIT_ATTR(OpenCLGlobalHostAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_OpenCLGlobalDeviceAddressSpaceAttr
#  define MX_ENTER_VISIT_OpenCLGlobalDeviceAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLGlobalDeviceAddressSpaceAttr
#  define MX_EXIT_VISIT_OpenCLGlobalDeviceAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLGlobalDeviceAddressSpaceAttr)
  MX_ENTER_VISIT_OpenCLGlobalDeviceAddressSpaceAttr
  MX_VISIT_BASE(OpenCLGlobalDeviceAddressSpaceAttr, TypeAttr)
  MX_EXIT_VISIT_OpenCLGlobalDeviceAddressSpaceAttr
MX_END_VISIT_ATTR(OpenCLGlobalDeviceAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_OpenCLGlobalAddressSpaceAttr
#  define MX_ENTER_VISIT_OpenCLGlobalAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLGlobalAddressSpaceAttr
#  define MX_EXIT_VISIT_OpenCLGlobalAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLGlobalAddressSpaceAttr)
  MX_ENTER_VISIT_OpenCLGlobalAddressSpaceAttr
  MX_VISIT_BASE(OpenCLGlobalAddressSpaceAttr, TypeAttr)
  MX_VISIT_ENUM(OpenCLGlobalAddressSpaceAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, OpenCLGlobalAddressSpaceAttrSpelling, NthAttr)
  MX_EXIT_VISIT_OpenCLGlobalAddressSpaceAttr
MX_END_VISIT_ATTR(OpenCLGlobalAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_OpenCLGenericAddressSpaceAttr
#  define MX_ENTER_VISIT_OpenCLGenericAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLGenericAddressSpaceAttr
#  define MX_EXIT_VISIT_OpenCLGenericAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLGenericAddressSpaceAttr)
  MX_ENTER_VISIT_OpenCLGenericAddressSpaceAttr
  MX_VISIT_BASE(OpenCLGenericAddressSpaceAttr, TypeAttr)
  MX_VISIT_ENUM(OpenCLGenericAddressSpaceAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, OpenCLGenericAddressSpaceAttrSpelling, NthAttr)
  MX_EXIT_VISIT_OpenCLGenericAddressSpaceAttr
MX_END_VISIT_ATTR(OpenCLGenericAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_OpenCLConstantAddressSpaceAttr
#  define MX_ENTER_VISIT_OpenCLConstantAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLConstantAddressSpaceAttr
#  define MX_EXIT_VISIT_OpenCLConstantAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLConstantAddressSpaceAttr)
  MX_ENTER_VISIT_OpenCLConstantAddressSpaceAttr
  MX_VISIT_BASE(OpenCLConstantAddressSpaceAttr, TypeAttr)
  MX_VISIT_ENUM(OpenCLConstantAddressSpaceAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, OpenCLConstantAddressSpaceAttrSpelling, NthAttr)
  MX_EXIT_VISIT_OpenCLConstantAddressSpaceAttr
MX_END_VISIT_ATTR(OpenCLConstantAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_ObjCKindOfAttr
#  define MX_ENTER_VISIT_ObjCKindOfAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCKindOfAttr
#  define MX_EXIT_VISIT_ObjCKindOfAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCKindOfAttr)
  MX_ENTER_VISIT_ObjCKindOfAttr
  MX_VISIT_BASE(ObjCKindOfAttr, TypeAttr)
  MX_EXIT_VISIT_ObjCKindOfAttr
MX_END_VISIT_ATTR(ObjCKindOfAttr)

#ifndef MX_ENTER_VISIT_ObjCInertUnsafeUnretainedAttr
#  define MX_ENTER_VISIT_ObjCInertUnsafeUnretainedAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCInertUnsafeUnretainedAttr
#  define MX_EXIT_VISIT_ObjCInertUnsafeUnretainedAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCInertUnsafeUnretainedAttr)
  MX_ENTER_VISIT_ObjCInertUnsafeUnretainedAttr
  MX_VISIT_BASE(ObjCInertUnsafeUnretainedAttr, TypeAttr)
  MX_EXIT_VISIT_ObjCInertUnsafeUnretainedAttr
MX_END_VISIT_ATTR(ObjCInertUnsafeUnretainedAttr)

#ifndef MX_ENTER_VISIT_ObjCGCAttr
#  define MX_ENTER_VISIT_ObjCGCAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCGCAttr
#  define MX_EXIT_VISIT_ObjCGCAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCGCAttr)
  MX_ENTER_VISIT_ObjCGCAttr
  MX_VISIT_BASE(ObjCGCAttr, TypeAttr)
  MX_EXIT_VISIT_ObjCGCAttr
MX_END_VISIT_ATTR(ObjCGCAttr)

#ifndef MX_ENTER_VISIT_NoDerefAttr
#  define MX_ENTER_VISIT_NoDerefAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_NoDerefAttr
#  define MX_EXIT_VISIT_NoDerefAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(NoDerefAttr)
  MX_ENTER_VISIT_NoDerefAttr
  MX_VISIT_BASE(NoDerefAttr, TypeAttr)
  MX_EXIT_VISIT_NoDerefAttr
MX_END_VISIT_ATTR(NoDerefAttr)

#ifndef MX_ENTER_VISIT_HLSLGroupSharedAddressSpaceAttr
#  define MX_ENTER_VISIT_HLSLGroupSharedAddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLGroupSharedAddressSpaceAttr
#  define MX_EXIT_VISIT_HLSLGroupSharedAddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(HLSLGroupSharedAddressSpaceAttr)
  MX_ENTER_VISIT_HLSLGroupSharedAddressSpaceAttr
  MX_VISIT_BASE(HLSLGroupSharedAddressSpaceAttr, TypeAttr)
  MX_EXIT_VISIT_HLSLGroupSharedAddressSpaceAttr
MX_END_VISIT_ATTR(HLSLGroupSharedAddressSpaceAttr)

#ifndef MX_ENTER_VISIT_CmseNSCallAttr
#  define MX_ENTER_VISIT_CmseNSCallAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_CmseNSCallAttr
#  define MX_EXIT_VISIT_CmseNSCallAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(CmseNSCallAttr)
  MX_ENTER_VISIT_CmseNSCallAttr
  MX_VISIT_BASE(CmseNSCallAttr, TypeAttr)
  MX_EXIT_VISIT_CmseNSCallAttr
MX_END_VISIT_ATTR(CmseNSCallAttr)

#ifndef MX_ENTER_VISIT_BTFTypeTagAttr
#  define MX_ENTER_VISIT_BTFTypeTagAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_BTFTypeTagAttr
#  define MX_EXIT_VISIT_BTFTypeTagAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(BTFTypeTagAttr)
  MX_ENTER_VISIT_BTFTypeTagAttr
  MX_VISIT_BASE(BTFTypeTagAttr, TypeAttr)
  MX_VISIT_TEXT(BTFTypeTagAttr, btf_type_tag, 9, MX_APPLY_METHOD, BTFTypeTag, basic_string_view, NthAttr)
  MX_EXIT_VISIT_BTFTypeTagAttr
MX_END_VISIT_ATTR(BTFTypeTagAttr)

#ifndef MX_ENTER_VISIT_ArmStreamingAttr
#  define MX_ENTER_VISIT_ArmStreamingAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_ArmStreamingAttr
#  define MX_EXIT_VISIT_ArmStreamingAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(ArmStreamingAttr)
  MX_ENTER_VISIT_ArmStreamingAttr
  MX_VISIT_BASE(ArmStreamingAttr, TypeAttr)
  MX_EXIT_VISIT_ArmStreamingAttr
MX_END_VISIT_ATTR(ArmStreamingAttr)

#ifndef MX_ENTER_VISIT_ArmMveStrictPolymorphismAttr
#  define MX_ENTER_VISIT_ArmMveStrictPolymorphismAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_ArmMveStrictPolymorphismAttr
#  define MX_EXIT_VISIT_ArmMveStrictPolymorphismAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(ArmMveStrictPolymorphismAttr)
  MX_ENTER_VISIT_ArmMveStrictPolymorphismAttr
  MX_VISIT_BASE(ArmMveStrictPolymorphismAttr, TypeAttr)
  MX_EXIT_VISIT_ArmMveStrictPolymorphismAttr
MX_END_VISIT_ATTR(ArmMveStrictPolymorphismAttr)

#ifndef MX_ENTER_VISIT_AnnotateTypeAttr
#  define MX_ENTER_VISIT_AnnotateTypeAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_AnnotateTypeAttr
#  define MX_EXIT_VISIT_AnnotateTypeAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(AnnotateTypeAttr)
  MX_ENTER_VISIT_AnnotateTypeAttr
  MX_VISIT_BASE(AnnotateTypeAttr, TypeAttr)
  MX_VISIT_TEXT(AnnotateTypeAttr, annotation, 9, MX_APPLY_METHOD, Annotation, basic_string_view, NthAttr)
  MX_EXIT_VISIT_AnnotateTypeAttr
MX_END_VISIT_ATTR(AnnotateTypeAttr)

#ifndef MX_ENTER_VISIT_AddressSpaceAttr
#  define MX_ENTER_VISIT_AddressSpaceAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_AddressSpaceAttr
#  define MX_EXIT_VISIT_AddressSpaceAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(AddressSpaceAttr)
  MX_ENTER_VISIT_AddressSpaceAttr
  MX_VISIT_BASE(AddressSpaceAttr, TypeAttr)
  MX_EXIT_VISIT_AddressSpaceAttr
MX_END_VISIT_ATTR(AddressSpaceAttr)

#ifndef MX_ENTER_VISIT_WebAssemblyFuncrefAttr
#  define MX_ENTER_VISIT_WebAssemblyFuncrefAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_WebAssemblyFuncrefAttr
#  define MX_EXIT_VISIT_WebAssemblyFuncrefAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(WebAssemblyFuncrefAttr)
  MX_ENTER_VISIT_WebAssemblyFuncrefAttr
  MX_VISIT_BASE(WebAssemblyFuncrefAttr, TypeAttr)
  MX_EXIT_VISIT_WebAssemblyFuncrefAttr
MX_END_VISIT_ATTR(WebAssemblyFuncrefAttr)

#ifndef MX_ENTER_VISIT_UPtrAttr
#  define MX_ENTER_VISIT_UPtrAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_UPtrAttr
#  define MX_EXIT_VISIT_UPtrAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(UPtrAttr)
  MX_ENTER_VISIT_UPtrAttr
  MX_VISIT_BASE(UPtrAttr, TypeAttr)
  MX_EXIT_VISIT_UPtrAttr
MX_END_VISIT_ATTR(UPtrAttr)

#ifndef MX_ENTER_VISIT_TypeNullableResultAttr
#  define MX_ENTER_VISIT_TypeNullableResultAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_TypeNullableResultAttr
#  define MX_EXIT_VISIT_TypeNullableResultAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(TypeNullableResultAttr)
  MX_ENTER_VISIT_TypeNullableResultAttr
  MX_VISIT_BASE(TypeNullableResultAttr, TypeAttr)
  MX_EXIT_VISIT_TypeNullableResultAttr
MX_END_VISIT_ATTR(TypeNullableResultAttr)

#ifndef MX_ENTER_VISIT_TypeNullableAttr
#  define MX_ENTER_VISIT_TypeNullableAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_TypeNullableAttr
#  define MX_EXIT_VISIT_TypeNullableAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(TypeNullableAttr)
  MX_ENTER_VISIT_TypeNullableAttr
  MX_VISIT_BASE(TypeNullableAttr, TypeAttr)
  MX_EXIT_VISIT_TypeNullableAttr
MX_END_VISIT_ATTR(TypeNullableAttr)

#ifndef MX_ENTER_VISIT_TypeNullUnspecifiedAttr
#  define MX_ENTER_VISIT_TypeNullUnspecifiedAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_TypeNullUnspecifiedAttr
#  define MX_EXIT_VISIT_TypeNullUnspecifiedAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(TypeNullUnspecifiedAttr)
  MX_ENTER_VISIT_TypeNullUnspecifiedAttr
  MX_VISIT_BASE(TypeNullUnspecifiedAttr, TypeAttr)
  MX_EXIT_VISIT_TypeNullUnspecifiedAttr
MX_END_VISIT_ATTR(TypeNullUnspecifiedAttr)

#ifndef MX_ENTER_VISIT_TypeNonNullAttr
#  define MX_ENTER_VISIT_TypeNonNullAttr MX_ENTER_VISIT_TypeAttr
#endif
#ifndef MX_EXIT_VISIT_TypeNonNullAttr
#  define MX_EXIT_VISIT_TypeNonNullAttr MX_EXIT_VISIT_TypeAttr
#endif

MX_BEGIN_VISIT_ATTR(TypeNonNullAttr)
  MX_ENTER_VISIT_TypeNonNullAttr
  MX_VISIT_BASE(TypeNonNullAttr, TypeAttr)
  MX_EXIT_VISIT_TypeNonNullAttr
MX_END_VISIT_ATTR(TypeNonNullAttr)

#ifndef MX_ENTER_VISIT_ThreadAttr
#  define MX_ENTER_VISIT_ThreadAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ThreadAttr
#  define MX_EXIT_VISIT_ThreadAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ThreadAttr)
  MX_ENTER_VISIT_ThreadAttr
  MX_VISIT_BASE(ThreadAttr, Attr)
  MX_EXIT_VISIT_ThreadAttr
MX_END_VISIT_ATTR(ThreadAttr)

#ifndef MX_ENTER_VISIT_SwiftObjCMembersAttr
#  define MX_ENTER_VISIT_SwiftObjCMembersAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_SwiftObjCMembersAttr
#  define MX_EXIT_VISIT_SwiftObjCMembersAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(SwiftObjCMembersAttr)
  MX_ENTER_VISIT_SwiftObjCMembersAttr
  MX_VISIT_BASE(SwiftObjCMembersAttr, Attr)
  MX_EXIT_VISIT_SwiftObjCMembersAttr
MX_END_VISIT_ATTR(SwiftObjCMembersAttr)

#ifndef MX_ENTER_VISIT_StmtAttr
#  define MX_ENTER_VISIT_StmtAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_StmtAttr
#  define MX_EXIT_VISIT_StmtAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(StmtAttr)
  MX_ENTER_VISIT_StmtAttr
  MX_VISIT_BASE(StmtAttr, Attr)
  MX_EXIT_VISIT_StmtAttr
MX_END_VISIT_ATTR(StmtAttr)

#ifndef MX_ENTER_VISIT_OpenCLUnrollHintAttr
#  define MX_ENTER_VISIT_OpenCLUnrollHintAttr MX_ENTER_VISIT_StmtAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLUnrollHintAttr
#  define MX_EXIT_VISIT_OpenCLUnrollHintAttr MX_EXIT_VISIT_StmtAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLUnrollHintAttr)
  MX_ENTER_VISIT_OpenCLUnrollHintAttr
  MX_VISIT_BASE(OpenCLUnrollHintAttr, StmtAttr)
  MX_EXIT_VISIT_OpenCLUnrollHintAttr
MX_END_VISIT_ATTR(OpenCLUnrollHintAttr)

#ifndef MX_ENTER_VISIT_MustTailAttr
#  define MX_ENTER_VISIT_MustTailAttr MX_ENTER_VISIT_StmtAttr
#endif
#ifndef MX_EXIT_VISIT_MustTailAttr
#  define MX_EXIT_VISIT_MustTailAttr MX_EXIT_VISIT_StmtAttr
#endif

MX_BEGIN_VISIT_ATTR(MustTailAttr)
  MX_ENTER_VISIT_MustTailAttr
  MX_VISIT_BASE(MustTailAttr, StmtAttr)
  MX_EXIT_VISIT_MustTailAttr
MX_END_VISIT_ATTR(MustTailAttr)

#ifndef MX_ENTER_VISIT_LikelyAttr
#  define MX_ENTER_VISIT_LikelyAttr MX_ENTER_VISIT_StmtAttr
#endif
#ifndef MX_EXIT_VISIT_LikelyAttr
#  define MX_EXIT_VISIT_LikelyAttr MX_EXIT_VISIT_StmtAttr
#endif

MX_BEGIN_VISIT_ATTR(LikelyAttr)
  MX_ENTER_VISIT_LikelyAttr
  MX_VISIT_BASE(LikelyAttr, StmtAttr)
  MX_EXIT_VISIT_LikelyAttr
MX_END_VISIT_ATTR(LikelyAttr)

#ifndef MX_ENTER_VISIT_FallThroughAttr
#  define MX_ENTER_VISIT_FallThroughAttr MX_ENTER_VISIT_StmtAttr
#endif
#ifndef MX_EXIT_VISIT_FallThroughAttr
#  define MX_EXIT_VISIT_FallThroughAttr MX_EXIT_VISIT_StmtAttr
#endif

MX_BEGIN_VISIT_ATTR(FallThroughAttr)
  MX_ENTER_VISIT_FallThroughAttr
  MX_VISIT_BASE(FallThroughAttr, StmtAttr)
  MX_EXIT_VISIT_FallThroughAttr
MX_END_VISIT_ATTR(FallThroughAttr)

#ifndef MX_ENTER_VISIT_UnlikelyAttr
#  define MX_ENTER_VISIT_UnlikelyAttr MX_ENTER_VISIT_StmtAttr
#endif
#ifndef MX_EXIT_VISIT_UnlikelyAttr
#  define MX_EXIT_VISIT_UnlikelyAttr MX_EXIT_VISIT_StmtAttr
#endif

MX_BEGIN_VISIT_ATTR(UnlikelyAttr)
  MX_ENTER_VISIT_UnlikelyAttr
  MX_VISIT_BASE(UnlikelyAttr, StmtAttr)
  MX_EXIT_VISIT_UnlikelyAttr
MX_END_VISIT_ATTR(UnlikelyAttr)

#ifndef MX_ENTER_VISIT_SuppressAttr
#  define MX_ENTER_VISIT_SuppressAttr MX_ENTER_VISIT_StmtAttr
#endif
#ifndef MX_EXIT_VISIT_SuppressAttr
#  define MX_EXIT_VISIT_SuppressAttr MX_EXIT_VISIT_StmtAttr
#endif

MX_BEGIN_VISIT_ATTR(SuppressAttr)
  MX_ENTER_VISIT_SuppressAttr
  MX_VISIT_BASE(SuppressAttr, StmtAttr)
  MX_EXIT_VISIT_SuppressAttr
MX_END_VISIT_ATTR(SuppressAttr)

#ifndef MX_ENTER_VISIT_RenderScriptKernelAttr
#  define MX_ENTER_VISIT_RenderScriptKernelAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_RenderScriptKernelAttr
#  define MX_EXIT_VISIT_RenderScriptKernelAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(RenderScriptKernelAttr)
  MX_ENTER_VISIT_RenderScriptKernelAttr
  MX_VISIT_BASE(RenderScriptKernelAttr, Attr)
  MX_EXIT_VISIT_RenderScriptKernelAttr
MX_END_VISIT_ATTR(RenderScriptKernelAttr)

#ifndef MX_ENTER_VISIT_OverloadableAttr
#  define MX_ENTER_VISIT_OverloadableAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_OverloadableAttr
#  define MX_EXIT_VISIT_OverloadableAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(OverloadableAttr)
  MX_ENTER_VISIT_OverloadableAttr
  MX_VISIT_BASE(OverloadableAttr, Attr)
  MX_EXIT_VISIT_OverloadableAttr
MX_END_VISIT_ATTR(OverloadableAttr)

#ifndef MX_ENTER_VISIT_OpenCLAccessAttr
#  define MX_ENTER_VISIT_OpenCLAccessAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_OpenCLAccessAttr
#  define MX_EXIT_VISIT_OpenCLAccessAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLAccessAttr)
  MX_ENTER_VISIT_OpenCLAccessAttr
  MX_VISIT_BASE(OpenCLAccessAttr, Attr)
  MX_VISIT_ENUM(OpenCLAccessAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, OpenCLAccessAttrSpelling, NthAttr)
  MX_VISIT_BOOL(OpenCLAccessAttr, is_read_only, 11, MX_APPLY_METHOD, IsReadOnly, bool, NthAttr)
  MX_VISIT_BOOL(OpenCLAccessAttr, is_read_write, 12, MX_APPLY_METHOD, IsReadWrite, bool, NthAttr)
  MX_VISIT_BOOL(OpenCLAccessAttr, is_write_only, 13, MX_APPLY_METHOD, IsWriteOnly, bool, NthAttr)
  MX_EXIT_VISIT_OpenCLAccessAttr
MX_END_VISIT_ATTR(OpenCLAccessAttr)

#ifndef MX_ENTER_VISIT_ObjCRuntimeVisibleAttr
#  define MX_ENTER_VISIT_ObjCRuntimeVisibleAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCRuntimeVisibleAttr
#  define MX_EXIT_VISIT_ObjCRuntimeVisibleAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCRuntimeVisibleAttr)
  MX_ENTER_VISIT_ObjCRuntimeVisibleAttr
  MX_VISIT_BASE(ObjCRuntimeVisibleAttr, Attr)
  MX_EXIT_VISIT_ObjCRuntimeVisibleAttr
MX_END_VISIT_ATTR(ObjCRuntimeVisibleAttr)

#ifndef MX_ENTER_VISIT_ObjCRuntimeNameAttr
#  define MX_ENTER_VISIT_ObjCRuntimeNameAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCRuntimeNameAttr
#  define MX_EXIT_VISIT_ObjCRuntimeNameAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCRuntimeNameAttr)
  MX_ENTER_VISIT_ObjCRuntimeNameAttr
  MX_VISIT_BASE(ObjCRuntimeNameAttr, Attr)
  MX_VISIT_TEXT(ObjCRuntimeNameAttr, metadata_name, 9, MX_APPLY_METHOD, MetadataName, basic_string_view, NthAttr)
  MX_EXIT_VISIT_ObjCRuntimeNameAttr
MX_END_VISIT_ATTR(ObjCRuntimeNameAttr)

#ifndef MX_ENTER_VISIT_ObjCNonRuntimeProtocolAttr
#  define MX_ENTER_VISIT_ObjCNonRuntimeProtocolAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCNonRuntimeProtocolAttr
#  define MX_EXIT_VISIT_ObjCNonRuntimeProtocolAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCNonRuntimeProtocolAttr)
  MX_ENTER_VISIT_ObjCNonRuntimeProtocolAttr
  MX_VISIT_BASE(ObjCNonRuntimeProtocolAttr, Attr)
  MX_EXIT_VISIT_ObjCNonRuntimeProtocolAttr
MX_END_VISIT_ATTR(ObjCNonRuntimeProtocolAttr)

#ifndef MX_ENTER_VISIT_ObjCNonLazyClassAttr
#  define MX_ENTER_VISIT_ObjCNonLazyClassAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCNonLazyClassAttr
#  define MX_EXIT_VISIT_ObjCNonLazyClassAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCNonLazyClassAttr)
  MX_ENTER_VISIT_ObjCNonLazyClassAttr
  MX_VISIT_BASE(ObjCNonLazyClassAttr, Attr)
  MX_EXIT_VISIT_ObjCNonLazyClassAttr
MX_END_VISIT_ATTR(ObjCNonLazyClassAttr)

#ifndef MX_ENTER_VISIT_ObjCDirectMembersAttr
#  define MX_ENTER_VISIT_ObjCDirectMembersAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCDirectMembersAttr
#  define MX_EXIT_VISIT_ObjCDirectMembersAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCDirectMembersAttr)
  MX_ENTER_VISIT_ObjCDirectMembersAttr
  MX_VISIT_BASE(ObjCDirectMembersAttr, Attr)
  MX_EXIT_VISIT_ObjCDirectMembersAttr
MX_END_VISIT_ATTR(ObjCDirectMembersAttr)

#ifndef MX_ENTER_VISIT_ObjCDirectAttr
#  define MX_ENTER_VISIT_ObjCDirectAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCDirectAttr
#  define MX_EXIT_VISIT_ObjCDirectAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCDirectAttr)
  MX_ENTER_VISIT_ObjCDirectAttr
  MX_VISIT_BASE(ObjCDirectAttr, Attr)
  MX_EXIT_VISIT_ObjCDirectAttr
MX_END_VISIT_ATTR(ObjCDirectAttr)

#ifndef MX_ENTER_VISIT_ObjCDesignatedInitializerAttr
#  define MX_ENTER_VISIT_ObjCDesignatedInitializerAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCDesignatedInitializerAttr
#  define MX_EXIT_VISIT_ObjCDesignatedInitializerAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCDesignatedInitializerAttr)
  MX_ENTER_VISIT_ObjCDesignatedInitializerAttr
  MX_VISIT_BASE(ObjCDesignatedInitializerAttr, Attr)
  MX_EXIT_VISIT_ObjCDesignatedInitializerAttr
MX_END_VISIT_ATTR(ObjCDesignatedInitializerAttr)

#ifndef MX_ENTER_VISIT_ObjCClassStubAttr
#  define MX_ENTER_VISIT_ObjCClassStubAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCClassStubAttr
#  define MX_EXIT_VISIT_ObjCClassStubAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCClassStubAttr)
  MX_ENTER_VISIT_ObjCClassStubAttr
  MX_VISIT_BASE(ObjCClassStubAttr, Attr)
  MX_EXIT_VISIT_ObjCClassStubAttr
MX_END_VISIT_ATTR(ObjCClassStubAttr)

#ifndef MX_ENTER_VISIT_ObjCBoxableAttr
#  define MX_ENTER_VISIT_ObjCBoxableAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ObjCBoxableAttr
#  define MX_EXIT_VISIT_ObjCBoxableAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ObjCBoxableAttr)
  MX_ENTER_VISIT_ObjCBoxableAttr
  MX_VISIT_BASE(ObjCBoxableAttr, Attr)
  MX_EXIT_VISIT_ObjCBoxableAttr
MX_END_VISIT_ATTR(ObjCBoxableAttr)

#ifndef MX_ENTER_VISIT_OMPReferencedVarAttr
#  define MX_ENTER_VISIT_OMPReferencedVarAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_OMPReferencedVarAttr
#  define MX_EXIT_VISIT_OMPReferencedVarAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(OMPReferencedVarAttr)
  MX_ENTER_VISIT_OMPReferencedVarAttr
  MX_VISIT_BASE(OMPReferencedVarAttr, Attr)
  MX_VISIT_ENTITY(OMPReferencedVarAttr, reference, 8, MX_APPLY_METHOD, Reference, Expr, NthAttr)
  MX_EXIT_VISIT_OMPReferencedVarAttr
MX_END_VISIT_ATTR(OMPReferencedVarAttr)

#ifndef MX_ENTER_VISIT_OMPDeclareSimdDeclAttr
#  define MX_ENTER_VISIT_OMPDeclareSimdDeclAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_OMPDeclareSimdDeclAttr
#  define MX_EXIT_VISIT_OMPDeclareSimdDeclAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(OMPDeclareSimdDeclAttr)
  MX_ENTER_VISIT_OMPDeclareSimdDeclAttr
  MX_VISIT_BASE(OMPDeclareSimdDeclAttr, Attr)
  MX_VISIT_ENUM(OMPDeclareSimdDeclAttr, branch_state, 10, MX_APPLY_METHOD, BranchState, OMPDeclareSimdDeclAttrBranchStateTy, NthAttr)
  MX_VISIT_ENTITY(OMPDeclareSimdDeclAttr, simdlen, 8, MX_APPLY_METHOD, Simdlen, Expr, NthAttr)
  MX_EXIT_VISIT_OMPDeclareSimdDeclAttr
MX_END_VISIT_ATTR(OMPDeclareSimdDeclAttr)

#ifndef MX_ENTER_VISIT_OMPCaptureKindAttr
#  define MX_ENTER_VISIT_OMPCaptureKindAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_OMPCaptureKindAttr
#  define MX_EXIT_VISIT_OMPCaptureKindAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(OMPCaptureKindAttr)
  MX_ENTER_VISIT_OMPCaptureKindAttr
  MX_VISIT_BASE(OMPCaptureKindAttr, Attr)
  MX_EXIT_VISIT_OMPCaptureKindAttr
MX_END_VISIT_ATTR(OMPCaptureKindAttr)

#ifndef MX_ENTER_VISIT_NoEscapeAttr
#  define MX_ENTER_VISIT_NoEscapeAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_NoEscapeAttr
#  define MX_EXIT_VISIT_NoEscapeAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(NoEscapeAttr)
  MX_ENTER_VISIT_NoEscapeAttr
  MX_VISIT_BASE(NoEscapeAttr, Attr)
  MX_EXIT_VISIT_NoEscapeAttr
MX_END_VISIT_ATTR(NoEscapeAttr)

#ifndef MX_ENTER_VISIT_NoBuiltinAttr
#  define MX_ENTER_VISIT_NoBuiltinAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_NoBuiltinAttr
#  define MX_EXIT_VISIT_NoBuiltinAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(NoBuiltinAttr)
  MX_ENTER_VISIT_NoBuiltinAttr
  MX_VISIT_BASE(NoBuiltinAttr, Attr)
  MX_EXIT_VISIT_NoBuiltinAttr
MX_END_VISIT_ATTR(NoBuiltinAttr)

#ifndef MX_ENTER_VISIT_ModeAttr
#  define MX_ENTER_VISIT_ModeAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_ModeAttr
#  define MX_EXIT_VISIT_ModeAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(ModeAttr)
  MX_ENTER_VISIT_ModeAttr
  MX_VISIT_BASE(ModeAttr, Attr)
  MX_EXIT_VISIT_ModeAttr
MX_END_VISIT_ATTR(ModeAttr)

#ifndef MX_ENTER_VISIT_LoopHintAttr
#  define MX_ENTER_VISIT_LoopHintAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_LoopHintAttr
#  define MX_EXIT_VISIT_LoopHintAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(LoopHintAttr)
  MX_ENTER_VISIT_LoopHintAttr
  MX_VISIT_BASE(LoopHintAttr, Attr)
  MX_VISIT_ENUM(LoopHintAttr, option, 10, MX_APPLY_METHOD, Option, LoopHintAttrOptionType, NthAttr)
  MX_VISIT_ENUM(LoopHintAttr, semantic_spelling, 14, MX_APPLY_METHOD, SemanticSpelling, LoopHintAttrSpelling, NthAttr)
  MX_VISIT_ENUM(LoopHintAttr, state, 15, MX_APPLY_METHOD, State, LoopHintAttrLoopHintState, NthAttr)
  MX_VISIT_OPTIONAL_ENTITY(LoopHintAttr, value, 8, MX_APPLY_METHOD, Value, Expr, NthAttr)
  MX_EXIT_VISIT_LoopHintAttr
MX_END_VISIT_ATTR(LoopHintAttr)

#ifndef MX_ENTER_VISIT_LoaderUninitializedAttr
#  define MX_ENTER_VISIT_LoaderUninitializedAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_LoaderUninitializedAttr
#  define MX_EXIT_VISIT_LoaderUninitializedAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(LoaderUninitializedAttr)
  MX_ENTER_VISIT_LoaderUninitializedAttr
  MX_VISIT_BASE(LoaderUninitializedAttr, Attr)
  MX_EXIT_VISIT_LoaderUninitializedAttr
MX_END_VISIT_ATTR(LoaderUninitializedAttr)

#ifndef MX_ENTER_VISIT_InitSegAttr
#  define MX_ENTER_VISIT_InitSegAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_InitSegAttr
#  define MX_EXIT_VISIT_InitSegAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(InitSegAttr)
  MX_ENTER_VISIT_InitSegAttr
  MX_VISIT_BASE(InitSegAttr, Attr)
  MX_VISIT_TEXT(InitSegAttr, section, 9, MX_APPLY_METHOD, Section, basic_string_view, NthAttr)
  MX_EXIT_VISIT_InitSegAttr
MX_END_VISIT_ATTR(InitSegAttr)

#ifndef MX_ENTER_VISIT_InheritableAttr
#  define MX_ENTER_VISIT_InheritableAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_InheritableAttr
#  define MX_EXIT_VISIT_InheritableAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(InheritableAttr)
  MX_ENTER_VISIT_InheritableAttr
  MX_VISIT_BASE(InheritableAttr, Attr)
  MX_VISIT_BOOL(InheritableAttr, should_inherit_even_if_already_present, 11, MX_APPLY_METHOD, ShouldInheritEvenIfAlreadyPresent, bool, NthAttr)
  MX_EXIT_VISIT_InheritableAttr
MX_END_VISIT_ATTR(InheritableAttr)

#ifndef MX_ENTER_VISIT_IBOutletCollectionAttr
#  define MX_ENTER_VISIT_IBOutletCollectionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_IBOutletCollectionAttr
#  define MX_EXIT_VISIT_IBOutletCollectionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(IBOutletCollectionAttr)
  MX_ENTER_VISIT_IBOutletCollectionAttr
  MX_VISIT_BASE(IBOutletCollectionAttr, InheritableAttr)
  MX_VISIT_ENTITY(IBOutletCollectionAttr, interface, 8, MX_APPLY_METHOD, Interface, Type, NthAttr)
  MX_VISIT_ENTITY(IBOutletCollectionAttr, interface_token, 16, MX_APPLY_METHOD, InterfaceToken, Type, NthAttr)
  MX_EXIT_VISIT_IBOutletCollectionAttr
MX_END_VISIT_ATTR(IBOutletCollectionAttr)

#ifndef MX_ENTER_VISIT_IBOutletAttr
#  define MX_ENTER_VISIT_IBOutletAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_IBOutletAttr
#  define MX_EXIT_VISIT_IBOutletAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(IBOutletAttr)
  MX_ENTER_VISIT_IBOutletAttr
  MX_VISIT_BASE(IBOutletAttr, InheritableAttr)
  MX_EXIT_VISIT_IBOutletAttr
MX_END_VISIT_ATTR(IBOutletAttr)

#ifndef MX_ENTER_VISIT_IBActionAttr
#  define MX_ENTER_VISIT_IBActionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_IBActionAttr
#  define MX_EXIT_VISIT_IBActionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(IBActionAttr)
  MX_ENTER_VISIT_IBActionAttr
  MX_VISIT_BASE(IBActionAttr, InheritableAttr)
  MX_EXIT_VISIT_IBActionAttr
MX_END_VISIT_ATTR(IBActionAttr)

#ifndef MX_ENTER_VISIT_HotAttr
#  define MX_ENTER_VISIT_HotAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_HotAttr
#  define MX_EXIT_VISIT_HotAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(HotAttr)
  MX_ENTER_VISIT_HotAttr
  MX_VISIT_BASE(HotAttr, InheritableAttr)
  MX_EXIT_VISIT_HotAttr
MX_END_VISIT_ATTR(HotAttr)

#ifndef MX_ENTER_VISIT_HLSLShaderAttr
#  define MX_ENTER_VISIT_HLSLShaderAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLShaderAttr
#  define MX_EXIT_VISIT_HLSLShaderAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(HLSLShaderAttr)
  MX_ENTER_VISIT_HLSLShaderAttr
  MX_VISIT_BASE(HLSLShaderAttr, InheritableAttr)
  MX_VISIT_ENUM(HLSLShaderAttr, type, 10, MX_APPLY_METHOD, Type, HLSLShaderAttrShaderType, NthAttr)
  MX_EXIT_VISIT_HLSLShaderAttr
MX_END_VISIT_ATTR(HLSLShaderAttr)

#ifndef MX_ENTER_VISIT_HLSLResourceBindingAttr
#  define MX_ENTER_VISIT_HLSLResourceBindingAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLResourceBindingAttr
#  define MX_EXIT_VISIT_HLSLResourceBindingAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(HLSLResourceBindingAttr)
  MX_ENTER_VISIT_HLSLResourceBindingAttr
  MX_VISIT_BASE(HLSLResourceBindingAttr, InheritableAttr)
  MX_VISIT_TEXT(HLSLResourceBindingAttr, slot, 9, MX_APPLY_METHOD, Slot, basic_string_view, NthAttr)
  MX_VISIT_TEXT(HLSLResourceBindingAttr, space, 17, MX_APPLY_METHOD, Space, basic_string_view, NthAttr)
  MX_EXIT_VISIT_HLSLResourceBindingAttr
MX_END_VISIT_ATTR(HLSLResourceBindingAttr)

#ifndef MX_ENTER_VISIT_HLSLResourceAttr
#  define MX_ENTER_VISIT_HLSLResourceAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLResourceAttr
#  define MX_EXIT_VISIT_HLSLResourceAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(HLSLResourceAttr)
  MX_ENTER_VISIT_HLSLResourceAttr
  MX_VISIT_BASE(HLSLResourceAttr, InheritableAttr)
  MX_VISIT_ENUM(HLSLResourceAttr, resource_shape, 10, MX_APPLY_METHOD, ResourceShape, HLSLResourceAttrResourceKind, NthAttr)
  MX_VISIT_ENUM(HLSLResourceAttr, resource_type, 14, MX_APPLY_METHOD, ResourceType, HLSLResourceAttrResourceClass, NthAttr)
  MX_EXIT_VISIT_HLSLResourceAttr
MX_END_VISIT_ATTR(HLSLResourceAttr)

#ifndef MX_ENTER_VISIT_HLSLNumThreadsAttr
#  define MX_ENTER_VISIT_HLSLNumThreadsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLNumThreadsAttr
#  define MX_EXIT_VISIT_HLSLNumThreadsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(HLSLNumThreadsAttr)
  MX_ENTER_VISIT_HLSLNumThreadsAttr
  MX_VISIT_BASE(HLSLNumThreadsAttr, InheritableAttr)
  MX_EXIT_VISIT_HLSLNumThreadsAttr
MX_END_VISIT_ATTR(HLSLNumThreadsAttr)

#ifndef MX_ENTER_VISIT_HLSLAnnotationAttr
#  define MX_ENTER_VISIT_HLSLAnnotationAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLAnnotationAttr
#  define MX_EXIT_VISIT_HLSLAnnotationAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(HLSLAnnotationAttr)
  MX_ENTER_VISIT_HLSLAnnotationAttr
  MX_VISIT_BASE(HLSLAnnotationAttr, InheritableAttr)
  MX_EXIT_VISIT_HLSLAnnotationAttr
MX_END_VISIT_ATTR(HLSLAnnotationAttr)

#ifndef MX_ENTER_VISIT_HLSLSV_GroupIndexAttr
#  define MX_ENTER_VISIT_HLSLSV_GroupIndexAttr MX_ENTER_VISIT_HLSLAnnotationAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLSV_GroupIndexAttr
#  define MX_EXIT_VISIT_HLSLSV_GroupIndexAttr MX_EXIT_VISIT_HLSLAnnotationAttr
#endif

MX_BEGIN_VISIT_ATTR(HLSLSV_GroupIndexAttr)
  MX_ENTER_VISIT_HLSLSV_GroupIndexAttr
  MX_VISIT_BASE(HLSLSV_GroupIndexAttr, HLSLAnnotationAttr)
  MX_EXIT_VISIT_HLSLSV_GroupIndexAttr
MX_END_VISIT_ATTR(HLSLSV_GroupIndexAttr)

#ifndef MX_ENTER_VISIT_HLSLSV_DispatchThreadIDAttr
#  define MX_ENTER_VISIT_HLSLSV_DispatchThreadIDAttr MX_ENTER_VISIT_HLSLAnnotationAttr
#endif
#ifndef MX_EXIT_VISIT_HLSLSV_DispatchThreadIDAttr
#  define MX_EXIT_VISIT_HLSLSV_DispatchThreadIDAttr MX_EXIT_VISIT_HLSLAnnotationAttr
#endif

MX_BEGIN_VISIT_ATTR(HLSLSV_DispatchThreadIDAttr)
  MX_ENTER_VISIT_HLSLSV_DispatchThreadIDAttr
  MX_VISIT_BASE(HLSLSV_DispatchThreadIDAttr, HLSLAnnotationAttr)
  MX_EXIT_VISIT_HLSLSV_DispatchThreadIDAttr
MX_END_VISIT_ATTR(HLSLSV_DispatchThreadIDAttr)

#ifndef MX_ENTER_VISIT_HIPManagedAttr
#  define MX_ENTER_VISIT_HIPManagedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_HIPManagedAttr
#  define MX_EXIT_VISIT_HIPManagedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(HIPManagedAttr)
  MX_ENTER_VISIT_HIPManagedAttr
  MX_VISIT_BASE(HIPManagedAttr, InheritableAttr)
  MX_EXIT_VISIT_HIPManagedAttr
MX_END_VISIT_ATTR(HIPManagedAttr)

#ifndef MX_ENTER_VISIT_GuardedVarAttr
#  define MX_ENTER_VISIT_GuardedVarAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_GuardedVarAttr
#  define MX_EXIT_VISIT_GuardedVarAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(GuardedVarAttr)
  MX_ENTER_VISIT_GuardedVarAttr
  MX_VISIT_BASE(GuardedVarAttr, InheritableAttr)
  MX_EXIT_VISIT_GuardedVarAttr
MX_END_VISIT_ATTR(GuardedVarAttr)

#ifndef MX_ENTER_VISIT_GuardedByAttr
#  define MX_ENTER_VISIT_GuardedByAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_GuardedByAttr
#  define MX_EXIT_VISIT_GuardedByAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(GuardedByAttr)
  MX_ENTER_VISIT_GuardedByAttr
  MX_VISIT_BASE(GuardedByAttr, InheritableAttr)
  MX_VISIT_ENTITY(GuardedByAttr, argument, 8, MX_APPLY_METHOD, Argument, Expr, NthAttr)
  MX_EXIT_VISIT_GuardedByAttr
MX_END_VISIT_ATTR(GuardedByAttr)

#ifndef MX_ENTER_VISIT_GNUInlineAttr
#  define MX_ENTER_VISIT_GNUInlineAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_GNUInlineAttr
#  define MX_EXIT_VISIT_GNUInlineAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(GNUInlineAttr)
  MX_ENTER_VISIT_GNUInlineAttr
  MX_VISIT_BASE(GNUInlineAttr, InheritableAttr)
  MX_EXIT_VISIT_GNUInlineAttr
MX_END_VISIT_ATTR(GNUInlineAttr)

#ifndef MX_ENTER_VISIT_FunctionReturnThunksAttr
#  define MX_ENTER_VISIT_FunctionReturnThunksAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_FunctionReturnThunksAttr
#  define MX_EXIT_VISIT_FunctionReturnThunksAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(FunctionReturnThunksAttr)
  MX_ENTER_VISIT_FunctionReturnThunksAttr
  MX_VISIT_BASE(FunctionReturnThunksAttr, InheritableAttr)
  MX_VISIT_ENUM(FunctionReturnThunksAttr, thunk_type, 10, MX_APPLY_METHOD, ThunkType, FunctionReturnThunksAttrKind, NthAttr)
  MX_EXIT_VISIT_FunctionReturnThunksAttr
MX_END_VISIT_ATTR(FunctionReturnThunksAttr)

#ifndef MX_ENTER_VISIT_FormatAttr
#  define MX_ENTER_VISIT_FormatAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_FormatAttr
#  define MX_EXIT_VISIT_FormatAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(FormatAttr)
  MX_ENTER_VISIT_FormatAttr
  MX_VISIT_BASE(FormatAttr, InheritableAttr)
  MX_EXIT_VISIT_FormatAttr
MX_END_VISIT_ATTR(FormatAttr)

#ifndef MX_ENTER_VISIT_FormatArgAttr
#  define MX_ENTER_VISIT_FormatArgAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_FormatArgAttr
#  define MX_EXIT_VISIT_FormatArgAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(FormatArgAttr)
  MX_ENTER_VISIT_FormatArgAttr
  MX_VISIT_BASE(FormatArgAttr, InheritableAttr)
  MX_EXIT_VISIT_FormatArgAttr
MX_END_VISIT_ATTR(FormatArgAttr)

#ifndef MX_ENTER_VISIT_FlattenAttr
#  define MX_ENTER_VISIT_FlattenAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_FlattenAttr
#  define MX_EXIT_VISIT_FlattenAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(FlattenAttr)
  MX_ENTER_VISIT_FlattenAttr
  MX_VISIT_BASE(FlattenAttr, InheritableAttr)
  MX_EXIT_VISIT_FlattenAttr
MX_END_VISIT_ATTR(FlattenAttr)

#ifndef MX_ENTER_VISIT_FlagEnumAttr
#  define MX_ENTER_VISIT_FlagEnumAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_FlagEnumAttr
#  define MX_EXIT_VISIT_FlagEnumAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(FlagEnumAttr)
  MX_ENTER_VISIT_FlagEnumAttr
  MX_VISIT_BASE(FlagEnumAttr, InheritableAttr)
  MX_EXIT_VISIT_FlagEnumAttr
MX_END_VISIT_ATTR(FlagEnumAttr)

#ifndef MX_ENTER_VISIT_FinalAttr
#  define MX_ENTER_VISIT_FinalAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_FinalAttr
#  define MX_EXIT_VISIT_FinalAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(FinalAttr)
  MX_ENTER_VISIT_FinalAttr
  MX_VISIT_BASE(FinalAttr, InheritableAttr)
  MX_VISIT_ENUM(FinalAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, FinalAttrSpelling, NthAttr)
  MX_VISIT_BOOL(FinalAttr, is_spelled_as_sealed, 12, MX_APPLY_METHOD, IsSpelledAsSealed, bool, NthAttr)
  MX_EXIT_VISIT_FinalAttr
MX_END_VISIT_ATTR(FinalAttr)

#ifndef MX_ENTER_VISIT_FastCallAttr
#  define MX_ENTER_VISIT_FastCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_FastCallAttr
#  define MX_EXIT_VISIT_FastCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(FastCallAttr)
  MX_ENTER_VISIT_FastCallAttr
  MX_VISIT_BASE(FastCallAttr, InheritableAttr)
  MX_EXIT_VISIT_FastCallAttr
MX_END_VISIT_ATTR(FastCallAttr)

#ifndef MX_ENTER_VISIT_ExternalSourceSymbolAttr
#  define MX_ENTER_VISIT_ExternalSourceSymbolAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ExternalSourceSymbolAttr
#  define MX_EXIT_VISIT_ExternalSourceSymbolAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ExternalSourceSymbolAttr)
  MX_ENTER_VISIT_ExternalSourceSymbolAttr
  MX_VISIT_BASE(ExternalSourceSymbolAttr, InheritableAttr)
  MX_VISIT_TEXT(ExternalSourceSymbolAttr, defined_in, 9, MX_APPLY_METHOD, DefinedIn, basic_string_view, NthAttr)
  MX_VISIT_BOOL(ExternalSourceSymbolAttr, generated_declaration, 12, MX_APPLY_METHOD, GeneratedDeclaration, bool, NthAttr)
  MX_VISIT_TEXT(ExternalSourceSymbolAttr, language, 17, MX_APPLY_METHOD, Language, basic_string_view, NthAttr)
  MX_VISIT_TEXT(ExternalSourceSymbolAttr, usr, 18, MX_APPLY_METHOD, USR, basic_string_view, NthAttr)
  MX_EXIT_VISIT_ExternalSourceSymbolAttr
MX_END_VISIT_ATTR(ExternalSourceSymbolAttr)

#ifndef MX_ENTER_VISIT_ExclusiveTrylockFunctionAttr
#  define MX_ENTER_VISIT_ExclusiveTrylockFunctionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ExclusiveTrylockFunctionAttr
#  define MX_EXIT_VISIT_ExclusiveTrylockFunctionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ExclusiveTrylockFunctionAttr)
  MX_ENTER_VISIT_ExclusiveTrylockFunctionAttr
  MX_VISIT_BASE(ExclusiveTrylockFunctionAttr, InheritableAttr)
  MX_VISIT_ENTITY(ExclusiveTrylockFunctionAttr, success_value, 8, MX_APPLY_METHOD, SuccessValue, Expr, NthAttr)
  MX_EXIT_VISIT_ExclusiveTrylockFunctionAttr
MX_END_VISIT_ATTR(ExclusiveTrylockFunctionAttr)

#ifndef MX_ENTER_VISIT_ExcludeFromExplicitInstantiationAttr
#  define MX_ENTER_VISIT_ExcludeFromExplicitInstantiationAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ExcludeFromExplicitInstantiationAttr
#  define MX_EXIT_VISIT_ExcludeFromExplicitInstantiationAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ExcludeFromExplicitInstantiationAttr)
  MX_ENTER_VISIT_ExcludeFromExplicitInstantiationAttr
  MX_VISIT_BASE(ExcludeFromExplicitInstantiationAttr, InheritableAttr)
  MX_EXIT_VISIT_ExcludeFromExplicitInstantiationAttr
MX_END_VISIT_ATTR(ExcludeFromExplicitInstantiationAttr)

#ifndef MX_ENTER_VISIT_ErrorAttr
#  define MX_ENTER_VISIT_ErrorAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ErrorAttr
#  define MX_EXIT_VISIT_ErrorAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ErrorAttr)
  MX_ENTER_VISIT_ErrorAttr
  MX_VISIT_BASE(ErrorAttr, InheritableAttr)
  MX_VISIT_ENUM(ErrorAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, ErrorAttrSpelling, NthAttr)
  MX_VISIT_TEXT(ErrorAttr, user_diagnostic, 9, MX_APPLY_METHOD, UserDiagnostic, basic_string_view, NthAttr)
  MX_VISIT_BOOL(ErrorAttr, is_error, 12, MX_APPLY_METHOD, IsError, bool, NthAttr)
  MX_VISIT_BOOL(ErrorAttr, is_warning, 13, MX_APPLY_METHOD, IsWarning, bool, NthAttr)
  MX_EXIT_VISIT_ErrorAttr
MX_END_VISIT_ATTR(ErrorAttr)

#ifndef MX_ENTER_VISIT_EnumExtensibilityAttr
#  define MX_ENTER_VISIT_EnumExtensibilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_EnumExtensibilityAttr
#  define MX_EXIT_VISIT_EnumExtensibilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(EnumExtensibilityAttr)
  MX_ENTER_VISIT_EnumExtensibilityAttr
  MX_VISIT_BASE(EnumExtensibilityAttr, InheritableAttr)
  MX_VISIT_ENUM(EnumExtensibilityAttr, extensibility, 10, MX_APPLY_METHOD, Extensibility, EnumExtensibilityAttrKind, NthAttr)
  MX_EXIT_VISIT_EnumExtensibilityAttr
MX_END_VISIT_ATTR(EnumExtensibilityAttr)

#ifndef MX_ENTER_VISIT_EnforceTCBLeafAttr
#  define MX_ENTER_VISIT_EnforceTCBLeafAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_EnforceTCBLeafAttr
#  define MX_EXIT_VISIT_EnforceTCBLeafAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(EnforceTCBLeafAttr)
  MX_ENTER_VISIT_EnforceTCBLeafAttr
  MX_VISIT_BASE(EnforceTCBLeafAttr, InheritableAttr)
  MX_VISIT_TEXT(EnforceTCBLeafAttr, tcb_name, 9, MX_APPLY_METHOD, TCBName, basic_string_view, NthAttr)
  MX_EXIT_VISIT_EnforceTCBLeafAttr
MX_END_VISIT_ATTR(EnforceTCBLeafAttr)

#ifndef MX_ENTER_VISIT_EnforceTCBAttr
#  define MX_ENTER_VISIT_EnforceTCBAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_EnforceTCBAttr
#  define MX_EXIT_VISIT_EnforceTCBAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(EnforceTCBAttr)
  MX_ENTER_VISIT_EnforceTCBAttr
  MX_VISIT_BASE(EnforceTCBAttr, InheritableAttr)
  MX_VISIT_TEXT(EnforceTCBAttr, tcb_name, 9, MX_APPLY_METHOD, TCBName, basic_string_view, NthAttr)
  MX_EXIT_VISIT_EnforceTCBAttr
MX_END_VISIT_ATTR(EnforceTCBAttr)

#ifndef MX_ENTER_VISIT_EnableIfAttr
#  define MX_ENTER_VISIT_EnableIfAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_EnableIfAttr
#  define MX_EXIT_VISIT_EnableIfAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(EnableIfAttr)
  MX_ENTER_VISIT_EnableIfAttr
  MX_VISIT_BASE(EnableIfAttr, InheritableAttr)
  MX_VISIT_ENTITY(EnableIfAttr, condition, 8, MX_APPLY_METHOD, Condition, Expr, NthAttr)
  MX_VISIT_TEXT(EnableIfAttr, message, 9, MX_APPLY_METHOD, Message, basic_string_view, NthAttr)
  MX_EXIT_VISIT_EnableIfAttr
MX_END_VISIT_ATTR(EnableIfAttr)

#ifndef MX_ENTER_VISIT_EmptyBasesAttr
#  define MX_ENTER_VISIT_EmptyBasesAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_EmptyBasesAttr
#  define MX_EXIT_VISIT_EmptyBasesAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(EmptyBasesAttr)
  MX_ENTER_VISIT_EmptyBasesAttr
  MX_VISIT_BASE(EmptyBasesAttr, InheritableAttr)
  MX_EXIT_VISIT_EmptyBasesAttr
MX_END_VISIT_ATTR(EmptyBasesAttr)

#ifndef MX_ENTER_VISIT_DisableTailCallsAttr
#  define MX_ENTER_VISIT_DisableTailCallsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DisableTailCallsAttr
#  define MX_EXIT_VISIT_DisableTailCallsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DisableTailCallsAttr)
  MX_ENTER_VISIT_DisableTailCallsAttr
  MX_VISIT_BASE(DisableTailCallsAttr, InheritableAttr)
  MX_EXIT_VISIT_DisableTailCallsAttr
MX_END_VISIT_ATTR(DisableTailCallsAttr)

#ifndef MX_ENTER_VISIT_DisableSanitizerInstrumentationAttr
#  define MX_ENTER_VISIT_DisableSanitizerInstrumentationAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DisableSanitizerInstrumentationAttr
#  define MX_EXIT_VISIT_DisableSanitizerInstrumentationAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DisableSanitizerInstrumentationAttr)
  MX_ENTER_VISIT_DisableSanitizerInstrumentationAttr
  MX_VISIT_BASE(DisableSanitizerInstrumentationAttr, InheritableAttr)
  MX_EXIT_VISIT_DisableSanitizerInstrumentationAttr
MX_END_VISIT_ATTR(DisableSanitizerInstrumentationAttr)

#ifndef MX_ENTER_VISIT_DiagnoseIfAttr
#  define MX_ENTER_VISIT_DiagnoseIfAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DiagnoseIfAttr
#  define MX_EXIT_VISIT_DiagnoseIfAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DiagnoseIfAttr)
  MX_ENTER_VISIT_DiagnoseIfAttr
  MX_VISIT_BASE(DiagnoseIfAttr, InheritableAttr)
  MX_VISIT_BOOL(DiagnoseIfAttr, argument_dependent, 12, MX_APPLY_METHOD, ArgumentDependent, bool, NthAttr)
  MX_VISIT_ENTITY(DiagnoseIfAttr, condition, 8, MX_APPLY_METHOD, Condition, Expr, NthAttr)
  MX_VISIT_ENUM(DiagnoseIfAttr, diagnostic_type, 10, MX_APPLY_METHOD, DiagnosticType, DiagnoseIfAttrDiagnosticType, NthAttr)
  MX_VISIT_TEXT(DiagnoseIfAttr, message, 9, MX_APPLY_METHOD, Message, basic_string_view, NthAttr)
  MX_VISIT_ENTITY(DiagnoseIfAttr, parent, 16, MX_APPLY_METHOD, Parent, NamedDecl, NthAttr)
  MX_VISIT_BOOL(DiagnoseIfAttr, is_error, 13, MX_APPLY_METHOD, IsError, bool, NthAttr)
  MX_VISIT_BOOL(DiagnoseIfAttr, is_warning, 19, MX_APPLY_METHOD, IsWarning, bool, NthAttr)
  MX_EXIT_VISIT_DiagnoseIfAttr
MX_END_VISIT_ATTR(DiagnoseIfAttr)

#ifndef MX_ENTER_VISIT_DiagnoseAsBuiltinAttr
#  define MX_ENTER_VISIT_DiagnoseAsBuiltinAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DiagnoseAsBuiltinAttr
#  define MX_EXIT_VISIT_DiagnoseAsBuiltinAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DiagnoseAsBuiltinAttr)
  MX_ENTER_VISIT_DiagnoseAsBuiltinAttr
  MX_VISIT_BASE(DiagnoseAsBuiltinAttr, InheritableAttr)
  MX_VISIT_ENTITY(DiagnoseAsBuiltinAttr, function, 8, MX_APPLY_METHOD, Function, FunctionDecl, NthAttr)
  MX_EXIT_VISIT_DiagnoseAsBuiltinAttr
MX_END_VISIT_ATTR(DiagnoseAsBuiltinAttr)

#ifndef MX_ENTER_VISIT_DestructorAttr
#  define MX_ENTER_VISIT_DestructorAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DestructorAttr
#  define MX_EXIT_VISIT_DestructorAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DestructorAttr)
  MX_ENTER_VISIT_DestructorAttr
  MX_VISIT_BASE(DestructorAttr, InheritableAttr)
  MX_EXIT_VISIT_DestructorAttr
MX_END_VISIT_ATTR(DestructorAttr)

#ifndef MX_ENTER_VISIT_DeprecatedAttr
#  define MX_ENTER_VISIT_DeprecatedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DeprecatedAttr
#  define MX_EXIT_VISIT_DeprecatedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DeprecatedAttr)
  MX_ENTER_VISIT_DeprecatedAttr
  MX_VISIT_BASE(DeprecatedAttr, InheritableAttr)
  MX_VISIT_TEXT(DeprecatedAttr, message, 9, MX_APPLY_METHOD, Message, basic_string_view, NthAttr)
  MX_VISIT_TEXT(DeprecatedAttr, replacement, 17, MX_APPLY_METHOD, Replacement, basic_string_view, NthAttr)
  MX_EXIT_VISIT_DeprecatedAttr
MX_END_VISIT_ATTR(DeprecatedAttr)

#ifndef MX_ENTER_VISIT_DeclOrStmtAttr
#  define MX_ENTER_VISIT_DeclOrStmtAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DeclOrStmtAttr
#  define MX_EXIT_VISIT_DeclOrStmtAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(DeclOrStmtAttr)
  MX_ENTER_VISIT_DeclOrStmtAttr
  MX_VISIT_BASE(DeclOrStmtAttr, InheritableAttr)
  MX_EXIT_VISIT_DeclOrStmtAttr
MX_END_VISIT_ATTR(DeclOrStmtAttr)

#ifndef MX_ENTER_VISIT_AlwaysInlineAttr
#  define MX_ENTER_VISIT_AlwaysInlineAttr MX_ENTER_VISIT_DeclOrStmtAttr
#endif
#ifndef MX_EXIT_VISIT_AlwaysInlineAttr
#  define MX_EXIT_VISIT_AlwaysInlineAttr MX_EXIT_VISIT_DeclOrStmtAttr
#endif

MX_BEGIN_VISIT_ATTR(AlwaysInlineAttr)
  MX_ENTER_VISIT_AlwaysInlineAttr
  MX_VISIT_BASE(AlwaysInlineAttr, DeclOrStmtAttr)
  MX_VISIT_ENUM(AlwaysInlineAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, AlwaysInlineAttrSpelling, NthAttr)
  MX_VISIT_BOOL(AlwaysInlineAttr, is_clang_always_inline, 12, MX_APPLY_METHOD, IsClangAlwaysInline, bool, NthAttr)
  MX_EXIT_VISIT_AlwaysInlineAttr
MX_END_VISIT_ATTR(AlwaysInlineAttr)

#ifndef MX_ENTER_VISIT_NoMergeAttr
#  define MX_ENTER_VISIT_NoMergeAttr MX_ENTER_VISIT_DeclOrStmtAttr
#endif
#ifndef MX_EXIT_VISIT_NoMergeAttr
#  define MX_EXIT_VISIT_NoMergeAttr MX_EXIT_VISIT_DeclOrStmtAttr
#endif

MX_BEGIN_VISIT_ATTR(NoMergeAttr)
  MX_ENTER_VISIT_NoMergeAttr
  MX_VISIT_BASE(NoMergeAttr, DeclOrStmtAttr)
  MX_EXIT_VISIT_NoMergeAttr
MX_END_VISIT_ATTR(NoMergeAttr)

#ifndef MX_ENTER_VISIT_NoInlineAttr
#  define MX_ENTER_VISIT_NoInlineAttr MX_ENTER_VISIT_DeclOrStmtAttr
#endif
#ifndef MX_EXIT_VISIT_NoInlineAttr
#  define MX_EXIT_VISIT_NoInlineAttr MX_EXIT_VISIT_DeclOrStmtAttr
#endif

MX_BEGIN_VISIT_ATTR(NoInlineAttr)
  MX_ENTER_VISIT_NoInlineAttr
  MX_VISIT_BASE(NoInlineAttr, DeclOrStmtAttr)
  MX_VISIT_BOOL(NoInlineAttr, is_clang_no_inline, 12, MX_APPLY_METHOD, IsClangNoInline, bool, NthAttr)
  MX_EXIT_VISIT_NoInlineAttr
MX_END_VISIT_ATTR(NoInlineAttr)

#ifndef MX_ENTER_VISIT_DLLImportStaticLocalAttr
#  define MX_ENTER_VISIT_DLLImportStaticLocalAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DLLImportStaticLocalAttr
#  define MX_EXIT_VISIT_DLLImportStaticLocalAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DLLImportStaticLocalAttr)
  MX_ENTER_VISIT_DLLImportStaticLocalAttr
  MX_VISIT_BASE(DLLImportStaticLocalAttr, InheritableAttr)
  MX_EXIT_VISIT_DLLImportStaticLocalAttr
MX_END_VISIT_ATTR(DLLImportStaticLocalAttr)

#ifndef MX_ENTER_VISIT_DLLImportAttr
#  define MX_ENTER_VISIT_DLLImportAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DLLImportAttr
#  define MX_EXIT_VISIT_DLLImportAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DLLImportAttr)
  MX_ENTER_VISIT_DLLImportAttr
  MX_VISIT_BASE(DLLImportAttr, InheritableAttr)
  MX_EXIT_VISIT_DLLImportAttr
MX_END_VISIT_ATTR(DLLImportAttr)

#ifndef MX_ENTER_VISIT_DLLExportStaticLocalAttr
#  define MX_ENTER_VISIT_DLLExportStaticLocalAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DLLExportStaticLocalAttr
#  define MX_EXIT_VISIT_DLLExportStaticLocalAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DLLExportStaticLocalAttr)
  MX_ENTER_VISIT_DLLExportStaticLocalAttr
  MX_VISIT_BASE(DLLExportStaticLocalAttr, InheritableAttr)
  MX_EXIT_VISIT_DLLExportStaticLocalAttr
MX_END_VISIT_ATTR(DLLExportStaticLocalAttr)

#ifndef MX_ENTER_VISIT_DLLExportAttr
#  define MX_ENTER_VISIT_DLLExportAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_DLLExportAttr
#  define MX_EXIT_VISIT_DLLExportAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(DLLExportAttr)
  MX_ENTER_VISIT_DLLExportAttr
  MX_VISIT_BASE(DLLExportAttr, InheritableAttr)
  MX_EXIT_VISIT_DLLExportAttr
MX_END_VISIT_ATTR(DLLExportAttr)

#ifndef MX_ENTER_VISIT_ConvergentAttr
#  define MX_ENTER_VISIT_ConvergentAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ConvergentAttr
#  define MX_EXIT_VISIT_ConvergentAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ConvergentAttr)
  MX_ENTER_VISIT_ConvergentAttr
  MX_VISIT_BASE(ConvergentAttr, InheritableAttr)
  MX_EXIT_VISIT_ConvergentAttr
MX_END_VISIT_ATTR(ConvergentAttr)

#ifndef MX_ENTER_VISIT_ConsumableSetOnReadAttr
#  define MX_ENTER_VISIT_ConsumableSetOnReadAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ConsumableSetOnReadAttr
#  define MX_EXIT_VISIT_ConsumableSetOnReadAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ConsumableSetOnReadAttr)
  MX_ENTER_VISIT_ConsumableSetOnReadAttr
  MX_VISIT_BASE(ConsumableSetOnReadAttr, InheritableAttr)
  MX_EXIT_VISIT_ConsumableSetOnReadAttr
MX_END_VISIT_ATTR(ConsumableSetOnReadAttr)

#ifndef MX_ENTER_VISIT_ConsumableAutoCastAttr
#  define MX_ENTER_VISIT_ConsumableAutoCastAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ConsumableAutoCastAttr
#  define MX_EXIT_VISIT_ConsumableAutoCastAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ConsumableAutoCastAttr)
  MX_ENTER_VISIT_ConsumableAutoCastAttr
  MX_VISIT_BASE(ConsumableAutoCastAttr, InheritableAttr)
  MX_EXIT_VISIT_ConsumableAutoCastAttr
MX_END_VISIT_ATTR(ConsumableAutoCastAttr)

#ifndef MX_ENTER_VISIT_ConsumableAttr
#  define MX_ENTER_VISIT_ConsumableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ConsumableAttr
#  define MX_EXIT_VISIT_ConsumableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ConsumableAttr)
  MX_ENTER_VISIT_ConsumableAttr
  MX_VISIT_BASE(ConsumableAttr, InheritableAttr)
  MX_VISIT_ENUM(ConsumableAttr, default_state, 10, MX_APPLY_METHOD, DefaultState, ConsumableAttrConsumedState, NthAttr)
  MX_EXIT_VISIT_ConsumableAttr
MX_END_VISIT_ATTR(ConsumableAttr)

#ifndef MX_ENTER_VISIT_ConstructorAttr
#  define MX_ENTER_VISIT_ConstructorAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ConstructorAttr
#  define MX_EXIT_VISIT_ConstructorAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ConstructorAttr)
  MX_ENTER_VISIT_ConstructorAttr
  MX_VISIT_BASE(ConstructorAttr, InheritableAttr)
  MX_EXIT_VISIT_ConstructorAttr
MX_END_VISIT_ATTR(ConstructorAttr)

#ifndef MX_ENTER_VISIT_ConstInitAttr
#  define MX_ENTER_VISIT_ConstInitAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ConstInitAttr
#  define MX_EXIT_VISIT_ConstInitAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ConstInitAttr)
  MX_ENTER_VISIT_ConstInitAttr
  MX_VISIT_BASE(ConstInitAttr, InheritableAttr)
  MX_VISIT_ENUM(ConstInitAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, ConstInitAttrSpelling, NthAttr)
  MX_VISIT_BOOL(ConstInitAttr, is_constinit, 12, MX_APPLY_METHOD, IsConstinit, bool, NthAttr)
  MX_EXIT_VISIT_ConstInitAttr
MX_END_VISIT_ATTR(ConstInitAttr)

#ifndef MX_ENTER_VISIT_ConstAttr
#  define MX_ENTER_VISIT_ConstAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ConstAttr
#  define MX_EXIT_VISIT_ConstAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ConstAttr)
  MX_ENTER_VISIT_ConstAttr
  MX_VISIT_BASE(ConstAttr, InheritableAttr)
  MX_EXIT_VISIT_ConstAttr
MX_END_VISIT_ATTR(ConstAttr)

#ifndef MX_ENTER_VISIT_CommonAttr
#  define MX_ENTER_VISIT_CommonAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CommonAttr
#  define MX_EXIT_VISIT_CommonAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CommonAttr)
  MX_ENTER_VISIT_CommonAttr
  MX_VISIT_BASE(CommonAttr, InheritableAttr)
  MX_EXIT_VISIT_CommonAttr
MX_END_VISIT_ATTR(CommonAttr)

#ifndef MX_ENTER_VISIT_ColdAttr
#  define MX_ENTER_VISIT_ColdAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ColdAttr
#  define MX_EXIT_VISIT_ColdAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ColdAttr)
  MX_ENTER_VISIT_ColdAttr
  MX_VISIT_BASE(ColdAttr, InheritableAttr)
  MX_EXIT_VISIT_ColdAttr
MX_END_VISIT_ATTR(ColdAttr)

#ifndef MX_ENTER_VISIT_CodeSegAttr
#  define MX_ENTER_VISIT_CodeSegAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CodeSegAttr
#  define MX_EXIT_VISIT_CodeSegAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CodeSegAttr)
  MX_ENTER_VISIT_CodeSegAttr
  MX_VISIT_BASE(CodeSegAttr, InheritableAttr)
  MX_VISIT_TEXT(CodeSegAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_CodeSegAttr
MX_END_VISIT_ATTR(CodeSegAttr)

#ifndef MX_ENTER_VISIT_CmseNSEntryAttr
#  define MX_ENTER_VISIT_CmseNSEntryAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CmseNSEntryAttr
#  define MX_EXIT_VISIT_CmseNSEntryAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CmseNSEntryAttr)
  MX_ENTER_VISIT_CmseNSEntryAttr
  MX_VISIT_BASE(CmseNSEntryAttr, InheritableAttr)
  MX_EXIT_VISIT_CmseNSEntryAttr
MX_END_VISIT_ATTR(CmseNSEntryAttr)

#ifndef MX_ENTER_VISIT_CleanupAttr
#  define MX_ENTER_VISIT_CleanupAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CleanupAttr
#  define MX_EXIT_VISIT_CleanupAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CleanupAttr)
  MX_ENTER_VISIT_CleanupAttr
  MX_VISIT_BASE(CleanupAttr, InheritableAttr)
  MX_VISIT_ENTITY(CleanupAttr, function_declaration, 8, MX_APPLY_METHOD, FunctionDeclaration, FunctionDecl, NthAttr)
  MX_EXIT_VISIT_CleanupAttr
MX_END_VISIT_ATTR(CleanupAttr)

#ifndef MX_ENTER_VISIT_CapturedRecordAttr
#  define MX_ENTER_VISIT_CapturedRecordAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CapturedRecordAttr
#  define MX_EXIT_VISIT_CapturedRecordAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CapturedRecordAttr)
  MX_ENTER_VISIT_CapturedRecordAttr
  MX_VISIT_BASE(CapturedRecordAttr, InheritableAttr)
  MX_EXIT_VISIT_CapturedRecordAttr
MX_END_VISIT_ATTR(CapturedRecordAttr)

#ifndef MX_ENTER_VISIT_CapabilityAttr
#  define MX_ENTER_VISIT_CapabilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CapabilityAttr
#  define MX_EXIT_VISIT_CapabilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CapabilityAttr)
  MX_ENTER_VISIT_CapabilityAttr
  MX_VISIT_BASE(CapabilityAttr, InheritableAttr)
  MX_VISIT_TEXT(CapabilityAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_VISIT_ENUM(CapabilityAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, CapabilityAttrSpelling, NthAttr)
  MX_VISIT_BOOL(CapabilityAttr, is_shared, 12, MX_APPLY_METHOD, IsShared, bool, NthAttr)
  MX_EXIT_VISIT_CapabilityAttr
MX_END_VISIT_ATTR(CapabilityAttr)

#ifndef MX_ENTER_VISIT_CallbackAttr
#  define MX_ENTER_VISIT_CallbackAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CallbackAttr
#  define MX_EXIT_VISIT_CallbackAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CallbackAttr)
  MX_ENTER_VISIT_CallbackAttr
  MX_VISIT_BASE(CallbackAttr, InheritableAttr)
  MX_EXIT_VISIT_CallbackAttr
MX_END_VISIT_ATTR(CallbackAttr)

#ifndef MX_ENTER_VISIT_CallableWhenAttr
#  define MX_ENTER_VISIT_CallableWhenAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CallableWhenAttr
#  define MX_EXIT_VISIT_CallableWhenAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CallableWhenAttr)
  MX_ENTER_VISIT_CallableWhenAttr
  MX_VISIT_BASE(CallableWhenAttr, InheritableAttr)
  MX_EXIT_VISIT_CallableWhenAttr
MX_END_VISIT_ATTR(CallableWhenAttr)

#ifndef MX_ENTER_VISIT_CXX11NoReturnAttr
#  define MX_ENTER_VISIT_CXX11NoReturnAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CXX11NoReturnAttr
#  define MX_EXIT_VISIT_CXX11NoReturnAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CXX11NoReturnAttr)
  MX_ENTER_VISIT_CXX11NoReturnAttr
  MX_VISIT_BASE(CXX11NoReturnAttr, InheritableAttr)
  MX_VISIT_ENUM(CXX11NoReturnAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, CXX11NoReturnAttrSpelling, NthAttr)
  MX_EXIT_VISIT_CXX11NoReturnAttr
MX_END_VISIT_ATTR(CXX11NoReturnAttr)

#ifndef MX_ENTER_VISIT_CUDASharedAttr
#  define MX_ENTER_VISIT_CUDASharedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDASharedAttr
#  define MX_EXIT_VISIT_CUDASharedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDASharedAttr)
  MX_ENTER_VISIT_CUDASharedAttr
  MX_VISIT_BASE(CUDASharedAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDASharedAttr
MX_END_VISIT_ATTR(CUDASharedAttr)

#ifndef MX_ENTER_VISIT_CUDALaunchBoundsAttr
#  define MX_ENTER_VISIT_CUDALaunchBoundsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDALaunchBoundsAttr
#  define MX_EXIT_VISIT_CUDALaunchBoundsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDALaunchBoundsAttr)
  MX_ENTER_VISIT_CUDALaunchBoundsAttr
  MX_VISIT_BASE(CUDALaunchBoundsAttr, InheritableAttr)
  MX_VISIT_ENTITY(CUDALaunchBoundsAttr, max_threads, 8, MX_APPLY_METHOD, MaxThreads, Expr, NthAttr)
  MX_VISIT_ENTITY(CUDALaunchBoundsAttr, min_blocks, 16, MX_APPLY_METHOD, MinBlocks, Expr, NthAttr)
  MX_EXIT_VISIT_CUDALaunchBoundsAttr
MX_END_VISIT_ATTR(CUDALaunchBoundsAttr)

#ifndef MX_ENTER_VISIT_CUDAInvalidTargetAttr
#  define MX_ENTER_VISIT_CUDAInvalidTargetAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDAInvalidTargetAttr
#  define MX_EXIT_VISIT_CUDAInvalidTargetAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDAInvalidTargetAttr)
  MX_ENTER_VISIT_CUDAInvalidTargetAttr
  MX_VISIT_BASE(CUDAInvalidTargetAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDAInvalidTargetAttr
MX_END_VISIT_ATTR(CUDAInvalidTargetAttr)

#ifndef MX_ENTER_VISIT_CUDAHostAttr
#  define MX_ENTER_VISIT_CUDAHostAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDAHostAttr
#  define MX_EXIT_VISIT_CUDAHostAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDAHostAttr)
  MX_ENTER_VISIT_CUDAHostAttr
  MX_VISIT_BASE(CUDAHostAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDAHostAttr
MX_END_VISIT_ATTR(CUDAHostAttr)

#ifndef MX_ENTER_VISIT_CUDAGlobalAttr
#  define MX_ENTER_VISIT_CUDAGlobalAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDAGlobalAttr
#  define MX_EXIT_VISIT_CUDAGlobalAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDAGlobalAttr)
  MX_ENTER_VISIT_CUDAGlobalAttr
  MX_VISIT_BASE(CUDAGlobalAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDAGlobalAttr
MX_END_VISIT_ATTR(CUDAGlobalAttr)

#ifndef MX_ENTER_VISIT_CUDADeviceBuiltinTextureTypeAttr
#  define MX_ENTER_VISIT_CUDADeviceBuiltinTextureTypeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDADeviceBuiltinTextureTypeAttr
#  define MX_EXIT_VISIT_CUDADeviceBuiltinTextureTypeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDADeviceBuiltinTextureTypeAttr)
  MX_ENTER_VISIT_CUDADeviceBuiltinTextureTypeAttr
  MX_VISIT_BASE(CUDADeviceBuiltinTextureTypeAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDADeviceBuiltinTextureTypeAttr
MX_END_VISIT_ATTR(CUDADeviceBuiltinTextureTypeAttr)

#ifndef MX_ENTER_VISIT_CUDADeviceBuiltinSurfaceTypeAttr
#  define MX_ENTER_VISIT_CUDADeviceBuiltinSurfaceTypeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDADeviceBuiltinSurfaceTypeAttr
#  define MX_EXIT_VISIT_CUDADeviceBuiltinSurfaceTypeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDADeviceBuiltinSurfaceTypeAttr)
  MX_ENTER_VISIT_CUDADeviceBuiltinSurfaceTypeAttr
  MX_VISIT_BASE(CUDADeviceBuiltinSurfaceTypeAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDADeviceBuiltinSurfaceTypeAttr
MX_END_VISIT_ATTR(CUDADeviceBuiltinSurfaceTypeAttr)

#ifndef MX_ENTER_VISIT_CUDADeviceAttr
#  define MX_ENTER_VISIT_CUDADeviceAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDADeviceAttr
#  define MX_EXIT_VISIT_CUDADeviceAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDADeviceAttr)
  MX_ENTER_VISIT_CUDADeviceAttr
  MX_VISIT_BASE(CUDADeviceAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDADeviceAttr
MX_END_VISIT_ATTR(CUDADeviceAttr)

#ifndef MX_ENTER_VISIT_CUDAConstantAttr
#  define MX_ENTER_VISIT_CUDAConstantAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CUDAConstantAttr
#  define MX_EXIT_VISIT_CUDAConstantAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CUDAConstantAttr)
  MX_ENTER_VISIT_CUDAConstantAttr
  MX_VISIT_BASE(CUDAConstantAttr, InheritableAttr)
  MX_EXIT_VISIT_CUDAConstantAttr
MX_END_VISIT_ATTR(CUDAConstantAttr)

#ifndef MX_ENTER_VISIT_CPUSpecificAttr
#  define MX_ENTER_VISIT_CPUSpecificAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CPUSpecificAttr
#  define MX_EXIT_VISIT_CPUSpecificAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CPUSpecificAttr)
  MX_ENTER_VISIT_CPUSpecificAttr
  MX_VISIT_BASE(CPUSpecificAttr, InheritableAttr)
  MX_EXIT_VISIT_CPUSpecificAttr
MX_END_VISIT_ATTR(CPUSpecificAttr)

#ifndef MX_ENTER_VISIT_CPUDispatchAttr
#  define MX_ENTER_VISIT_CPUDispatchAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CPUDispatchAttr
#  define MX_EXIT_VISIT_CPUDispatchAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CPUDispatchAttr)
  MX_ENTER_VISIT_CPUDispatchAttr
  MX_VISIT_BASE(CPUDispatchAttr, InheritableAttr)
  MX_EXIT_VISIT_CPUDispatchAttr
MX_END_VISIT_ATTR(CPUDispatchAttr)

#ifndef MX_ENTER_VISIT_CFUnknownTransferAttr
#  define MX_ENTER_VISIT_CFUnknownTransferAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CFUnknownTransferAttr
#  define MX_EXIT_VISIT_CFUnknownTransferAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CFUnknownTransferAttr)
  MX_ENTER_VISIT_CFUnknownTransferAttr
  MX_VISIT_BASE(CFUnknownTransferAttr, InheritableAttr)
  MX_EXIT_VISIT_CFUnknownTransferAttr
MX_END_VISIT_ATTR(CFUnknownTransferAttr)

#ifndef MX_ENTER_VISIT_CFReturnsRetainedAttr
#  define MX_ENTER_VISIT_CFReturnsRetainedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CFReturnsRetainedAttr
#  define MX_EXIT_VISIT_CFReturnsRetainedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CFReturnsRetainedAttr)
  MX_ENTER_VISIT_CFReturnsRetainedAttr
  MX_VISIT_BASE(CFReturnsRetainedAttr, InheritableAttr)
  MX_EXIT_VISIT_CFReturnsRetainedAttr
MX_END_VISIT_ATTR(CFReturnsRetainedAttr)

#ifndef MX_ENTER_VISIT_CFReturnsNotRetainedAttr
#  define MX_ENTER_VISIT_CFReturnsNotRetainedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CFReturnsNotRetainedAttr
#  define MX_EXIT_VISIT_CFReturnsNotRetainedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CFReturnsNotRetainedAttr)
  MX_ENTER_VISIT_CFReturnsNotRetainedAttr
  MX_VISIT_BASE(CFReturnsNotRetainedAttr, InheritableAttr)
  MX_EXIT_VISIT_CFReturnsNotRetainedAttr
MX_END_VISIT_ATTR(CFReturnsNotRetainedAttr)

#ifndef MX_ENTER_VISIT_CFICanonicalJumpTableAttr
#  define MX_ENTER_VISIT_CFICanonicalJumpTableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CFICanonicalJumpTableAttr
#  define MX_EXIT_VISIT_CFICanonicalJumpTableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CFICanonicalJumpTableAttr)
  MX_ENTER_VISIT_CFICanonicalJumpTableAttr
  MX_VISIT_BASE(CFICanonicalJumpTableAttr, InheritableAttr)
  MX_EXIT_VISIT_CFICanonicalJumpTableAttr
MX_END_VISIT_ATTR(CFICanonicalJumpTableAttr)

#ifndef MX_ENTER_VISIT_CFGuardAttr
#  define MX_ENTER_VISIT_CFGuardAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CFGuardAttr
#  define MX_EXIT_VISIT_CFGuardAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CFGuardAttr)
  MX_ENTER_VISIT_CFGuardAttr
  MX_VISIT_BASE(CFGuardAttr, InheritableAttr)
  MX_VISIT_ENUM(CFGuardAttr, guard, 10, MX_APPLY_METHOD, Guard, CFGuardAttrGuardArg, NthAttr)
  MX_EXIT_VISIT_CFGuardAttr
MX_END_VISIT_ATTR(CFGuardAttr)

#ifndef MX_ENTER_VISIT_CFAuditedTransferAttr
#  define MX_ENTER_VISIT_CFAuditedTransferAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CFAuditedTransferAttr
#  define MX_EXIT_VISIT_CFAuditedTransferAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CFAuditedTransferAttr)
  MX_ENTER_VISIT_CFAuditedTransferAttr
  MX_VISIT_BASE(CFAuditedTransferAttr, InheritableAttr)
  MX_EXIT_VISIT_CFAuditedTransferAttr
MX_END_VISIT_ATTR(CFAuditedTransferAttr)

#ifndef MX_ENTER_VISIT_CDeclAttr
#  define MX_ENTER_VISIT_CDeclAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_CDeclAttr
#  define MX_EXIT_VISIT_CDeclAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(CDeclAttr)
  MX_ENTER_VISIT_CDeclAttr
  MX_VISIT_BASE(CDeclAttr, InheritableAttr)
  MX_EXIT_VISIT_CDeclAttr
MX_END_VISIT_ATTR(CDeclAttr)

#ifndef MX_ENTER_VISIT_C11NoReturnAttr
#  define MX_ENTER_VISIT_C11NoReturnAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_C11NoReturnAttr
#  define MX_EXIT_VISIT_C11NoReturnAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(C11NoReturnAttr)
  MX_ENTER_VISIT_C11NoReturnAttr
  MX_VISIT_BASE(C11NoReturnAttr, InheritableAttr)
  MX_EXIT_VISIT_C11NoReturnAttr
MX_END_VISIT_ATTR(C11NoReturnAttr)

#ifndef MX_ENTER_VISIT_BuiltinAttr
#  define MX_ENTER_VISIT_BuiltinAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_BuiltinAttr
#  define MX_EXIT_VISIT_BuiltinAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(BuiltinAttr)
  MX_ENTER_VISIT_BuiltinAttr
  MX_VISIT_BASE(BuiltinAttr, InheritableAttr)
  MX_EXIT_VISIT_BuiltinAttr
MX_END_VISIT_ATTR(BuiltinAttr)

#ifndef MX_ENTER_VISIT_BlocksAttr
#  define MX_ENTER_VISIT_BlocksAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_BlocksAttr
#  define MX_EXIT_VISIT_BlocksAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(BlocksAttr)
  MX_ENTER_VISIT_BlocksAttr
  MX_VISIT_BASE(BlocksAttr, InheritableAttr)
  MX_VISIT_ENUM(BlocksAttr, type, 10, MX_APPLY_METHOD, Type, BlocksAttrBlockType, NthAttr)
  MX_EXIT_VISIT_BlocksAttr
MX_END_VISIT_ATTR(BlocksAttr)

#ifndef MX_ENTER_VISIT_BTFDeclTagAttr
#  define MX_ENTER_VISIT_BTFDeclTagAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_BTFDeclTagAttr
#  define MX_EXIT_VISIT_BTFDeclTagAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(BTFDeclTagAttr)
  MX_ENTER_VISIT_BTFDeclTagAttr
  MX_VISIT_BASE(BTFDeclTagAttr, InheritableAttr)
  MX_VISIT_TEXT(BTFDeclTagAttr, btf_decl_tag, 9, MX_APPLY_METHOD, BTFDeclTag, basic_string_view, NthAttr)
  MX_EXIT_VISIT_BTFDeclTagAttr
MX_END_VISIT_ATTR(BTFDeclTagAttr)

#ifndef MX_ENTER_VISIT_BPFPreserveAccessIndexAttr
#  define MX_ENTER_VISIT_BPFPreserveAccessIndexAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_BPFPreserveAccessIndexAttr
#  define MX_EXIT_VISIT_BPFPreserveAccessIndexAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(BPFPreserveAccessIndexAttr)
  MX_ENTER_VISIT_BPFPreserveAccessIndexAttr
  MX_VISIT_BASE(BPFPreserveAccessIndexAttr, InheritableAttr)
  MX_EXIT_VISIT_BPFPreserveAccessIndexAttr
MX_END_VISIT_ATTR(BPFPreserveAccessIndexAttr)

#ifndef MX_ENTER_VISIT_AvailableOnlyInDefaultEvalMethodAttr
#  define MX_ENTER_VISIT_AvailableOnlyInDefaultEvalMethodAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AvailableOnlyInDefaultEvalMethodAttr
#  define MX_EXIT_VISIT_AvailableOnlyInDefaultEvalMethodAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AvailableOnlyInDefaultEvalMethodAttr)
  MX_ENTER_VISIT_AvailableOnlyInDefaultEvalMethodAttr
  MX_VISIT_BASE(AvailableOnlyInDefaultEvalMethodAttr, InheritableAttr)
  MX_EXIT_VISIT_AvailableOnlyInDefaultEvalMethodAttr
MX_END_VISIT_ATTR(AvailableOnlyInDefaultEvalMethodAttr)

#ifndef MX_ENTER_VISIT_AvailabilityAttr
#  define MX_ENTER_VISIT_AvailabilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AvailabilityAttr
#  define MX_EXIT_VISIT_AvailabilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AvailabilityAttr)
  MX_ENTER_VISIT_AvailabilityAttr
  MX_VISIT_BASE(AvailabilityAttr, InheritableAttr)
  MX_VISIT_TEXT(AvailabilityAttr, message, 9, MX_APPLY_METHOD, Message, basic_string_view, NthAttr)
  MX_VISIT_TEXT(AvailabilityAttr, replacement, 17, MX_APPLY_METHOD, Replacement, basic_string_view, NthAttr)
  MX_VISIT_BOOL(AvailabilityAttr, strict, 12, MX_APPLY_METHOD, Strict, bool, NthAttr)
  MX_VISIT_BOOL(AvailabilityAttr, unavailable, 13, MX_APPLY_METHOD, Unavailable, bool, NthAttr)
  MX_EXIT_VISIT_AvailabilityAttr
MX_END_VISIT_ATTR(AvailabilityAttr)

#ifndef MX_ENTER_VISIT_AssumptionAttr
#  define MX_ENTER_VISIT_AssumptionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AssumptionAttr
#  define MX_EXIT_VISIT_AssumptionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AssumptionAttr)
  MX_ENTER_VISIT_AssumptionAttr
  MX_VISIT_BASE(AssumptionAttr, InheritableAttr)
  MX_VISIT_TEXT(AssumptionAttr, assumption, 9, MX_APPLY_METHOD, Assumption, basic_string_view, NthAttr)
  MX_EXIT_VISIT_AssumptionAttr
MX_END_VISIT_ATTR(AssumptionAttr)

#ifndef MX_ENTER_VISIT_AssumeAlignedAttr
#  define MX_ENTER_VISIT_AssumeAlignedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AssumeAlignedAttr
#  define MX_EXIT_VISIT_AssumeAlignedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AssumeAlignedAttr)
  MX_ENTER_VISIT_AssumeAlignedAttr
  MX_VISIT_BASE(AssumeAlignedAttr, InheritableAttr)
  MX_VISIT_ENTITY(AssumeAlignedAttr, alignment, 8, MX_APPLY_METHOD, Alignment, Expr, NthAttr)
  MX_VISIT_OPTIONAL_ENTITY(AssumeAlignedAttr, offset, 16, MX_APPLY_METHOD, Offset, Expr, NthAttr)
  MX_EXIT_VISIT_AssumeAlignedAttr
MX_END_VISIT_ATTR(AssumeAlignedAttr)

#ifndef MX_ENTER_VISIT_AssertSharedLockAttr
#  define MX_ENTER_VISIT_AssertSharedLockAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AssertSharedLockAttr
#  define MX_EXIT_VISIT_AssertSharedLockAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AssertSharedLockAttr)
  MX_ENTER_VISIT_AssertSharedLockAttr
  MX_VISIT_BASE(AssertSharedLockAttr, InheritableAttr)
  MX_EXIT_VISIT_AssertSharedLockAttr
MX_END_VISIT_ATTR(AssertSharedLockAttr)

#ifndef MX_ENTER_VISIT_AssertExclusiveLockAttr
#  define MX_ENTER_VISIT_AssertExclusiveLockAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AssertExclusiveLockAttr
#  define MX_EXIT_VISIT_AssertExclusiveLockAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AssertExclusiveLockAttr)
  MX_ENTER_VISIT_AssertExclusiveLockAttr
  MX_VISIT_BASE(AssertExclusiveLockAttr, InheritableAttr)
  MX_EXIT_VISIT_AssertExclusiveLockAttr
MX_END_VISIT_ATTR(AssertExclusiveLockAttr)

#ifndef MX_ENTER_VISIT_AssertCapabilityAttr
#  define MX_ENTER_VISIT_AssertCapabilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AssertCapabilityAttr
#  define MX_EXIT_VISIT_AssertCapabilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AssertCapabilityAttr)
  MX_ENTER_VISIT_AssertCapabilityAttr
  MX_VISIT_BASE(AssertCapabilityAttr, InheritableAttr)
  MX_VISIT_ENUM(AssertCapabilityAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, AssertCapabilityAttrSpelling, NthAttr)
  MX_VISIT_BOOL(AssertCapabilityAttr, is_shared, 12, MX_APPLY_METHOD, IsShared, bool, NthAttr)
  MX_EXIT_VISIT_AssertCapabilityAttr
MX_END_VISIT_ATTR(AssertCapabilityAttr)

#ifndef MX_ENTER_VISIT_AsmLabelAttr
#  define MX_ENTER_VISIT_AsmLabelAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AsmLabelAttr
#  define MX_EXIT_VISIT_AsmLabelAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AsmLabelAttr)
  MX_ENTER_VISIT_AsmLabelAttr
  MX_VISIT_BASE(AsmLabelAttr, InheritableAttr)
  MX_VISIT_BOOL(AsmLabelAttr, is_literal_label, 12, MX_APPLY_METHOD, IsLiteralLabel, bool, NthAttr)
  MX_VISIT_TEXT(AsmLabelAttr, label, 9, MX_APPLY_METHOD, Label, basic_string_view, NthAttr)
  MX_EXIT_VISIT_AsmLabelAttr
MX_END_VISIT_ATTR(AsmLabelAttr)

#ifndef MX_ENTER_VISIT_ArtificialAttr
#  define MX_ENTER_VISIT_ArtificialAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ArtificialAttr
#  define MX_EXIT_VISIT_ArtificialAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ArtificialAttr)
  MX_ENTER_VISIT_ArtificialAttr
  MX_VISIT_BASE(ArtificialAttr, InheritableAttr)
  MX_EXIT_VISIT_ArtificialAttr
MX_END_VISIT_ATTR(ArtificialAttr)

#ifndef MX_ENTER_VISIT_ArmBuiltinAliasAttr
#  define MX_ENTER_VISIT_ArmBuiltinAliasAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ArmBuiltinAliasAttr
#  define MX_EXIT_VISIT_ArmBuiltinAliasAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ArmBuiltinAliasAttr)
  MX_ENTER_VISIT_ArmBuiltinAliasAttr
  MX_VISIT_BASE(ArmBuiltinAliasAttr, InheritableAttr)
  MX_EXIT_VISIT_ArmBuiltinAliasAttr
MX_END_VISIT_ATTR(ArmBuiltinAliasAttr)

#ifndef MX_ENTER_VISIT_ArgumentWithTypeTagAttr
#  define MX_ENTER_VISIT_ArgumentWithTypeTagAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ArgumentWithTypeTagAttr
#  define MX_EXIT_VISIT_ArgumentWithTypeTagAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ArgumentWithTypeTagAttr)
  MX_ENTER_VISIT_ArgumentWithTypeTagAttr
  MX_VISIT_BASE(ArgumentWithTypeTagAttr, InheritableAttr)
  MX_VISIT_BOOL(ArgumentWithTypeTagAttr, is_pointer, 12, MX_APPLY_METHOD, IsPointer, bool, NthAttr)
  MX_VISIT_ENUM(ArgumentWithTypeTagAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, ArgumentWithTypeTagAttrSpelling, NthAttr)
  MX_EXIT_VISIT_ArgumentWithTypeTagAttr
MX_END_VISIT_ATTR(ArgumentWithTypeTagAttr)

#ifndef MX_ENTER_VISIT_ArcWeakrefUnavailableAttr
#  define MX_ENTER_VISIT_ArcWeakrefUnavailableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ArcWeakrefUnavailableAttr
#  define MX_EXIT_VISIT_ArcWeakrefUnavailableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ArcWeakrefUnavailableAttr)
  MX_ENTER_VISIT_ArcWeakrefUnavailableAttr
  MX_VISIT_BASE(ArcWeakrefUnavailableAttr, InheritableAttr)
  MX_EXIT_VISIT_ArcWeakrefUnavailableAttr
MX_END_VISIT_ATTR(ArcWeakrefUnavailableAttr)

#ifndef MX_ENTER_VISIT_AnyX86NoCfCheckAttr
#  define MX_ENTER_VISIT_AnyX86NoCfCheckAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AnyX86NoCfCheckAttr
#  define MX_EXIT_VISIT_AnyX86NoCfCheckAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AnyX86NoCfCheckAttr)
  MX_ENTER_VISIT_AnyX86NoCfCheckAttr
  MX_VISIT_BASE(AnyX86NoCfCheckAttr, InheritableAttr)
  MX_EXIT_VISIT_AnyX86NoCfCheckAttr
MX_END_VISIT_ATTR(AnyX86NoCfCheckAttr)

#ifndef MX_ENTER_VISIT_AnyX86NoCallerSavedRegistersAttr
#  define MX_ENTER_VISIT_AnyX86NoCallerSavedRegistersAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AnyX86NoCallerSavedRegistersAttr
#  define MX_EXIT_VISIT_AnyX86NoCallerSavedRegistersAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AnyX86NoCallerSavedRegistersAttr)
  MX_ENTER_VISIT_AnyX86NoCallerSavedRegistersAttr
  MX_VISIT_BASE(AnyX86NoCallerSavedRegistersAttr, InheritableAttr)
  MX_EXIT_VISIT_AnyX86NoCallerSavedRegistersAttr
MX_END_VISIT_ATTR(AnyX86NoCallerSavedRegistersAttr)

#ifndef MX_ENTER_VISIT_AnyX86InterruptAttr
#  define MX_ENTER_VISIT_AnyX86InterruptAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AnyX86InterruptAttr
#  define MX_EXIT_VISIT_AnyX86InterruptAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AnyX86InterruptAttr)
  MX_ENTER_VISIT_AnyX86InterruptAttr
  MX_VISIT_BASE(AnyX86InterruptAttr, InheritableAttr)
  MX_EXIT_VISIT_AnyX86InterruptAttr
MX_END_VISIT_ATTR(AnyX86InterruptAttr)

#ifndef MX_ENTER_VISIT_AnalyzerNoReturnAttr
#  define MX_ENTER_VISIT_AnalyzerNoReturnAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AnalyzerNoReturnAttr
#  define MX_EXIT_VISIT_AnalyzerNoReturnAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AnalyzerNoReturnAttr)
  MX_ENTER_VISIT_AnalyzerNoReturnAttr
  MX_VISIT_BASE(AnalyzerNoReturnAttr, InheritableAttr)
  MX_EXIT_VISIT_AnalyzerNoReturnAttr
MX_END_VISIT_ATTR(AnalyzerNoReturnAttr)

#ifndef MX_ENTER_VISIT_AlwaysDestroyAttr
#  define MX_ENTER_VISIT_AlwaysDestroyAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AlwaysDestroyAttr
#  define MX_EXIT_VISIT_AlwaysDestroyAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AlwaysDestroyAttr)
  MX_ENTER_VISIT_AlwaysDestroyAttr
  MX_VISIT_BASE(AlwaysDestroyAttr, InheritableAttr)
  MX_EXIT_VISIT_AlwaysDestroyAttr
MX_END_VISIT_ATTR(AlwaysDestroyAttr)

#ifndef MX_ENTER_VISIT_AllocSizeAttr
#  define MX_ENTER_VISIT_AllocSizeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AllocSizeAttr
#  define MX_EXIT_VISIT_AllocSizeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AllocSizeAttr)
  MX_ENTER_VISIT_AllocSizeAttr
  MX_VISIT_BASE(AllocSizeAttr, InheritableAttr)
  MX_EXIT_VISIT_AllocSizeAttr
MX_END_VISIT_ATTR(AllocSizeAttr)

#ifndef MX_ENTER_VISIT_AllocAlignAttr
#  define MX_ENTER_VISIT_AllocAlignAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AllocAlignAttr
#  define MX_EXIT_VISIT_AllocAlignAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AllocAlignAttr)
  MX_ENTER_VISIT_AllocAlignAttr
  MX_VISIT_BASE(AllocAlignAttr, InheritableAttr)
  MX_EXIT_VISIT_AllocAlignAttr
MX_END_VISIT_ATTR(AllocAlignAttr)

#ifndef MX_ENTER_VISIT_AlignedAttr
#  define MX_ENTER_VISIT_AlignedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AlignedAttr
#  define MX_EXIT_VISIT_AlignedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AlignedAttr)
  MX_ENTER_VISIT_AlignedAttr
  MX_VISIT_BASE(AlignedAttr, InheritableAttr)
  MX_VISIT_OPTIONAL_ENTITY(AlignedAttr, alignment_expression, 8, MX_APPLY_METHOD, AlignmentExpression, Expr, NthAttr)
  MX_VISIT_OPTIONAL_ENTITY(AlignedAttr, alignment_type, 16, MX_APPLY_METHOD, AlignmentType, Type, NthAttr)
  MX_VISIT_OPTIONAL_INT(AlignedAttr, cached_alignment_value, 20, MX_APPLY_METHOD, CachedAlignmentValue, , NthAttr)
  MX_VISIT_ENUM(AlignedAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, AlignedAttrSpelling, NthAttr)
  MX_VISIT_BOOL(AlignedAttr, is_alignas, 13, MX_APPLY_METHOD, IsAlignas, bool, NthAttr)
  MX_VISIT_BOOL(AlignedAttr, is_alignment_dependent, 19, MX_APPLY_METHOD, IsAlignmentDependent, bool, NthAttr)
  MX_VISIT_BOOL(AlignedAttr, is_alignment_error_dependent, 21, MX_APPLY_METHOD, IsAlignmentErrorDependent, bool, NthAttr)
  MX_VISIT_BOOL(AlignedAttr, is_alignment_expression, 22, MX_APPLY_METHOD, IsAlignmentExpression, bool, NthAttr)
  MX_VISIT_BOOL(AlignedAttr, is_c11, 23, MX_APPLY_METHOD, IsC11, bool, NthAttr)
  MX_VISIT_BOOL(AlignedAttr, is_declspec, 24, MX_APPLY_METHOD, IsDeclspec, bool, NthAttr)
  MX_VISIT_BOOL(AlignedAttr, is_gnu, 25, MX_APPLY_METHOD, IsGNU, bool, NthAttr)
  MX_EXIT_VISIT_AlignedAttr
MX_END_VISIT_ATTR(AlignedAttr)

#ifndef MX_ENTER_VISIT_AlignNaturalAttr
#  define MX_ENTER_VISIT_AlignNaturalAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AlignNaturalAttr
#  define MX_EXIT_VISIT_AlignNaturalAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AlignNaturalAttr)
  MX_ENTER_VISIT_AlignNaturalAttr
  MX_VISIT_BASE(AlignNaturalAttr, InheritableAttr)
  MX_EXIT_VISIT_AlignNaturalAttr
MX_END_VISIT_ATTR(AlignNaturalAttr)

#ifndef MX_ENTER_VISIT_AlignMac68kAttr
#  define MX_ENTER_VISIT_AlignMac68kAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AlignMac68kAttr
#  define MX_EXIT_VISIT_AlignMac68kAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AlignMac68kAttr)
  MX_ENTER_VISIT_AlignMac68kAttr
  MX_VISIT_BASE(AlignMac68kAttr, InheritableAttr)
  MX_EXIT_VISIT_AlignMac68kAttr
MX_END_VISIT_ATTR(AlignMac68kAttr)

#ifndef MX_ENTER_VISIT_AcquiredBeforeAttr
#  define MX_ENTER_VISIT_AcquiredBeforeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AcquiredBeforeAttr
#  define MX_EXIT_VISIT_AcquiredBeforeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AcquiredBeforeAttr)
  MX_ENTER_VISIT_AcquiredBeforeAttr
  MX_VISIT_BASE(AcquiredBeforeAttr, InheritableAttr)
  MX_EXIT_VISIT_AcquiredBeforeAttr
MX_END_VISIT_ATTR(AcquiredBeforeAttr)

#ifndef MX_ENTER_VISIT_AcquiredAfterAttr
#  define MX_ENTER_VISIT_AcquiredAfterAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AcquiredAfterAttr
#  define MX_EXIT_VISIT_AcquiredAfterAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AcquiredAfterAttr)
  MX_ENTER_VISIT_AcquiredAfterAttr
  MX_VISIT_BASE(AcquiredAfterAttr, InheritableAttr)
  MX_EXIT_VISIT_AcquiredAfterAttr
MX_END_VISIT_ATTR(AcquiredAfterAttr)

#ifndef MX_ENTER_VISIT_AcquireHandleAttr
#  define MX_ENTER_VISIT_AcquireHandleAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AcquireHandleAttr
#  define MX_EXIT_VISIT_AcquireHandleAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AcquireHandleAttr)
  MX_ENTER_VISIT_AcquireHandleAttr
  MX_VISIT_BASE(AcquireHandleAttr, InheritableAttr)
  MX_VISIT_TEXT(AcquireHandleAttr, handle_type, 9, MX_APPLY_METHOD, HandleType, basic_string_view, NthAttr)
  MX_EXIT_VISIT_AcquireHandleAttr
MX_END_VISIT_ATTR(AcquireHandleAttr)

#ifndef MX_ENTER_VISIT_AcquireCapabilityAttr
#  define MX_ENTER_VISIT_AcquireCapabilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AcquireCapabilityAttr
#  define MX_EXIT_VISIT_AcquireCapabilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AcquireCapabilityAttr)
  MX_ENTER_VISIT_AcquireCapabilityAttr
  MX_VISIT_BASE(AcquireCapabilityAttr, InheritableAttr)
  MX_VISIT_ENUM(AcquireCapabilityAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, AcquireCapabilityAttrSpelling, NthAttr)
  MX_VISIT_BOOL(AcquireCapabilityAttr, is_shared, 12, MX_APPLY_METHOD, IsShared, bool, NthAttr)
  MX_EXIT_VISIT_AcquireCapabilityAttr
MX_END_VISIT_ATTR(AcquireCapabilityAttr)

#ifndef MX_ENTER_VISIT_AVRSignalAttr
#  define MX_ENTER_VISIT_AVRSignalAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AVRSignalAttr
#  define MX_EXIT_VISIT_AVRSignalAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AVRSignalAttr)
  MX_ENTER_VISIT_AVRSignalAttr
  MX_VISIT_BASE(AVRSignalAttr, InheritableAttr)
  MX_EXIT_VISIT_AVRSignalAttr
MX_END_VISIT_ATTR(AVRSignalAttr)

#ifndef MX_ENTER_VISIT_AVRInterruptAttr
#  define MX_ENTER_VISIT_AVRInterruptAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AVRInterruptAttr
#  define MX_EXIT_VISIT_AVRInterruptAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AVRInterruptAttr)
  MX_ENTER_VISIT_AVRInterruptAttr
  MX_VISIT_BASE(AVRInterruptAttr, InheritableAttr)
  MX_EXIT_VISIT_AVRInterruptAttr
MX_END_VISIT_ATTR(AVRInterruptAttr)

#ifndef MX_ENTER_VISIT_ARMInterruptAttr
#  define MX_ENTER_VISIT_ARMInterruptAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ARMInterruptAttr
#  define MX_EXIT_VISIT_ARMInterruptAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ARMInterruptAttr)
  MX_ENTER_VISIT_ARMInterruptAttr
  MX_VISIT_BASE(ARMInterruptAttr, InheritableAttr)
  MX_VISIT_ENUM(ARMInterruptAttr, interrupt, 10, MX_APPLY_METHOD, Interrupt, ARMInterruptAttrInterruptType, NthAttr)
  MX_EXIT_VISIT_ARMInterruptAttr
MX_END_VISIT_ATTR(ARMInterruptAttr)

#ifndef MX_ENTER_VISIT_AMDGPUWavesPerEUAttr
#  define MX_ENTER_VISIT_AMDGPUWavesPerEUAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AMDGPUWavesPerEUAttr
#  define MX_EXIT_VISIT_AMDGPUWavesPerEUAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AMDGPUWavesPerEUAttr)
  MX_ENTER_VISIT_AMDGPUWavesPerEUAttr
  MX_VISIT_BASE(AMDGPUWavesPerEUAttr, InheritableAttr)
  MX_VISIT_ENTITY(AMDGPUWavesPerEUAttr, max, 8, MX_APPLY_METHOD, Max, Expr, NthAttr)
  MX_VISIT_ENTITY(AMDGPUWavesPerEUAttr, min, 16, MX_APPLY_METHOD, Min, Expr, NthAttr)
  MX_EXIT_VISIT_AMDGPUWavesPerEUAttr
MX_END_VISIT_ATTR(AMDGPUWavesPerEUAttr)

#ifndef MX_ENTER_VISIT_AMDGPUNumVGPRAttr
#  define MX_ENTER_VISIT_AMDGPUNumVGPRAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AMDGPUNumVGPRAttr
#  define MX_EXIT_VISIT_AMDGPUNumVGPRAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AMDGPUNumVGPRAttr)
  MX_ENTER_VISIT_AMDGPUNumVGPRAttr
  MX_VISIT_BASE(AMDGPUNumVGPRAttr, InheritableAttr)
  MX_EXIT_VISIT_AMDGPUNumVGPRAttr
MX_END_VISIT_ATTR(AMDGPUNumVGPRAttr)

#ifndef MX_ENTER_VISIT_AMDGPUNumSGPRAttr
#  define MX_ENTER_VISIT_AMDGPUNumSGPRAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AMDGPUNumSGPRAttr
#  define MX_EXIT_VISIT_AMDGPUNumSGPRAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AMDGPUNumSGPRAttr)
  MX_ENTER_VISIT_AMDGPUNumSGPRAttr
  MX_VISIT_BASE(AMDGPUNumSGPRAttr, InheritableAttr)
  MX_EXIT_VISIT_AMDGPUNumSGPRAttr
MX_END_VISIT_ATTR(AMDGPUNumSGPRAttr)

#ifndef MX_ENTER_VISIT_AMDGPUKernelCallAttr
#  define MX_ENTER_VISIT_AMDGPUKernelCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AMDGPUKernelCallAttr
#  define MX_EXIT_VISIT_AMDGPUKernelCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AMDGPUKernelCallAttr)
  MX_ENTER_VISIT_AMDGPUKernelCallAttr
  MX_VISIT_BASE(AMDGPUKernelCallAttr, InheritableAttr)
  MX_EXIT_VISIT_AMDGPUKernelCallAttr
MX_END_VISIT_ATTR(AMDGPUKernelCallAttr)

#ifndef MX_ENTER_VISIT_AMDGPUFlatWorkGroupSizeAttr
#  define MX_ENTER_VISIT_AMDGPUFlatWorkGroupSizeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AMDGPUFlatWorkGroupSizeAttr
#  define MX_EXIT_VISIT_AMDGPUFlatWorkGroupSizeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AMDGPUFlatWorkGroupSizeAttr)
  MX_ENTER_VISIT_AMDGPUFlatWorkGroupSizeAttr
  MX_VISIT_BASE(AMDGPUFlatWorkGroupSizeAttr, InheritableAttr)
  MX_VISIT_ENTITY(AMDGPUFlatWorkGroupSizeAttr, max, 8, MX_APPLY_METHOD, Max, Expr, NthAttr)
  MX_VISIT_ENTITY(AMDGPUFlatWorkGroupSizeAttr, min, 16, MX_APPLY_METHOD, Min, Expr, NthAttr)
  MX_EXIT_VISIT_AMDGPUFlatWorkGroupSizeAttr
MX_END_VISIT_ATTR(AMDGPUFlatWorkGroupSizeAttr)

#ifndef MX_ENTER_VISIT_AArch64VectorPcsAttr
#  define MX_ENTER_VISIT_AArch64VectorPcsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AArch64VectorPcsAttr
#  define MX_EXIT_VISIT_AArch64VectorPcsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AArch64VectorPcsAttr)
  MX_ENTER_VISIT_AArch64VectorPcsAttr
  MX_VISIT_BASE(AArch64VectorPcsAttr, InheritableAttr)
  MX_EXIT_VISIT_AArch64VectorPcsAttr
MX_END_VISIT_ATTR(AArch64VectorPcsAttr)

#ifndef MX_ENTER_VISIT_AArch64SVEPcsAttr
#  define MX_ENTER_VISIT_AArch64SVEPcsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_AArch64SVEPcsAttr
#  define MX_EXIT_VISIT_AArch64SVEPcsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(AArch64SVEPcsAttr)
  MX_ENTER_VISIT_AArch64SVEPcsAttr
  MX_VISIT_BASE(AArch64SVEPcsAttr, InheritableAttr)
  MX_EXIT_VISIT_AArch64SVEPcsAttr
MX_END_VISIT_ATTR(AArch64SVEPcsAttr)

#ifndef MX_ENTER_VISIT_ZeroCallUsedRegsAttr
#  define MX_ENTER_VISIT_ZeroCallUsedRegsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ZeroCallUsedRegsAttr
#  define MX_EXIT_VISIT_ZeroCallUsedRegsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ZeroCallUsedRegsAttr)
  MX_ENTER_VISIT_ZeroCallUsedRegsAttr
  MX_VISIT_BASE(ZeroCallUsedRegsAttr, InheritableAttr)
  MX_VISIT_ENUM(ZeroCallUsedRegsAttr, zero_call_used_regs, 10, MX_APPLY_METHOD, ZeroCallUsedRegs, ZeroCallUsedRegsAttrZeroCallUsedRegsKind, NthAttr)
  MX_EXIT_VISIT_ZeroCallUsedRegsAttr
MX_END_VISIT_ATTR(ZeroCallUsedRegsAttr)

#ifndef MX_ENTER_VISIT_XRayLogArgsAttr
#  define MX_ENTER_VISIT_XRayLogArgsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_XRayLogArgsAttr
#  define MX_EXIT_VISIT_XRayLogArgsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(XRayLogArgsAttr)
  MX_ENTER_VISIT_XRayLogArgsAttr
  MX_VISIT_BASE(XRayLogArgsAttr, InheritableAttr)
  MX_EXIT_VISIT_XRayLogArgsAttr
MX_END_VISIT_ATTR(XRayLogArgsAttr)

#ifndef MX_ENTER_VISIT_XRayInstrumentAttr
#  define MX_ENTER_VISIT_XRayInstrumentAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_XRayInstrumentAttr
#  define MX_EXIT_VISIT_XRayInstrumentAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(XRayInstrumentAttr)
  MX_ENTER_VISIT_XRayInstrumentAttr
  MX_VISIT_BASE(XRayInstrumentAttr, InheritableAttr)
  MX_VISIT_BOOL(XRayInstrumentAttr, always_x_ray_instrument, 12, MX_APPLY_METHOD, AlwaysXRayInstrument, bool, NthAttr)
  MX_VISIT_ENUM(XRayInstrumentAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, XRayInstrumentAttrSpelling, NthAttr)
  MX_VISIT_BOOL(XRayInstrumentAttr, never_x_ray_instrument, 13, MX_APPLY_METHOD, NeverXRayInstrument, bool, NthAttr)
  MX_EXIT_VISIT_XRayInstrumentAttr
MX_END_VISIT_ATTR(XRayInstrumentAttr)

#ifndef MX_ENTER_VISIT_X86ForceAlignArgPointerAttr
#  define MX_ENTER_VISIT_X86ForceAlignArgPointerAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_X86ForceAlignArgPointerAttr
#  define MX_EXIT_VISIT_X86ForceAlignArgPointerAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(X86ForceAlignArgPointerAttr)
  MX_ENTER_VISIT_X86ForceAlignArgPointerAttr
  MX_VISIT_BASE(X86ForceAlignArgPointerAttr, InheritableAttr)
  MX_EXIT_VISIT_X86ForceAlignArgPointerAttr
MX_END_VISIT_ATTR(X86ForceAlignArgPointerAttr)

#ifndef MX_ENTER_VISIT_WorkGroupSizeHintAttr
#  define MX_ENTER_VISIT_WorkGroupSizeHintAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WorkGroupSizeHintAttr
#  define MX_EXIT_VISIT_WorkGroupSizeHintAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WorkGroupSizeHintAttr)
  MX_ENTER_VISIT_WorkGroupSizeHintAttr
  MX_VISIT_BASE(WorkGroupSizeHintAttr, InheritableAttr)
  MX_EXIT_VISIT_WorkGroupSizeHintAttr
MX_END_VISIT_ATTR(WorkGroupSizeHintAttr)

#ifndef MX_ENTER_VISIT_WebAssemblyImportNameAttr
#  define MX_ENTER_VISIT_WebAssemblyImportNameAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WebAssemblyImportNameAttr
#  define MX_EXIT_VISIT_WebAssemblyImportNameAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WebAssemblyImportNameAttr)
  MX_ENTER_VISIT_WebAssemblyImportNameAttr
  MX_VISIT_BASE(WebAssemblyImportNameAttr, InheritableAttr)
  MX_VISIT_TEXT(WebAssemblyImportNameAttr, import_name, 9, MX_APPLY_METHOD, ImportName, basic_string_view, NthAttr)
  MX_EXIT_VISIT_WebAssemblyImportNameAttr
MX_END_VISIT_ATTR(WebAssemblyImportNameAttr)

#ifndef MX_ENTER_VISIT_WebAssemblyImportModuleAttr
#  define MX_ENTER_VISIT_WebAssemblyImportModuleAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WebAssemblyImportModuleAttr
#  define MX_EXIT_VISIT_WebAssemblyImportModuleAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WebAssemblyImportModuleAttr)
  MX_ENTER_VISIT_WebAssemblyImportModuleAttr
  MX_VISIT_BASE(WebAssemblyImportModuleAttr, InheritableAttr)
  MX_VISIT_TEXT(WebAssemblyImportModuleAttr, import_module, 9, MX_APPLY_METHOD, ImportModule, basic_string_view, NthAttr)
  MX_EXIT_VISIT_WebAssemblyImportModuleAttr
MX_END_VISIT_ATTR(WebAssemblyImportModuleAttr)

#ifndef MX_ENTER_VISIT_WebAssemblyExportNameAttr
#  define MX_ENTER_VISIT_WebAssemblyExportNameAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WebAssemblyExportNameAttr
#  define MX_EXIT_VISIT_WebAssemblyExportNameAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WebAssemblyExportNameAttr)
  MX_ENTER_VISIT_WebAssemblyExportNameAttr
  MX_VISIT_BASE(WebAssemblyExportNameAttr, InheritableAttr)
  MX_VISIT_TEXT(WebAssemblyExportNameAttr, export_name, 9, MX_APPLY_METHOD, ExportName, basic_string_view, NthAttr)
  MX_EXIT_VISIT_WebAssemblyExportNameAttr
MX_END_VISIT_ATTR(WebAssemblyExportNameAttr)

#ifndef MX_ENTER_VISIT_WeakRefAttr
#  define MX_ENTER_VISIT_WeakRefAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WeakRefAttr
#  define MX_EXIT_VISIT_WeakRefAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WeakRefAttr)
  MX_ENTER_VISIT_WeakRefAttr
  MX_VISIT_BASE(WeakRefAttr, InheritableAttr)
  MX_VISIT_TEXT(WeakRefAttr, aliasee, 9, MX_APPLY_METHOD, Aliasee, basic_string_view, NthAttr)
  MX_EXIT_VISIT_WeakRefAttr
MX_END_VISIT_ATTR(WeakRefAttr)

#ifndef MX_ENTER_VISIT_WeakImportAttr
#  define MX_ENTER_VISIT_WeakImportAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WeakImportAttr
#  define MX_EXIT_VISIT_WeakImportAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WeakImportAttr)
  MX_ENTER_VISIT_WeakImportAttr
  MX_VISIT_BASE(WeakImportAttr, InheritableAttr)
  MX_EXIT_VISIT_WeakImportAttr
MX_END_VISIT_ATTR(WeakImportAttr)

#ifndef MX_ENTER_VISIT_WeakAttr
#  define MX_ENTER_VISIT_WeakAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WeakAttr
#  define MX_EXIT_VISIT_WeakAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WeakAttr)
  MX_ENTER_VISIT_WeakAttr
  MX_VISIT_BASE(WeakAttr, InheritableAttr)
  MX_EXIT_VISIT_WeakAttr
MX_END_VISIT_ATTR(WeakAttr)

#ifndef MX_ENTER_VISIT_WarnUnusedResultAttr
#  define MX_ENTER_VISIT_WarnUnusedResultAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WarnUnusedResultAttr
#  define MX_EXIT_VISIT_WarnUnusedResultAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WarnUnusedResultAttr)
  MX_ENTER_VISIT_WarnUnusedResultAttr
  MX_VISIT_BASE(WarnUnusedResultAttr, InheritableAttr)
  MX_VISIT_BOOL(WarnUnusedResultAttr, is_cxx11_no_discard, 12, MX_APPLY_METHOD, IsCXX11NoDiscard, bool, NthAttr)
  MX_VISIT_TEXT(WarnUnusedResultAttr, message, 9, MX_APPLY_METHOD, Message, basic_string_view, NthAttr)
  MX_VISIT_ENUM(WarnUnusedResultAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, WarnUnusedResultAttrSpelling, NthAttr)
  MX_EXIT_VISIT_WarnUnusedResultAttr
MX_END_VISIT_ATTR(WarnUnusedResultAttr)

#ifndef MX_ENTER_VISIT_WarnUnusedAttr
#  define MX_ENTER_VISIT_WarnUnusedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_WarnUnusedAttr
#  define MX_EXIT_VISIT_WarnUnusedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(WarnUnusedAttr)
  MX_ENTER_VISIT_WarnUnusedAttr
  MX_VISIT_BASE(WarnUnusedAttr, InheritableAttr)
  MX_EXIT_VISIT_WarnUnusedAttr
MX_END_VISIT_ATTR(WarnUnusedAttr)

#ifndef MX_ENTER_VISIT_VisibilityAttr
#  define MX_ENTER_VISIT_VisibilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_VisibilityAttr
#  define MX_EXIT_VISIT_VisibilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(VisibilityAttr)
  MX_ENTER_VISIT_VisibilityAttr
  MX_VISIT_BASE(VisibilityAttr, InheritableAttr)
  MX_VISIT_ENUM(VisibilityAttr, visibility, 10, MX_APPLY_METHOD, Visibility, VisibilityAttrVisibilityType, NthAttr)
  MX_EXIT_VISIT_VisibilityAttr
MX_END_VISIT_ATTR(VisibilityAttr)

#ifndef MX_ENTER_VISIT_VectorCallAttr
#  define MX_ENTER_VISIT_VectorCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_VectorCallAttr
#  define MX_EXIT_VISIT_VectorCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(VectorCallAttr)
  MX_ENTER_VISIT_VectorCallAttr
  MX_VISIT_BASE(VectorCallAttr, InheritableAttr)
  MX_EXIT_VISIT_VectorCallAttr
MX_END_VISIT_ATTR(VectorCallAttr)

#ifndef MX_ENTER_VISIT_VecTypeHintAttr
#  define MX_ENTER_VISIT_VecTypeHintAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_VecTypeHintAttr
#  define MX_EXIT_VISIT_VecTypeHintAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(VecTypeHintAttr)
  MX_ENTER_VISIT_VecTypeHintAttr
  MX_VISIT_BASE(VecTypeHintAttr, InheritableAttr)
  MX_VISIT_ENTITY(VecTypeHintAttr, type_hint, 8, MX_APPLY_METHOD, TypeHint, Type, NthAttr)
  MX_VISIT_ENTITY(VecTypeHintAttr, type_hint_token, 16, MX_APPLY_METHOD, TypeHintToken, Type, NthAttr)
  MX_EXIT_VISIT_VecTypeHintAttr
MX_END_VISIT_ATTR(VecTypeHintAttr)

#ifndef MX_ENTER_VISIT_VecReturnAttr
#  define MX_ENTER_VISIT_VecReturnAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_VecReturnAttr
#  define MX_EXIT_VISIT_VecReturnAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(VecReturnAttr)
  MX_ENTER_VISIT_VecReturnAttr
  MX_VISIT_BASE(VecReturnAttr, InheritableAttr)
  MX_EXIT_VISIT_VecReturnAttr
MX_END_VISIT_ATTR(VecReturnAttr)

#ifndef MX_ENTER_VISIT_UuidAttr
#  define MX_ENTER_VISIT_UuidAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_UuidAttr
#  define MX_EXIT_VISIT_UuidAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(UuidAttr)
  MX_ENTER_VISIT_UuidAttr
  MX_VISIT_BASE(UuidAttr, InheritableAttr)
  MX_VISIT_TEXT(UuidAttr, guid, 9, MX_APPLY_METHOD, Guid, basic_string_view, NthAttr)
  MX_VISIT_ENTITY(UuidAttr, guid_declaration, 8, MX_APPLY_METHOD, GuidDeclaration, MSGuidDecl, NthAttr)
  MX_EXIT_VISIT_UuidAttr
MX_END_VISIT_ATTR(UuidAttr)

#ifndef MX_ENTER_VISIT_UsingIfExistsAttr
#  define MX_ENTER_VISIT_UsingIfExistsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_UsingIfExistsAttr
#  define MX_EXIT_VISIT_UsingIfExistsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(UsingIfExistsAttr)
  MX_ENTER_VISIT_UsingIfExistsAttr
  MX_VISIT_BASE(UsingIfExistsAttr, InheritableAttr)
  MX_EXIT_VISIT_UsingIfExistsAttr
MX_END_VISIT_ATTR(UsingIfExistsAttr)

#ifndef MX_ENTER_VISIT_UsedAttr
#  define MX_ENTER_VISIT_UsedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_UsedAttr
#  define MX_EXIT_VISIT_UsedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(UsedAttr)
  MX_ENTER_VISIT_UsedAttr
  MX_VISIT_BASE(UsedAttr, InheritableAttr)
  MX_EXIT_VISIT_UsedAttr
MX_END_VISIT_ATTR(UsedAttr)

#ifndef MX_ENTER_VISIT_UnusedAttr
#  define MX_ENTER_VISIT_UnusedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_UnusedAttr
#  define MX_EXIT_VISIT_UnusedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(UnusedAttr)
  MX_ENTER_VISIT_UnusedAttr
  MX_VISIT_BASE(UnusedAttr, InheritableAttr)
  MX_VISIT_ENUM(UnusedAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, UnusedAttrSpelling, NthAttr)
  MX_EXIT_VISIT_UnusedAttr
MX_END_VISIT_ATTR(UnusedAttr)

#ifndef MX_ENTER_VISIT_UnsafeBufferUsageAttr
#  define MX_ENTER_VISIT_UnsafeBufferUsageAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_UnsafeBufferUsageAttr
#  define MX_EXIT_VISIT_UnsafeBufferUsageAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(UnsafeBufferUsageAttr)
  MX_ENTER_VISIT_UnsafeBufferUsageAttr
  MX_VISIT_BASE(UnsafeBufferUsageAttr, InheritableAttr)
  MX_EXIT_VISIT_UnsafeBufferUsageAttr
MX_END_VISIT_ATTR(UnsafeBufferUsageAttr)

#ifndef MX_ENTER_VISIT_UninitializedAttr
#  define MX_ENTER_VISIT_UninitializedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_UninitializedAttr
#  define MX_EXIT_VISIT_UninitializedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(UninitializedAttr)
  MX_ENTER_VISIT_UninitializedAttr
  MX_VISIT_BASE(UninitializedAttr, InheritableAttr)
  MX_EXIT_VISIT_UninitializedAttr
MX_END_VISIT_ATTR(UninitializedAttr)

#ifndef MX_ENTER_VISIT_UnavailableAttr
#  define MX_ENTER_VISIT_UnavailableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_UnavailableAttr
#  define MX_EXIT_VISIT_UnavailableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(UnavailableAttr)
  MX_ENTER_VISIT_UnavailableAttr
  MX_VISIT_BASE(UnavailableAttr, InheritableAttr)
  MX_VISIT_ENUM(UnavailableAttr, implicit_reason, 10, MX_APPLY_METHOD, ImplicitReason, UnavailableAttrImplicitReason, NthAttr)
  MX_VISIT_TEXT(UnavailableAttr, message, 9, MX_APPLY_METHOD, Message, basic_string_view, NthAttr)
  MX_EXIT_VISIT_UnavailableAttr
MX_END_VISIT_ATTR(UnavailableAttr)

#ifndef MX_ENTER_VISIT_TypeVisibilityAttr
#  define MX_ENTER_VISIT_TypeVisibilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TypeVisibilityAttr
#  define MX_EXIT_VISIT_TypeVisibilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TypeVisibilityAttr)
  MX_ENTER_VISIT_TypeVisibilityAttr
  MX_VISIT_BASE(TypeVisibilityAttr, InheritableAttr)
  MX_VISIT_ENUM(TypeVisibilityAttr, visibility, 10, MX_APPLY_METHOD, Visibility, TypeVisibilityAttrVisibilityType, NthAttr)
  MX_EXIT_VISIT_TypeVisibilityAttr
MX_END_VISIT_ATTR(TypeVisibilityAttr)

#ifndef MX_ENTER_VISIT_TypeTagForDatatypeAttr
#  define MX_ENTER_VISIT_TypeTagForDatatypeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TypeTagForDatatypeAttr
#  define MX_EXIT_VISIT_TypeTagForDatatypeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TypeTagForDatatypeAttr)
  MX_ENTER_VISIT_TypeTagForDatatypeAttr
  MX_VISIT_BASE(TypeTagForDatatypeAttr, InheritableAttr)
  MX_VISIT_BOOL(TypeTagForDatatypeAttr, layout_compatible, 12, MX_APPLY_METHOD, LayoutCompatible, bool, NthAttr)
  MX_VISIT_ENTITY(TypeTagForDatatypeAttr, matching_c_type, 8, MX_APPLY_METHOD, MatchingCType, Type, NthAttr)
  MX_VISIT_ENTITY(TypeTagForDatatypeAttr, matching_c_type_token, 16, MX_APPLY_METHOD, MatchingCTypeToken, Type, NthAttr)
  MX_VISIT_BOOL(TypeTagForDatatypeAttr, must_be_null, 13, MX_APPLY_METHOD, MustBeNull, bool, NthAttr)
  MX_EXIT_VISIT_TypeTagForDatatypeAttr
MX_END_VISIT_ATTR(TypeTagForDatatypeAttr)

#ifndef MX_ENTER_VISIT_TryAcquireCapabilityAttr
#  define MX_ENTER_VISIT_TryAcquireCapabilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TryAcquireCapabilityAttr
#  define MX_EXIT_VISIT_TryAcquireCapabilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TryAcquireCapabilityAttr)
  MX_ENTER_VISIT_TryAcquireCapabilityAttr
  MX_VISIT_BASE(TryAcquireCapabilityAttr, InheritableAttr)
  MX_VISIT_ENUM(TryAcquireCapabilityAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, TryAcquireCapabilityAttrSpelling, NthAttr)
  MX_VISIT_ENTITY(TryAcquireCapabilityAttr, success_value, 8, MX_APPLY_METHOD, SuccessValue, Expr, NthAttr)
  MX_VISIT_BOOL(TryAcquireCapabilityAttr, is_shared, 12, MX_APPLY_METHOD, IsShared, bool, NthAttr)
  MX_EXIT_VISIT_TryAcquireCapabilityAttr
MX_END_VISIT_ATTR(TryAcquireCapabilityAttr)

#ifndef MX_ENTER_VISIT_TrivialABIAttr
#  define MX_ENTER_VISIT_TrivialABIAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TrivialABIAttr
#  define MX_EXIT_VISIT_TrivialABIAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TrivialABIAttr)
  MX_ENTER_VISIT_TrivialABIAttr
  MX_VISIT_BASE(TrivialABIAttr, InheritableAttr)
  MX_EXIT_VISIT_TrivialABIAttr
MX_END_VISIT_ATTR(TrivialABIAttr)

#ifndef MX_ENTER_VISIT_TransparentUnionAttr
#  define MX_ENTER_VISIT_TransparentUnionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TransparentUnionAttr
#  define MX_EXIT_VISIT_TransparentUnionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TransparentUnionAttr)
  MX_ENTER_VISIT_TransparentUnionAttr
  MX_VISIT_BASE(TransparentUnionAttr, InheritableAttr)
  MX_EXIT_VISIT_TransparentUnionAttr
MX_END_VISIT_ATTR(TransparentUnionAttr)

#ifndef MX_ENTER_VISIT_ThisCallAttr
#  define MX_ENTER_VISIT_ThisCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ThisCallAttr
#  define MX_EXIT_VISIT_ThisCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ThisCallAttr)
  MX_ENTER_VISIT_ThisCallAttr
  MX_VISIT_BASE(ThisCallAttr, InheritableAttr)
  MX_EXIT_VISIT_ThisCallAttr
MX_END_VISIT_ATTR(ThisCallAttr)

#ifndef MX_ENTER_VISIT_TestTypestateAttr
#  define MX_ENTER_VISIT_TestTypestateAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TestTypestateAttr
#  define MX_EXIT_VISIT_TestTypestateAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TestTypestateAttr)
  MX_ENTER_VISIT_TestTypestateAttr
  MX_VISIT_BASE(TestTypestateAttr, InheritableAttr)
  MX_VISIT_ENUM(TestTypestateAttr, test_state, 10, MX_APPLY_METHOD, TestState, TestTypestateAttrConsumedState, NthAttr)
  MX_EXIT_VISIT_TestTypestateAttr
MX_END_VISIT_ATTR(TestTypestateAttr)

#ifndef MX_ENTER_VISIT_TargetVersionAttr
#  define MX_ENTER_VISIT_TargetVersionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TargetVersionAttr
#  define MX_EXIT_VISIT_TargetVersionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TargetVersionAttr)
  MX_ENTER_VISIT_TargetVersionAttr
  MX_VISIT_BASE(TargetVersionAttr, InheritableAttr)
  MX_VISIT_TEXT(TargetVersionAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_VISIT_TEXT(TargetVersionAttr, names_string, 17, MX_APPLY_METHOD, NamesString, basic_string_view, NthAttr)
  MX_VISIT_BOOL(TargetVersionAttr, is_default_version, 12, MX_APPLY_METHOD, IsDefaultVersion, bool, NthAttr)
  MX_EXIT_VISIT_TargetVersionAttr
MX_END_VISIT_ATTR(TargetVersionAttr)

#ifndef MX_ENTER_VISIT_TargetClonesAttr
#  define MX_ENTER_VISIT_TargetClonesAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TargetClonesAttr
#  define MX_EXIT_VISIT_TargetClonesAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TargetClonesAttr)
  MX_ENTER_VISIT_TargetClonesAttr
  MX_VISIT_BASE(TargetClonesAttr, InheritableAttr)
  MX_EXIT_VISIT_TargetClonesAttr
MX_END_VISIT_ATTR(TargetClonesAttr)

#ifndef MX_ENTER_VISIT_TargetAttr
#  define MX_ENTER_VISIT_TargetAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TargetAttr
#  define MX_EXIT_VISIT_TargetAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TargetAttr)
  MX_ENTER_VISIT_TargetAttr
  MX_VISIT_BASE(TargetAttr, InheritableAttr)
  MX_VISIT_TEXT(TargetAttr, architecture, 9, MX_APPLY_METHOD, Architecture, basic_string_view, NthAttr)
  MX_VISIT_TEXT(TargetAttr, features_string, 17, MX_APPLY_METHOD, FeaturesString, basic_string_view, NthAttr)
  MX_VISIT_BOOL(TargetAttr, is_default_version, 12, MX_APPLY_METHOD, IsDefaultVersion, bool, NthAttr)
  MX_EXIT_VISIT_TargetAttr
MX_END_VISIT_ATTR(TargetAttr)

#ifndef MX_ENTER_VISIT_TLSModelAttr
#  define MX_ENTER_VISIT_TLSModelAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_TLSModelAttr
#  define MX_EXIT_VISIT_TLSModelAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(TLSModelAttr)
  MX_ENTER_VISIT_TLSModelAttr
  MX_VISIT_BASE(TLSModelAttr, InheritableAttr)
  MX_VISIT_TEXT(TLSModelAttr, model, 9, MX_APPLY_METHOD, Model, basic_string_view, NthAttr)
  MX_EXIT_VISIT_TLSModelAttr
MX_END_VISIT_ATTR(TLSModelAttr)

#ifndef MX_ENTER_VISIT_SysVABIAttr
#  define MX_ENTER_VISIT_SysVABIAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SysVABIAttr
#  define MX_EXIT_VISIT_SysVABIAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SysVABIAttr)
  MX_ENTER_VISIT_SysVABIAttr
  MX_VISIT_BASE(SysVABIAttr, InheritableAttr)
  MX_EXIT_VISIT_SysVABIAttr
MX_END_VISIT_ATTR(SysVABIAttr)

#ifndef MX_ENTER_VISIT_SwiftPrivateAttr
#  define MX_ENTER_VISIT_SwiftPrivateAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftPrivateAttr
#  define MX_EXIT_VISIT_SwiftPrivateAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftPrivateAttr)
  MX_ENTER_VISIT_SwiftPrivateAttr
  MX_VISIT_BASE(SwiftPrivateAttr, InheritableAttr)
  MX_EXIT_VISIT_SwiftPrivateAttr
MX_END_VISIT_ATTR(SwiftPrivateAttr)

#ifndef MX_ENTER_VISIT_SwiftNewTypeAttr
#  define MX_ENTER_VISIT_SwiftNewTypeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftNewTypeAttr
#  define MX_EXIT_VISIT_SwiftNewTypeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftNewTypeAttr)
  MX_ENTER_VISIT_SwiftNewTypeAttr
  MX_VISIT_BASE(SwiftNewTypeAttr, InheritableAttr)
  MX_VISIT_ENUM(SwiftNewTypeAttr, newtype_kind, 10, MX_APPLY_METHOD, NewtypeKind, SwiftNewTypeAttrNewtypeKind, NthAttr)
  MX_VISIT_ENUM(SwiftNewTypeAttr, semantic_spelling, 14, MX_APPLY_METHOD, SemanticSpelling, SwiftNewTypeAttrSpelling, NthAttr)
  MX_EXIT_VISIT_SwiftNewTypeAttr
MX_END_VISIT_ATTR(SwiftNewTypeAttr)

#ifndef MX_ENTER_VISIT_SwiftNameAttr
#  define MX_ENTER_VISIT_SwiftNameAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftNameAttr
#  define MX_EXIT_VISIT_SwiftNameAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftNameAttr)
  MX_ENTER_VISIT_SwiftNameAttr
  MX_VISIT_BASE(SwiftNameAttr, InheritableAttr)
  MX_VISIT_TEXT(SwiftNameAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_SwiftNameAttr
MX_END_VISIT_ATTR(SwiftNameAttr)

#ifndef MX_ENTER_VISIT_SwiftErrorAttr
#  define MX_ENTER_VISIT_SwiftErrorAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftErrorAttr
#  define MX_EXIT_VISIT_SwiftErrorAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftErrorAttr)
  MX_ENTER_VISIT_SwiftErrorAttr
  MX_VISIT_BASE(SwiftErrorAttr, InheritableAttr)
  MX_VISIT_ENUM(SwiftErrorAttr, convention, 10, MX_APPLY_METHOD, Convention, SwiftErrorAttrConventionKind, NthAttr)
  MX_EXIT_VISIT_SwiftErrorAttr
MX_END_VISIT_ATTR(SwiftErrorAttr)

#ifndef MX_ENTER_VISIT_SwiftCallAttr
#  define MX_ENTER_VISIT_SwiftCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftCallAttr
#  define MX_EXIT_VISIT_SwiftCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftCallAttr)
  MX_ENTER_VISIT_SwiftCallAttr
  MX_VISIT_BASE(SwiftCallAttr, InheritableAttr)
  MX_EXIT_VISIT_SwiftCallAttr
MX_END_VISIT_ATTR(SwiftCallAttr)

#ifndef MX_ENTER_VISIT_SwiftBridgedTypedefAttr
#  define MX_ENTER_VISIT_SwiftBridgedTypedefAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftBridgedTypedefAttr
#  define MX_EXIT_VISIT_SwiftBridgedTypedefAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftBridgedTypedefAttr)
  MX_ENTER_VISIT_SwiftBridgedTypedefAttr
  MX_VISIT_BASE(SwiftBridgedTypedefAttr, InheritableAttr)
  MX_EXIT_VISIT_SwiftBridgedTypedefAttr
MX_END_VISIT_ATTR(SwiftBridgedTypedefAttr)

#ifndef MX_ENTER_VISIT_SwiftBridgeAttr
#  define MX_ENTER_VISIT_SwiftBridgeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftBridgeAttr
#  define MX_EXIT_VISIT_SwiftBridgeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftBridgeAttr)
  MX_ENTER_VISIT_SwiftBridgeAttr
  MX_VISIT_BASE(SwiftBridgeAttr, InheritableAttr)
  MX_VISIT_TEXT(SwiftBridgeAttr, swift_type, 9, MX_APPLY_METHOD, SwiftType, basic_string_view, NthAttr)
  MX_EXIT_VISIT_SwiftBridgeAttr
MX_END_VISIT_ATTR(SwiftBridgeAttr)

#ifndef MX_ENTER_VISIT_SwiftAttrAttr
#  define MX_ENTER_VISIT_SwiftAttrAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftAttrAttr
#  define MX_EXIT_VISIT_SwiftAttrAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftAttrAttr)
  MX_ENTER_VISIT_SwiftAttrAttr
  MX_VISIT_BASE(SwiftAttrAttr, InheritableAttr)
  MX_VISIT_TEXT(SwiftAttrAttr, attribute, 9, MX_APPLY_METHOD, Attribute, basic_string_view, NthAttr)
  MX_EXIT_VISIT_SwiftAttrAttr
MX_END_VISIT_ATTR(SwiftAttrAttr)

#ifndef MX_ENTER_VISIT_SwiftAsyncNameAttr
#  define MX_ENTER_VISIT_SwiftAsyncNameAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftAsyncNameAttr
#  define MX_EXIT_VISIT_SwiftAsyncNameAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftAsyncNameAttr)
  MX_ENTER_VISIT_SwiftAsyncNameAttr
  MX_VISIT_BASE(SwiftAsyncNameAttr, InheritableAttr)
  MX_VISIT_TEXT(SwiftAsyncNameAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_SwiftAsyncNameAttr
MX_END_VISIT_ATTR(SwiftAsyncNameAttr)

#ifndef MX_ENTER_VISIT_SwiftAsyncErrorAttr
#  define MX_ENTER_VISIT_SwiftAsyncErrorAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftAsyncErrorAttr
#  define MX_EXIT_VISIT_SwiftAsyncErrorAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftAsyncErrorAttr)
  MX_ENTER_VISIT_SwiftAsyncErrorAttr
  MX_VISIT_BASE(SwiftAsyncErrorAttr, InheritableAttr)
  MX_VISIT_ENUM(SwiftAsyncErrorAttr, convention, 10, MX_APPLY_METHOD, Convention, SwiftAsyncErrorAttrConventionKind, NthAttr)
  MX_EXIT_VISIT_SwiftAsyncErrorAttr
MX_END_VISIT_ATTR(SwiftAsyncErrorAttr)

#ifndef MX_ENTER_VISIT_SwiftAsyncCallAttr
#  define MX_ENTER_VISIT_SwiftAsyncCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftAsyncCallAttr
#  define MX_EXIT_VISIT_SwiftAsyncCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftAsyncCallAttr)
  MX_ENTER_VISIT_SwiftAsyncCallAttr
  MX_VISIT_BASE(SwiftAsyncCallAttr, InheritableAttr)
  MX_EXIT_VISIT_SwiftAsyncCallAttr
MX_END_VISIT_ATTR(SwiftAsyncCallAttr)

#ifndef MX_ENTER_VISIT_SwiftAsyncAttr
#  define MX_ENTER_VISIT_SwiftAsyncAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftAsyncAttr
#  define MX_EXIT_VISIT_SwiftAsyncAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftAsyncAttr)
  MX_ENTER_VISIT_SwiftAsyncAttr
  MX_VISIT_BASE(SwiftAsyncAttr, InheritableAttr)
  MX_VISIT_ENUM(SwiftAsyncAttr, attribute_kind, 10, MX_APPLY_METHOD, AttributeKind, SwiftAsyncAttrKind, NthAttr)
  MX_EXIT_VISIT_SwiftAsyncAttr
MX_END_VISIT_ATTR(SwiftAsyncAttr)

#ifndef MX_ENTER_VISIT_StrictGuardStackCheckAttr
#  define MX_ENTER_VISIT_StrictGuardStackCheckAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_StrictGuardStackCheckAttr
#  define MX_EXIT_VISIT_StrictGuardStackCheckAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(StrictGuardStackCheckAttr)
  MX_ENTER_VISIT_StrictGuardStackCheckAttr
  MX_VISIT_BASE(StrictGuardStackCheckAttr, InheritableAttr)
  MX_EXIT_VISIT_StrictGuardStackCheckAttr
MX_END_VISIT_ATTR(StrictGuardStackCheckAttr)

#ifndef MX_ENTER_VISIT_StrictFPAttr
#  define MX_ENTER_VISIT_StrictFPAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_StrictFPAttr
#  define MX_EXIT_VISIT_StrictFPAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(StrictFPAttr)
  MX_ENTER_VISIT_StrictFPAttr
  MX_VISIT_BASE(StrictFPAttr, InheritableAttr)
  MX_EXIT_VISIT_StrictFPAttr
MX_END_VISIT_ATTR(StrictFPAttr)

#ifndef MX_ENTER_VISIT_StdCallAttr
#  define MX_ENTER_VISIT_StdCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_StdCallAttr
#  define MX_EXIT_VISIT_StdCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(StdCallAttr)
  MX_ENTER_VISIT_StdCallAttr
  MX_VISIT_BASE(StdCallAttr, InheritableAttr)
  MX_EXIT_VISIT_StdCallAttr
MX_END_VISIT_ATTR(StdCallAttr)

#ifndef MX_ENTER_VISIT_StandaloneDebugAttr
#  define MX_ENTER_VISIT_StandaloneDebugAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_StandaloneDebugAttr
#  define MX_EXIT_VISIT_StandaloneDebugAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(StandaloneDebugAttr)
  MX_ENTER_VISIT_StandaloneDebugAttr
  MX_VISIT_BASE(StandaloneDebugAttr, InheritableAttr)
  MX_EXIT_VISIT_StandaloneDebugAttr
MX_END_VISIT_ATTR(StandaloneDebugAttr)

#ifndef MX_ENTER_VISIT_SpeculativeLoadHardeningAttr
#  define MX_ENTER_VISIT_SpeculativeLoadHardeningAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SpeculativeLoadHardeningAttr
#  define MX_EXIT_VISIT_SpeculativeLoadHardeningAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SpeculativeLoadHardeningAttr)
  MX_ENTER_VISIT_SpeculativeLoadHardeningAttr
  MX_VISIT_BASE(SpeculativeLoadHardeningAttr, InheritableAttr)
  MX_EXIT_VISIT_SpeculativeLoadHardeningAttr
MX_END_VISIT_ATTR(SpeculativeLoadHardeningAttr)

#ifndef MX_ENTER_VISIT_SharedTrylockFunctionAttr
#  define MX_ENTER_VISIT_SharedTrylockFunctionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SharedTrylockFunctionAttr
#  define MX_EXIT_VISIT_SharedTrylockFunctionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SharedTrylockFunctionAttr)
  MX_ENTER_VISIT_SharedTrylockFunctionAttr
  MX_VISIT_BASE(SharedTrylockFunctionAttr, InheritableAttr)
  MX_VISIT_ENTITY(SharedTrylockFunctionAttr, success_value, 8, MX_APPLY_METHOD, SuccessValue, Expr, NthAttr)
  MX_EXIT_VISIT_SharedTrylockFunctionAttr
MX_END_VISIT_ATTR(SharedTrylockFunctionAttr)

#ifndef MX_ENTER_VISIT_SetTypestateAttr
#  define MX_ENTER_VISIT_SetTypestateAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SetTypestateAttr
#  define MX_EXIT_VISIT_SetTypestateAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SetTypestateAttr)
  MX_ENTER_VISIT_SetTypestateAttr
  MX_VISIT_BASE(SetTypestateAttr, InheritableAttr)
  MX_VISIT_ENUM(SetTypestateAttr, new_state, 10, MX_APPLY_METHOD, NewState, SetTypestateAttrConsumedState, NthAttr)
  MX_EXIT_VISIT_SetTypestateAttr
MX_END_VISIT_ATTR(SetTypestateAttr)

#ifndef MX_ENTER_VISIT_SentinelAttr
#  define MX_ENTER_VISIT_SentinelAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SentinelAttr
#  define MX_EXIT_VISIT_SentinelAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SentinelAttr)
  MX_ENTER_VISIT_SentinelAttr
  MX_VISIT_BASE(SentinelAttr, InheritableAttr)
  MX_EXIT_VISIT_SentinelAttr
MX_END_VISIT_ATTR(SentinelAttr)

#ifndef MX_ENTER_VISIT_SelectAnyAttr
#  define MX_ENTER_VISIT_SelectAnyAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SelectAnyAttr
#  define MX_EXIT_VISIT_SelectAnyAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SelectAnyAttr)
  MX_ENTER_VISIT_SelectAnyAttr
  MX_VISIT_BASE(SelectAnyAttr, InheritableAttr)
  MX_EXIT_VISIT_SelectAnyAttr
MX_END_VISIT_ATTR(SelectAnyAttr)

#ifndef MX_ENTER_VISIT_SectionAttr
#  define MX_ENTER_VISIT_SectionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SectionAttr
#  define MX_EXIT_VISIT_SectionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SectionAttr)
  MX_ENTER_VISIT_SectionAttr
  MX_VISIT_BASE(SectionAttr, InheritableAttr)
  MX_VISIT_TEXT(SectionAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_VISIT_ENUM(SectionAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, SectionAttrSpelling, NthAttr)
  MX_EXIT_VISIT_SectionAttr
MX_END_VISIT_ATTR(SectionAttr)

#ifndef MX_ENTER_VISIT_ScopedLockableAttr
#  define MX_ENTER_VISIT_ScopedLockableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ScopedLockableAttr
#  define MX_EXIT_VISIT_ScopedLockableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ScopedLockableAttr)
  MX_ENTER_VISIT_ScopedLockableAttr
  MX_VISIT_BASE(ScopedLockableAttr, InheritableAttr)
  MX_EXIT_VISIT_ScopedLockableAttr
MX_END_VISIT_ATTR(ScopedLockableAttr)

#ifndef MX_ENTER_VISIT_SYCLSpecialClassAttr
#  define MX_ENTER_VISIT_SYCLSpecialClassAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SYCLSpecialClassAttr
#  define MX_EXIT_VISIT_SYCLSpecialClassAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SYCLSpecialClassAttr)
  MX_ENTER_VISIT_SYCLSpecialClassAttr
  MX_VISIT_BASE(SYCLSpecialClassAttr, InheritableAttr)
  MX_EXIT_VISIT_SYCLSpecialClassAttr
MX_END_VISIT_ATTR(SYCLSpecialClassAttr)

#ifndef MX_ENTER_VISIT_SYCLKernelAttr
#  define MX_ENTER_VISIT_SYCLKernelAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_SYCLKernelAttr
#  define MX_EXIT_VISIT_SYCLKernelAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(SYCLKernelAttr)
  MX_ENTER_VISIT_SYCLKernelAttr
  MX_VISIT_BASE(SYCLKernelAttr, InheritableAttr)
  MX_EXIT_VISIT_SYCLKernelAttr
MX_END_VISIT_ATTR(SYCLKernelAttr)

#ifndef MX_ENTER_VISIT_ReturnsTwiceAttr
#  define MX_ENTER_VISIT_ReturnsTwiceAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ReturnsTwiceAttr
#  define MX_EXIT_VISIT_ReturnsTwiceAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ReturnsTwiceAttr)
  MX_ENTER_VISIT_ReturnsTwiceAttr
  MX_VISIT_BASE(ReturnsTwiceAttr, InheritableAttr)
  MX_EXIT_VISIT_ReturnsTwiceAttr
MX_END_VISIT_ATTR(ReturnsTwiceAttr)

#ifndef MX_ENTER_VISIT_ReturnsNonNullAttr
#  define MX_ENTER_VISIT_ReturnsNonNullAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ReturnsNonNullAttr
#  define MX_EXIT_VISIT_ReturnsNonNullAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ReturnsNonNullAttr)
  MX_ENTER_VISIT_ReturnsNonNullAttr
  MX_VISIT_BASE(ReturnsNonNullAttr, InheritableAttr)
  MX_EXIT_VISIT_ReturnsNonNullAttr
MX_END_VISIT_ATTR(ReturnsNonNullAttr)

#ifndef MX_ENTER_VISIT_ReturnTypestateAttr
#  define MX_ENTER_VISIT_ReturnTypestateAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ReturnTypestateAttr
#  define MX_EXIT_VISIT_ReturnTypestateAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ReturnTypestateAttr)
  MX_ENTER_VISIT_ReturnTypestateAttr
  MX_VISIT_BASE(ReturnTypestateAttr, InheritableAttr)
  MX_VISIT_ENUM(ReturnTypestateAttr, state, 10, MX_APPLY_METHOD, State, ReturnTypestateAttrConsumedState, NthAttr)
  MX_EXIT_VISIT_ReturnTypestateAttr
MX_END_VISIT_ATTR(ReturnTypestateAttr)

#ifndef MX_ENTER_VISIT_RetainAttr
#  define MX_ENTER_VISIT_RetainAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_RetainAttr
#  define MX_EXIT_VISIT_RetainAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(RetainAttr)
  MX_ENTER_VISIT_RetainAttr
  MX_VISIT_BASE(RetainAttr, InheritableAttr)
  MX_EXIT_VISIT_RetainAttr
MX_END_VISIT_ATTR(RetainAttr)

#ifndef MX_ENTER_VISIT_RestrictAttr
#  define MX_ENTER_VISIT_RestrictAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_RestrictAttr
#  define MX_EXIT_VISIT_RestrictAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(RestrictAttr)
  MX_ENTER_VISIT_RestrictAttr
  MX_VISIT_BASE(RestrictAttr, InheritableAttr)
  MX_VISIT_ENUM(RestrictAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, RestrictAttrSpelling, NthAttr)
  MX_EXIT_VISIT_RestrictAttr
MX_END_VISIT_ATTR(RestrictAttr)

#ifndef MX_ENTER_VISIT_RequiresCapabilityAttr
#  define MX_ENTER_VISIT_RequiresCapabilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_RequiresCapabilityAttr
#  define MX_EXIT_VISIT_RequiresCapabilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(RequiresCapabilityAttr)
  MX_ENTER_VISIT_RequiresCapabilityAttr
  MX_VISIT_BASE(RequiresCapabilityAttr, InheritableAttr)
  MX_VISIT_ENUM(RequiresCapabilityAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, RequiresCapabilityAttrSpelling, NthAttr)
  MX_VISIT_BOOL(RequiresCapabilityAttr, is_shared, 12, MX_APPLY_METHOD, IsShared, bool, NthAttr)
  MX_EXIT_VISIT_RequiresCapabilityAttr
MX_END_VISIT_ATTR(RequiresCapabilityAttr)

#ifndef MX_ENTER_VISIT_ReqdWorkGroupSizeAttr
#  define MX_ENTER_VISIT_ReqdWorkGroupSizeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ReqdWorkGroupSizeAttr
#  define MX_EXIT_VISIT_ReqdWorkGroupSizeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ReqdWorkGroupSizeAttr)
  MX_ENTER_VISIT_ReqdWorkGroupSizeAttr
  MX_VISIT_BASE(ReqdWorkGroupSizeAttr, InheritableAttr)
  MX_EXIT_VISIT_ReqdWorkGroupSizeAttr
MX_END_VISIT_ATTR(ReqdWorkGroupSizeAttr)

#ifndef MX_ENTER_VISIT_ReleaseCapabilityAttr
#  define MX_ENTER_VISIT_ReleaseCapabilityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ReleaseCapabilityAttr
#  define MX_EXIT_VISIT_ReleaseCapabilityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ReleaseCapabilityAttr)
  MX_ENTER_VISIT_ReleaseCapabilityAttr
  MX_VISIT_BASE(ReleaseCapabilityAttr, InheritableAttr)
  MX_VISIT_ENUM(ReleaseCapabilityAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, ReleaseCapabilityAttrSpelling, NthAttr)
  MX_VISIT_BOOL(ReleaseCapabilityAttr, is_generic, 12, MX_APPLY_METHOD, IsGeneric, bool, NthAttr)
  MX_VISIT_BOOL(ReleaseCapabilityAttr, is_shared, 13, MX_APPLY_METHOD, IsShared, bool, NthAttr)
  MX_EXIT_VISIT_ReleaseCapabilityAttr
MX_END_VISIT_ATTR(ReleaseCapabilityAttr)

#ifndef MX_ENTER_VISIT_ReinitializesAttr
#  define MX_ENTER_VISIT_ReinitializesAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ReinitializesAttr
#  define MX_EXIT_VISIT_ReinitializesAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ReinitializesAttr)
  MX_ENTER_VISIT_ReinitializesAttr
  MX_VISIT_BASE(ReinitializesAttr, InheritableAttr)
  MX_EXIT_VISIT_ReinitializesAttr
MX_END_VISIT_ATTR(ReinitializesAttr)

#ifndef MX_ENTER_VISIT_RegCallAttr
#  define MX_ENTER_VISIT_RegCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_RegCallAttr
#  define MX_EXIT_VISIT_RegCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(RegCallAttr)
  MX_ENTER_VISIT_RegCallAttr
  MX_VISIT_BASE(RegCallAttr, InheritableAttr)
  MX_EXIT_VISIT_RegCallAttr
MX_END_VISIT_ATTR(RegCallAttr)

#ifndef MX_ENTER_VISIT_ReadOnlyPlacementAttr
#  define MX_ENTER_VISIT_ReadOnlyPlacementAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ReadOnlyPlacementAttr
#  define MX_EXIT_VISIT_ReadOnlyPlacementAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ReadOnlyPlacementAttr)
  MX_ENTER_VISIT_ReadOnlyPlacementAttr
  MX_VISIT_BASE(ReadOnlyPlacementAttr, InheritableAttr)
  MX_EXIT_VISIT_ReadOnlyPlacementAttr
MX_END_VISIT_ATTR(ReadOnlyPlacementAttr)

#ifndef MX_ENTER_VISIT_RandomizeLayoutAttr
#  define MX_ENTER_VISIT_RandomizeLayoutAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_RandomizeLayoutAttr
#  define MX_EXIT_VISIT_RandomizeLayoutAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(RandomizeLayoutAttr)
  MX_ENTER_VISIT_RandomizeLayoutAttr
  MX_VISIT_BASE(RandomizeLayoutAttr, InheritableAttr)
  MX_EXIT_VISIT_RandomizeLayoutAttr
MX_END_VISIT_ATTR(RandomizeLayoutAttr)

#ifndef MX_ENTER_VISIT_RISCVInterruptAttr
#  define MX_ENTER_VISIT_RISCVInterruptAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_RISCVInterruptAttr
#  define MX_EXIT_VISIT_RISCVInterruptAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(RISCVInterruptAttr)
  MX_ENTER_VISIT_RISCVInterruptAttr
  MX_VISIT_BASE(RISCVInterruptAttr, InheritableAttr)
  MX_VISIT_ENUM(RISCVInterruptAttr, interrupt, 10, MX_APPLY_METHOD, Interrupt, RISCVInterruptAttrInterruptType, NthAttr)
  MX_EXIT_VISIT_RISCVInterruptAttr
MX_END_VISIT_ATTR(RISCVInterruptAttr)

#ifndef MX_ENTER_VISIT_PureAttr
#  define MX_ENTER_VISIT_PureAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PureAttr
#  define MX_EXIT_VISIT_PureAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PureAttr)
  MX_ENTER_VISIT_PureAttr
  MX_VISIT_BASE(PureAttr, InheritableAttr)
  MX_EXIT_VISIT_PureAttr
MX_END_VISIT_ATTR(PureAttr)

#ifndef MX_ENTER_VISIT_PtGuardedVarAttr
#  define MX_ENTER_VISIT_PtGuardedVarAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PtGuardedVarAttr
#  define MX_EXIT_VISIT_PtGuardedVarAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PtGuardedVarAttr)
  MX_ENTER_VISIT_PtGuardedVarAttr
  MX_VISIT_BASE(PtGuardedVarAttr, InheritableAttr)
  MX_EXIT_VISIT_PtGuardedVarAttr
MX_END_VISIT_ATTR(PtGuardedVarAttr)

#ifndef MX_ENTER_VISIT_PtGuardedByAttr
#  define MX_ENTER_VISIT_PtGuardedByAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PtGuardedByAttr
#  define MX_EXIT_VISIT_PtGuardedByAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PtGuardedByAttr)
  MX_ENTER_VISIT_PtGuardedByAttr
  MX_VISIT_BASE(PtGuardedByAttr, InheritableAttr)
  MX_VISIT_ENTITY(PtGuardedByAttr, argument, 8, MX_APPLY_METHOD, Argument, Expr, NthAttr)
  MX_EXIT_VISIT_PtGuardedByAttr
MX_END_VISIT_ATTR(PtGuardedByAttr)

#ifndef MX_ENTER_VISIT_PreserveMostAttr
#  define MX_ENTER_VISIT_PreserveMostAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PreserveMostAttr
#  define MX_EXIT_VISIT_PreserveMostAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PreserveMostAttr)
  MX_ENTER_VISIT_PreserveMostAttr
  MX_VISIT_BASE(PreserveMostAttr, InheritableAttr)
  MX_EXIT_VISIT_PreserveMostAttr
MX_END_VISIT_ATTR(PreserveMostAttr)

#ifndef MX_ENTER_VISIT_PreserveAllAttr
#  define MX_ENTER_VISIT_PreserveAllAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PreserveAllAttr
#  define MX_EXIT_VISIT_PreserveAllAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PreserveAllAttr)
  MX_ENTER_VISIT_PreserveAllAttr
  MX_VISIT_BASE(PreserveAllAttr, InheritableAttr)
  MX_EXIT_VISIT_PreserveAllAttr
MX_END_VISIT_ATTR(PreserveAllAttr)

#ifndef MX_ENTER_VISIT_PreferredNameAttr
#  define MX_ENTER_VISIT_PreferredNameAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PreferredNameAttr
#  define MX_EXIT_VISIT_PreferredNameAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PreferredNameAttr)
  MX_ENTER_VISIT_PreferredNameAttr
  MX_VISIT_BASE(PreferredNameAttr, InheritableAttr)
  MX_VISIT_ENTITY(PreferredNameAttr, typedef_type, 8, MX_APPLY_METHOD, TypedefType, Type, NthAttr)
  MX_VISIT_ENTITY(PreferredNameAttr, typedef_type_token, 16, MX_APPLY_METHOD, TypedefTypeToken, Type, NthAttr)
  MX_EXIT_VISIT_PreferredNameAttr
MX_END_VISIT_ATTR(PreferredNameAttr)

#ifndef MX_ENTER_VISIT_PragmaClangTextSectionAttr
#  define MX_ENTER_VISIT_PragmaClangTextSectionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PragmaClangTextSectionAttr
#  define MX_EXIT_VISIT_PragmaClangTextSectionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PragmaClangTextSectionAttr)
  MX_ENTER_VISIT_PragmaClangTextSectionAttr
  MX_VISIT_BASE(PragmaClangTextSectionAttr, InheritableAttr)
  MX_VISIT_TEXT(PragmaClangTextSectionAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_PragmaClangTextSectionAttr
MX_END_VISIT_ATTR(PragmaClangTextSectionAttr)

#ifndef MX_ENTER_VISIT_PragmaClangRodataSectionAttr
#  define MX_ENTER_VISIT_PragmaClangRodataSectionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PragmaClangRodataSectionAttr
#  define MX_EXIT_VISIT_PragmaClangRodataSectionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PragmaClangRodataSectionAttr)
  MX_ENTER_VISIT_PragmaClangRodataSectionAttr
  MX_VISIT_BASE(PragmaClangRodataSectionAttr, InheritableAttr)
  MX_VISIT_TEXT(PragmaClangRodataSectionAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_PragmaClangRodataSectionAttr
MX_END_VISIT_ATTR(PragmaClangRodataSectionAttr)

#ifndef MX_ENTER_VISIT_PragmaClangRelroSectionAttr
#  define MX_ENTER_VISIT_PragmaClangRelroSectionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PragmaClangRelroSectionAttr
#  define MX_EXIT_VISIT_PragmaClangRelroSectionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PragmaClangRelroSectionAttr)
  MX_ENTER_VISIT_PragmaClangRelroSectionAttr
  MX_VISIT_BASE(PragmaClangRelroSectionAttr, InheritableAttr)
  MX_VISIT_TEXT(PragmaClangRelroSectionAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_PragmaClangRelroSectionAttr
MX_END_VISIT_ATTR(PragmaClangRelroSectionAttr)

#ifndef MX_ENTER_VISIT_PragmaClangDataSectionAttr
#  define MX_ENTER_VISIT_PragmaClangDataSectionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PragmaClangDataSectionAttr
#  define MX_EXIT_VISIT_PragmaClangDataSectionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PragmaClangDataSectionAttr)
  MX_ENTER_VISIT_PragmaClangDataSectionAttr
  MX_VISIT_BASE(PragmaClangDataSectionAttr, InheritableAttr)
  MX_VISIT_TEXT(PragmaClangDataSectionAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_PragmaClangDataSectionAttr
MX_END_VISIT_ATTR(PragmaClangDataSectionAttr)

#ifndef MX_ENTER_VISIT_PragmaClangBSSSectionAttr
#  define MX_ENTER_VISIT_PragmaClangBSSSectionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PragmaClangBSSSectionAttr
#  define MX_EXIT_VISIT_PragmaClangBSSSectionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PragmaClangBSSSectionAttr)
  MX_ENTER_VISIT_PragmaClangBSSSectionAttr
  MX_VISIT_BASE(PragmaClangBSSSectionAttr, InheritableAttr)
  MX_VISIT_TEXT(PragmaClangBSSSectionAttr, name, 9, MX_APPLY_METHOD, Name, basic_string_view, NthAttr)
  MX_EXIT_VISIT_PragmaClangBSSSectionAttr
MX_END_VISIT_ATTR(PragmaClangBSSSectionAttr)

#ifndef MX_ENTER_VISIT_PointerAttr
#  define MX_ENTER_VISIT_PointerAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PointerAttr
#  define MX_EXIT_VISIT_PointerAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PointerAttr)
  MX_ENTER_VISIT_PointerAttr
  MX_VISIT_BASE(PointerAttr, InheritableAttr)
  MX_VISIT_OPTIONAL_ENTITY(PointerAttr, dereferenced_type, 8, MX_APPLY_METHOD, DereferencedType, Type, NthAttr)
  MX_VISIT_OPTIONAL_ENTITY(PointerAttr, dereferenced_type_token, 16, MX_APPLY_METHOD, DereferencedTypeToken, Type, NthAttr)
  MX_EXIT_VISIT_PointerAttr
MX_END_VISIT_ATTR(PointerAttr)

#ifndef MX_ENTER_VISIT_PcsAttr
#  define MX_ENTER_VISIT_PcsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PcsAttr
#  define MX_EXIT_VISIT_PcsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PcsAttr)
  MX_ENTER_VISIT_PcsAttr
  MX_VISIT_BASE(PcsAttr, InheritableAttr)
  MX_VISIT_ENUM(PcsAttr, pcs, 10, MX_APPLY_METHOD, PCS, PcsAttrPCSType, NthAttr)
  MX_EXIT_VISIT_PcsAttr
MX_END_VISIT_ATTR(PcsAttr)

#ifndef MX_ENTER_VISIT_PatchableFunctionEntryAttr
#  define MX_ENTER_VISIT_PatchableFunctionEntryAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PatchableFunctionEntryAttr
#  define MX_EXIT_VISIT_PatchableFunctionEntryAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PatchableFunctionEntryAttr)
  MX_ENTER_VISIT_PatchableFunctionEntryAttr
  MX_VISIT_BASE(PatchableFunctionEntryAttr, InheritableAttr)
  MX_EXIT_VISIT_PatchableFunctionEntryAttr
MX_END_VISIT_ATTR(PatchableFunctionEntryAttr)

#ifndef MX_ENTER_VISIT_PascalAttr
#  define MX_ENTER_VISIT_PascalAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PascalAttr
#  define MX_EXIT_VISIT_PascalAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PascalAttr)
  MX_ENTER_VISIT_PascalAttr
  MX_VISIT_BASE(PascalAttr, InheritableAttr)
  MX_EXIT_VISIT_PascalAttr
MX_END_VISIT_ATTR(PascalAttr)

#ifndef MX_ENTER_VISIT_ParamTypestateAttr
#  define MX_ENTER_VISIT_ParamTypestateAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ParamTypestateAttr
#  define MX_EXIT_VISIT_ParamTypestateAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ParamTypestateAttr)
  MX_ENTER_VISIT_ParamTypestateAttr
  MX_VISIT_BASE(ParamTypestateAttr, InheritableAttr)
  MX_VISIT_ENUM(ParamTypestateAttr, parameter_state, 10, MX_APPLY_METHOD, ParameterState, ParamTypestateAttrConsumedState, NthAttr)
  MX_EXIT_VISIT_ParamTypestateAttr
MX_END_VISIT_ATTR(ParamTypestateAttr)

#ifndef MX_ENTER_VISIT_PackedAttr
#  define MX_ENTER_VISIT_PackedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_PackedAttr
#  define MX_EXIT_VISIT_PackedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(PackedAttr)
  MX_ENTER_VISIT_PackedAttr
  MX_VISIT_BASE(PackedAttr, InheritableAttr)
  MX_EXIT_VISIT_PackedAttr
MX_END_VISIT_ATTR(PackedAttr)

#ifndef MX_ENTER_VISIT_OwnershipAttr
#  define MX_ENTER_VISIT_OwnershipAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OwnershipAttr
#  define MX_EXIT_VISIT_OwnershipAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OwnershipAttr)
  MX_ENTER_VISIT_OwnershipAttr
  MX_VISIT_BASE(OwnershipAttr, InheritableAttr)
  MX_VISIT_ENUM(OwnershipAttr, own_kind, 10, MX_APPLY_METHOD, OwnKind, OwnershipAttrOwnershipKind, NthAttr)
  MX_VISIT_ENUM(OwnershipAttr, semantic_spelling, 14, MX_APPLY_METHOD, SemanticSpelling, OwnershipAttrSpelling, NthAttr)
  MX_VISIT_BOOL(OwnershipAttr, is_holds, 12, MX_APPLY_METHOD, IsHolds, bool, NthAttr)
  MX_VISIT_BOOL(OwnershipAttr, is_returns, 13, MX_APPLY_METHOD, IsReturns, bool, NthAttr)
  MX_VISIT_BOOL(OwnershipAttr, is_takes, 19, MX_APPLY_METHOD, IsTakes, bool, NthAttr)
  MX_EXIT_VISIT_OwnershipAttr
MX_END_VISIT_ATTR(OwnershipAttr)

#ifndef MX_ENTER_VISIT_OwnerAttr
#  define MX_ENTER_VISIT_OwnerAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OwnerAttr
#  define MX_EXIT_VISIT_OwnerAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OwnerAttr)
  MX_ENTER_VISIT_OwnerAttr
  MX_VISIT_BASE(OwnerAttr, InheritableAttr)
  MX_VISIT_OPTIONAL_ENTITY(OwnerAttr, dereferenced_type, 8, MX_APPLY_METHOD, DereferencedType, Type, NthAttr)
  MX_VISIT_OPTIONAL_ENTITY(OwnerAttr, dereferenced_type_token, 16, MX_APPLY_METHOD, DereferencedTypeToken, Type, NthAttr)
  MX_EXIT_VISIT_OwnerAttr
MX_END_VISIT_ATTR(OwnerAttr)

#ifndef MX_ENTER_VISIT_OverrideAttr
#  define MX_ENTER_VISIT_OverrideAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OverrideAttr
#  define MX_EXIT_VISIT_OverrideAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OverrideAttr)
  MX_ENTER_VISIT_OverrideAttr
  MX_VISIT_BASE(OverrideAttr, InheritableAttr)
  MX_EXIT_VISIT_OverrideAttr
MX_END_VISIT_ATTR(OverrideAttr)

#ifndef MX_ENTER_VISIT_OptimizeNoneAttr
#  define MX_ENTER_VISIT_OptimizeNoneAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OptimizeNoneAttr
#  define MX_EXIT_VISIT_OptimizeNoneAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OptimizeNoneAttr)
  MX_ENTER_VISIT_OptimizeNoneAttr
  MX_VISIT_BASE(OptimizeNoneAttr, InheritableAttr)
  MX_EXIT_VISIT_OptimizeNoneAttr
MX_END_VISIT_ATTR(OptimizeNoneAttr)

#ifndef MX_ENTER_VISIT_OpenCLKernelAttr
#  define MX_ENTER_VISIT_OpenCLKernelAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLKernelAttr
#  define MX_EXIT_VISIT_OpenCLKernelAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLKernelAttr)
  MX_ENTER_VISIT_OpenCLKernelAttr
  MX_VISIT_BASE(OpenCLKernelAttr, InheritableAttr)
  MX_EXIT_VISIT_OpenCLKernelAttr
MX_END_VISIT_ATTR(OpenCLKernelAttr)

#ifndef MX_ENTER_VISIT_OpenCLIntelReqdSubGroupSizeAttr
#  define MX_ENTER_VISIT_OpenCLIntelReqdSubGroupSizeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OpenCLIntelReqdSubGroupSizeAttr
#  define MX_EXIT_VISIT_OpenCLIntelReqdSubGroupSizeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OpenCLIntelReqdSubGroupSizeAttr)
  MX_ENTER_VISIT_OpenCLIntelReqdSubGroupSizeAttr
  MX_VISIT_BASE(OpenCLIntelReqdSubGroupSizeAttr, InheritableAttr)
  MX_EXIT_VISIT_OpenCLIntelReqdSubGroupSizeAttr
MX_END_VISIT_ATTR(OpenCLIntelReqdSubGroupSizeAttr)

#ifndef MX_ENTER_VISIT_ObjCSubclassingRestrictedAttr
#  define MX_ENTER_VISIT_ObjCSubclassingRestrictedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCSubclassingRestrictedAttr
#  define MX_EXIT_VISIT_ObjCSubclassingRestrictedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCSubclassingRestrictedAttr)
  MX_ENTER_VISIT_ObjCSubclassingRestrictedAttr
  MX_VISIT_BASE(ObjCSubclassingRestrictedAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCSubclassingRestrictedAttr
MX_END_VISIT_ATTR(ObjCSubclassingRestrictedAttr)

#ifndef MX_ENTER_VISIT_ObjCRootClassAttr
#  define MX_ENTER_VISIT_ObjCRootClassAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCRootClassAttr
#  define MX_EXIT_VISIT_ObjCRootClassAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCRootClassAttr)
  MX_ENTER_VISIT_ObjCRootClassAttr
  MX_VISIT_BASE(ObjCRootClassAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCRootClassAttr
MX_END_VISIT_ATTR(ObjCRootClassAttr)

#ifndef MX_ENTER_VISIT_ObjCReturnsInnerPointerAttr
#  define MX_ENTER_VISIT_ObjCReturnsInnerPointerAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCReturnsInnerPointerAttr
#  define MX_EXIT_VISIT_ObjCReturnsInnerPointerAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCReturnsInnerPointerAttr)
  MX_ENTER_VISIT_ObjCReturnsInnerPointerAttr
  MX_VISIT_BASE(ObjCReturnsInnerPointerAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCReturnsInnerPointerAttr
MX_END_VISIT_ATTR(ObjCReturnsInnerPointerAttr)

#ifndef MX_ENTER_VISIT_ObjCRequiresSuperAttr
#  define MX_ENTER_VISIT_ObjCRequiresSuperAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCRequiresSuperAttr
#  define MX_EXIT_VISIT_ObjCRequiresSuperAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCRequiresSuperAttr)
  MX_ENTER_VISIT_ObjCRequiresSuperAttr
  MX_VISIT_BASE(ObjCRequiresSuperAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCRequiresSuperAttr
MX_END_VISIT_ATTR(ObjCRequiresSuperAttr)

#ifndef MX_ENTER_VISIT_ObjCRequiresPropertyDefsAttr
#  define MX_ENTER_VISIT_ObjCRequiresPropertyDefsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCRequiresPropertyDefsAttr
#  define MX_EXIT_VISIT_ObjCRequiresPropertyDefsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCRequiresPropertyDefsAttr)
  MX_ENTER_VISIT_ObjCRequiresPropertyDefsAttr
  MX_VISIT_BASE(ObjCRequiresPropertyDefsAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCRequiresPropertyDefsAttr
MX_END_VISIT_ATTR(ObjCRequiresPropertyDefsAttr)

#ifndef MX_ENTER_VISIT_ObjCPreciseLifetimeAttr
#  define MX_ENTER_VISIT_ObjCPreciseLifetimeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCPreciseLifetimeAttr
#  define MX_EXIT_VISIT_ObjCPreciseLifetimeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCPreciseLifetimeAttr)
  MX_ENTER_VISIT_ObjCPreciseLifetimeAttr
  MX_VISIT_BASE(ObjCPreciseLifetimeAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCPreciseLifetimeAttr
MX_END_VISIT_ATTR(ObjCPreciseLifetimeAttr)

#ifndef MX_ENTER_VISIT_ObjCOwnershipAttr
#  define MX_ENTER_VISIT_ObjCOwnershipAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCOwnershipAttr
#  define MX_EXIT_VISIT_ObjCOwnershipAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCOwnershipAttr)
  MX_ENTER_VISIT_ObjCOwnershipAttr
  MX_VISIT_BASE(ObjCOwnershipAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCOwnershipAttr
MX_END_VISIT_ATTR(ObjCOwnershipAttr)

#ifndef MX_ENTER_VISIT_ObjCNSObjectAttr
#  define MX_ENTER_VISIT_ObjCNSObjectAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCNSObjectAttr
#  define MX_EXIT_VISIT_ObjCNSObjectAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCNSObjectAttr)
  MX_ENTER_VISIT_ObjCNSObjectAttr
  MX_VISIT_BASE(ObjCNSObjectAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCNSObjectAttr
MX_END_VISIT_ATTR(ObjCNSObjectAttr)

#ifndef MX_ENTER_VISIT_ObjCMethodFamilyAttr
#  define MX_ENTER_VISIT_ObjCMethodFamilyAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCMethodFamilyAttr
#  define MX_EXIT_VISIT_ObjCMethodFamilyAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCMethodFamilyAttr)
  MX_ENTER_VISIT_ObjCMethodFamilyAttr
  MX_VISIT_BASE(ObjCMethodFamilyAttr, InheritableAttr)
  MX_VISIT_ENUM(ObjCMethodFamilyAttr, family, 10, MX_APPLY_METHOD, Family, ObjCMethodFamilyAttrFamilyKind, NthAttr)
  MX_EXIT_VISIT_ObjCMethodFamilyAttr
MX_END_VISIT_ATTR(ObjCMethodFamilyAttr)

#ifndef MX_ENTER_VISIT_ObjCIndependentClassAttr
#  define MX_ENTER_VISIT_ObjCIndependentClassAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCIndependentClassAttr
#  define MX_EXIT_VISIT_ObjCIndependentClassAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCIndependentClassAttr)
  MX_ENTER_VISIT_ObjCIndependentClassAttr
  MX_VISIT_BASE(ObjCIndependentClassAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCIndependentClassAttr
MX_END_VISIT_ATTR(ObjCIndependentClassAttr)

#ifndef MX_ENTER_VISIT_ObjCExternallyRetainedAttr
#  define MX_ENTER_VISIT_ObjCExternallyRetainedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCExternallyRetainedAttr
#  define MX_EXIT_VISIT_ObjCExternallyRetainedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCExternallyRetainedAttr)
  MX_ENTER_VISIT_ObjCExternallyRetainedAttr
  MX_VISIT_BASE(ObjCExternallyRetainedAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCExternallyRetainedAttr
MX_END_VISIT_ATTR(ObjCExternallyRetainedAttr)

#ifndef MX_ENTER_VISIT_ObjCExplicitProtocolImplAttr
#  define MX_ENTER_VISIT_ObjCExplicitProtocolImplAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCExplicitProtocolImplAttr
#  define MX_EXIT_VISIT_ObjCExplicitProtocolImplAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCExplicitProtocolImplAttr)
  MX_ENTER_VISIT_ObjCExplicitProtocolImplAttr
  MX_VISIT_BASE(ObjCExplicitProtocolImplAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCExplicitProtocolImplAttr
MX_END_VISIT_ATTR(ObjCExplicitProtocolImplAttr)

#ifndef MX_ENTER_VISIT_ObjCExceptionAttr
#  define MX_ENTER_VISIT_ObjCExceptionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCExceptionAttr
#  define MX_EXIT_VISIT_ObjCExceptionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCExceptionAttr)
  MX_ENTER_VISIT_ObjCExceptionAttr
  MX_VISIT_BASE(ObjCExceptionAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCExceptionAttr
MX_END_VISIT_ATTR(ObjCExceptionAttr)

#ifndef MX_ENTER_VISIT_ObjCBridgeRelatedAttr
#  define MX_ENTER_VISIT_ObjCBridgeRelatedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCBridgeRelatedAttr
#  define MX_EXIT_VISIT_ObjCBridgeRelatedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCBridgeRelatedAttr)
  MX_ENTER_VISIT_ObjCBridgeRelatedAttr
  MX_VISIT_BASE(ObjCBridgeRelatedAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCBridgeRelatedAttr
MX_END_VISIT_ATTR(ObjCBridgeRelatedAttr)

#ifndef MX_ENTER_VISIT_ObjCBridgeMutableAttr
#  define MX_ENTER_VISIT_ObjCBridgeMutableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCBridgeMutableAttr
#  define MX_EXIT_VISIT_ObjCBridgeMutableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCBridgeMutableAttr)
  MX_ENTER_VISIT_ObjCBridgeMutableAttr
  MX_VISIT_BASE(ObjCBridgeMutableAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCBridgeMutableAttr
MX_END_VISIT_ATTR(ObjCBridgeMutableAttr)

#ifndef MX_ENTER_VISIT_ObjCBridgeAttr
#  define MX_ENTER_VISIT_ObjCBridgeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_ObjCBridgeAttr
#  define MX_EXIT_VISIT_ObjCBridgeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(ObjCBridgeAttr)
  MX_ENTER_VISIT_ObjCBridgeAttr
  MX_VISIT_BASE(ObjCBridgeAttr, InheritableAttr)
  MX_EXIT_VISIT_ObjCBridgeAttr
MX_END_VISIT_ATTR(ObjCBridgeAttr)

#ifndef MX_ENTER_VISIT_OSReturnsRetainedOnZeroAttr
#  define MX_ENTER_VISIT_OSReturnsRetainedOnZeroAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OSReturnsRetainedOnZeroAttr
#  define MX_EXIT_VISIT_OSReturnsRetainedOnZeroAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OSReturnsRetainedOnZeroAttr)
  MX_ENTER_VISIT_OSReturnsRetainedOnZeroAttr
  MX_VISIT_BASE(OSReturnsRetainedOnZeroAttr, InheritableAttr)
  MX_EXIT_VISIT_OSReturnsRetainedOnZeroAttr
MX_END_VISIT_ATTR(OSReturnsRetainedOnZeroAttr)

#ifndef MX_ENTER_VISIT_OSReturnsRetainedOnNonZeroAttr
#  define MX_ENTER_VISIT_OSReturnsRetainedOnNonZeroAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OSReturnsRetainedOnNonZeroAttr
#  define MX_EXIT_VISIT_OSReturnsRetainedOnNonZeroAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OSReturnsRetainedOnNonZeroAttr)
  MX_ENTER_VISIT_OSReturnsRetainedOnNonZeroAttr
  MX_VISIT_BASE(OSReturnsRetainedOnNonZeroAttr, InheritableAttr)
  MX_EXIT_VISIT_OSReturnsRetainedOnNonZeroAttr
MX_END_VISIT_ATTR(OSReturnsRetainedOnNonZeroAttr)

#ifndef MX_ENTER_VISIT_OSReturnsRetainedAttr
#  define MX_ENTER_VISIT_OSReturnsRetainedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OSReturnsRetainedAttr
#  define MX_EXIT_VISIT_OSReturnsRetainedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OSReturnsRetainedAttr)
  MX_ENTER_VISIT_OSReturnsRetainedAttr
  MX_VISIT_BASE(OSReturnsRetainedAttr, InheritableAttr)
  MX_EXIT_VISIT_OSReturnsRetainedAttr
MX_END_VISIT_ATTR(OSReturnsRetainedAttr)

#ifndef MX_ENTER_VISIT_OSReturnsNotRetainedAttr
#  define MX_ENTER_VISIT_OSReturnsNotRetainedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OSReturnsNotRetainedAttr
#  define MX_EXIT_VISIT_OSReturnsNotRetainedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OSReturnsNotRetainedAttr)
  MX_ENTER_VISIT_OSReturnsNotRetainedAttr
  MX_VISIT_BASE(OSReturnsNotRetainedAttr, InheritableAttr)
  MX_EXIT_VISIT_OSReturnsNotRetainedAttr
MX_END_VISIT_ATTR(OSReturnsNotRetainedAttr)

#ifndef MX_ENTER_VISIT_OSConsumesThisAttr
#  define MX_ENTER_VISIT_OSConsumesThisAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OSConsumesThisAttr
#  define MX_EXIT_VISIT_OSConsumesThisAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OSConsumesThisAttr)
  MX_ENTER_VISIT_OSConsumesThisAttr
  MX_VISIT_BASE(OSConsumesThisAttr, InheritableAttr)
  MX_EXIT_VISIT_OSConsumesThisAttr
MX_END_VISIT_ATTR(OSConsumesThisAttr)

#ifndef MX_ENTER_VISIT_OMPThreadPrivateDeclAttr
#  define MX_ENTER_VISIT_OMPThreadPrivateDeclAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OMPThreadPrivateDeclAttr
#  define MX_EXIT_VISIT_OMPThreadPrivateDeclAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OMPThreadPrivateDeclAttr)
  MX_ENTER_VISIT_OMPThreadPrivateDeclAttr
  MX_VISIT_BASE(OMPThreadPrivateDeclAttr, InheritableAttr)
  MX_EXIT_VISIT_OMPThreadPrivateDeclAttr
MX_END_VISIT_ATTR(OMPThreadPrivateDeclAttr)

#ifndef MX_ENTER_VISIT_OMPDeclareVariantAttr
#  define MX_ENTER_VISIT_OMPDeclareVariantAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OMPDeclareVariantAttr
#  define MX_EXIT_VISIT_OMPDeclareVariantAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OMPDeclareVariantAttr)
  MX_ENTER_VISIT_OMPDeclareVariantAttr
  MX_VISIT_BASE(OMPDeclareVariantAttr, InheritableAttr)
  MX_VISIT_ENTITY(OMPDeclareVariantAttr, variant_func_reference, 8, MX_APPLY_METHOD, VariantFuncReference, Expr, NthAttr)
  MX_EXIT_VISIT_OMPDeclareVariantAttr
MX_END_VISIT_ATTR(OMPDeclareVariantAttr)

#ifndef MX_ENTER_VISIT_OMPDeclareTargetDeclAttr
#  define MX_ENTER_VISIT_OMPDeclareTargetDeclAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OMPDeclareTargetDeclAttr
#  define MX_EXIT_VISIT_OMPDeclareTargetDeclAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OMPDeclareTargetDeclAttr)
  MX_ENTER_VISIT_OMPDeclareTargetDeclAttr
  MX_VISIT_BASE(OMPDeclareTargetDeclAttr, InheritableAttr)
  MX_VISIT_ENUM(OMPDeclareTargetDeclAttr, dev_type, 10, MX_APPLY_METHOD, DevType, OMPDeclareTargetDeclAttrDevTypeTy, NthAttr)
  MX_VISIT_BOOL(OMPDeclareTargetDeclAttr, indirect, 12, MX_APPLY_METHOD, Indirect, bool, NthAttr)
  MX_VISIT_ENTITY(OMPDeclareTargetDeclAttr, indirect_expression, 8, MX_APPLY_METHOD, IndirectExpression, Expr, NthAttr)
  MX_VISIT_ENUM(OMPDeclareTargetDeclAttr, map_type, 14, MX_APPLY_METHOD, MapType, OMPDeclareTargetDeclAttrMapTypeTy, NthAttr)
  MX_EXIT_VISIT_OMPDeclareTargetDeclAttr
MX_END_VISIT_ATTR(OMPDeclareTargetDeclAttr)

#ifndef MX_ENTER_VISIT_OMPCaptureNoInitAttr
#  define MX_ENTER_VISIT_OMPCaptureNoInitAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OMPCaptureNoInitAttr
#  define MX_EXIT_VISIT_OMPCaptureNoInitAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OMPCaptureNoInitAttr)
  MX_ENTER_VISIT_OMPCaptureNoInitAttr
  MX_VISIT_BASE(OMPCaptureNoInitAttr, InheritableAttr)
  MX_EXIT_VISIT_OMPCaptureNoInitAttr
MX_END_VISIT_ATTR(OMPCaptureNoInitAttr)

#ifndef MX_ENTER_VISIT_OMPAllocateDeclAttr
#  define MX_ENTER_VISIT_OMPAllocateDeclAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_OMPAllocateDeclAttr
#  define MX_EXIT_VISIT_OMPAllocateDeclAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(OMPAllocateDeclAttr)
  MX_ENTER_VISIT_OMPAllocateDeclAttr
  MX_VISIT_BASE(OMPAllocateDeclAttr, InheritableAttr)
  MX_VISIT_ENTITY(OMPAllocateDeclAttr, alignment, 8, MX_APPLY_METHOD, Alignment, Expr, NthAttr)
  MX_VISIT_ENTITY(OMPAllocateDeclAttr, allocator, 16, MX_APPLY_METHOD, Allocator, Expr, NthAttr)
  MX_VISIT_ENUM(OMPAllocateDeclAttr, allocator_type, 10, MX_APPLY_METHOD, AllocatorType, OMPAllocateDeclAttrAllocatorTypeTy, NthAttr)
  MX_EXIT_VISIT_OMPAllocateDeclAttr
MX_END_VISIT_ATTR(OMPAllocateDeclAttr)

#ifndef MX_ENTER_VISIT_NotTailCalledAttr
#  define MX_ENTER_VISIT_NotTailCalledAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NotTailCalledAttr
#  define MX_EXIT_VISIT_NotTailCalledAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NotTailCalledAttr)
  MX_ENTER_VISIT_NotTailCalledAttr
  MX_VISIT_BASE(NotTailCalledAttr, InheritableAttr)
  MX_EXIT_VISIT_NotTailCalledAttr
MX_END_VISIT_ATTR(NotTailCalledAttr)

#ifndef MX_ENTER_VISIT_NoUwtableAttr
#  define MX_ENTER_VISIT_NoUwtableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoUwtableAttr
#  define MX_EXIT_VISIT_NoUwtableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoUwtableAttr)
  MX_ENTER_VISIT_NoUwtableAttr
  MX_VISIT_BASE(NoUwtableAttr, InheritableAttr)
  MX_EXIT_VISIT_NoUwtableAttr
MX_END_VISIT_ATTR(NoUwtableAttr)

#ifndef MX_ENTER_VISIT_NoUniqueAddressAttr
#  define MX_ENTER_VISIT_NoUniqueAddressAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoUniqueAddressAttr
#  define MX_EXIT_VISIT_NoUniqueAddressAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoUniqueAddressAttr)
  MX_ENTER_VISIT_NoUniqueAddressAttr
  MX_VISIT_BASE(NoUniqueAddressAttr, InheritableAttr)
  MX_EXIT_VISIT_NoUniqueAddressAttr
MX_END_VISIT_ATTR(NoUniqueAddressAttr)

#ifndef MX_ENTER_VISIT_NoThrowAttr
#  define MX_ENTER_VISIT_NoThrowAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoThrowAttr
#  define MX_EXIT_VISIT_NoThrowAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoThrowAttr)
  MX_ENTER_VISIT_NoThrowAttr
  MX_VISIT_BASE(NoThrowAttr, InheritableAttr)
  MX_EXIT_VISIT_NoThrowAttr
MX_END_VISIT_ATTR(NoThrowAttr)

#ifndef MX_ENTER_VISIT_NoThreadSafetyAnalysisAttr
#  define MX_ENTER_VISIT_NoThreadSafetyAnalysisAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoThreadSafetyAnalysisAttr
#  define MX_EXIT_VISIT_NoThreadSafetyAnalysisAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoThreadSafetyAnalysisAttr)
  MX_ENTER_VISIT_NoThreadSafetyAnalysisAttr
  MX_VISIT_BASE(NoThreadSafetyAnalysisAttr, InheritableAttr)
  MX_EXIT_VISIT_NoThreadSafetyAnalysisAttr
MX_END_VISIT_ATTR(NoThreadSafetyAnalysisAttr)

#ifndef MX_ENTER_VISIT_NoStackProtectorAttr
#  define MX_ENTER_VISIT_NoStackProtectorAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoStackProtectorAttr
#  define MX_EXIT_VISIT_NoStackProtectorAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoStackProtectorAttr)
  MX_ENTER_VISIT_NoStackProtectorAttr
  MX_VISIT_BASE(NoStackProtectorAttr, InheritableAttr)
  MX_VISIT_ENUM(NoStackProtectorAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, NoStackProtectorAttrSpelling, NthAttr)
  MX_EXIT_VISIT_NoStackProtectorAttr
MX_END_VISIT_ATTR(NoStackProtectorAttr)

#ifndef MX_ENTER_VISIT_NoSplitStackAttr
#  define MX_ENTER_VISIT_NoSplitStackAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoSplitStackAttr
#  define MX_EXIT_VISIT_NoSplitStackAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoSplitStackAttr)
  MX_ENTER_VISIT_NoSplitStackAttr
  MX_VISIT_BASE(NoSplitStackAttr, InheritableAttr)
  MX_EXIT_VISIT_NoSplitStackAttr
MX_END_VISIT_ATTR(NoSplitStackAttr)

#ifndef MX_ENTER_VISIT_NoSpeculativeLoadHardeningAttr
#  define MX_ENTER_VISIT_NoSpeculativeLoadHardeningAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoSpeculativeLoadHardeningAttr
#  define MX_EXIT_VISIT_NoSpeculativeLoadHardeningAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoSpeculativeLoadHardeningAttr)
  MX_ENTER_VISIT_NoSpeculativeLoadHardeningAttr
  MX_VISIT_BASE(NoSpeculativeLoadHardeningAttr, InheritableAttr)
  MX_EXIT_VISIT_NoSpeculativeLoadHardeningAttr
MX_END_VISIT_ATTR(NoSpeculativeLoadHardeningAttr)

#ifndef MX_ENTER_VISIT_NoSanitizeAttr
#  define MX_ENTER_VISIT_NoSanitizeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoSanitizeAttr
#  define MX_EXIT_VISIT_NoSanitizeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoSanitizeAttr)
  MX_ENTER_VISIT_NoSanitizeAttr
  MX_VISIT_BASE(NoSanitizeAttr, InheritableAttr)
  MX_VISIT_BOOL(NoSanitizeAttr, has_coverage, 12, MX_APPLY_METHOD, HasCoverage, bool, NthAttr)
  MX_EXIT_VISIT_NoSanitizeAttr
MX_END_VISIT_ATTR(NoSanitizeAttr)

#ifndef MX_ENTER_VISIT_NoReturnAttr
#  define MX_ENTER_VISIT_NoReturnAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoReturnAttr
#  define MX_EXIT_VISIT_NoReturnAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoReturnAttr)
  MX_ENTER_VISIT_NoReturnAttr
  MX_VISIT_BASE(NoReturnAttr, InheritableAttr)
  MX_EXIT_VISIT_NoReturnAttr
MX_END_VISIT_ATTR(NoReturnAttr)

#ifndef MX_ENTER_VISIT_NoRandomizeLayoutAttr
#  define MX_ENTER_VISIT_NoRandomizeLayoutAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoRandomizeLayoutAttr
#  define MX_EXIT_VISIT_NoRandomizeLayoutAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoRandomizeLayoutAttr)
  MX_ENTER_VISIT_NoRandomizeLayoutAttr
  MX_VISIT_BASE(NoRandomizeLayoutAttr, InheritableAttr)
  MX_EXIT_VISIT_NoRandomizeLayoutAttr
MX_END_VISIT_ATTR(NoRandomizeLayoutAttr)

#ifndef MX_ENTER_VISIT_NoProfileFunctionAttr
#  define MX_ENTER_VISIT_NoProfileFunctionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoProfileFunctionAttr
#  define MX_EXIT_VISIT_NoProfileFunctionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoProfileFunctionAttr)
  MX_ENTER_VISIT_NoProfileFunctionAttr
  MX_VISIT_BASE(NoProfileFunctionAttr, InheritableAttr)
  MX_EXIT_VISIT_NoProfileFunctionAttr
MX_END_VISIT_ATTR(NoProfileFunctionAttr)

#ifndef MX_ENTER_VISIT_NoMips16Attr
#  define MX_ENTER_VISIT_NoMips16Attr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoMips16Attr
#  define MX_EXIT_VISIT_NoMips16Attr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoMips16Attr)
  MX_ENTER_VISIT_NoMips16Attr
  MX_VISIT_BASE(NoMips16Attr, InheritableAttr)
  MX_EXIT_VISIT_NoMips16Attr
MX_END_VISIT_ATTR(NoMips16Attr)

#ifndef MX_ENTER_VISIT_NoMicroMipsAttr
#  define MX_ENTER_VISIT_NoMicroMipsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoMicroMipsAttr
#  define MX_EXIT_VISIT_NoMicroMipsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoMicroMipsAttr)
  MX_ENTER_VISIT_NoMicroMipsAttr
  MX_VISIT_BASE(NoMicroMipsAttr, InheritableAttr)
  MX_EXIT_VISIT_NoMicroMipsAttr
MX_END_VISIT_ATTR(NoMicroMipsAttr)

#ifndef MX_ENTER_VISIT_NoInstrumentFunctionAttr
#  define MX_ENTER_VISIT_NoInstrumentFunctionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoInstrumentFunctionAttr
#  define MX_EXIT_VISIT_NoInstrumentFunctionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoInstrumentFunctionAttr)
  MX_ENTER_VISIT_NoInstrumentFunctionAttr
  MX_VISIT_BASE(NoInstrumentFunctionAttr, InheritableAttr)
  MX_EXIT_VISIT_NoInstrumentFunctionAttr
MX_END_VISIT_ATTR(NoInstrumentFunctionAttr)

#ifndef MX_ENTER_VISIT_NoDuplicateAttr
#  define MX_ENTER_VISIT_NoDuplicateAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoDuplicateAttr
#  define MX_EXIT_VISIT_NoDuplicateAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoDuplicateAttr)
  MX_ENTER_VISIT_NoDuplicateAttr
  MX_VISIT_BASE(NoDuplicateAttr, InheritableAttr)
  MX_EXIT_VISIT_NoDuplicateAttr
MX_END_VISIT_ATTR(NoDuplicateAttr)

#ifndef MX_ENTER_VISIT_NoDestroyAttr
#  define MX_ENTER_VISIT_NoDestroyAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoDestroyAttr
#  define MX_EXIT_VISIT_NoDestroyAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoDestroyAttr)
  MX_ENTER_VISIT_NoDestroyAttr
  MX_VISIT_BASE(NoDestroyAttr, InheritableAttr)
  MX_EXIT_VISIT_NoDestroyAttr
MX_END_VISIT_ATTR(NoDestroyAttr)

#ifndef MX_ENTER_VISIT_NoDebugAttr
#  define MX_ENTER_VISIT_NoDebugAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoDebugAttr
#  define MX_EXIT_VISIT_NoDebugAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoDebugAttr)
  MX_ENTER_VISIT_NoDebugAttr
  MX_VISIT_BASE(NoDebugAttr, InheritableAttr)
  MX_EXIT_VISIT_NoDebugAttr
MX_END_VISIT_ATTR(NoDebugAttr)

#ifndef MX_ENTER_VISIT_NoCommonAttr
#  define MX_ENTER_VISIT_NoCommonAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoCommonAttr
#  define MX_EXIT_VISIT_NoCommonAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoCommonAttr)
  MX_ENTER_VISIT_NoCommonAttr
  MX_VISIT_BASE(NoCommonAttr, InheritableAttr)
  MX_EXIT_VISIT_NoCommonAttr
MX_END_VISIT_ATTR(NoCommonAttr)

#ifndef MX_ENTER_VISIT_NoAliasAttr
#  define MX_ENTER_VISIT_NoAliasAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NoAliasAttr
#  define MX_EXIT_VISIT_NoAliasAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NoAliasAttr)
  MX_ENTER_VISIT_NoAliasAttr
  MX_VISIT_BASE(NoAliasAttr, InheritableAttr)
  MX_EXIT_VISIT_NoAliasAttr
MX_END_VISIT_ATTR(NoAliasAttr)

#ifndef MX_ENTER_VISIT_NakedAttr
#  define MX_ENTER_VISIT_NakedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NakedAttr
#  define MX_EXIT_VISIT_NakedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NakedAttr)
  MX_ENTER_VISIT_NakedAttr
  MX_VISIT_BASE(NakedAttr, InheritableAttr)
  MX_EXIT_VISIT_NakedAttr
MX_END_VISIT_ATTR(NakedAttr)

#ifndef MX_ENTER_VISIT_NVPTXKernelAttr
#  define MX_ENTER_VISIT_NVPTXKernelAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NVPTXKernelAttr
#  define MX_EXIT_VISIT_NVPTXKernelAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NVPTXKernelAttr)
  MX_ENTER_VISIT_NVPTXKernelAttr
  MX_VISIT_BASE(NVPTXKernelAttr, InheritableAttr)
  MX_EXIT_VISIT_NVPTXKernelAttr
MX_END_VISIT_ATTR(NVPTXKernelAttr)

#ifndef MX_ENTER_VISIT_NSReturnsRetainedAttr
#  define MX_ENTER_VISIT_NSReturnsRetainedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NSReturnsRetainedAttr
#  define MX_EXIT_VISIT_NSReturnsRetainedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NSReturnsRetainedAttr)
  MX_ENTER_VISIT_NSReturnsRetainedAttr
  MX_VISIT_BASE(NSReturnsRetainedAttr, InheritableAttr)
  MX_EXIT_VISIT_NSReturnsRetainedAttr
MX_END_VISIT_ATTR(NSReturnsRetainedAttr)

#ifndef MX_ENTER_VISIT_NSReturnsNotRetainedAttr
#  define MX_ENTER_VISIT_NSReturnsNotRetainedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NSReturnsNotRetainedAttr
#  define MX_EXIT_VISIT_NSReturnsNotRetainedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NSReturnsNotRetainedAttr)
  MX_ENTER_VISIT_NSReturnsNotRetainedAttr
  MX_VISIT_BASE(NSReturnsNotRetainedAttr, InheritableAttr)
  MX_EXIT_VISIT_NSReturnsNotRetainedAttr
MX_END_VISIT_ATTR(NSReturnsNotRetainedAttr)

#ifndef MX_ENTER_VISIT_NSReturnsAutoreleasedAttr
#  define MX_ENTER_VISIT_NSReturnsAutoreleasedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NSReturnsAutoreleasedAttr
#  define MX_EXIT_VISIT_NSReturnsAutoreleasedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NSReturnsAutoreleasedAttr)
  MX_ENTER_VISIT_NSReturnsAutoreleasedAttr
  MX_VISIT_BASE(NSReturnsAutoreleasedAttr, InheritableAttr)
  MX_EXIT_VISIT_NSReturnsAutoreleasedAttr
MX_END_VISIT_ATTR(NSReturnsAutoreleasedAttr)

#ifndef MX_ENTER_VISIT_NSErrorDomainAttr
#  define MX_ENTER_VISIT_NSErrorDomainAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NSErrorDomainAttr
#  define MX_EXIT_VISIT_NSErrorDomainAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NSErrorDomainAttr)
  MX_ENTER_VISIT_NSErrorDomainAttr
  MX_VISIT_BASE(NSErrorDomainAttr, InheritableAttr)
  MX_VISIT_ENTITY(NSErrorDomainAttr, error_domain, 8, MX_APPLY_METHOD, ErrorDomain, VarDecl, NthAttr)
  MX_EXIT_VISIT_NSErrorDomainAttr
MX_END_VISIT_ATTR(NSErrorDomainAttr)

#ifndef MX_ENTER_VISIT_NSConsumesSelfAttr
#  define MX_ENTER_VISIT_NSConsumesSelfAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_NSConsumesSelfAttr
#  define MX_EXIT_VISIT_NSConsumesSelfAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(NSConsumesSelfAttr)
  MX_ENTER_VISIT_NSConsumesSelfAttr
  MX_VISIT_BASE(NSConsumesSelfAttr, InheritableAttr)
  MX_EXIT_VISIT_NSConsumesSelfAttr
MX_END_VISIT_ATTR(NSConsumesSelfAttr)

#ifndef MX_ENTER_VISIT_MipsShortCallAttr
#  define MX_ENTER_VISIT_MipsShortCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MipsShortCallAttr
#  define MX_EXIT_VISIT_MipsShortCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MipsShortCallAttr)
  MX_ENTER_VISIT_MipsShortCallAttr
  MX_VISIT_BASE(MipsShortCallAttr, InheritableAttr)
  MX_VISIT_ENUM(MipsShortCallAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, MipsShortCallAttrSpelling, NthAttr)
  MX_EXIT_VISIT_MipsShortCallAttr
MX_END_VISIT_ATTR(MipsShortCallAttr)

#ifndef MX_ENTER_VISIT_MipsLongCallAttr
#  define MX_ENTER_VISIT_MipsLongCallAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MipsLongCallAttr
#  define MX_EXIT_VISIT_MipsLongCallAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MipsLongCallAttr)
  MX_ENTER_VISIT_MipsLongCallAttr
  MX_VISIT_BASE(MipsLongCallAttr, InheritableAttr)
  MX_VISIT_ENUM(MipsLongCallAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, MipsLongCallAttrSpelling, NthAttr)
  MX_EXIT_VISIT_MipsLongCallAttr
MX_END_VISIT_ATTR(MipsLongCallAttr)

#ifndef MX_ENTER_VISIT_MipsInterruptAttr
#  define MX_ENTER_VISIT_MipsInterruptAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MipsInterruptAttr
#  define MX_EXIT_VISIT_MipsInterruptAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MipsInterruptAttr)
  MX_ENTER_VISIT_MipsInterruptAttr
  MX_VISIT_BASE(MipsInterruptAttr, InheritableAttr)
  MX_VISIT_ENUM(MipsInterruptAttr, interrupt, 10, MX_APPLY_METHOD, Interrupt, MipsInterruptAttrInterruptType, NthAttr)
  MX_EXIT_VISIT_MipsInterruptAttr
MX_END_VISIT_ATTR(MipsInterruptAttr)

#ifndef MX_ENTER_VISIT_Mips16Attr
#  define MX_ENTER_VISIT_Mips16Attr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_Mips16Attr
#  define MX_EXIT_VISIT_Mips16Attr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(Mips16Attr)
  MX_ENTER_VISIT_Mips16Attr
  MX_VISIT_BASE(Mips16Attr, InheritableAttr)
  MX_EXIT_VISIT_Mips16Attr
MX_END_VISIT_ATTR(Mips16Attr)

#ifndef MX_ENTER_VISIT_MinVectorWidthAttr
#  define MX_ENTER_VISIT_MinVectorWidthAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MinVectorWidthAttr
#  define MX_EXIT_VISIT_MinVectorWidthAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MinVectorWidthAttr)
  MX_ENTER_VISIT_MinVectorWidthAttr
  MX_VISIT_BASE(MinVectorWidthAttr, InheritableAttr)
  MX_EXIT_VISIT_MinVectorWidthAttr
MX_END_VISIT_ATTR(MinVectorWidthAttr)

#ifndef MX_ENTER_VISIT_MinSizeAttr
#  define MX_ENTER_VISIT_MinSizeAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MinSizeAttr
#  define MX_EXIT_VISIT_MinSizeAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MinSizeAttr)
  MX_ENTER_VISIT_MinSizeAttr
  MX_VISIT_BASE(MinSizeAttr, InheritableAttr)
  MX_EXIT_VISIT_MinSizeAttr
MX_END_VISIT_ATTR(MinSizeAttr)

#ifndef MX_ENTER_VISIT_MicroMipsAttr
#  define MX_ENTER_VISIT_MicroMipsAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MicroMipsAttr
#  define MX_EXIT_VISIT_MicroMipsAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MicroMipsAttr)
  MX_ENTER_VISIT_MicroMipsAttr
  MX_VISIT_BASE(MicroMipsAttr, InheritableAttr)
  MX_EXIT_VISIT_MicroMipsAttr
MX_END_VISIT_ATTR(MicroMipsAttr)

#ifndef MX_ENTER_VISIT_MaybeUndefAttr
#  define MX_ENTER_VISIT_MaybeUndefAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MaybeUndefAttr
#  define MX_EXIT_VISIT_MaybeUndefAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MaybeUndefAttr)
  MX_ENTER_VISIT_MaybeUndefAttr
  MX_VISIT_BASE(MaybeUndefAttr, InheritableAttr)
  MX_EXIT_VISIT_MaybeUndefAttr
MX_END_VISIT_ATTR(MaybeUndefAttr)

#ifndef MX_ENTER_VISIT_MayAliasAttr
#  define MX_ENTER_VISIT_MayAliasAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MayAliasAttr
#  define MX_EXIT_VISIT_MayAliasAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MayAliasAttr)
  MX_ENTER_VISIT_MayAliasAttr
  MX_VISIT_BASE(MayAliasAttr, InheritableAttr)
  MX_EXIT_VISIT_MayAliasAttr
MX_END_VISIT_ATTR(MayAliasAttr)

#ifndef MX_ENTER_VISIT_MaxFieldAlignmentAttr
#  define MX_ENTER_VISIT_MaxFieldAlignmentAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MaxFieldAlignmentAttr
#  define MX_EXIT_VISIT_MaxFieldAlignmentAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MaxFieldAlignmentAttr)
  MX_ENTER_VISIT_MaxFieldAlignmentAttr
  MX_VISIT_BASE(MaxFieldAlignmentAttr, InheritableAttr)
  MX_EXIT_VISIT_MaxFieldAlignmentAttr
MX_END_VISIT_ATTR(MaxFieldAlignmentAttr)

#ifndef MX_ENTER_VISIT_MSVtorDispAttr
#  define MX_ENTER_VISIT_MSVtorDispAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MSVtorDispAttr
#  define MX_EXIT_VISIT_MSVtorDispAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MSVtorDispAttr)
  MX_ENTER_VISIT_MSVtorDispAttr
  MX_VISIT_BASE(MSVtorDispAttr, InheritableAttr)
  MX_VISIT_ENUM(MSVtorDispAttr, vtor_disp_mode, 10, MX_APPLY_METHOD, VtorDispMode, MSVtorDispMode, NthAttr)
  MX_EXIT_VISIT_MSVtorDispAttr
MX_END_VISIT_ATTR(MSVtorDispAttr)

#ifndef MX_ENTER_VISIT_MSStructAttr
#  define MX_ENTER_VISIT_MSStructAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MSStructAttr
#  define MX_EXIT_VISIT_MSStructAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MSStructAttr)
  MX_ENTER_VISIT_MSStructAttr
  MX_VISIT_BASE(MSStructAttr, InheritableAttr)
  MX_EXIT_VISIT_MSStructAttr
MX_END_VISIT_ATTR(MSStructAttr)

#ifndef MX_ENTER_VISIT_MSP430InterruptAttr
#  define MX_ENTER_VISIT_MSP430InterruptAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MSP430InterruptAttr
#  define MX_EXIT_VISIT_MSP430InterruptAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MSP430InterruptAttr)
  MX_ENTER_VISIT_MSP430InterruptAttr
  MX_VISIT_BASE(MSP430InterruptAttr, InheritableAttr)
  MX_EXIT_VISIT_MSP430InterruptAttr
MX_END_VISIT_ATTR(MSP430InterruptAttr)

#ifndef MX_ENTER_VISIT_MSNoVTableAttr
#  define MX_ENTER_VISIT_MSNoVTableAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MSNoVTableAttr
#  define MX_EXIT_VISIT_MSNoVTableAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MSNoVTableAttr)
  MX_ENTER_VISIT_MSNoVTableAttr
  MX_VISIT_BASE(MSNoVTableAttr, InheritableAttr)
  MX_EXIT_VISIT_MSNoVTableAttr
MX_END_VISIT_ATTR(MSNoVTableAttr)

#ifndef MX_ENTER_VISIT_MSInheritanceAttr
#  define MX_ENTER_VISIT_MSInheritanceAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MSInheritanceAttr
#  define MX_EXIT_VISIT_MSInheritanceAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MSInheritanceAttr)
  MX_ENTER_VISIT_MSInheritanceAttr
  MX_VISIT_BASE(MSInheritanceAttr, InheritableAttr)
  MX_VISIT_BOOL(MSInheritanceAttr, best_case, 12, MX_APPLY_METHOD, BestCase, bool, NthAttr)
  MX_VISIT_ENUM(MSInheritanceAttr, inheritance_model, 10, MX_APPLY_METHOD, InheritanceModel, MSInheritanceModel, NthAttr)
  MX_VISIT_ENUM(MSInheritanceAttr, semantic_spelling, 14, MX_APPLY_METHOD, SemanticSpelling, MSInheritanceAttrSpelling, NthAttr)
  MX_EXIT_VISIT_MSInheritanceAttr
MX_END_VISIT_ATTR(MSInheritanceAttr)

#ifndef MX_ENTER_VISIT_MSAllocatorAttr
#  define MX_ENTER_VISIT_MSAllocatorAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MSAllocatorAttr
#  define MX_EXIT_VISIT_MSAllocatorAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MSAllocatorAttr)
  MX_ENTER_VISIT_MSAllocatorAttr
  MX_VISIT_BASE(MSAllocatorAttr, InheritableAttr)
  MX_EXIT_VISIT_MSAllocatorAttr
MX_END_VISIT_ATTR(MSAllocatorAttr)

#ifndef MX_ENTER_VISIT_MSABIAttr
#  define MX_ENTER_VISIT_MSABIAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MSABIAttr
#  define MX_EXIT_VISIT_MSABIAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MSABIAttr)
  MX_ENTER_VISIT_MSABIAttr
  MX_VISIT_BASE(MSABIAttr, InheritableAttr)
  MX_EXIT_VISIT_MSABIAttr
MX_END_VISIT_ATTR(MSABIAttr)

#ifndef MX_ENTER_VISIT_MIGServerRoutineAttr
#  define MX_ENTER_VISIT_MIGServerRoutineAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_MIGServerRoutineAttr
#  define MX_EXIT_VISIT_MIGServerRoutineAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(MIGServerRoutineAttr)
  MX_ENTER_VISIT_MIGServerRoutineAttr
  MX_VISIT_BASE(MIGServerRoutineAttr, InheritableAttr)
  MX_EXIT_VISIT_MIGServerRoutineAttr
MX_END_VISIT_ATTR(MIGServerRoutineAttr)

#ifndef MX_ENTER_VISIT_M68kInterruptAttr
#  define MX_ENTER_VISIT_M68kInterruptAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_M68kInterruptAttr
#  define MX_EXIT_VISIT_M68kInterruptAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(M68kInterruptAttr)
  MX_ENTER_VISIT_M68kInterruptAttr
  MX_VISIT_BASE(M68kInterruptAttr, InheritableAttr)
  MX_EXIT_VISIT_M68kInterruptAttr
MX_END_VISIT_ATTR(M68kInterruptAttr)

#ifndef MX_ENTER_VISIT_LocksExcludedAttr
#  define MX_ENTER_VISIT_LocksExcludedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_LocksExcludedAttr
#  define MX_EXIT_VISIT_LocksExcludedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(LocksExcludedAttr)
  MX_ENTER_VISIT_LocksExcludedAttr
  MX_VISIT_BASE(LocksExcludedAttr, InheritableAttr)
  MX_EXIT_VISIT_LocksExcludedAttr
MX_END_VISIT_ATTR(LocksExcludedAttr)

#ifndef MX_ENTER_VISIT_LockReturnedAttr
#  define MX_ENTER_VISIT_LockReturnedAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_LockReturnedAttr
#  define MX_EXIT_VISIT_LockReturnedAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(LockReturnedAttr)
  MX_ENTER_VISIT_LockReturnedAttr
  MX_VISIT_BASE(LockReturnedAttr, InheritableAttr)
  MX_VISIT_ENTITY(LockReturnedAttr, argument, 8, MX_APPLY_METHOD, Argument, Expr, NthAttr)
  MX_EXIT_VISIT_LockReturnedAttr
MX_END_VISIT_ATTR(LockReturnedAttr)

#ifndef MX_ENTER_VISIT_LifetimeBoundAttr
#  define MX_ENTER_VISIT_LifetimeBoundAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_LifetimeBoundAttr
#  define MX_EXIT_VISIT_LifetimeBoundAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(LifetimeBoundAttr)
  MX_ENTER_VISIT_LifetimeBoundAttr
  MX_VISIT_BASE(LifetimeBoundAttr, InheritableAttr)
  MX_EXIT_VISIT_LifetimeBoundAttr
MX_END_VISIT_ATTR(LifetimeBoundAttr)

#ifndef MX_ENTER_VISIT_LeafAttr
#  define MX_ENTER_VISIT_LeafAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_LeafAttr
#  define MX_EXIT_VISIT_LeafAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(LeafAttr)
  MX_ENTER_VISIT_LeafAttr
  MX_VISIT_BASE(LeafAttr, InheritableAttr)
  MX_EXIT_VISIT_LeafAttr
MX_END_VISIT_ATTR(LeafAttr)

#ifndef MX_ENTER_VISIT_LayoutVersionAttr
#  define MX_ENTER_VISIT_LayoutVersionAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_LayoutVersionAttr
#  define MX_EXIT_VISIT_LayoutVersionAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(LayoutVersionAttr)
  MX_ENTER_VISIT_LayoutVersionAttr
  MX_VISIT_BASE(LayoutVersionAttr, InheritableAttr)
  MX_EXIT_VISIT_LayoutVersionAttr
MX_END_VISIT_ATTR(LayoutVersionAttr)

#ifndef MX_ENTER_VISIT_LTOVisibilityPublicAttr
#  define MX_ENTER_VISIT_LTOVisibilityPublicAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_LTOVisibilityPublicAttr
#  define MX_EXIT_VISIT_LTOVisibilityPublicAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(LTOVisibilityPublicAttr)
  MX_ENTER_VISIT_LTOVisibilityPublicAttr
  MX_VISIT_BASE(LTOVisibilityPublicAttr, InheritableAttr)
  MX_EXIT_VISIT_LTOVisibilityPublicAttr
MX_END_VISIT_ATTR(LTOVisibilityPublicAttr)

#ifndef MX_ENTER_VISIT_InternalLinkageAttr
#  define MX_ENTER_VISIT_InternalLinkageAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_InternalLinkageAttr
#  define MX_EXIT_VISIT_InternalLinkageAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(InternalLinkageAttr)
  MX_ENTER_VISIT_InternalLinkageAttr
  MX_VISIT_BASE(InternalLinkageAttr, InheritableAttr)
  MX_EXIT_VISIT_InternalLinkageAttr
MX_END_VISIT_ATTR(InternalLinkageAttr)

#ifndef MX_ENTER_VISIT_IntelOclBiccAttr
#  define MX_ENTER_VISIT_IntelOclBiccAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_IntelOclBiccAttr
#  define MX_EXIT_VISIT_IntelOclBiccAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(IntelOclBiccAttr)
  MX_ENTER_VISIT_IntelOclBiccAttr
  MX_VISIT_BASE(IntelOclBiccAttr, InheritableAttr)
  MX_EXIT_VISIT_IntelOclBiccAttr
MX_END_VISIT_ATTR(IntelOclBiccAttr)

#ifndef MX_ENTER_VISIT_InitPriorityAttr
#  define MX_ENTER_VISIT_InitPriorityAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_InitPriorityAttr
#  define MX_EXIT_VISIT_InitPriorityAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ATTR(InitPriorityAttr)
  MX_ENTER_VISIT_InitPriorityAttr
  MX_VISIT_BASE(InitPriorityAttr, InheritableAttr)
  MX_EXIT_VISIT_InitPriorityAttr
MX_END_VISIT_ATTR(InitPriorityAttr)

#ifndef MX_ENTER_VISIT_InheritableParamAttr
#  define MX_ENTER_VISIT_InheritableParamAttr MX_ENTER_VISIT_InheritableAttr
#endif
#ifndef MX_EXIT_VISIT_InheritableParamAttr
#  define MX_EXIT_VISIT_InheritableParamAttr MX_EXIT_VISIT_InheritableAttr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(InheritableParamAttr)
  MX_ENTER_VISIT_InheritableParamAttr
  MX_VISIT_BASE(InheritableParamAttr, InheritableAttr)
  MX_EXIT_VISIT_InheritableParamAttr
MX_END_VISIT_ATTR(InheritableParamAttr)

#ifndef MX_ENTER_VISIT_CarriesDependencyAttr
#  define MX_ENTER_VISIT_CarriesDependencyAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_CarriesDependencyAttr
#  define MX_EXIT_VISIT_CarriesDependencyAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(CarriesDependencyAttr)
  MX_ENTER_VISIT_CarriesDependencyAttr
  MX_VISIT_BASE(CarriesDependencyAttr, InheritableParamAttr)
  MX_EXIT_VISIT_CarriesDependencyAttr
MX_END_VISIT_ATTR(CarriesDependencyAttr)

#ifndef MX_ENTER_VISIT_CFConsumedAttr
#  define MX_ENTER_VISIT_CFConsumedAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_CFConsumedAttr
#  define MX_EXIT_VISIT_CFConsumedAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(CFConsumedAttr)
  MX_ENTER_VISIT_CFConsumedAttr
  MX_VISIT_BASE(CFConsumedAttr, InheritableParamAttr)
  MX_EXIT_VISIT_CFConsumedAttr
MX_END_VISIT_ATTR(CFConsumedAttr)

#ifndef MX_ENTER_VISIT_AnnotateAttr
#  define MX_ENTER_VISIT_AnnotateAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_AnnotateAttr
#  define MX_EXIT_VISIT_AnnotateAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(AnnotateAttr)
  MX_ENTER_VISIT_AnnotateAttr
  MX_VISIT_BASE(AnnotateAttr, InheritableParamAttr)
  MX_VISIT_TEXT(AnnotateAttr, annotation, 9, MX_APPLY_METHOD, Annotation, basic_string_view, NthAttr)
  MX_EXIT_VISIT_AnnotateAttr
MX_END_VISIT_ATTR(AnnotateAttr)

#ifndef MX_ENTER_VISIT_UseHandleAttr
#  define MX_ENTER_VISIT_UseHandleAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_UseHandleAttr
#  define MX_EXIT_VISIT_UseHandleAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(UseHandleAttr)
  MX_ENTER_VISIT_UseHandleAttr
  MX_VISIT_BASE(UseHandleAttr, InheritableParamAttr)
  MX_VISIT_TEXT(UseHandleAttr, handle_type, 9, MX_APPLY_METHOD, HandleType, basic_string_view, NthAttr)
  MX_EXIT_VISIT_UseHandleAttr
MX_END_VISIT_ATTR(UseHandleAttr)

#ifndef MX_ENTER_VISIT_ReleaseHandleAttr
#  define MX_ENTER_VISIT_ReleaseHandleAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_ReleaseHandleAttr
#  define MX_EXIT_VISIT_ReleaseHandleAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(ReleaseHandleAttr)
  MX_ENTER_VISIT_ReleaseHandleAttr
  MX_VISIT_BASE(ReleaseHandleAttr, InheritableParamAttr)
  MX_VISIT_TEXT(ReleaseHandleAttr, handle_type, 9, MX_APPLY_METHOD, HandleType, basic_string_view, NthAttr)
  MX_EXIT_VISIT_ReleaseHandleAttr
MX_END_VISIT_ATTR(ReleaseHandleAttr)

#ifndef MX_ENTER_VISIT_PassObjectSizeAttr
#  define MX_ENTER_VISIT_PassObjectSizeAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_PassObjectSizeAttr
#  define MX_EXIT_VISIT_PassObjectSizeAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(PassObjectSizeAttr)
  MX_ENTER_VISIT_PassObjectSizeAttr
  MX_VISIT_BASE(PassObjectSizeAttr, InheritableParamAttr)
  MX_VISIT_ENUM(PassObjectSizeAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, PassObjectSizeAttrSpelling, NthAttr)
  MX_VISIT_BOOL(PassObjectSizeAttr, is_dynamic, 12, MX_APPLY_METHOD, IsDynamic, bool, NthAttr)
  MX_EXIT_VISIT_PassObjectSizeAttr
MX_END_VISIT_ATTR(PassObjectSizeAttr)

#ifndef MX_ENTER_VISIT_ParameterABIAttr
#  define MX_ENTER_VISIT_ParameterABIAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_ParameterABIAttr
#  define MX_EXIT_VISIT_ParameterABIAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ABSTRACT_ATTR(ParameterABIAttr)
  MX_ENTER_VISIT_ParameterABIAttr
  MX_VISIT_BASE(ParameterABIAttr, InheritableParamAttr)
  MX_VISIT_ENUM(ParameterABIAttr, abi, 10, MX_APPLY_METHOD, ABI, ParameterABI, NthAttr)
  MX_EXIT_VISIT_ParameterABIAttr
MX_END_VISIT_ATTR(ParameterABIAttr)

#ifndef MX_ENTER_VISIT_SwiftIndirectResultAttr
#  define MX_ENTER_VISIT_SwiftIndirectResultAttr MX_ENTER_VISIT_ParameterABIAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftIndirectResultAttr
#  define MX_EXIT_VISIT_SwiftIndirectResultAttr MX_EXIT_VISIT_ParameterABIAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftIndirectResultAttr)
  MX_ENTER_VISIT_SwiftIndirectResultAttr
  MX_VISIT_BASE(SwiftIndirectResultAttr, ParameterABIAttr)
  MX_EXIT_VISIT_SwiftIndirectResultAttr
MX_END_VISIT_ATTR(SwiftIndirectResultAttr)

#ifndef MX_ENTER_VISIT_SwiftErrorResultAttr
#  define MX_ENTER_VISIT_SwiftErrorResultAttr MX_ENTER_VISIT_ParameterABIAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftErrorResultAttr
#  define MX_EXIT_VISIT_SwiftErrorResultAttr MX_EXIT_VISIT_ParameterABIAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftErrorResultAttr)
  MX_ENTER_VISIT_SwiftErrorResultAttr
  MX_VISIT_BASE(SwiftErrorResultAttr, ParameterABIAttr)
  MX_EXIT_VISIT_SwiftErrorResultAttr
MX_END_VISIT_ATTR(SwiftErrorResultAttr)

#ifndef MX_ENTER_VISIT_SwiftContextAttr
#  define MX_ENTER_VISIT_SwiftContextAttr MX_ENTER_VISIT_ParameterABIAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftContextAttr
#  define MX_EXIT_VISIT_SwiftContextAttr MX_EXIT_VISIT_ParameterABIAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftContextAttr)
  MX_ENTER_VISIT_SwiftContextAttr
  MX_VISIT_BASE(SwiftContextAttr, ParameterABIAttr)
  MX_EXIT_VISIT_SwiftContextAttr
MX_END_VISIT_ATTR(SwiftContextAttr)

#ifndef MX_ENTER_VISIT_SwiftAsyncContextAttr
#  define MX_ENTER_VISIT_SwiftAsyncContextAttr MX_ENTER_VISIT_ParameterABIAttr
#endif
#ifndef MX_EXIT_VISIT_SwiftAsyncContextAttr
#  define MX_EXIT_VISIT_SwiftAsyncContextAttr MX_EXIT_VISIT_ParameterABIAttr
#endif

MX_BEGIN_VISIT_ATTR(SwiftAsyncContextAttr)
  MX_ENTER_VISIT_SwiftAsyncContextAttr
  MX_VISIT_BASE(SwiftAsyncContextAttr, ParameterABIAttr)
  MX_EXIT_VISIT_SwiftAsyncContextAttr
MX_END_VISIT_ATTR(SwiftAsyncContextAttr)

#ifndef MX_ENTER_VISIT_OSConsumedAttr
#  define MX_ENTER_VISIT_OSConsumedAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_OSConsumedAttr
#  define MX_EXIT_VISIT_OSConsumedAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(OSConsumedAttr)
  MX_ENTER_VISIT_OSConsumedAttr
  MX_VISIT_BASE(OSConsumedAttr, InheritableParamAttr)
  MX_EXIT_VISIT_OSConsumedAttr
MX_END_VISIT_ATTR(OSConsumedAttr)

#ifndef MX_ENTER_VISIT_NonNullAttr
#  define MX_ENTER_VISIT_NonNullAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_NonNullAttr
#  define MX_EXIT_VISIT_NonNullAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(NonNullAttr)
  MX_ENTER_VISIT_NonNullAttr
  MX_VISIT_BASE(NonNullAttr, InheritableParamAttr)
  MX_EXIT_VISIT_NonNullAttr
MX_END_VISIT_ATTR(NonNullAttr)

#ifndef MX_ENTER_VISIT_NSConsumedAttr
#  define MX_ENTER_VISIT_NSConsumedAttr MX_ENTER_VISIT_InheritableParamAttr
#endif
#ifndef MX_EXIT_VISIT_NSConsumedAttr
#  define MX_EXIT_VISIT_NSConsumedAttr MX_EXIT_VISIT_InheritableParamAttr
#endif

MX_BEGIN_VISIT_ATTR(NSConsumedAttr)
  MX_ENTER_VISIT_NSConsumedAttr
  MX_VISIT_BASE(NSConsumedAttr, InheritableParamAttr)
  MX_EXIT_VISIT_NSConsumedAttr
MX_END_VISIT_ATTR(NSConsumedAttr)

#ifndef MX_ENTER_VISIT_IFuncAttr
#  define MX_ENTER_VISIT_IFuncAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_IFuncAttr
#  define MX_EXIT_VISIT_IFuncAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(IFuncAttr)
  MX_ENTER_VISIT_IFuncAttr
  MX_VISIT_BASE(IFuncAttr, Attr)
  MX_VISIT_TEXT(IFuncAttr, resolver, 9, MX_APPLY_METHOD, Resolver, basic_string_view, NthAttr)
  MX_EXIT_VISIT_IFuncAttr
MX_END_VISIT_ATTR(IFuncAttr)

#ifndef MX_ENTER_VISIT_CalledOnceAttr
#  define MX_ENTER_VISIT_CalledOnceAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_CalledOnceAttr
#  define MX_EXIT_VISIT_CalledOnceAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(CalledOnceAttr)
  MX_ENTER_VISIT_CalledOnceAttr
  MX_VISIT_BASE(CalledOnceAttr, Attr)
  MX_EXIT_VISIT_CalledOnceAttr
MX_END_VISIT_ATTR(CalledOnceAttr)

#ifndef MX_ENTER_VISIT_BuiltinAliasAttr
#  define MX_ENTER_VISIT_BuiltinAliasAttr MX_ENTER_VISIT_Attr
#endif
#ifndef MX_EXIT_VISIT_BuiltinAliasAttr
#  define MX_EXIT_VISIT_BuiltinAliasAttr MX_EXIT_VISIT_Attr
#endif

MX_BEGIN_VISIT_ATTR(BuiltinAliasAttr)
  MX_ENTER_VISIT_BuiltinAliasAttr
  MX_VISIT_BASE(BuiltinAliasAttr, Attr)
  MX_VISIT_ENUM(BuiltinAliasAttr, semantic_spelling, 10, MX_APPLY_METHOD, SemanticSpelling, BuiltinAliasAttrSpelling, NthAttr)
  MX_EXIT_VISIT_BuiltinAliasAttr
MX_END_VISIT_ATTR(BuiltinAliasAttr)

#ifndef MX_ENTER_VISIT_Type
#  define MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_Type
#  define MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(Type)
  MX_ENTER_VISIT_Type
  MX_VISIT_ENTITY(Type, desugared_type, 0, MX_APPLY_METHOD, DesugaredType, Type, NthType)
  MX_VISIT_ENTITY(Type, canonical_type, 1, MX_APPLY_METHOD, CanonicalType, Type, NthType)
  MX_VISIT_BOOL(Type, is_qualified, 2, MX_APPLY_METHOD, IsQualified, bool, NthType)
  MX_VISIT_ENTITY(Type, unqualified_type, 3, MX_APPLY_METHOD, UnqualifiedType, Type, NthType)
  MX_VISIT_OPTIONAL_INT(Type, size_in_bits, 4, MX_APPLY_METHOD, SizeInBits, , NthType)
  MX_VISIT_OPTIONAL_INT(Type, alignment, 6, MX_APPLY_METHOD, Alignment, , NthType)
  MX_VISIT_BOOL(Type, accepts_obj_c_type_parameters, 8, MX_APPLY_METHOD, AcceptsObjCTypeParameters, bool, NthType)
  MX_VISIT_BOOL(Type, can_decay_to_pointer_type, 9, MX_APPLY_METHOD, CanDecayToPointerType, bool, NthType)
  MX_VISIT_BOOL(Type, can_have_nullability, 10, MX_APPLY_METHOD, CanHaveNullability, bool, NthType)
  MX_VISIT_BOOL(Type, contains_errors, 11, MX_APPLY_METHOD, ContainsErrors, bool, NthType)
  MX_VISIT_BOOL(Type, contains_unexpanded_parameter_pack, 12, MX_APPLY_METHOD, ContainsUnexpandedParameterPack, bool, NthType)
  MX_VISIT_ENUM(Type, linkage, 13, MX_APPLY_METHOD, Linkage, Linkage, NthType)
  MX_VISIT_ENUM(Type, kind, 14, MX_APPLY_METHOD, Kind, TypeKind, NthType)
  MX_VISIT_ENTITY(Type, unqualified_desugared_type, 15, MX_APPLY_METHOD, UnqualifiedDesugaredType, Type, NthType)
  MX_VISIT_ENUM(Type, visibility, 16, MX_APPLY_METHOD, Visibility, Visibility, NthType)
  MX_VISIT_BOOL(Type, is_unresolved_type, 17, MX_APPLY_METHOD, IsUnresolvedType, bool, NthType)
  MX_VISIT_BOOL(Type, is_vlst_builtin_type, 18, MX_APPLY_METHOD, IsVLSTBuiltinType, bool, NthType)
  MX_EXIT_VISIT_Type
MX_END_VISIT_TYPE(Type)

#ifndef MX_ENTER_VISIT_TemplateTypeParmType
#  define MX_ENTER_VISIT_TemplateTypeParmType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_TemplateTypeParmType
#  define MX_EXIT_VISIT_TemplateTypeParmType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(TemplateTypeParmType)
  MX_ENTER_VISIT_TemplateTypeParmType
  MX_VISIT_BASE(TemplateTypeParmType, Type)
  MX_VISIT_ENTITY(TemplateTypeParmType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_OPTIONAL_ENTITY(TemplateTypeParmType, declaration, 20, MX_APPLY_METHOD, Declaration, TemplateTypeParmDecl, NthType)
  MX_VISIT_BOOL(TemplateTypeParmType, is_parameter_pack, 21, MX_APPLY_METHOD, IsParameterPack, bool, NthType)
  MX_VISIT_BOOL(TemplateTypeParmType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_TemplateTypeParmType
MX_END_VISIT_TYPE(TemplateTypeParmType)

#ifndef MX_ENTER_VISIT_TemplateSpecializationType
#  define MX_ENTER_VISIT_TemplateSpecializationType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_TemplateSpecializationType
#  define MX_EXIT_VISIT_TemplateSpecializationType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(TemplateSpecializationType)
  MX_ENTER_VISIT_TemplateSpecializationType
  MX_VISIT_BASE(TemplateSpecializationType, Type)
  MX_VISIT_ENTITY(TemplateSpecializationType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_OPTIONAL_ENTITY(TemplateSpecializationType, aliased_type, 20, MX_APPLY_METHOD, AliasedType, Type, NthType)
  MX_VISIT_BOOL(TemplateSpecializationType, is_current_instantiation, 21, MX_APPLY_METHOD, IsCurrentInstantiation, bool, NthType)
  MX_VISIT_BOOL(TemplateSpecializationType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(TemplateSpecializationType, is_type_alias, 23, MX_APPLY_METHOD, IsTypeAlias, bool, NthType)
  MX_VISIT_ENTITY_LIST(TemplateSpecializationType, template_arguments, 24, MX_APPLY_METHOD, TemplateArguments, TemplateArgument, NthType)
  MX_EXIT_VISIT_TemplateSpecializationType
MX_END_VISIT_TYPE(TemplateSpecializationType)

#ifndef MX_ENTER_VISIT_TagType
#  define MX_ENTER_VISIT_TagType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_TagType
#  define MX_EXIT_VISIT_TagType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(TagType)
  MX_ENTER_VISIT_TagType
  MX_VISIT_BASE(TagType, Type)
  MX_VISIT_ENTITY(TagType, declaration, 19, MX_APPLY_METHOD, Declaration, TagDecl, NthType)
  MX_VISIT_BOOL(TagType, is_being_defined, 21, MX_APPLY_METHOD, IsBeingDefined, bool, NthType)
  MX_EXIT_VISIT_TagType
MX_END_VISIT_TYPE(TagType)

#ifndef MX_ENTER_VISIT_RecordType
#  define MX_ENTER_VISIT_RecordType MX_ENTER_VISIT_TagType
#endif
#ifndef MX_EXIT_VISIT_RecordType
#  define MX_EXIT_VISIT_RecordType MX_EXIT_VISIT_TagType
#endif

MX_BEGIN_VISIT_TYPE(RecordType)
  MX_ENTER_VISIT_RecordType
  MX_VISIT_BASE(RecordType, TagType)
  MX_VISIT_ENTITY(RecordType, desugar, 20, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(RecordType, has_const_fields, 22, MX_APPLY_METHOD, HasConstFields, bool, NthType)
  MX_VISIT_BOOL(RecordType, is_sugared, 23, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_RecordType
MX_END_VISIT_TYPE(RecordType)

#ifndef MX_ENTER_VISIT_EnumType
#  define MX_ENTER_VISIT_EnumType MX_ENTER_VISIT_TagType
#endif
#ifndef MX_EXIT_VISIT_EnumType
#  define MX_EXIT_VISIT_EnumType MX_EXIT_VISIT_TagType
#endif

MX_BEGIN_VISIT_TYPE(EnumType)
  MX_ENTER_VISIT_EnumType
  MX_VISIT_BASE(EnumType, TagType)
  MX_VISIT_ENTITY(EnumType, desugar, 20, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(EnumType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_EnumType
MX_END_VISIT_TYPE(EnumType)

#ifndef MX_ENTER_VISIT_SubstTemplateTypeParmType
#  define MX_ENTER_VISIT_SubstTemplateTypeParmType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_SubstTemplateTypeParmType
#  define MX_EXIT_VISIT_SubstTemplateTypeParmType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(SubstTemplateTypeParmType)
  MX_ENTER_VISIT_SubstTemplateTypeParmType
  MX_VISIT_BASE(SubstTemplateTypeParmType, Type)
  MX_VISIT_ENTITY(SubstTemplateTypeParmType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(SubstTemplateTypeParmType, associated_declaration, 20, MX_APPLY_METHOD, AssociatedDeclaration, Decl, NthType)
  MX_VISIT_OPTIONAL_INT(SubstTemplateTypeParmType, pack_index, 25, MX_APPLY_METHOD, PackIndex, , NthType)
  MX_VISIT_ENTITY(SubstTemplateTypeParmType, replaced_parameter, 26, MX_APPLY_METHOD, ReplacedParameter, TemplateTypeParmDecl, NthType)
  MX_VISIT_ENTITY(SubstTemplateTypeParmType, replacement_type, 27, MX_APPLY_METHOD, ReplacementType, Type, NthType)
  MX_VISIT_BOOL(SubstTemplateTypeParmType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_SubstTemplateTypeParmType
MX_END_VISIT_TYPE(SubstTemplateTypeParmType)

#ifndef MX_ENTER_VISIT_SubstTemplateTypeParmPackType
#  define MX_ENTER_VISIT_SubstTemplateTypeParmPackType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_SubstTemplateTypeParmPackType
#  define MX_EXIT_VISIT_SubstTemplateTypeParmPackType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(SubstTemplateTypeParmPackType)
  MX_ENTER_VISIT_SubstTemplateTypeParmPackType
  MX_VISIT_BASE(SubstTemplateTypeParmPackType, Type)
  MX_VISIT_ENTITY(SubstTemplateTypeParmPackType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(SubstTemplateTypeParmPackType, associated_declaration, 20, MX_APPLY_METHOD, AssociatedDeclaration, Decl, NthType)
  MX_VISIT_BOOL(SubstTemplateTypeParmPackType, final, 21, MX_APPLY_METHOD, Final, bool, NthType)
  MX_VISIT_ENTITY(SubstTemplateTypeParmPackType, replaced_parameter, 26, MX_APPLY_METHOD, ReplacedParameter, TemplateTypeParmDecl, NthType)
  MX_VISIT_BOOL(SubstTemplateTypeParmPackType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_SubstTemplateTypeParmPackType
MX_END_VISIT_TYPE(SubstTemplateTypeParmPackType)

#ifndef MX_ENTER_VISIT_ReferenceType
#  define MX_ENTER_VISIT_ReferenceType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_ReferenceType
#  define MX_EXIT_VISIT_ReferenceType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(ReferenceType)
  MX_ENTER_VISIT_ReferenceType
  MX_VISIT_BASE(ReferenceType, Type)
  MX_VISIT_ENTITY(ReferenceType, pointee_type, 19, MX_APPLY_METHOD, PointeeType, Type, NthType)
  MX_VISIT_ENTITY(ReferenceType, pointee_type_as_written, 20, MX_APPLY_METHOD, PointeeTypeAsWritten, Type, NthType)
  MX_VISIT_BOOL(ReferenceType, is_inner_reference, 21, MX_APPLY_METHOD, IsInnerReference, bool, NthType)
  MX_VISIT_BOOL(ReferenceType, is_spelled_as_l_value, 22, MX_APPLY_METHOD, IsSpelledAsLValue, bool, NthType)
  MX_EXIT_VISIT_ReferenceType
MX_END_VISIT_TYPE(ReferenceType)

#ifndef MX_ENTER_VISIT_RValueReferenceType
#  define MX_ENTER_VISIT_RValueReferenceType MX_ENTER_VISIT_ReferenceType
#endif
#ifndef MX_EXIT_VISIT_RValueReferenceType
#  define MX_EXIT_VISIT_RValueReferenceType MX_EXIT_VISIT_ReferenceType
#endif

MX_BEGIN_VISIT_TYPE(RValueReferenceType)
  MX_ENTER_VISIT_RValueReferenceType
  MX_VISIT_BASE(RValueReferenceType, ReferenceType)
  MX_VISIT_ENTITY(RValueReferenceType, desugar, 26, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(RValueReferenceType, is_sugared, 23, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_RValueReferenceType
MX_END_VISIT_TYPE(RValueReferenceType)

#ifndef MX_ENTER_VISIT_LValueReferenceType
#  define MX_ENTER_VISIT_LValueReferenceType MX_ENTER_VISIT_ReferenceType
#endif
#ifndef MX_EXIT_VISIT_LValueReferenceType
#  define MX_EXIT_VISIT_LValueReferenceType MX_EXIT_VISIT_ReferenceType
#endif

MX_BEGIN_VISIT_TYPE(LValueReferenceType)
  MX_ENTER_VISIT_LValueReferenceType
  MX_VISIT_BASE(LValueReferenceType, ReferenceType)
  MX_VISIT_ENTITY(LValueReferenceType, desugar, 26, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(LValueReferenceType, is_sugared, 23, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_LValueReferenceType
MX_END_VISIT_TYPE(LValueReferenceType)

#ifndef MX_ENTER_VISIT_QualifiedType
#  define MX_ENTER_VISIT_QualifiedType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_QualifiedType
#  define MX_EXIT_VISIT_QualifiedType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(QualifiedType)
  MX_ENTER_VISIT_QualifiedType
  MX_VISIT_BASE(QualifiedType, Type)
  MX_VISIT_ENUM(QualifiedType, address_space, 28, MX_APPLY_METHOD, AddressSpace, LangAS, NthType)
  MX_VISIT_ENTITY(QualifiedType, atomic_unqualified_type, 19, MX_APPLY_METHOD, AtomicUnqualifiedType, Type, NthType)
  MX_VISIT_BOOL(QualifiedType, has_address_space, 21, MX_APPLY_METHOD, HasAddressSpace, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, has_non_trivial_obj_c_lifetime, 22, MX_APPLY_METHOD, HasNonTrivialObjCLifetime, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, has_non_trivial_to_primitive_copy_c_union, 23, MX_APPLY_METHOD, HasNonTrivialToPrimitiveCopyCUnion, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, has_non_trivial_to_primitive_default_initialize_c_union, 29, MX_APPLY_METHOD, HasNonTrivialToPrimitiveDefaultInitializeCUnion, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, has_non_trivial_to_primitive_destruct_c_union, 30, MX_APPLY_METHOD, HasNonTrivialToPrimitiveDestructCUnion, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, has_qualifiers, 31, MX_APPLY_METHOD, HasQualifiers, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, has_strong_or_weak_obj_c_lifetime, 32, MX_APPLY_METHOD, HasStrongOrWeakObjCLifetime, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_c_forbidden_l_value_type, 33, MX_APPLY_METHOD, IsCForbiddenLValueType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_cxx11_pod_type, 34, MX_APPLY_METHOD, IsCXX11PODType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_cxx98_pod_type, 35, MX_APPLY_METHOD, IsCXX98PODType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_canonical, 36, MX_APPLY_METHOD, IsCanonical, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_canonical_as_parameter, 37, MX_APPLY_METHOD, IsCanonicalAsParameter, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_const_qualified, 38, MX_APPLY_METHOD, IsConstQualified, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_constant, 39, MX_APPLY_METHOD, IsConstant, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_local_const_qualified, 40, MX_APPLY_METHOD, IsLocalConstQualified, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_local_restrict_qualified, 41, MX_APPLY_METHOD, IsLocalRestrictQualified, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_local_volatile_qualified, 42, MX_APPLY_METHOD, IsLocalVolatileQualified, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_non_weak_in_mrr_with_obj_c_weak, 43, MX_APPLY_METHOD, IsNonWeakInMRRWithObjCWeak, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_null, 44, MX_APPLY_METHOD, IsNull, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_obj_cgc_strong, 45, MX_APPLY_METHOD, IsObjCGCStrong, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_obj_cgc_weak, 46, MX_APPLY_METHOD, IsObjCGCWeak, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_pod_type, 47, MX_APPLY_METHOD, IsPODType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_referenceable, 48, MX_APPLY_METHOD, IsReferenceable, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_restrict_qualified, 49, MX_APPLY_METHOD, IsRestrictQualified, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_trivial_type, 50, MX_APPLY_METHOD, IsTrivialType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_trivially_copyable_type, 51, MX_APPLY_METHOD, IsTriviallyCopyableType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_trivially_equality_comparable_type, 52, MX_APPLY_METHOD, IsTriviallyEqualityComparableType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_trivially_relocatable_type, 53, MX_APPLY_METHOD, IsTriviallyRelocatableType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_volatile_qualified, 54, MX_APPLY_METHOD, IsVolatileQualified, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_web_assembly_funcref_type, 55, MX_APPLY_METHOD, IsWebAssemblyFuncrefType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, is_web_assembly_reference_type, 56, MX_APPLY_METHOD, IsWebAssemblyReferenceType, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, may_be_dynamic_class, 57, MX_APPLY_METHOD, MayBeDynamicClass, bool, NthType)
  MX_VISIT_BOOL(QualifiedType, may_be_not_dynamic_class, 58, MX_APPLY_METHOD, MayBeNotDynamicClass, bool, NthType)
  MX_EXIT_VISIT_QualifiedType
MX_END_VISIT_TYPE(QualifiedType)

#ifndef MX_ENTER_VISIT_PointerType
#  define MX_ENTER_VISIT_PointerType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_PointerType
#  define MX_EXIT_VISIT_PointerType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(PointerType)
  MX_ENTER_VISIT_PointerType
  MX_VISIT_BASE(PointerType, Type)
  MX_VISIT_ENTITY(PointerType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(PointerType, pointee_type, 20, MX_APPLY_METHOD, PointeeType, Type, NthType)
  MX_VISIT_BOOL(PointerType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_PointerType
MX_END_VISIT_TYPE(PointerType)

#ifndef MX_ENTER_VISIT_PipeType
#  define MX_ENTER_VISIT_PipeType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_PipeType
#  define MX_EXIT_VISIT_PipeType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(PipeType)
  MX_ENTER_VISIT_PipeType
  MX_VISIT_BASE(PipeType, Type)
  MX_VISIT_ENTITY(PipeType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(PipeType, element_type, 20, MX_APPLY_METHOD, ElementType, Type, NthType)
  MX_VISIT_BOOL(PipeType, is_read_only, 21, MX_APPLY_METHOD, IsReadOnly, bool, NthType)
  MX_VISIT_BOOL(PipeType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_PipeType
MX_END_VISIT_TYPE(PipeType)

#ifndef MX_ENTER_VISIT_ParenType
#  define MX_ENTER_VISIT_ParenType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_ParenType
#  define MX_EXIT_VISIT_ParenType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(ParenType)
  MX_ENTER_VISIT_ParenType
  MX_VISIT_BASE(ParenType, Type)
  MX_VISIT_ENTITY(ParenType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(ParenType, inner_type, 20, MX_APPLY_METHOD, InnerType, Type, NthType)
  MX_VISIT_BOOL(ParenType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_ParenType
MX_END_VISIT_TYPE(ParenType)

#ifndef MX_ENTER_VISIT_PackExpansionType
#  define MX_ENTER_VISIT_PackExpansionType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_PackExpansionType
#  define MX_EXIT_VISIT_PackExpansionType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(PackExpansionType)
  MX_ENTER_VISIT_PackExpansionType
  MX_VISIT_BASE(PackExpansionType, Type)
  MX_VISIT_ENTITY(PackExpansionType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(PackExpansionType, pattern, 20, MX_APPLY_METHOD, Pattern, Type, NthType)
  MX_VISIT_BOOL(PackExpansionType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_PackExpansionType
MX_END_VISIT_TYPE(PackExpansionType)

#ifndef MX_ENTER_VISIT_ObjCTypeParamType
#  define MX_ENTER_VISIT_ObjCTypeParamType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_ObjCTypeParamType
#  define MX_EXIT_VISIT_ObjCTypeParamType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(ObjCTypeParamType)
  MX_ENTER_VISIT_ObjCTypeParamType
  MX_VISIT_BASE(ObjCTypeParamType, Type)
  MX_VISIT_ENTITY(ObjCTypeParamType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(ObjCTypeParamType, declaration, 20, MX_APPLY_METHOD, Declaration, ObjCTypeParamDecl, NthType)
  MX_VISIT_BOOL(ObjCTypeParamType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_ObjCTypeParamType
MX_END_VISIT_TYPE(ObjCTypeParamType)

#ifndef MX_ENTER_VISIT_ObjCObjectType
#  define MX_ENTER_VISIT_ObjCObjectType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_ObjCObjectType
#  define MX_EXIT_VISIT_ObjCObjectType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(ObjCObjectType)
  MX_ENTER_VISIT_ObjCObjectType
  MX_VISIT_BASE(ObjCObjectType, Type)
  MX_VISIT_ENTITY(ObjCObjectType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(ObjCObjectType, base_type, 20, MX_APPLY_METHOD, BaseType, Type, NthType)
  MX_VISIT_ENTITY(ObjCObjectType, interface, 26, MX_APPLY_METHOD, Interface, ObjCInterfaceDecl, NthType)
  MX_VISIT_OPTIONAL_ENTITY(ObjCObjectType, super_class_type, 27, MX_APPLY_METHOD, SuperClassType, Type, NthType)
  MX_VISIT_ENTITY_LIST(ObjCObjectType, type_arguments, 24, MX_APPLY_METHOD, TypeArguments, Type, NthType)
  MX_VISIT_ENTITY_LIST(ObjCObjectType, type_arguments_as_written, 59, MX_APPLY_METHOD, TypeArgumentsAsWritten, Type, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_kind_of_type, 21, MX_APPLY_METHOD, IsKindOfType, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_kind_of_type_as_written, 22, MX_APPLY_METHOD, IsKindOfTypeAsWritten, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_obj_c_class, 23, MX_APPLY_METHOD, IsObjCClass, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_obj_c_id, 29, MX_APPLY_METHOD, IsObjCId, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_obj_c_qualified_class, 30, MX_APPLY_METHOD, IsObjCQualifiedClass, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_obj_c_qualified_id, 31, MX_APPLY_METHOD, IsObjCQualifiedId, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_obj_c_unqualified_class, 32, MX_APPLY_METHOD, IsObjCUnqualifiedClass, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_obj_c_unqualified_id, 33, MX_APPLY_METHOD, IsObjCUnqualifiedId, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_obj_c_unqualified_id_or_class, 34, MX_APPLY_METHOD, IsObjCUnqualifiedIdOrClass, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_specialized, 35, MX_APPLY_METHOD, IsSpecialized, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_specialized_as_written, 36, MX_APPLY_METHOD, IsSpecializedAsWritten, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_sugared, 37, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_unspecialized, 38, MX_APPLY_METHOD, IsUnspecialized, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectType, is_unspecialized_as_written, 39, MX_APPLY_METHOD, IsUnspecializedAsWritten, bool, NthType)
  MX_VISIT_ENTITY(ObjCObjectType, strip_obj_c_kind_of_type_and_qualifiers, 60, MX_APPLY_METHOD, StripObjCKindOfTypeAndQualifiers, Type, NthType)
  MX_EXIT_VISIT_ObjCObjectType
MX_END_VISIT_TYPE(ObjCObjectType)

#ifndef MX_ENTER_VISIT_ObjCInterfaceType
#  define MX_ENTER_VISIT_ObjCInterfaceType MX_ENTER_VISIT_ObjCObjectType
#endif
#ifndef MX_EXIT_VISIT_ObjCInterfaceType
#  define MX_EXIT_VISIT_ObjCInterfaceType MX_EXIT_VISIT_ObjCObjectType
#endif

MX_BEGIN_VISIT_TYPE(ObjCInterfaceType)
  MX_ENTER_VISIT_ObjCInterfaceType
  MX_VISIT_BASE(ObjCInterfaceType, ObjCObjectType)
  MX_VISIT_ENTITY(ObjCInterfaceType, declaration, 61, MX_APPLY_METHOD, Declaration, ObjCInterfaceDecl, NthType)
  MX_EXIT_VISIT_ObjCInterfaceType
MX_END_VISIT_TYPE(ObjCInterfaceType)

#ifndef MX_ENTER_VISIT_ObjCObjectPointerType
#  define MX_ENTER_VISIT_ObjCObjectPointerType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_ObjCObjectPointerType
#  define MX_EXIT_VISIT_ObjCObjectPointerType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(ObjCObjectPointerType)
  MX_ENTER_VISIT_ObjCObjectPointerType
  MX_VISIT_BASE(ObjCObjectPointerType, Type)
  MX_VISIT_ENTITY(ObjCObjectPointerType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(ObjCObjectPointerType, interface_declaration, 20, MX_APPLY_METHOD, InterfaceDeclaration, ObjCInterfaceDecl, NthType)
  MX_VISIT_ENTITY(ObjCObjectPointerType, interface_type, 26, MX_APPLY_METHOD, InterfaceType, ObjCInterfaceType, NthType)
  MX_VISIT_ENTITY(ObjCObjectPointerType, object_type, 27, MX_APPLY_METHOD, ObjectType, ObjCObjectType, NthType)
  MX_VISIT_ENTITY(ObjCObjectPointerType, pointee_type, 60, MX_APPLY_METHOD, PointeeType, Type, NthType)
  MX_VISIT_ENTITY(ObjCObjectPointerType, super_class_type, 61, MX_APPLY_METHOD, SuperClassType, Type, NthType)
  MX_VISIT_ENTITY_LIST(ObjCObjectPointerType, type_arguments, 24, MX_APPLY_METHOD, TypeArguments, Type, NthType)
  MX_VISIT_ENTITY_LIST(ObjCObjectPointerType, type_arguments_as_written, 59, MX_APPLY_METHOD, TypeArgumentsAsWritten, Type, NthType)
  MX_VISIT_BOOL(ObjCObjectPointerType, is_kind_of_type, 21, MX_APPLY_METHOD, IsKindOfType, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectPointerType, is_obj_c_id_or_class_type, 22, MX_APPLY_METHOD, IsObjCIdOrClassType, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectPointerType, is_specialized, 23, MX_APPLY_METHOD, IsSpecialized, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectPointerType, is_specialized_as_written, 29, MX_APPLY_METHOD, IsSpecializedAsWritten, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectPointerType, is_sugared, 30, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectPointerType, is_unspecialized, 31, MX_APPLY_METHOD, IsUnspecialized, bool, NthType)
  MX_VISIT_BOOL(ObjCObjectPointerType, is_unspecialized_as_written, 32, MX_APPLY_METHOD, IsUnspecializedAsWritten, bool, NthType)
  MX_VISIT_ENTITY_LIST(ObjCObjectPointerType, qualifiers, 62, MX_APPLY_METHOD, Qualifiers, ObjCProtocolDecl, NthType)
  MX_VISIT_ENTITY(ObjCObjectPointerType, strip_obj_c_kind_of_type_and_qualifiers, 63, MX_APPLY_METHOD, StripObjCKindOfTypeAndQualifiers, ObjCObjectPointerType, NthType)
  MX_VISIT_ENTITY_LIST(ObjCObjectPointerType, protocols, 64, MX_APPLY_METHOD, Protocols, ObjCProtocolDecl, NthType)
  MX_EXIT_VISIT_ObjCObjectPointerType
MX_END_VISIT_TYPE(ObjCObjectPointerType)

#ifndef MX_ENTER_VISIT_MemberPointerType
#  define MX_ENTER_VISIT_MemberPointerType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_MemberPointerType
#  define MX_EXIT_VISIT_MemberPointerType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(MemberPointerType)
  MX_ENTER_VISIT_MemberPointerType
  MX_VISIT_BASE(MemberPointerType, Type)
  MX_VISIT_ENTITY(MemberPointerType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(MemberPointerType, class_, 20, MX_APPLY_METHOD, Class, Type, NthType)
  MX_VISIT_ENTITY(MemberPointerType, most_recent_cxx_record_declaration, 26, MX_APPLY_METHOD, MostRecentCXXRecordDeclaration, CXXRecordDecl, NthType)
  MX_VISIT_ENTITY(MemberPointerType, pointee_type, 27, MX_APPLY_METHOD, PointeeType, Type, NthType)
  MX_VISIT_BOOL(MemberPointerType, is_member_data_pointer, 21, MX_APPLY_METHOD, IsMemberDataPointer, bool, NthType)
  MX_VISIT_BOOL(MemberPointerType, is_member_function_pointer, 22, MX_APPLY_METHOD, IsMemberFunctionPointer, bool, NthType)
  MX_VISIT_BOOL(MemberPointerType, is_sugared, 23, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_MemberPointerType
MX_END_VISIT_TYPE(MemberPointerType)

#ifndef MX_ENTER_VISIT_MatrixType
#  define MX_ENTER_VISIT_MatrixType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_MatrixType
#  define MX_EXIT_VISIT_MatrixType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(MatrixType)
  MX_ENTER_VISIT_MatrixType
  MX_VISIT_BASE(MatrixType, Type)
  MX_VISIT_ENTITY(MatrixType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(MatrixType, element_type, 20, MX_APPLY_METHOD, ElementType, Type, NthType)
  MX_VISIT_BOOL(MatrixType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_MatrixType
MX_END_VISIT_TYPE(MatrixType)

#ifndef MX_ENTER_VISIT_DependentSizedMatrixType
#  define MX_ENTER_VISIT_DependentSizedMatrixType MX_ENTER_VISIT_MatrixType
#endif
#ifndef MX_EXIT_VISIT_DependentSizedMatrixType
#  define MX_EXIT_VISIT_DependentSizedMatrixType MX_EXIT_VISIT_MatrixType
#endif

MX_BEGIN_VISIT_TYPE(DependentSizedMatrixType)
  MX_ENTER_VISIT_DependentSizedMatrixType
  MX_VISIT_BASE(DependentSizedMatrixType, MatrixType)
  MX_VISIT_ENTITY(DependentSizedMatrixType, attribute_token, 26, MX_APPLY_METHOD, AttributeToken, Token, NthType)
  MX_VISIT_ENTITY(DependentSizedMatrixType, column_expression, 27, MX_APPLY_METHOD, ColumnExpression, Expr, NthType)
  MX_VISIT_ENTITY(DependentSizedMatrixType, row_expression, 60, MX_APPLY_METHOD, RowExpression, Expr, NthType)
  MX_EXIT_VISIT_DependentSizedMatrixType
MX_END_VISIT_TYPE(DependentSizedMatrixType)

#ifndef MX_ENTER_VISIT_ConstantMatrixType
#  define MX_ENTER_VISIT_ConstantMatrixType MX_ENTER_VISIT_MatrixType
#endif
#ifndef MX_EXIT_VISIT_ConstantMatrixType
#  define MX_EXIT_VISIT_ConstantMatrixType MX_EXIT_VISIT_MatrixType
#endif

MX_BEGIN_VISIT_TYPE(ConstantMatrixType)
  MX_ENTER_VISIT_ConstantMatrixType
  MX_VISIT_BASE(ConstantMatrixType, MatrixType)
  MX_EXIT_VISIT_ConstantMatrixType
MX_END_VISIT_TYPE(ConstantMatrixType)

#ifndef MX_ENTER_VISIT_MacroQualifiedType
#  define MX_ENTER_VISIT_MacroQualifiedType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_MacroQualifiedType
#  define MX_EXIT_VISIT_MacroQualifiedType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(MacroQualifiedType)
  MX_ENTER_VISIT_MacroQualifiedType
  MX_VISIT_BASE(MacroQualifiedType, Type)
  MX_VISIT_ENTITY(MacroQualifiedType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(MacroQualifiedType, modified_type, 20, MX_APPLY_METHOD, ModifiedType, Type, NthType)
  MX_VISIT_ENTITY(MacroQualifiedType, underlying_type, 26, MX_APPLY_METHOD, UnderlyingType, Type, NthType)
  MX_VISIT_BOOL(MacroQualifiedType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_MacroQualifiedType
MX_END_VISIT_TYPE(MacroQualifiedType)

#ifndef MX_ENTER_VISIT_InjectedClassNameType
#  define MX_ENTER_VISIT_InjectedClassNameType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_InjectedClassNameType
#  define MX_EXIT_VISIT_InjectedClassNameType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(InjectedClassNameType)
  MX_ENTER_VISIT_InjectedClassNameType
  MX_VISIT_BASE(InjectedClassNameType, Type)
  MX_VISIT_ENTITY(InjectedClassNameType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(InjectedClassNameType, declaration, 20, MX_APPLY_METHOD, Declaration, CXXRecordDecl, NthType)
  MX_VISIT_ENTITY(InjectedClassNameType, injected_specialization_type, 26, MX_APPLY_METHOD, InjectedSpecializationType, Type, NthType)
  MX_VISIT_ENTITY(InjectedClassNameType, injected_tst, 27, MX_APPLY_METHOD, InjectedTST, TemplateSpecializationType, NthType)
  MX_VISIT_BOOL(InjectedClassNameType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_InjectedClassNameType
MX_END_VISIT_TYPE(InjectedClassNameType)

#ifndef MX_ENTER_VISIT_FunctionType
#  define MX_ENTER_VISIT_FunctionType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_FunctionType
#  define MX_EXIT_VISIT_FunctionType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(FunctionType)
  MX_ENTER_VISIT_FunctionType
  MX_VISIT_BASE(FunctionType, Type)
  MX_VISIT_ENUM(FunctionType, call_conv, 28, MX_APPLY_METHOD, CallConv, CallingConv, NthType)
  MX_VISIT_ENTITY(FunctionType, call_result_type, 19, MX_APPLY_METHOD, CallResultType, Type, NthType)
  MX_VISIT_BOOL(FunctionType, cmse_ns_call_attribute, 21, MX_APPLY_METHOD, CmseNSCallAttribute, bool, NthType)
  MX_VISIT_BOOL(FunctionType, has_reg_parm, 22, MX_APPLY_METHOD, HasRegParm, bool, NthType)
  MX_VISIT_BOOL(FunctionType, no_return_attribute, 23, MX_APPLY_METHOD, NoReturnAttribute, bool, NthType)
  MX_VISIT_ENTITY(FunctionType, return_type, 20, MX_APPLY_METHOD, ReturnType, Type, NthType)
  MX_VISIT_BOOL(FunctionType, is_const, 29, MX_APPLY_METHOD, IsConst, bool, NthType)
  MX_VISIT_BOOL(FunctionType, is_restrict, 30, MX_APPLY_METHOD, IsRestrict, bool, NthType)
  MX_VISIT_BOOL(FunctionType, is_volatile, 31, MX_APPLY_METHOD, IsVolatile, bool, NthType)
  MX_EXIT_VISIT_FunctionType
MX_END_VISIT_TYPE(FunctionType)

#ifndef MX_ENTER_VISIT_FunctionProtoType
#  define MX_ENTER_VISIT_FunctionProtoType MX_ENTER_VISIT_FunctionType
#endif
#ifndef MX_EXIT_VISIT_FunctionProtoType
#  define MX_EXIT_VISIT_FunctionProtoType MX_EXIT_VISIT_FunctionType
#endif

MX_BEGIN_VISIT_TYPE(FunctionProtoType)
  MX_ENTER_VISIT_FunctionProtoType
  MX_VISIT_BASE(FunctionProtoType, FunctionType)
  MX_VISIT_OPTIONAL_ENUM(FunctionProtoType, can_throw, 65, MX_APPLY_METHOD, CanThrow, CanThrowResult, NthType)
  MX_VISIT_ENTITY(FunctionProtoType, desugar, 26, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(FunctionProtoType, ellipsis_token, 27, MX_APPLY_METHOD, EllipsisToken, Token, NthType)
  MX_VISIT_OPTIONAL_ENTITY(FunctionProtoType, exception_spec_declaration, 60, MX_APPLY_METHOD, ExceptionSpecDeclaration, FunctionDecl, NthType)
  MX_VISIT_OPTIONAL_ENTITY(FunctionProtoType, exception_spec_template, 61, MX_APPLY_METHOD, ExceptionSpecTemplate, FunctionDecl, NthType)
  MX_VISIT_ENUM(FunctionProtoType, exception_spec_type, 66, MX_APPLY_METHOD, ExceptionSpecType, ExceptionSpecificationType, NthType)
  MX_VISIT_OPTIONAL_ENTITY(FunctionProtoType, noexcept_expression, 63, MX_APPLY_METHOD, NoexceptExpression, Expr, NthType)
  MX_VISIT_ENTITY_LIST(FunctionProtoType, parameter_types, 24, MX_APPLY_METHOD, ParameterTypes, Type, NthType)
  MX_VISIT_ENUM(FunctionProtoType, reference_qualifier, 67, MX_APPLY_METHOD, ReferenceQualifier, RefQualifierKind, NthType)
  MX_VISIT_BOOL(FunctionProtoType, has_dependent_exception_spec, 33, MX_APPLY_METHOD, HasDependentExceptionSpec, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, has_dynamic_exception_spec, 34, MX_APPLY_METHOD, HasDynamicExceptionSpec, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, has_exception_spec, 35, MX_APPLY_METHOD, HasExceptionSpec, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, has_ext_parameter_infos, 36, MX_APPLY_METHOD, HasExtParameterInfos, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, has_instantiation_dependent_exception_spec, 37, MX_APPLY_METHOD, HasInstantiationDependentExceptionSpec, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, has_noexcept_exception_spec, 38, MX_APPLY_METHOD, HasNoexceptExceptionSpec, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, has_trailing_return, 39, MX_APPLY_METHOD, HasTrailingReturn, bool, NthType)
  MX_VISIT_OPTIONAL_BOOL(FunctionProtoType, is_nothrow, 40, MX_APPLY_METHOD, IsNothrow, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, is_sugared, 42, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, is_template_variadic, 43, MX_APPLY_METHOD, IsTemplateVariadic, bool, NthType)
  MX_VISIT_BOOL(FunctionProtoType, is_variadic, 44, MX_APPLY_METHOD, IsVariadic, bool, NthType)
  MX_VISIT_ENTITY_LIST(FunctionProtoType, exception_types, 59, MX_APPLY_METHOD, ExceptionTypes, Type, NthType)
  MX_EXIT_VISIT_FunctionProtoType
MX_END_VISIT_TYPE(FunctionProtoType)

#ifndef MX_ENTER_VISIT_FunctionNoProtoType
#  define MX_ENTER_VISIT_FunctionNoProtoType MX_ENTER_VISIT_FunctionType
#endif
#ifndef MX_EXIT_VISIT_FunctionNoProtoType
#  define MX_EXIT_VISIT_FunctionNoProtoType MX_EXIT_VISIT_FunctionType
#endif

MX_BEGIN_VISIT_TYPE(FunctionNoProtoType)
  MX_ENTER_VISIT_FunctionNoProtoType
  MX_VISIT_BASE(FunctionNoProtoType, FunctionType)
  MX_VISIT_ENTITY(FunctionNoProtoType, desugar, 26, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(FunctionNoProtoType, is_sugared, 32, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_FunctionNoProtoType
MX_END_VISIT_TYPE(FunctionNoProtoType)

#ifndef MX_ENTER_VISIT_DependentVectorType
#  define MX_ENTER_VISIT_DependentVectorType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_DependentVectorType
#  define MX_EXIT_VISIT_DependentVectorType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(DependentVectorType)
  MX_ENTER_VISIT_DependentVectorType
  MX_VISIT_BASE(DependentVectorType, Type)
  MX_VISIT_ENTITY(DependentVectorType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(DependentVectorType, attribute_token, 20, MX_APPLY_METHOD, AttributeToken, Token, NthType)
  MX_VISIT_ENTITY(DependentVectorType, element_type, 26, MX_APPLY_METHOD, ElementType, Type, NthType)
  MX_VISIT_ENTITY(DependentVectorType, size_expression, 27, MX_APPLY_METHOD, SizeExpression, Expr, NthType)
  MX_VISIT_ENUM(DependentVectorType, vector_kind, 28, MX_APPLY_METHOD, VectorKind, VectorTypeVectorKind, NthType)
  MX_VISIT_BOOL(DependentVectorType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_DependentVectorType
MX_END_VISIT_TYPE(DependentVectorType)

#ifndef MX_ENTER_VISIT_DependentSizedExtVectorType
#  define MX_ENTER_VISIT_DependentSizedExtVectorType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_DependentSizedExtVectorType
#  define MX_EXIT_VISIT_DependentSizedExtVectorType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(DependentSizedExtVectorType)
  MX_ENTER_VISIT_DependentSizedExtVectorType
  MX_VISIT_BASE(DependentSizedExtVectorType, Type)
  MX_VISIT_ENTITY(DependentSizedExtVectorType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(DependentSizedExtVectorType, attribute_token, 20, MX_APPLY_METHOD, AttributeToken, Token, NthType)
  MX_VISIT_ENTITY(DependentSizedExtVectorType, element_type, 26, MX_APPLY_METHOD, ElementType, Type, NthType)
  MX_VISIT_ENTITY(DependentSizedExtVectorType, size_expression, 27, MX_APPLY_METHOD, SizeExpression, Expr, NthType)
  MX_VISIT_BOOL(DependentSizedExtVectorType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_DependentSizedExtVectorType
MX_END_VISIT_TYPE(DependentSizedExtVectorType)

#ifndef MX_ENTER_VISIT_DependentBitIntType
#  define MX_ENTER_VISIT_DependentBitIntType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_DependentBitIntType
#  define MX_EXIT_VISIT_DependentBitIntType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(DependentBitIntType)
  MX_ENTER_VISIT_DependentBitIntType
  MX_VISIT_BASE(DependentBitIntType, Type)
  MX_VISIT_ENTITY(DependentBitIntType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(DependentBitIntType, num_bits_expression, 20, MX_APPLY_METHOD, NumBitsExpression, Expr, NthType)
  MX_VISIT_BOOL(DependentBitIntType, is_signed, 21, MX_APPLY_METHOD, IsSigned, bool, NthType)
  MX_VISIT_BOOL(DependentBitIntType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(DependentBitIntType, is_unsigned, 23, MX_APPLY_METHOD, IsUnsigned, bool, NthType)
  MX_EXIT_VISIT_DependentBitIntType
MX_END_VISIT_TYPE(DependentBitIntType)

#ifndef MX_ENTER_VISIT_DependentAddressSpaceType
#  define MX_ENTER_VISIT_DependentAddressSpaceType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_DependentAddressSpaceType
#  define MX_EXIT_VISIT_DependentAddressSpaceType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(DependentAddressSpaceType)
  MX_ENTER_VISIT_DependentAddressSpaceType
  MX_VISIT_BASE(DependentAddressSpaceType, Type)
  MX_VISIT_ENTITY(DependentAddressSpaceType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(DependentAddressSpaceType, address_space_expression, 20, MX_APPLY_METHOD, AddressSpaceExpression, Expr, NthType)
  MX_VISIT_ENTITY(DependentAddressSpaceType, attribute_token, 26, MX_APPLY_METHOD, AttributeToken, Token, NthType)
  MX_VISIT_ENTITY(DependentAddressSpaceType, pointee_type, 27, MX_APPLY_METHOD, PointeeType, Type, NthType)
  MX_VISIT_BOOL(DependentAddressSpaceType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_DependentAddressSpaceType
MX_END_VISIT_TYPE(DependentAddressSpaceType)

#ifndef MX_ENTER_VISIT_DeducedType
#  define MX_ENTER_VISIT_DeducedType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_DeducedType
#  define MX_EXIT_VISIT_DeducedType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(DeducedType)
  MX_ENTER_VISIT_DeducedType
  MX_VISIT_BASE(DeducedType, Type)
  MX_VISIT_ENTITY(DeducedType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_OPTIONAL_ENTITY(DeducedType, resolved_type, 20, MX_APPLY_METHOD, ResolvedType, Type, NthType)
  MX_VISIT_BOOL(DeducedType, is_deduced, 21, MX_APPLY_METHOD, IsDeduced, bool, NthType)
  MX_VISIT_BOOL(DeducedType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_DeducedType
MX_END_VISIT_TYPE(DeducedType)

#ifndef MX_ENTER_VISIT_DeducedTemplateSpecializationType
#  define MX_ENTER_VISIT_DeducedTemplateSpecializationType MX_ENTER_VISIT_DeducedType
#endif
#ifndef MX_EXIT_VISIT_DeducedTemplateSpecializationType
#  define MX_EXIT_VISIT_DeducedTemplateSpecializationType MX_EXIT_VISIT_DeducedType
#endif

MX_BEGIN_VISIT_TYPE(DeducedTemplateSpecializationType)
  MX_ENTER_VISIT_DeducedTemplateSpecializationType
  MX_VISIT_BASE(DeducedTemplateSpecializationType, DeducedType)
  MX_EXIT_VISIT_DeducedTemplateSpecializationType
MX_END_VISIT_TYPE(DeducedTemplateSpecializationType)

#ifndef MX_ENTER_VISIT_AutoType
#  define MX_ENTER_VISIT_AutoType MX_ENTER_VISIT_DeducedType
#endif
#ifndef MX_EXIT_VISIT_AutoType
#  define MX_EXIT_VISIT_AutoType MX_EXIT_VISIT_DeducedType
#endif

MX_BEGIN_VISIT_TYPE(AutoType)
  MX_ENTER_VISIT_AutoType
  MX_VISIT_BASE(AutoType, DeducedType)
  MX_VISIT_ENUM(AutoType, keyword, 28, MX_APPLY_METHOD, Keyword, AutoTypeKeyword, NthType)
  MX_VISIT_ENTITY_LIST(AutoType, type_constraint_arguments, 24, MX_APPLY_METHOD, TypeConstraintArguments, TemplateArgument, NthType)
  MX_VISIT_OPTIONAL_ENTITY(AutoType, type_constraint_concept, 26, MX_APPLY_METHOD, TypeConstraintConcept, ConceptDecl, NthType)
  MX_VISIT_BOOL(AutoType, is_constrained, 23, MX_APPLY_METHOD, IsConstrained, bool, NthType)
  MX_VISIT_BOOL(AutoType, is_decltype_auto, 29, MX_APPLY_METHOD, IsDecltypeAuto, bool, NthType)
  MX_VISIT_BOOL(AutoType, is_gnu_auto_type, 30, MX_APPLY_METHOD, IsGNUAutoType, bool, NthType)
  MX_EXIT_VISIT_AutoType
MX_END_VISIT_TYPE(AutoType)

#ifndef MX_ENTER_VISIT_DecltypeType
#  define MX_ENTER_VISIT_DecltypeType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_DecltypeType
#  define MX_EXIT_VISIT_DecltypeType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(DecltypeType)
  MX_ENTER_VISIT_DecltypeType
  MX_VISIT_BASE(DecltypeType, Type)
  MX_VISIT_ENTITY(DecltypeType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(DecltypeType, underlying_expression, 20, MX_APPLY_METHOD, UnderlyingExpression, Expr, NthType)
  MX_VISIT_ENTITY(DecltypeType, underlying_type, 26, MX_APPLY_METHOD, UnderlyingType, Type, NthType)
  MX_VISIT_BOOL(DecltypeType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_DecltypeType
MX_END_VISIT_TYPE(DecltypeType)

#ifndef MX_ENTER_VISIT_ComplexType
#  define MX_ENTER_VISIT_ComplexType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_ComplexType
#  define MX_EXIT_VISIT_ComplexType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(ComplexType)
  MX_ENTER_VISIT_ComplexType
  MX_VISIT_BASE(ComplexType, Type)
  MX_VISIT_ENTITY(ComplexType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(ComplexType, element_type, 20, MX_APPLY_METHOD, ElementType, Type, NthType)
  MX_VISIT_BOOL(ComplexType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_ComplexType
MX_END_VISIT_TYPE(ComplexType)

#ifndef MX_ENTER_VISIT_BuiltinType
#  define MX_ENTER_VISIT_BuiltinType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_BuiltinType
#  define MX_EXIT_VISIT_BuiltinType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(BuiltinType)
  MX_ENTER_VISIT_BuiltinType
  MX_VISIT_BASE(BuiltinType, Type)
  MX_VISIT_ENTITY(BuiltinType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENUM(BuiltinType, builtin_kind, 68, MX_APPLY_METHOD, BuiltinKind, BuiltinTypeKind, NthType)
  MX_VISIT_BOOL(BuiltinType, is_floating_point, 21, MX_APPLY_METHOD, IsFloatingPoint, bool, NthType)
  MX_VISIT_BOOL(BuiltinType, is_integer, 22, MX_APPLY_METHOD, IsInteger, bool, NthType)
  MX_VISIT_BOOL(BuiltinType, is_sve_bool, 23, MX_APPLY_METHOD, IsSVEBool, bool, NthType)
  MX_VISIT_BOOL(BuiltinType, is_sve_count, 29, MX_APPLY_METHOD, IsSVECount, bool, NthType)
  MX_VISIT_BOOL(BuiltinType, is_signed_integer, 30, MX_APPLY_METHOD, IsSignedInteger, bool, NthType)
  MX_VISIT_BOOL(BuiltinType, is_sugared, 31, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(BuiltinType, is_unsigned_integer, 32, MX_APPLY_METHOD, IsUnsignedInteger, bool, NthType)
  MX_EXIT_VISIT_BuiltinType
MX_END_VISIT_TYPE(BuiltinType)

#ifndef MX_ENTER_VISIT_BlockPointerType
#  define MX_ENTER_VISIT_BlockPointerType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_BlockPointerType
#  define MX_EXIT_VISIT_BlockPointerType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(BlockPointerType)
  MX_ENTER_VISIT_BlockPointerType
  MX_VISIT_BASE(BlockPointerType, Type)
  MX_VISIT_ENTITY(BlockPointerType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(BlockPointerType, pointee_type, 20, MX_APPLY_METHOD, PointeeType, Type, NthType)
  MX_VISIT_BOOL(BlockPointerType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_BlockPointerType
MX_END_VISIT_TYPE(BlockPointerType)

#ifndef MX_ENTER_VISIT_BitIntType
#  define MX_ENTER_VISIT_BitIntType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_BitIntType
#  define MX_EXIT_VISIT_BitIntType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(BitIntType)
  MX_ENTER_VISIT_BitIntType
  MX_VISIT_BASE(BitIntType, Type)
  MX_VISIT_ENTITY(BitIntType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(BitIntType, is_signed, 21, MX_APPLY_METHOD, IsSigned, bool, NthType)
  MX_VISIT_BOOL(BitIntType, is_sugared, 22, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(BitIntType, is_unsigned, 23, MX_APPLY_METHOD, IsUnsigned, bool, NthType)
  MX_EXIT_VISIT_BitIntType
MX_END_VISIT_TYPE(BitIntType)

#ifndef MX_ENTER_VISIT_BTFTagAttributedType
#  define MX_ENTER_VISIT_BTFTagAttributedType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_BTFTagAttributedType
#  define MX_EXIT_VISIT_BTFTagAttributedType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(BTFTagAttributedType)
  MX_ENTER_VISIT_BTFTagAttributedType
  MX_VISIT_BASE(BTFTagAttributedType, Type)
  MX_VISIT_ENTITY(BTFTagAttributedType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(BTFTagAttributedType, attribute, 20, MX_APPLY_METHOD, Attribute, BTFTypeTagAttr, NthType)
  MX_VISIT_ENTITY(BTFTagAttributedType, wrapped_type, 26, MX_APPLY_METHOD, WrappedType, Type, NthType)
  MX_VISIT_BOOL(BTFTagAttributedType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_BTFTagAttributedType
MX_END_VISIT_TYPE(BTFTagAttributedType)

#ifndef MX_ENTER_VISIT_AttributedType
#  define MX_ENTER_VISIT_AttributedType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_AttributedType
#  define MX_EXIT_VISIT_AttributedType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(AttributedType)
  MX_ENTER_VISIT_AttributedType
  MX_VISIT_BASE(AttributedType, Type)
  MX_VISIT_ENTITY(AttributedType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_OPTIONAL_ENTITY(AttributedType, attribute, 20, MX_APPLY_METHOD, Attribute, Attr, NthType)
  MX_VISIT_ENUM(AttributedType, attribute_kind, 68, MX_APPLY_METHOD, AttributeKind, AttrKind, NthType)
  MX_VISIT_ENTITY(AttributedType, equivalent_type, 26, MX_APPLY_METHOD, EquivalentType, Type, NthType)
  MX_VISIT_OPTIONAL_ENUM(AttributedType, immediate_nullability, 28, MX_APPLY_METHOD, ImmediateNullability, NullabilityKind, NthType)
  MX_VISIT_ENTITY(AttributedType, modified_type, 27, MX_APPLY_METHOD, ModifiedType, Type, NthType)
  MX_VISIT_BOOL(AttributedType, has_attribute, 22, MX_APPLY_METHOD, HasAttribute, bool, NthType)
  MX_VISIT_BOOL(AttributedType, is_calling_conv, 23, MX_APPLY_METHOD, IsCallingConv, bool, NthType)
  MX_VISIT_BOOL(AttributedType, is_ms_type_spec, 29, MX_APPLY_METHOD, IsMSTypeSpec, bool, NthType)
  MX_VISIT_BOOL(AttributedType, is_qualifier, 30, MX_APPLY_METHOD, IsQualifier, bool, NthType)
  MX_VISIT_BOOL(AttributedType, is_sugared, 31, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(AttributedType, is_web_assembly_funcref_spec, 32, MX_APPLY_METHOD, IsWebAssemblyFuncrefSpec, bool, NthType)
  MX_EXIT_VISIT_AttributedType
MX_END_VISIT_TYPE(AttributedType)

#ifndef MX_ENTER_VISIT_AtomicType
#  define MX_ENTER_VISIT_AtomicType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_AtomicType
#  define MX_EXIT_VISIT_AtomicType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(AtomicType)
  MX_ENTER_VISIT_AtomicType
  MX_VISIT_BASE(AtomicType, Type)
  MX_VISIT_ENTITY(AtomicType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(AtomicType, value_type, 20, MX_APPLY_METHOD, ValueType, Type, NthType)
  MX_VISIT_BOOL(AtomicType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_AtomicType
MX_END_VISIT_TYPE(AtomicType)

#ifndef MX_ENTER_VISIT_ArrayType
#  define MX_ENTER_VISIT_ArrayType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_ArrayType
#  define MX_EXIT_VISIT_ArrayType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(ArrayType)
  MX_ENTER_VISIT_ArrayType
  MX_VISIT_BASE(ArrayType, Type)
  MX_VISIT_ENTITY(ArrayType, element_type, 19, MX_APPLY_METHOD, ElementType, Type, NthType)
  MX_VISIT_ENUM(ArrayType, size_modifier, 28, MX_APPLY_METHOD, SizeModifier, ArrayTypeArraySizeModifier, NthType)
  MX_EXIT_VISIT_ArrayType
MX_END_VISIT_TYPE(ArrayType)

#ifndef MX_ENTER_VISIT_VariableArrayType
#  define MX_ENTER_VISIT_VariableArrayType MX_ENTER_VISIT_ArrayType
#endif
#ifndef MX_EXIT_VISIT_VariableArrayType
#  define MX_EXIT_VISIT_VariableArrayType MX_EXIT_VISIT_ArrayType
#endif

MX_BEGIN_VISIT_TYPE(VariableArrayType)
  MX_ENTER_VISIT_VariableArrayType
  MX_VISIT_BASE(VariableArrayType, ArrayType)
  MX_VISIT_ENTITY(VariableArrayType, desugar, 20, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_TOKEN_RANGE(VariableArrayType, brackets_range, 26, 27, NthType)
  MX_VISIT_ENTITY(VariableArrayType, l_bracket_token, 60, MX_APPLY_METHOD, LBracketToken, Token, NthType)
  MX_VISIT_ENTITY(VariableArrayType, r_bracket_token, 61, MX_APPLY_METHOD, RBracketToken, Token, NthType)
  MX_VISIT_ENTITY(VariableArrayType, size_expression, 63, MX_APPLY_METHOD, SizeExpression, Expr, NthType)
  MX_VISIT_BOOL(VariableArrayType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_VariableArrayType
MX_END_VISIT_TYPE(VariableArrayType)

#ifndef MX_ENTER_VISIT_IncompleteArrayType
#  define MX_ENTER_VISIT_IncompleteArrayType MX_ENTER_VISIT_ArrayType
#endif
#ifndef MX_EXIT_VISIT_IncompleteArrayType
#  define MX_EXIT_VISIT_IncompleteArrayType MX_EXIT_VISIT_ArrayType
#endif

MX_BEGIN_VISIT_TYPE(IncompleteArrayType)
  MX_ENTER_VISIT_IncompleteArrayType
  MX_VISIT_BASE(IncompleteArrayType, ArrayType)
  MX_VISIT_ENTITY(IncompleteArrayType, desugar, 20, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(IncompleteArrayType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_IncompleteArrayType
MX_END_VISIT_TYPE(IncompleteArrayType)

#ifndef MX_ENTER_VISIT_DependentSizedArrayType
#  define MX_ENTER_VISIT_DependentSizedArrayType MX_ENTER_VISIT_ArrayType
#endif
#ifndef MX_EXIT_VISIT_DependentSizedArrayType
#  define MX_EXIT_VISIT_DependentSizedArrayType MX_EXIT_VISIT_ArrayType
#endif

MX_BEGIN_VISIT_TYPE(DependentSizedArrayType)
  MX_ENTER_VISIT_DependentSizedArrayType
  MX_VISIT_BASE(DependentSizedArrayType, ArrayType)
  MX_VISIT_ENTITY(DependentSizedArrayType, desugar, 20, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_TOKEN_RANGE(DependentSizedArrayType, brackets_range, 26, 27, NthType)
  MX_VISIT_ENTITY(DependentSizedArrayType, l_bracket_token, 60, MX_APPLY_METHOD, LBracketToken, Token, NthType)
  MX_VISIT_ENTITY(DependentSizedArrayType, r_bracket_token, 61, MX_APPLY_METHOD, RBracketToken, Token, NthType)
  MX_VISIT_OPTIONAL_ENTITY(DependentSizedArrayType, size_expression, 63, MX_APPLY_METHOD, SizeExpression, Expr, NthType)
  MX_VISIT_BOOL(DependentSizedArrayType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_DependentSizedArrayType
MX_END_VISIT_TYPE(DependentSizedArrayType)

#ifndef MX_ENTER_VISIT_ConstantArrayType
#  define MX_ENTER_VISIT_ConstantArrayType MX_ENTER_VISIT_ArrayType
#endif
#ifndef MX_EXIT_VISIT_ConstantArrayType
#  define MX_EXIT_VISIT_ConstantArrayType MX_EXIT_VISIT_ArrayType
#endif

MX_BEGIN_VISIT_TYPE(ConstantArrayType)
  MX_ENTER_VISIT_ConstantArrayType
  MX_VISIT_BASE(ConstantArrayType, ArrayType)
  MX_VISIT_ENTITY(ConstantArrayType, desugar, 20, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_OPTIONAL_ENTITY(ConstantArrayType, size_expression, 26, MX_APPLY_METHOD, SizeExpression, Expr, NthType)
  MX_VISIT_BOOL(ConstantArrayType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_ConstantArrayType
MX_END_VISIT_TYPE(ConstantArrayType)

#ifndef MX_ENTER_VISIT_AdjustedType
#  define MX_ENTER_VISIT_AdjustedType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_AdjustedType
#  define MX_EXIT_VISIT_AdjustedType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(AdjustedType)
  MX_ENTER_VISIT_AdjustedType
  MX_VISIT_BASE(AdjustedType, Type)
  MX_VISIT_ENTITY(AdjustedType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(AdjustedType, resolved_type, 20, MX_APPLY_METHOD, ResolvedType, Type, NthType)
  MX_VISIT_ENTITY(AdjustedType, original_type, 26, MX_APPLY_METHOD, OriginalType, Type, NthType)
  MX_VISIT_BOOL(AdjustedType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_AdjustedType
MX_END_VISIT_TYPE(AdjustedType)

#ifndef MX_ENTER_VISIT_DecayedType
#  define MX_ENTER_VISIT_DecayedType MX_ENTER_VISIT_AdjustedType
#endif
#ifndef MX_EXIT_VISIT_DecayedType
#  define MX_EXIT_VISIT_DecayedType MX_EXIT_VISIT_AdjustedType
#endif

MX_BEGIN_VISIT_TYPE(DecayedType)
  MX_ENTER_VISIT_DecayedType
  MX_VISIT_BASE(DecayedType, AdjustedType)
  MX_VISIT_ENTITY(DecayedType, pointee_type, 27, MX_APPLY_METHOD, PointeeType, Type, NthType)
  MX_EXIT_VISIT_DecayedType
MX_END_VISIT_TYPE(DecayedType)

#ifndef MX_ENTER_VISIT_TypeWithKeyword
#  define MX_ENTER_VISIT_TypeWithKeyword MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_TypeWithKeyword
#  define MX_EXIT_VISIT_TypeWithKeyword MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_ABSTRACT_TYPE(TypeWithKeyword)
  MX_ENTER_VISIT_TypeWithKeyword
  MX_VISIT_BASE(TypeWithKeyword, Type)
  MX_VISIT_ENUM(TypeWithKeyword, keyword, 28, MX_APPLY_METHOD, Keyword, ElaboratedTypeKeyword, NthType)
  MX_EXIT_VISIT_TypeWithKeyword
MX_END_VISIT_TYPE(TypeWithKeyword)

#ifndef MX_ENTER_VISIT_ElaboratedType
#  define MX_ENTER_VISIT_ElaboratedType MX_ENTER_VISIT_TypeWithKeyword
#endif
#ifndef MX_EXIT_VISIT_ElaboratedType
#  define MX_EXIT_VISIT_ElaboratedType MX_EXIT_VISIT_TypeWithKeyword
#endif

MX_BEGIN_VISIT_TYPE(ElaboratedType)
  MX_ENTER_VISIT_ElaboratedType
  MX_VISIT_BASE(ElaboratedType, TypeWithKeyword)
  MX_VISIT_ENTITY(ElaboratedType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(ElaboratedType, named_type, 20, MX_APPLY_METHOD, NamedType, Type, NthType)
  MX_VISIT_OPTIONAL_ENTITY(ElaboratedType, owned_tag_declaration, 26, MX_APPLY_METHOD, OwnedTagDeclaration, TagDecl, NthType)
  MX_VISIT_BOOL(ElaboratedType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_ElaboratedType
MX_END_VISIT_TYPE(ElaboratedType)

#ifndef MX_ENTER_VISIT_DependentTemplateSpecializationType
#  define MX_ENTER_VISIT_DependentTemplateSpecializationType MX_ENTER_VISIT_TypeWithKeyword
#endif
#ifndef MX_EXIT_VISIT_DependentTemplateSpecializationType
#  define MX_EXIT_VISIT_DependentTemplateSpecializationType MX_EXIT_VISIT_TypeWithKeyword
#endif

MX_BEGIN_VISIT_TYPE(DependentTemplateSpecializationType)
  MX_ENTER_VISIT_DependentTemplateSpecializationType
  MX_VISIT_BASE(DependentTemplateSpecializationType, TypeWithKeyword)
  MX_VISIT_ENTITY(DependentTemplateSpecializationType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(DependentTemplateSpecializationType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_ENTITY_LIST(DependentTemplateSpecializationType, template_arguments, 24, MX_APPLY_METHOD, TemplateArguments, TemplateArgument, NthType)
  MX_EXIT_VISIT_DependentTemplateSpecializationType
MX_END_VISIT_TYPE(DependentTemplateSpecializationType)

#ifndef MX_ENTER_VISIT_DependentNameType
#  define MX_ENTER_VISIT_DependentNameType MX_ENTER_VISIT_TypeWithKeyword
#endif
#ifndef MX_EXIT_VISIT_DependentNameType
#  define MX_EXIT_VISIT_DependentNameType MX_EXIT_VISIT_TypeWithKeyword
#endif

MX_BEGIN_VISIT_TYPE(DependentNameType)
  MX_ENTER_VISIT_DependentNameType
  MX_VISIT_BASE(DependentNameType, TypeWithKeyword)
  MX_VISIT_ENTITY(DependentNameType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_BOOL(DependentNameType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_DependentNameType
MX_END_VISIT_TYPE(DependentNameType)

#ifndef MX_ENTER_VISIT_VectorType
#  define MX_ENTER_VISIT_VectorType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_VectorType
#  define MX_EXIT_VISIT_VectorType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(VectorType)
  MX_ENTER_VISIT_VectorType
  MX_VISIT_BASE(VectorType, Type)
  MX_VISIT_ENTITY(VectorType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(VectorType, element_type, 20, MX_APPLY_METHOD, ElementType, Type, NthType)
  MX_VISIT_ENUM(VectorType, vector_kind, 28, MX_APPLY_METHOD, VectorKind, VectorTypeVectorKind, NthType)
  MX_VISIT_BOOL(VectorType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_VectorType
MX_END_VISIT_TYPE(VectorType)

#ifndef MX_ENTER_VISIT_ExtVectorType
#  define MX_ENTER_VISIT_ExtVectorType MX_ENTER_VISIT_VectorType
#endif
#ifndef MX_EXIT_VISIT_ExtVectorType
#  define MX_EXIT_VISIT_ExtVectorType MX_EXIT_VISIT_VectorType
#endif

MX_BEGIN_VISIT_TYPE(ExtVectorType)
  MX_ENTER_VISIT_ExtVectorType
  MX_VISIT_BASE(ExtVectorType, VectorType)
  MX_EXIT_VISIT_ExtVectorType
MX_END_VISIT_TYPE(ExtVectorType)

#ifndef MX_ENTER_VISIT_UsingType
#  define MX_ENTER_VISIT_UsingType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_UsingType
#  define MX_EXIT_VISIT_UsingType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(UsingType)
  MX_ENTER_VISIT_UsingType
  MX_VISIT_BASE(UsingType, Type)
  MX_VISIT_ENTITY(UsingType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(UsingType, found_declaration, 20, MX_APPLY_METHOD, FoundDeclaration, UsingShadowDecl, NthType)
  MX_VISIT_ENTITY(UsingType, underlying_type, 26, MX_APPLY_METHOD, UnderlyingType, Type, NthType)
  MX_VISIT_BOOL(UsingType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(UsingType, type_matches_declaration, 22, MX_APPLY_METHOD, TypeMatchesDeclaration, bool, NthType)
  MX_EXIT_VISIT_UsingType
MX_END_VISIT_TYPE(UsingType)

#ifndef MX_ENTER_VISIT_UnresolvedUsingType
#  define MX_ENTER_VISIT_UnresolvedUsingType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_UnresolvedUsingType
#  define MX_EXIT_VISIT_UnresolvedUsingType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(UnresolvedUsingType)
  MX_ENTER_VISIT_UnresolvedUsingType
  MX_VISIT_BASE(UnresolvedUsingType, Type)
  MX_VISIT_ENTITY(UnresolvedUsingType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(UnresolvedUsingType, declaration, 20, MX_APPLY_METHOD, Declaration, UnresolvedUsingTypenameDecl, NthType)
  MX_VISIT_BOOL(UnresolvedUsingType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_UnresolvedUsingType
MX_END_VISIT_TYPE(UnresolvedUsingType)

#ifndef MX_ENTER_VISIT_UnaryTransformType
#  define MX_ENTER_VISIT_UnaryTransformType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_UnaryTransformType
#  define MX_EXIT_VISIT_UnaryTransformType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(UnaryTransformType)
  MX_ENTER_VISIT_UnaryTransformType
  MX_VISIT_BASE(UnaryTransformType, Type)
  MX_VISIT_OPTIONAL_ENTITY(UnaryTransformType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_OPTIONAL_ENTITY(UnaryTransformType, base_type, 20, MX_APPLY_METHOD, BaseType, Type, NthType)
  MX_VISIT_ENUM(UnaryTransformType, utt_kind, 28, MX_APPLY_METHOD, UTTKind, UnaryTransformTypeUTTKind, NthType)
  MX_VISIT_OPTIONAL_ENTITY(UnaryTransformType, underlying_type, 26, MX_APPLY_METHOD, UnderlyingType, Type, NthType)
  MX_VISIT_BOOL(UnaryTransformType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_UnaryTransformType
MX_END_VISIT_TYPE(UnaryTransformType)

#ifndef MX_ENTER_VISIT_TypedefType
#  define MX_ENTER_VISIT_TypedefType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_TypedefType
#  define MX_EXIT_VISIT_TypedefType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(TypedefType)
  MX_ENTER_VISIT_TypedefType
  MX_VISIT_BASE(TypedefType, Type)
  MX_VISIT_ENTITY(TypedefType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENTITY(TypedefType, declaration, 20, MX_APPLY_METHOD, Declaration, TypedefNameDecl, NthType)
  MX_VISIT_BOOL(TypedefType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_VISIT_BOOL(TypedefType, type_matches_declaration, 22, MX_APPLY_METHOD, TypeMatchesDeclaration, bool, NthType)
  MX_EXIT_VISIT_TypedefType
MX_END_VISIT_TYPE(TypedefType)

#ifndef MX_ENTER_VISIT_TypeOfType
#  define MX_ENTER_VISIT_TypeOfType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_TypeOfType
#  define MX_EXIT_VISIT_TypeOfType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(TypeOfType)
  MX_ENTER_VISIT_TypeOfType
  MX_VISIT_BASE(TypeOfType, Type)
  MX_VISIT_ENTITY(TypeOfType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENUM(TypeOfType, type_kind, 28, MX_APPLY_METHOD, TypeKind, TypeOfKind, NthType)
  MX_VISIT_ENTITY(TypeOfType, unmodified_type, 20, MX_APPLY_METHOD, UnmodifiedType, Type, NthType)
  MX_VISIT_BOOL(TypeOfType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_TypeOfType
MX_END_VISIT_TYPE(TypeOfType)

#ifndef MX_ENTER_VISIT_TypeOfExprType
#  define MX_ENTER_VISIT_TypeOfExprType MX_ENTER_VISIT_Type
#endif
#ifndef MX_EXIT_VISIT_TypeOfExprType
#  define MX_EXIT_VISIT_TypeOfExprType MX_EXIT_VISIT_Type
#endif

MX_BEGIN_VISIT_TYPE(TypeOfExprType)
  MX_ENTER_VISIT_TypeOfExprType
  MX_VISIT_BASE(TypeOfExprType, Type)
  MX_VISIT_ENTITY(TypeOfExprType, desugar, 19, MX_APPLY_METHOD, Desugar, Type, NthType)
  MX_VISIT_ENUM(TypeOfExprType, type_kind, 28, MX_APPLY_METHOD, TypeKind, TypeOfKind, NthType)
  MX_VISIT_ENTITY(TypeOfExprType, underlying_expression, 20, MX_APPLY_METHOD, UnderlyingExpression, Expr, NthType)
  MX_VISIT_BOOL(TypeOfExprType, is_sugared, 21, MX_APPLY_METHOD, IsSugared, bool, NthType)
  MX_EXIT_VISIT_TypeOfExprType
MX_END_VISIT_TYPE(TypeOfExprType)

#ifndef MX_ENTER_VISIT_Stmt
#  define MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_Stmt
#  define MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(Stmt)
  MX_ENTER_VISIT_Stmt
  MX_VISIT_DECL_LINK(Stmt, parent_declaration, 0)
  MX_VISIT_STMT_LINK(Stmt, parent_statement, 1)
  MX_VISIT_OPTIONAL_ENTITY(Stmt, referenced_declaration, 2, MX_APPLY_FUNC, ReferencedDecl, Decl, NthStmt)
  MX_VISIT_ENTITY(Stmt, ignore_containers, 3, MX_APPLY_METHOD, IgnoreContainers, Stmt, NthStmt)
  MX_VISIT_ENTITY_LIST(Stmt, children, 4, MX_APPLY_METHOD, Children, Stmt, NthStmt)
  MX_VISIT_TOKEN_RANGE(Stmt, tokens, 5, 6, NthStmt)
  MX_VISIT_ENUM(Stmt, kind, 7, MX_APPLY_METHOD, Kind, StmtKind, NthStmt)
  MX_VISIT_ENTITY(Stmt, strip_label_like_statements, 8, MX_APPLY_METHOD, StripLabelLikeStatements, Stmt, NthStmt)
  MX_EXIT_VISIT_Stmt
MX_END_VISIT_STMT(Stmt)

#ifndef MX_ENTER_VISIT_SEHTryStmt
#  define MX_ENTER_VISIT_SEHTryStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_SEHTryStmt
#  define MX_EXIT_VISIT_SEHTryStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(SEHTryStmt)
  MX_ENTER_VISIT_SEHTryStmt
  MX_VISIT_BASE(SEHTryStmt, Stmt)
  MX_VISIT_ENTITY(SEHTryStmt, except_handler, 9, MX_APPLY_METHOD, ExceptHandler, SEHExceptStmt, NthStmt)
  MX_VISIT_ENTITY(SEHTryStmt, finally_handler, 10, MX_APPLY_METHOD, FinallyHandler, SEHFinallyStmt, NthStmt)
  MX_VISIT_ENTITY(SEHTryStmt, handler, 11, MX_APPLY_METHOD, Handler, Stmt, NthStmt)
  MX_VISIT_BOOL(SEHTryStmt, is_cxx_try, 12, MX_APPLY_METHOD, IsCXXTry, bool, NthStmt)
  MX_VISIT_ENTITY(SEHTryStmt, try_block, 13, MX_APPLY_METHOD, TryBlock, CompoundStmt, NthStmt)
  MX_VISIT_ENTITY(SEHTryStmt, try_token, 14, MX_APPLY_METHOD, TryToken, Token, NthStmt)
  MX_EXIT_VISIT_SEHTryStmt
MX_END_VISIT_STMT(SEHTryStmt)

#ifndef MX_ENTER_VISIT_SEHLeaveStmt
#  define MX_ENTER_VISIT_SEHLeaveStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_SEHLeaveStmt
#  define MX_EXIT_VISIT_SEHLeaveStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(SEHLeaveStmt)
  MX_ENTER_VISIT_SEHLeaveStmt
  MX_VISIT_BASE(SEHLeaveStmt, Stmt)
  MX_VISIT_ENTITY(SEHLeaveStmt, leave_token, 9, MX_APPLY_METHOD, LeaveToken, Token, NthStmt)
  MX_EXIT_VISIT_SEHLeaveStmt
MX_END_VISIT_STMT(SEHLeaveStmt)

#ifndef MX_ENTER_VISIT_SEHFinallyStmt
#  define MX_ENTER_VISIT_SEHFinallyStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_SEHFinallyStmt
#  define MX_EXIT_VISIT_SEHFinallyStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(SEHFinallyStmt)
  MX_ENTER_VISIT_SEHFinallyStmt
  MX_VISIT_BASE(SEHFinallyStmt, Stmt)
  MX_VISIT_ENTITY(SEHFinallyStmt, block, 9, MX_APPLY_METHOD, Block, CompoundStmt, NthStmt)
  MX_VISIT_ENTITY(SEHFinallyStmt, finally_token, 10, MX_APPLY_METHOD, FinallyToken, Token, NthStmt)
  MX_EXIT_VISIT_SEHFinallyStmt
MX_END_VISIT_STMT(SEHFinallyStmt)

#ifndef MX_ENTER_VISIT_SEHExceptStmt
#  define MX_ENTER_VISIT_SEHExceptStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_SEHExceptStmt
#  define MX_EXIT_VISIT_SEHExceptStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(SEHExceptStmt)
  MX_ENTER_VISIT_SEHExceptStmt
  MX_VISIT_BASE(SEHExceptStmt, Stmt)
  MX_VISIT_ENTITY(SEHExceptStmt, block, 9, MX_APPLY_METHOD, Block, CompoundStmt, NthStmt)
  MX_VISIT_ENTITY(SEHExceptStmt, except_token, 10, MX_APPLY_METHOD, ExceptToken, Token, NthStmt)
  MX_VISIT_ENTITY(SEHExceptStmt, filter_expression, 11, MX_APPLY_METHOD, FilterExpression, Expr, NthStmt)
  MX_EXIT_VISIT_SEHExceptStmt
MX_END_VISIT_STMT(SEHExceptStmt)

#ifndef MX_ENTER_VISIT_ReturnStmt
#  define MX_ENTER_VISIT_ReturnStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ReturnStmt
#  define MX_EXIT_VISIT_ReturnStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ReturnStmt)
  MX_ENTER_VISIT_ReturnStmt
  MX_VISIT_BASE(ReturnStmt, Stmt)
  MX_VISIT_OPTIONAL_ENTITY(ReturnStmt, nrvo_candidate, 9, MX_APPLY_METHOD, NRVOCandidate, VarDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(ReturnStmt, return_value, 10, MX_APPLY_METHOD, ReturnValue, Expr, NthStmt)
  MX_VISIT_ENTITY(ReturnStmt, return_token, 11, MX_APPLY_METHOD, ReturnToken, Token, NthStmt)
  MX_EXIT_VISIT_ReturnStmt
MX_END_VISIT_STMT(ReturnStmt)

#ifndef MX_ENTER_VISIT_ObjCForCollectionStmt
#  define MX_ENTER_VISIT_ObjCForCollectionStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ObjCForCollectionStmt
#  define MX_EXIT_VISIT_ObjCForCollectionStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ObjCForCollectionStmt)
  MX_ENTER_VISIT_ObjCForCollectionStmt
  MX_VISIT_BASE(ObjCForCollectionStmt, Stmt)
  MX_VISIT_ENTITY(ObjCForCollectionStmt, body, 9, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(ObjCForCollectionStmt, collection, 10, MX_APPLY_METHOD, Collection, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCForCollectionStmt, element, 11, MX_APPLY_METHOD, Element, Stmt, NthStmt)
  MX_VISIT_ENTITY(ObjCForCollectionStmt, for_token, 13, MX_APPLY_METHOD, ForToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCForCollectionStmt, r_paren_token, 14, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_ObjCForCollectionStmt
MX_END_VISIT_STMT(ObjCForCollectionStmt)

#ifndef MX_ENTER_VISIT_ObjCAutoreleasePoolStmt
#  define MX_ENTER_VISIT_ObjCAutoreleasePoolStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ObjCAutoreleasePoolStmt
#  define MX_EXIT_VISIT_ObjCAutoreleasePoolStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ObjCAutoreleasePoolStmt)
  MX_ENTER_VISIT_ObjCAutoreleasePoolStmt
  MX_VISIT_BASE(ObjCAutoreleasePoolStmt, Stmt)
  MX_VISIT_ENTITY(ObjCAutoreleasePoolStmt, at_token, 9, MX_APPLY_METHOD, AtToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCAutoreleasePoolStmt, sub_statement, 10, MX_APPLY_METHOD, SubStatement, Stmt, NthStmt)
  MX_EXIT_VISIT_ObjCAutoreleasePoolStmt
MX_END_VISIT_STMT(ObjCAutoreleasePoolStmt)

#ifndef MX_ENTER_VISIT_ObjCAtTryStmt
#  define MX_ENTER_VISIT_ObjCAtTryStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ObjCAtTryStmt
#  define MX_EXIT_VISIT_ObjCAtTryStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ObjCAtTryStmt)
  MX_ENTER_VISIT_ObjCAtTryStmt
  MX_VISIT_BASE(ObjCAtTryStmt, Stmt)
  MX_VISIT_ENTITY(ObjCAtTryStmt, at_try_token, 9, MX_APPLY_METHOD, AtTryToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCAtTryStmt, finally_statement, 10, MX_APPLY_METHOD, FinallyStatement, ObjCAtFinallyStmt, NthStmt)
  MX_VISIT_ENTITY(ObjCAtTryStmt, try_body, 11, MX_APPLY_METHOD, TryBody, Stmt, NthStmt)
  MX_VISIT_ENTITY_LIST(ObjCAtTryStmt, catch_statements, 15, MX_APPLY_METHOD, CatchStatements, ObjCAtCatchStmt, NthStmt)
  MX_EXIT_VISIT_ObjCAtTryStmt
MX_END_VISIT_STMT(ObjCAtTryStmt)

#ifndef MX_ENTER_VISIT_ObjCAtThrowStmt
#  define MX_ENTER_VISIT_ObjCAtThrowStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ObjCAtThrowStmt
#  define MX_EXIT_VISIT_ObjCAtThrowStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ObjCAtThrowStmt)
  MX_ENTER_VISIT_ObjCAtThrowStmt
  MX_VISIT_BASE(ObjCAtThrowStmt, Stmt)
  MX_VISIT_ENTITY(ObjCAtThrowStmt, throw_expression, 9, MX_APPLY_METHOD, ThrowExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCAtThrowStmt, throw_token, 10, MX_APPLY_METHOD, ThrowToken, Token, NthStmt)
  MX_EXIT_VISIT_ObjCAtThrowStmt
MX_END_VISIT_STMT(ObjCAtThrowStmt)

#ifndef MX_ENTER_VISIT_ObjCAtSynchronizedStmt
#  define MX_ENTER_VISIT_ObjCAtSynchronizedStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ObjCAtSynchronizedStmt
#  define MX_EXIT_VISIT_ObjCAtSynchronizedStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ObjCAtSynchronizedStmt)
  MX_ENTER_VISIT_ObjCAtSynchronizedStmt
  MX_VISIT_BASE(ObjCAtSynchronizedStmt, Stmt)
  MX_VISIT_ENTITY(ObjCAtSynchronizedStmt, at_synchronized_token, 9, MX_APPLY_METHOD, AtSynchronizedToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCAtSynchronizedStmt, synch_body, 10, MX_APPLY_METHOD, SynchBody, CompoundStmt, NthStmt)
  MX_VISIT_ENTITY(ObjCAtSynchronizedStmt, synch_expression, 11, MX_APPLY_METHOD, SynchExpression, Expr, NthStmt)
  MX_EXIT_VISIT_ObjCAtSynchronizedStmt
MX_END_VISIT_STMT(ObjCAtSynchronizedStmt)

#ifndef MX_ENTER_VISIT_ObjCAtFinallyStmt
#  define MX_ENTER_VISIT_ObjCAtFinallyStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ObjCAtFinallyStmt
#  define MX_EXIT_VISIT_ObjCAtFinallyStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ObjCAtFinallyStmt)
  MX_ENTER_VISIT_ObjCAtFinallyStmt
  MX_VISIT_BASE(ObjCAtFinallyStmt, Stmt)
  MX_VISIT_ENTITY(ObjCAtFinallyStmt, at_finally_token, 9, MX_APPLY_METHOD, AtFinallyToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCAtFinallyStmt, finally_body, 10, MX_APPLY_METHOD, FinallyBody, Stmt, NthStmt)
  MX_EXIT_VISIT_ObjCAtFinallyStmt
MX_END_VISIT_STMT(ObjCAtFinallyStmt)

#ifndef MX_ENTER_VISIT_ObjCAtCatchStmt
#  define MX_ENTER_VISIT_ObjCAtCatchStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ObjCAtCatchStmt
#  define MX_EXIT_VISIT_ObjCAtCatchStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ObjCAtCatchStmt)
  MX_ENTER_VISIT_ObjCAtCatchStmt
  MX_VISIT_BASE(ObjCAtCatchStmt, Stmt)
  MX_VISIT_ENTITY(ObjCAtCatchStmt, at_catch_token, 9, MX_APPLY_METHOD, AtCatchToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCAtCatchStmt, catch_body, 10, MX_APPLY_METHOD, CatchBody, Stmt, NthStmt)
  MX_VISIT_ENTITY(ObjCAtCatchStmt, catch_parameter_declaration, 11, MX_APPLY_METHOD, CatchParameterDeclaration, VarDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCAtCatchStmt, r_paren_token, 13, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_BOOL(ObjCAtCatchStmt, has_ellipsis, 12, MX_APPLY_METHOD, HasEllipsis, bool, NthStmt)
  MX_EXIT_VISIT_ObjCAtCatchStmt
MX_END_VISIT_STMT(ObjCAtCatchStmt)

#ifndef MX_ENTER_VISIT_OMPExecutableDirective
#  define MX_ENTER_VISIT_OMPExecutableDirective MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_OMPExecutableDirective
#  define MX_EXIT_VISIT_OMPExecutableDirective MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(OMPExecutableDirective)
  MX_ENTER_VISIT_OMPExecutableDirective
  MX_VISIT_BASE(OMPExecutableDirective, Stmt)
  MX_VISIT_ENTITY(OMPExecutableDirective, associated_statement, 9, MX_APPLY_METHOD, AssociatedStatement, Stmt, NthStmt)
  MX_VISIT_ENTITY(OMPExecutableDirective, innermost_captured_statement, 10, MX_APPLY_METHOD, InnermostCapturedStatement, CapturedStmt, NthStmt)
  MX_VISIT_ENTITY(OMPExecutableDirective, raw_statement, 11, MX_APPLY_METHOD, RawStatement, Stmt, NthStmt)
  MX_VISIT_ENTITY(OMPExecutableDirective, structured_block, 13, MX_APPLY_METHOD, StructuredBlock, Stmt, NthStmt)
  MX_VISIT_BOOL(OMPExecutableDirective, has_associated_statement, 12, MX_APPLY_METHOD, HasAssociatedStatement, bool, NthStmt)
  MX_VISIT_BOOL(OMPExecutableDirective, is_standalone_directive, 16, MX_APPLY_METHOD, IsStandaloneDirective, bool, NthStmt)
  MX_EXIT_VISIT_OMPExecutableDirective
MX_END_VISIT_STMT(OMPExecutableDirective)

#ifndef MX_ENTER_VISIT_OMPErrorDirective
#  define MX_ENTER_VISIT_OMPErrorDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPErrorDirective
#  define MX_EXIT_VISIT_OMPErrorDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPErrorDirective)
  MX_ENTER_VISIT_OMPErrorDirective
  MX_VISIT_BASE(OMPErrorDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPErrorDirective
MX_END_VISIT_STMT(OMPErrorDirective)

#ifndef MX_ENTER_VISIT_OMPDispatchDirective
#  define MX_ENTER_VISIT_OMPDispatchDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPDispatchDirective
#  define MX_EXIT_VISIT_OMPDispatchDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPDispatchDirective)
  MX_ENTER_VISIT_OMPDispatchDirective
  MX_VISIT_BASE(OMPDispatchDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPDispatchDirective, target_call_token, 14, MX_APPLY_METHOD, TargetCallToken, Token, NthStmt)
  MX_EXIT_VISIT_OMPDispatchDirective
MX_END_VISIT_STMT(OMPDispatchDirective)

#ifndef MX_ENTER_VISIT_OMPDepobjDirective
#  define MX_ENTER_VISIT_OMPDepobjDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPDepobjDirective
#  define MX_EXIT_VISIT_OMPDepobjDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPDepobjDirective)
  MX_ENTER_VISIT_OMPDepobjDirective
  MX_VISIT_BASE(OMPDepobjDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPDepobjDirective
MX_END_VISIT_STMT(OMPDepobjDirective)

#ifndef MX_ENTER_VISIT_OMPCriticalDirective
#  define MX_ENTER_VISIT_OMPCriticalDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPCriticalDirective
#  define MX_EXIT_VISIT_OMPCriticalDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPCriticalDirective)
  MX_ENTER_VISIT_OMPCriticalDirective
  MX_VISIT_BASE(OMPCriticalDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPCriticalDirective
MX_END_VISIT_STMT(OMPCriticalDirective)

#ifndef MX_ENTER_VISIT_OMPCancellationPointDirective
#  define MX_ENTER_VISIT_OMPCancellationPointDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPCancellationPointDirective
#  define MX_EXIT_VISIT_OMPCancellationPointDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPCancellationPointDirective)
  MX_ENTER_VISIT_OMPCancellationPointDirective
  MX_VISIT_BASE(OMPCancellationPointDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPCancellationPointDirective
MX_END_VISIT_STMT(OMPCancellationPointDirective)

#ifndef MX_ENTER_VISIT_OMPCancelDirective
#  define MX_ENTER_VISIT_OMPCancelDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPCancelDirective
#  define MX_EXIT_VISIT_OMPCancelDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPCancelDirective)
  MX_ENTER_VISIT_OMPCancelDirective
  MX_VISIT_BASE(OMPCancelDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPCancelDirective
MX_END_VISIT_STMT(OMPCancelDirective)

#ifndef MX_ENTER_VISIT_OMPBarrierDirective
#  define MX_ENTER_VISIT_OMPBarrierDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPBarrierDirective
#  define MX_EXIT_VISIT_OMPBarrierDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPBarrierDirective)
  MX_ENTER_VISIT_OMPBarrierDirective
  MX_VISIT_BASE(OMPBarrierDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPBarrierDirective
MX_END_VISIT_STMT(OMPBarrierDirective)

#ifndef MX_ENTER_VISIT_OMPAtomicDirective
#  define MX_ENTER_VISIT_OMPAtomicDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPAtomicDirective
#  define MX_EXIT_VISIT_OMPAtomicDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPAtomicDirective)
  MX_ENTER_VISIT_OMPAtomicDirective
  MX_VISIT_BASE(OMPAtomicDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPAtomicDirective, condition_expression, 14, MX_APPLY_METHOD, ConditionExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPAtomicDirective, d, 17, MX_APPLY_METHOD, D, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPAtomicDirective, expression, 18, MX_APPLY_METHOD, Expression, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPAtomicDirective, r, 19, MX_APPLY_METHOD, R, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPAtomicDirective, update_expression, 20, MX_APPLY_METHOD, UpdateExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPAtomicDirective, v, 21, MX_APPLY_METHOD, V, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPAtomicDirective, x, 22, MX_APPLY_METHOD, X, Expr, NthStmt)
  MX_VISIT_BOOL(OMPAtomicDirective, is_fail_only, 23, MX_APPLY_METHOD, IsFailOnly, bool, NthStmt)
  MX_VISIT_BOOL(OMPAtomicDirective, is_postfix_update, 24, MX_APPLY_METHOD, IsPostfixUpdate, bool, NthStmt)
  MX_VISIT_BOOL(OMPAtomicDirective, is_xlhs_in_rhs_part, 25, MX_APPLY_METHOD, IsXLHSInRHSPart, bool, NthStmt)
  MX_EXIT_VISIT_OMPAtomicDirective
MX_END_VISIT_STMT(OMPAtomicDirective)

#ifndef MX_ENTER_VISIT_OMPTeamsDirective
#  define MX_ENTER_VISIT_OMPTeamsDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTeamsDirective
#  define MX_EXIT_VISIT_OMPTeamsDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTeamsDirective)
  MX_ENTER_VISIT_OMPTeamsDirective
  MX_VISIT_BASE(OMPTeamsDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTeamsDirective
MX_END_VISIT_STMT(OMPTeamsDirective)

#ifndef MX_ENTER_VISIT_OMPTaskyieldDirective
#  define MX_ENTER_VISIT_OMPTaskyieldDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTaskyieldDirective
#  define MX_EXIT_VISIT_OMPTaskyieldDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTaskyieldDirective)
  MX_ENTER_VISIT_OMPTaskyieldDirective
  MX_VISIT_BASE(OMPTaskyieldDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTaskyieldDirective
MX_END_VISIT_STMT(OMPTaskyieldDirective)

#ifndef MX_ENTER_VISIT_OMPTaskwaitDirective
#  define MX_ENTER_VISIT_OMPTaskwaitDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTaskwaitDirective
#  define MX_EXIT_VISIT_OMPTaskwaitDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTaskwaitDirective)
  MX_ENTER_VISIT_OMPTaskwaitDirective
  MX_VISIT_BASE(OMPTaskwaitDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTaskwaitDirective
MX_END_VISIT_STMT(OMPTaskwaitDirective)

#ifndef MX_ENTER_VISIT_OMPTaskgroupDirective
#  define MX_ENTER_VISIT_OMPTaskgroupDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTaskgroupDirective
#  define MX_EXIT_VISIT_OMPTaskgroupDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTaskgroupDirective)
  MX_ENTER_VISIT_OMPTaskgroupDirective
  MX_VISIT_BASE(OMPTaskgroupDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPTaskgroupDirective, reduction_reference, 14, MX_APPLY_METHOD, ReductionReference, Expr, NthStmt)
  MX_EXIT_VISIT_OMPTaskgroupDirective
MX_END_VISIT_STMT(OMPTaskgroupDirective)

#ifndef MX_ENTER_VISIT_OMPTaskDirective
#  define MX_ENTER_VISIT_OMPTaskDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTaskDirective
#  define MX_EXIT_VISIT_OMPTaskDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTaskDirective)
  MX_ENTER_VISIT_OMPTaskDirective
  MX_VISIT_BASE(OMPTaskDirective, OMPExecutableDirective)
  MX_VISIT_BOOL(OMPTaskDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPTaskDirective
MX_END_VISIT_STMT(OMPTaskDirective)

#ifndef MX_ENTER_VISIT_OMPTargetUpdateDirective
#  define MX_ENTER_VISIT_OMPTargetUpdateDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetUpdateDirective
#  define MX_EXIT_VISIT_OMPTargetUpdateDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetUpdateDirective)
  MX_ENTER_VISIT_OMPTargetUpdateDirective
  MX_VISIT_BASE(OMPTargetUpdateDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTargetUpdateDirective
MX_END_VISIT_STMT(OMPTargetUpdateDirective)

#ifndef MX_ENTER_VISIT_OMPTargetTeamsDirective
#  define MX_ENTER_VISIT_OMPTargetTeamsDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetTeamsDirective
#  define MX_EXIT_VISIT_OMPTargetTeamsDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetTeamsDirective)
  MX_ENTER_VISIT_OMPTargetTeamsDirective
  MX_VISIT_BASE(OMPTargetTeamsDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTargetTeamsDirective
MX_END_VISIT_STMT(OMPTargetTeamsDirective)

#ifndef MX_ENTER_VISIT_OMPTargetParallelDirective
#  define MX_ENTER_VISIT_OMPTargetParallelDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetParallelDirective
#  define MX_EXIT_VISIT_OMPTargetParallelDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetParallelDirective)
  MX_ENTER_VISIT_OMPTargetParallelDirective
  MX_VISIT_BASE(OMPTargetParallelDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPTargetParallelDirective, task_reduction_reference_expression, 14, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPTargetParallelDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPTargetParallelDirective
MX_END_VISIT_STMT(OMPTargetParallelDirective)

#ifndef MX_ENTER_VISIT_OMPTargetExitDataDirective
#  define MX_ENTER_VISIT_OMPTargetExitDataDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetExitDataDirective
#  define MX_EXIT_VISIT_OMPTargetExitDataDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetExitDataDirective)
  MX_ENTER_VISIT_OMPTargetExitDataDirective
  MX_VISIT_BASE(OMPTargetExitDataDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTargetExitDataDirective
MX_END_VISIT_STMT(OMPTargetExitDataDirective)

#ifndef MX_ENTER_VISIT_OMPTargetEnterDataDirective
#  define MX_ENTER_VISIT_OMPTargetEnterDataDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetEnterDataDirective
#  define MX_EXIT_VISIT_OMPTargetEnterDataDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetEnterDataDirective)
  MX_ENTER_VISIT_OMPTargetEnterDataDirective
  MX_VISIT_BASE(OMPTargetEnterDataDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTargetEnterDataDirective
MX_END_VISIT_STMT(OMPTargetEnterDataDirective)

#ifndef MX_ENTER_VISIT_OMPTargetDirective
#  define MX_ENTER_VISIT_OMPTargetDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetDirective
#  define MX_EXIT_VISIT_OMPTargetDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetDirective)
  MX_ENTER_VISIT_OMPTargetDirective
  MX_VISIT_BASE(OMPTargetDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTargetDirective
MX_END_VISIT_STMT(OMPTargetDirective)

#ifndef MX_ENTER_VISIT_OMPTargetDataDirective
#  define MX_ENTER_VISIT_OMPTargetDataDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetDataDirective
#  define MX_EXIT_VISIT_OMPTargetDataDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetDataDirective)
  MX_ENTER_VISIT_OMPTargetDataDirective
  MX_VISIT_BASE(OMPTargetDataDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPTargetDataDirective
MX_END_VISIT_STMT(OMPTargetDataDirective)

#ifndef MX_ENTER_VISIT_OMPSingleDirective
#  define MX_ENTER_VISIT_OMPSingleDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPSingleDirective
#  define MX_EXIT_VISIT_OMPSingleDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPSingleDirective)
  MX_ENTER_VISIT_OMPSingleDirective
  MX_VISIT_BASE(OMPSingleDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPSingleDirective
MX_END_VISIT_STMT(OMPSingleDirective)

#ifndef MX_ENTER_VISIT_OMPSectionsDirective
#  define MX_ENTER_VISIT_OMPSectionsDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPSectionsDirective
#  define MX_EXIT_VISIT_OMPSectionsDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPSectionsDirective)
  MX_ENTER_VISIT_OMPSectionsDirective
  MX_VISIT_BASE(OMPSectionsDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPSectionsDirective, task_reduction_reference_expression, 14, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPSectionsDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPSectionsDirective
MX_END_VISIT_STMT(OMPSectionsDirective)

#ifndef MX_ENTER_VISIT_OMPSectionDirective
#  define MX_ENTER_VISIT_OMPSectionDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPSectionDirective
#  define MX_EXIT_VISIT_OMPSectionDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPSectionDirective)
  MX_ENTER_VISIT_OMPSectionDirective
  MX_VISIT_BASE(OMPSectionDirective, OMPExecutableDirective)
  MX_VISIT_BOOL(OMPSectionDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPSectionDirective
MX_END_VISIT_STMT(OMPSectionDirective)

#ifndef MX_ENTER_VISIT_OMPScanDirective
#  define MX_ENTER_VISIT_OMPScanDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPScanDirective
#  define MX_EXIT_VISIT_OMPScanDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPScanDirective)
  MX_ENTER_VISIT_OMPScanDirective
  MX_VISIT_BASE(OMPScanDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPScanDirective
MX_END_VISIT_STMT(OMPScanDirective)

#ifndef MX_ENTER_VISIT_OMPParallelSectionsDirective
#  define MX_ENTER_VISIT_OMPParallelSectionsDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelSectionsDirective
#  define MX_EXIT_VISIT_OMPParallelSectionsDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelSectionsDirective)
  MX_ENTER_VISIT_OMPParallelSectionsDirective
  MX_VISIT_BASE(OMPParallelSectionsDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPParallelSectionsDirective, task_reduction_reference_expression, 14, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPParallelSectionsDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPParallelSectionsDirective
MX_END_VISIT_STMT(OMPParallelSectionsDirective)

#ifndef MX_ENTER_VISIT_OMPParallelMasterDirective
#  define MX_ENTER_VISIT_OMPParallelMasterDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelMasterDirective
#  define MX_EXIT_VISIT_OMPParallelMasterDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelMasterDirective)
  MX_ENTER_VISIT_OMPParallelMasterDirective
  MX_VISIT_BASE(OMPParallelMasterDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPParallelMasterDirective, task_reduction_reference_expression, 14, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_EXIT_VISIT_OMPParallelMasterDirective
MX_END_VISIT_STMT(OMPParallelMasterDirective)

#ifndef MX_ENTER_VISIT_OMPParallelMaskedDirective
#  define MX_ENTER_VISIT_OMPParallelMaskedDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelMaskedDirective
#  define MX_EXIT_VISIT_OMPParallelMaskedDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelMaskedDirective)
  MX_ENTER_VISIT_OMPParallelMaskedDirective
  MX_VISIT_BASE(OMPParallelMaskedDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPParallelMaskedDirective, task_reduction_reference_expression, 14, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_EXIT_VISIT_OMPParallelMaskedDirective
MX_END_VISIT_STMT(OMPParallelMaskedDirective)

#ifndef MX_ENTER_VISIT_OMPParallelDirective
#  define MX_ENTER_VISIT_OMPParallelDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelDirective
#  define MX_EXIT_VISIT_OMPParallelDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelDirective)
  MX_ENTER_VISIT_OMPParallelDirective
  MX_VISIT_BASE(OMPParallelDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPParallelDirective, task_reduction_reference_expression, 14, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPParallelDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPParallelDirective
MX_END_VISIT_STMT(OMPParallelDirective)

#ifndef MX_ENTER_VISIT_OMPOrderedDirective
#  define MX_ENTER_VISIT_OMPOrderedDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPOrderedDirective
#  define MX_EXIT_VISIT_OMPOrderedDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPOrderedDirective)
  MX_ENTER_VISIT_OMPOrderedDirective
  MX_VISIT_BASE(OMPOrderedDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPOrderedDirective
MX_END_VISIT_STMT(OMPOrderedDirective)

#ifndef MX_ENTER_VISIT_OMPMetaDirective
#  define MX_ENTER_VISIT_OMPMetaDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPMetaDirective
#  define MX_EXIT_VISIT_OMPMetaDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPMetaDirective)
  MX_ENTER_VISIT_OMPMetaDirective
  MX_VISIT_BASE(OMPMetaDirective, OMPExecutableDirective)
  MX_VISIT_ENTITY(OMPMetaDirective, if_statement, 14, MX_APPLY_METHOD, IfStatement, Stmt, NthStmt)
  MX_EXIT_VISIT_OMPMetaDirective
MX_END_VISIT_STMT(OMPMetaDirective)

#ifndef MX_ENTER_VISIT_OMPMasterDirective
#  define MX_ENTER_VISIT_OMPMasterDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPMasterDirective
#  define MX_EXIT_VISIT_OMPMasterDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPMasterDirective)
  MX_ENTER_VISIT_OMPMasterDirective
  MX_VISIT_BASE(OMPMasterDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPMasterDirective
MX_END_VISIT_STMT(OMPMasterDirective)

#ifndef MX_ENTER_VISIT_OMPMaskedDirective
#  define MX_ENTER_VISIT_OMPMaskedDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPMaskedDirective
#  define MX_EXIT_VISIT_OMPMaskedDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPMaskedDirective)
  MX_ENTER_VISIT_OMPMaskedDirective
  MX_VISIT_BASE(OMPMaskedDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPMaskedDirective
MX_END_VISIT_STMT(OMPMaskedDirective)

#ifndef MX_ENTER_VISIT_OMPLoopBasedDirective
#  define MX_ENTER_VISIT_OMPLoopBasedDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPLoopBasedDirective
#  define MX_EXIT_VISIT_OMPLoopBasedDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(OMPLoopBasedDirective)
  MX_ENTER_VISIT_OMPLoopBasedDirective
  MX_VISIT_BASE(OMPLoopBasedDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPLoopBasedDirective
MX_END_VISIT_STMT(OMPLoopBasedDirective)

#ifndef MX_ENTER_VISIT_OMPLoopTransformationDirective
#  define MX_ENTER_VISIT_OMPLoopTransformationDirective MX_ENTER_VISIT_OMPLoopBasedDirective
#endif
#ifndef MX_EXIT_VISIT_OMPLoopTransformationDirective
#  define MX_EXIT_VISIT_OMPLoopTransformationDirective MX_EXIT_VISIT_OMPLoopBasedDirective
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(OMPLoopTransformationDirective)
  MX_ENTER_VISIT_OMPLoopTransformationDirective
  MX_VISIT_BASE(OMPLoopTransformationDirective, OMPLoopBasedDirective)
  MX_VISIT_ENTITY(OMPLoopTransformationDirective, pre_initializers, 14, MX_APPLY_METHOD, PreInitializers, Stmt, NthStmt)
  MX_VISIT_ENTITY(OMPLoopTransformationDirective, transformed_statement, 17, MX_APPLY_METHOD, TransformedStatement, Stmt, NthStmt)
  MX_EXIT_VISIT_OMPLoopTransformationDirective
MX_END_VISIT_STMT(OMPLoopTransformationDirective)

#ifndef MX_ENTER_VISIT_OMPUnrollDirective
#  define MX_ENTER_VISIT_OMPUnrollDirective MX_ENTER_VISIT_OMPLoopTransformationDirective
#endif
#ifndef MX_EXIT_VISIT_OMPUnrollDirective
#  define MX_EXIT_VISIT_OMPUnrollDirective MX_EXIT_VISIT_OMPLoopTransformationDirective
#endif

MX_BEGIN_VISIT_STMT(OMPUnrollDirective)
  MX_ENTER_VISIT_OMPUnrollDirective
  MX_VISIT_BASE(OMPUnrollDirective, OMPLoopTransformationDirective)
  MX_EXIT_VISIT_OMPUnrollDirective
MX_END_VISIT_STMT(OMPUnrollDirective)

#ifndef MX_ENTER_VISIT_OMPTileDirective
#  define MX_ENTER_VISIT_OMPTileDirective MX_ENTER_VISIT_OMPLoopTransformationDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTileDirective
#  define MX_EXIT_VISIT_OMPTileDirective MX_EXIT_VISIT_OMPLoopTransformationDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTileDirective)
  MX_ENTER_VISIT_OMPTileDirective
  MX_VISIT_BASE(OMPTileDirective, OMPLoopTransformationDirective)
  MX_EXIT_VISIT_OMPTileDirective
MX_END_VISIT_STMT(OMPTileDirective)

#ifndef MX_ENTER_VISIT_OMPLoopDirective
#  define MX_ENTER_VISIT_OMPLoopDirective MX_ENTER_VISIT_OMPLoopBasedDirective
#endif
#ifndef MX_EXIT_VISIT_OMPLoopDirective
#  define MX_EXIT_VISIT_OMPLoopDirective MX_EXIT_VISIT_OMPLoopBasedDirective
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(OMPLoopDirective)
  MX_ENTER_VISIT_OMPLoopDirective
  MX_VISIT_BASE(OMPLoopDirective, OMPLoopBasedDirective)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, counters, 15, MX_APPLY_METHOD, Counters, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, dependent_counters, 26, MX_APPLY_METHOD, DependentCounters, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, dependent_initializers, 27, MX_APPLY_METHOD, DependentInitializers, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, finals, 28, MX_APPLY_METHOD, Finals, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, finals_conditions, 29, MX_APPLY_METHOD, FinalsConditions, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, body, 14, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, calculate_last_iteration, 17, MX_APPLY_METHOD, CalculateLastIteration, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_condition, 18, MX_APPLY_METHOD, CombinedCondition, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_distance_condition, 19, MX_APPLY_METHOD, CombinedDistanceCondition, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_ensure_upper_bound, 20, MX_APPLY_METHOD, CombinedEnsureUpperBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_initializer, 21, MX_APPLY_METHOD, CombinedInitializer, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_lower_bound_variable, 22, MX_APPLY_METHOD, CombinedLowerBoundVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_next_lower_bound, 30, MX_APPLY_METHOD, CombinedNextLowerBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_next_upper_bound, 31, MX_APPLY_METHOD, CombinedNextUpperBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_parallel_for_in_distance_condition, 32, MX_APPLY_METHOD, CombinedParallelForInDistanceCondition, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, combined_upper_bound_variable, 33, MX_APPLY_METHOD, CombinedUpperBoundVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, condition, 34, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, distance_increment, 35, MX_APPLY_METHOD, DistanceIncrement, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, ensure_upper_bound, 36, MX_APPLY_METHOD, EnsureUpperBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, increment, 37, MX_APPLY_METHOD, Increment, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, initializer, 38, MX_APPLY_METHOD, Initializer, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, is_last_iteration_variable, 39, MX_APPLY_METHOD, IsLastIterationVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, iteration_variable, 40, MX_APPLY_METHOD, IterationVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, last_iteration, 41, MX_APPLY_METHOD, LastIteration, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, lower_bound_variable, 42, MX_APPLY_METHOD, LowerBoundVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, next_lower_bound, 43, MX_APPLY_METHOD, NextLowerBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, next_upper_bound, 44, MX_APPLY_METHOD, NextUpperBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, pre_condition, 45, MX_APPLY_METHOD, PreCondition, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, pre_initializers, 46, MX_APPLY_METHOD, PreInitializers, Stmt, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, prev_ensure_upper_bound, 47, MX_APPLY_METHOD, PrevEnsureUpperBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, prev_lower_bound_variable, 48, MX_APPLY_METHOD, PrevLowerBoundVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, prev_upper_bound_variable, 49, MX_APPLY_METHOD, PrevUpperBoundVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, stride_variable, 50, MX_APPLY_METHOD, StrideVariable, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPLoopDirective, upper_bound_variable, 51, MX_APPLY_METHOD, UpperBoundVariable, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, initializers, 52, MX_APPLY_METHOD, Initializers, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, private_counters, 53, MX_APPLY_METHOD, PrivateCounters, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPLoopDirective, updates, 54, MX_APPLY_METHOD, Updates, Expr, NthStmt)
  MX_EXIT_VISIT_OMPLoopDirective
MX_END_VISIT_STMT(OMPLoopDirective)

#ifndef MX_ENTER_VISIT_OMPGenericLoopDirective
#  define MX_ENTER_VISIT_OMPGenericLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPGenericLoopDirective
#  define MX_EXIT_VISIT_OMPGenericLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPGenericLoopDirective)
  MX_ENTER_VISIT_OMPGenericLoopDirective
  MX_VISIT_BASE(OMPGenericLoopDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPGenericLoopDirective
MX_END_VISIT_STMT(OMPGenericLoopDirective)

#ifndef MX_ENTER_VISIT_OMPForSimdDirective
#  define MX_ENTER_VISIT_OMPForSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPForSimdDirective
#  define MX_EXIT_VISIT_OMPForSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPForSimdDirective)
  MX_ENTER_VISIT_OMPForSimdDirective
  MX_VISIT_BASE(OMPForSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPForSimdDirective
MX_END_VISIT_STMT(OMPForSimdDirective)

#ifndef MX_ENTER_VISIT_OMPForDirective
#  define MX_ENTER_VISIT_OMPForDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPForDirective
#  define MX_EXIT_VISIT_OMPForDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPForDirective)
  MX_ENTER_VISIT_OMPForDirective
  MX_VISIT_BASE(OMPForDirective, OMPLoopDirective)
  MX_VISIT_ENTITY(OMPForDirective, task_reduction_reference_expression, 55, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPForDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPForDirective
MX_END_VISIT_STMT(OMPForDirective)

#ifndef MX_ENTER_VISIT_OMPDistributeSimdDirective
#  define MX_ENTER_VISIT_OMPDistributeSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPDistributeSimdDirective
#  define MX_EXIT_VISIT_OMPDistributeSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPDistributeSimdDirective)
  MX_ENTER_VISIT_OMPDistributeSimdDirective
  MX_VISIT_BASE(OMPDistributeSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPDistributeSimdDirective
MX_END_VISIT_STMT(OMPDistributeSimdDirective)

#ifndef MX_ENTER_VISIT_OMPDistributeParallelForSimdDirective
#  define MX_ENTER_VISIT_OMPDistributeParallelForSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPDistributeParallelForSimdDirective
#  define MX_EXIT_VISIT_OMPDistributeParallelForSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPDistributeParallelForSimdDirective)
  MX_ENTER_VISIT_OMPDistributeParallelForSimdDirective
  MX_VISIT_BASE(OMPDistributeParallelForSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPDistributeParallelForSimdDirective
MX_END_VISIT_STMT(OMPDistributeParallelForSimdDirective)

#ifndef MX_ENTER_VISIT_OMPDistributeParallelForDirective
#  define MX_ENTER_VISIT_OMPDistributeParallelForDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPDistributeParallelForDirective
#  define MX_EXIT_VISIT_OMPDistributeParallelForDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPDistributeParallelForDirective)
  MX_ENTER_VISIT_OMPDistributeParallelForDirective
  MX_VISIT_BASE(OMPDistributeParallelForDirective, OMPLoopDirective)
  MX_VISIT_ENTITY(OMPDistributeParallelForDirective, task_reduction_reference_expression, 55, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPDistributeParallelForDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPDistributeParallelForDirective
MX_END_VISIT_STMT(OMPDistributeParallelForDirective)

#ifndef MX_ENTER_VISIT_OMPDistributeDirective
#  define MX_ENTER_VISIT_OMPDistributeDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPDistributeDirective
#  define MX_EXIT_VISIT_OMPDistributeDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPDistributeDirective)
  MX_ENTER_VISIT_OMPDistributeDirective
  MX_VISIT_BASE(OMPDistributeDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPDistributeDirective
MX_END_VISIT_STMT(OMPDistributeDirective)

#ifndef MX_ENTER_VISIT_OMPTeamsGenericLoopDirective
#  define MX_ENTER_VISIT_OMPTeamsGenericLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTeamsGenericLoopDirective
#  define MX_EXIT_VISIT_OMPTeamsGenericLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTeamsGenericLoopDirective)
  MX_ENTER_VISIT_OMPTeamsGenericLoopDirective
  MX_VISIT_BASE(OMPTeamsGenericLoopDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTeamsGenericLoopDirective
MX_END_VISIT_STMT(OMPTeamsGenericLoopDirective)

#ifndef MX_ENTER_VISIT_OMPTeamsDistributeSimdDirective
#  define MX_ENTER_VISIT_OMPTeamsDistributeSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTeamsDistributeSimdDirective
#  define MX_EXIT_VISIT_OMPTeamsDistributeSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTeamsDistributeSimdDirective)
  MX_ENTER_VISIT_OMPTeamsDistributeSimdDirective
  MX_VISIT_BASE(OMPTeamsDistributeSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTeamsDistributeSimdDirective
MX_END_VISIT_STMT(OMPTeamsDistributeSimdDirective)

#ifndef MX_ENTER_VISIT_OMPTeamsDistributeParallelForSimdDirective
#  define MX_ENTER_VISIT_OMPTeamsDistributeParallelForSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTeamsDistributeParallelForSimdDirective
#  define MX_EXIT_VISIT_OMPTeamsDistributeParallelForSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTeamsDistributeParallelForSimdDirective)
  MX_ENTER_VISIT_OMPTeamsDistributeParallelForSimdDirective
  MX_VISIT_BASE(OMPTeamsDistributeParallelForSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTeamsDistributeParallelForSimdDirective
MX_END_VISIT_STMT(OMPTeamsDistributeParallelForSimdDirective)

#ifndef MX_ENTER_VISIT_OMPTeamsDistributeParallelForDirective
#  define MX_ENTER_VISIT_OMPTeamsDistributeParallelForDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTeamsDistributeParallelForDirective
#  define MX_EXIT_VISIT_OMPTeamsDistributeParallelForDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTeamsDistributeParallelForDirective)
  MX_ENTER_VISIT_OMPTeamsDistributeParallelForDirective
  MX_VISIT_BASE(OMPTeamsDistributeParallelForDirective, OMPLoopDirective)
  MX_VISIT_ENTITY(OMPTeamsDistributeParallelForDirective, task_reduction_reference_expression, 55, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPTeamsDistributeParallelForDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPTeamsDistributeParallelForDirective
MX_END_VISIT_STMT(OMPTeamsDistributeParallelForDirective)

#ifndef MX_ENTER_VISIT_OMPTeamsDistributeDirective
#  define MX_ENTER_VISIT_OMPTeamsDistributeDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTeamsDistributeDirective
#  define MX_EXIT_VISIT_OMPTeamsDistributeDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTeamsDistributeDirective)
  MX_ENTER_VISIT_OMPTeamsDistributeDirective
  MX_VISIT_BASE(OMPTeamsDistributeDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTeamsDistributeDirective
MX_END_VISIT_STMT(OMPTeamsDistributeDirective)

#ifndef MX_ENTER_VISIT_OMPTaskLoopSimdDirective
#  define MX_ENTER_VISIT_OMPTaskLoopSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTaskLoopSimdDirective
#  define MX_EXIT_VISIT_OMPTaskLoopSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTaskLoopSimdDirective)
  MX_ENTER_VISIT_OMPTaskLoopSimdDirective
  MX_VISIT_BASE(OMPTaskLoopSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTaskLoopSimdDirective
MX_END_VISIT_STMT(OMPTaskLoopSimdDirective)

#ifndef MX_ENTER_VISIT_OMPTaskLoopDirective
#  define MX_ENTER_VISIT_OMPTaskLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTaskLoopDirective
#  define MX_EXIT_VISIT_OMPTaskLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTaskLoopDirective)
  MX_ENTER_VISIT_OMPTaskLoopDirective
  MX_VISIT_BASE(OMPTaskLoopDirective, OMPLoopDirective)
  MX_VISIT_BOOL(OMPTaskLoopDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPTaskLoopDirective
MX_END_VISIT_STMT(OMPTaskLoopDirective)

#ifndef MX_ENTER_VISIT_OMPTargetTeamsGenericLoopDirective
#  define MX_ENTER_VISIT_OMPTargetTeamsGenericLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetTeamsGenericLoopDirective
#  define MX_EXIT_VISIT_OMPTargetTeamsGenericLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetTeamsGenericLoopDirective)
  MX_ENTER_VISIT_OMPTargetTeamsGenericLoopDirective
  MX_VISIT_BASE(OMPTargetTeamsGenericLoopDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTargetTeamsGenericLoopDirective
MX_END_VISIT_STMT(OMPTargetTeamsGenericLoopDirective)

#ifndef MX_ENTER_VISIT_OMPTargetTeamsDistributeSimdDirective
#  define MX_ENTER_VISIT_OMPTargetTeamsDistributeSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetTeamsDistributeSimdDirective
#  define MX_EXIT_VISIT_OMPTargetTeamsDistributeSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetTeamsDistributeSimdDirective)
  MX_ENTER_VISIT_OMPTargetTeamsDistributeSimdDirective
  MX_VISIT_BASE(OMPTargetTeamsDistributeSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTargetTeamsDistributeSimdDirective
MX_END_VISIT_STMT(OMPTargetTeamsDistributeSimdDirective)

#ifndef MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective
#  define MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective
#  define MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetTeamsDistributeParallelForSimdDirective)
  MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective
  MX_VISIT_BASE(OMPTargetTeamsDistributeParallelForSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective
MX_END_VISIT_STMT(OMPTargetTeamsDistributeParallelForSimdDirective)

#ifndef MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForDirective
#  define MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForDirective
#  define MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetTeamsDistributeParallelForDirective)
  MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForDirective
  MX_VISIT_BASE(OMPTargetTeamsDistributeParallelForDirective, OMPLoopDirective)
  MX_VISIT_ENTITY(OMPTargetTeamsDistributeParallelForDirective, task_reduction_reference_expression, 55, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPTargetTeamsDistributeParallelForDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForDirective
MX_END_VISIT_STMT(OMPTargetTeamsDistributeParallelForDirective)

#ifndef MX_ENTER_VISIT_OMPTargetTeamsDistributeDirective
#  define MX_ENTER_VISIT_OMPTargetTeamsDistributeDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetTeamsDistributeDirective
#  define MX_EXIT_VISIT_OMPTargetTeamsDistributeDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetTeamsDistributeDirective)
  MX_ENTER_VISIT_OMPTargetTeamsDistributeDirective
  MX_VISIT_BASE(OMPTargetTeamsDistributeDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTargetTeamsDistributeDirective
MX_END_VISIT_STMT(OMPTargetTeamsDistributeDirective)

#ifndef MX_ENTER_VISIT_OMPTargetSimdDirective
#  define MX_ENTER_VISIT_OMPTargetSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetSimdDirective
#  define MX_EXIT_VISIT_OMPTargetSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetSimdDirective)
  MX_ENTER_VISIT_OMPTargetSimdDirective
  MX_VISIT_BASE(OMPTargetSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTargetSimdDirective
MX_END_VISIT_STMT(OMPTargetSimdDirective)

#ifndef MX_ENTER_VISIT_OMPTargetParallelGenericLoopDirective
#  define MX_ENTER_VISIT_OMPTargetParallelGenericLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetParallelGenericLoopDirective
#  define MX_EXIT_VISIT_OMPTargetParallelGenericLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetParallelGenericLoopDirective)
  MX_ENTER_VISIT_OMPTargetParallelGenericLoopDirective
  MX_VISIT_BASE(OMPTargetParallelGenericLoopDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTargetParallelGenericLoopDirective
MX_END_VISIT_STMT(OMPTargetParallelGenericLoopDirective)

#ifndef MX_ENTER_VISIT_OMPTargetParallelForSimdDirective
#  define MX_ENTER_VISIT_OMPTargetParallelForSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetParallelForSimdDirective
#  define MX_EXIT_VISIT_OMPTargetParallelForSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetParallelForSimdDirective)
  MX_ENTER_VISIT_OMPTargetParallelForSimdDirective
  MX_VISIT_BASE(OMPTargetParallelForSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPTargetParallelForSimdDirective
MX_END_VISIT_STMT(OMPTargetParallelForSimdDirective)

#ifndef MX_ENTER_VISIT_OMPTargetParallelForDirective
#  define MX_ENTER_VISIT_OMPTargetParallelForDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPTargetParallelForDirective
#  define MX_EXIT_VISIT_OMPTargetParallelForDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPTargetParallelForDirective)
  MX_ENTER_VISIT_OMPTargetParallelForDirective
  MX_VISIT_BASE(OMPTargetParallelForDirective, OMPLoopDirective)
  MX_VISIT_ENTITY(OMPTargetParallelForDirective, task_reduction_reference_expression, 55, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPTargetParallelForDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPTargetParallelForDirective
MX_END_VISIT_STMT(OMPTargetParallelForDirective)

#ifndef MX_ENTER_VISIT_OMPSimdDirective
#  define MX_ENTER_VISIT_OMPSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPSimdDirective
#  define MX_EXIT_VISIT_OMPSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPSimdDirective)
  MX_ENTER_VISIT_OMPSimdDirective
  MX_VISIT_BASE(OMPSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPSimdDirective
MX_END_VISIT_STMT(OMPSimdDirective)

#ifndef MX_ENTER_VISIT_OMPParallelMasterTaskLoopSimdDirective
#  define MX_ENTER_VISIT_OMPParallelMasterTaskLoopSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelMasterTaskLoopSimdDirective
#  define MX_EXIT_VISIT_OMPParallelMasterTaskLoopSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelMasterTaskLoopSimdDirective)
  MX_ENTER_VISIT_OMPParallelMasterTaskLoopSimdDirective
  MX_VISIT_BASE(OMPParallelMasterTaskLoopSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPParallelMasterTaskLoopSimdDirective
MX_END_VISIT_STMT(OMPParallelMasterTaskLoopSimdDirective)

#ifndef MX_ENTER_VISIT_OMPParallelMasterTaskLoopDirective
#  define MX_ENTER_VISIT_OMPParallelMasterTaskLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelMasterTaskLoopDirective
#  define MX_EXIT_VISIT_OMPParallelMasterTaskLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelMasterTaskLoopDirective)
  MX_ENTER_VISIT_OMPParallelMasterTaskLoopDirective
  MX_VISIT_BASE(OMPParallelMasterTaskLoopDirective, OMPLoopDirective)
  MX_VISIT_BOOL(OMPParallelMasterTaskLoopDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPParallelMasterTaskLoopDirective
MX_END_VISIT_STMT(OMPParallelMasterTaskLoopDirective)

#ifndef MX_ENTER_VISIT_OMPParallelMaskedTaskLoopSimdDirective
#  define MX_ENTER_VISIT_OMPParallelMaskedTaskLoopSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelMaskedTaskLoopSimdDirective
#  define MX_EXIT_VISIT_OMPParallelMaskedTaskLoopSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelMaskedTaskLoopSimdDirective)
  MX_ENTER_VISIT_OMPParallelMaskedTaskLoopSimdDirective
  MX_VISIT_BASE(OMPParallelMaskedTaskLoopSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPParallelMaskedTaskLoopSimdDirective
MX_END_VISIT_STMT(OMPParallelMaskedTaskLoopSimdDirective)

#ifndef MX_ENTER_VISIT_OMPParallelMaskedTaskLoopDirective
#  define MX_ENTER_VISIT_OMPParallelMaskedTaskLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelMaskedTaskLoopDirective
#  define MX_EXIT_VISIT_OMPParallelMaskedTaskLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelMaskedTaskLoopDirective)
  MX_ENTER_VISIT_OMPParallelMaskedTaskLoopDirective
  MX_VISIT_BASE(OMPParallelMaskedTaskLoopDirective, OMPLoopDirective)
  MX_VISIT_BOOL(OMPParallelMaskedTaskLoopDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPParallelMaskedTaskLoopDirective
MX_END_VISIT_STMT(OMPParallelMaskedTaskLoopDirective)

#ifndef MX_ENTER_VISIT_OMPParallelGenericLoopDirective
#  define MX_ENTER_VISIT_OMPParallelGenericLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelGenericLoopDirective
#  define MX_EXIT_VISIT_OMPParallelGenericLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelGenericLoopDirective)
  MX_ENTER_VISIT_OMPParallelGenericLoopDirective
  MX_VISIT_BASE(OMPParallelGenericLoopDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPParallelGenericLoopDirective
MX_END_VISIT_STMT(OMPParallelGenericLoopDirective)

#ifndef MX_ENTER_VISIT_OMPParallelForSimdDirective
#  define MX_ENTER_VISIT_OMPParallelForSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelForSimdDirective
#  define MX_EXIT_VISIT_OMPParallelForSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelForSimdDirective)
  MX_ENTER_VISIT_OMPParallelForSimdDirective
  MX_VISIT_BASE(OMPParallelForSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPParallelForSimdDirective
MX_END_VISIT_STMT(OMPParallelForSimdDirective)

#ifndef MX_ENTER_VISIT_OMPParallelForDirective
#  define MX_ENTER_VISIT_OMPParallelForDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPParallelForDirective
#  define MX_EXIT_VISIT_OMPParallelForDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPParallelForDirective)
  MX_ENTER_VISIT_OMPParallelForDirective
  MX_VISIT_BASE(OMPParallelForDirective, OMPLoopDirective)
  MX_VISIT_ENTITY(OMPParallelForDirective, task_reduction_reference_expression, 55, MX_APPLY_METHOD, TaskReductionReferenceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OMPParallelForDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPParallelForDirective
MX_END_VISIT_STMT(OMPParallelForDirective)

#ifndef MX_ENTER_VISIT_OMPMasterTaskLoopSimdDirective
#  define MX_ENTER_VISIT_OMPMasterTaskLoopSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPMasterTaskLoopSimdDirective
#  define MX_EXIT_VISIT_OMPMasterTaskLoopSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPMasterTaskLoopSimdDirective)
  MX_ENTER_VISIT_OMPMasterTaskLoopSimdDirective
  MX_VISIT_BASE(OMPMasterTaskLoopSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPMasterTaskLoopSimdDirective
MX_END_VISIT_STMT(OMPMasterTaskLoopSimdDirective)

#ifndef MX_ENTER_VISIT_OMPMasterTaskLoopDirective
#  define MX_ENTER_VISIT_OMPMasterTaskLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPMasterTaskLoopDirective
#  define MX_EXIT_VISIT_OMPMasterTaskLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPMasterTaskLoopDirective)
  MX_ENTER_VISIT_OMPMasterTaskLoopDirective
  MX_VISIT_BASE(OMPMasterTaskLoopDirective, OMPLoopDirective)
  MX_VISIT_BOOL(OMPMasterTaskLoopDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPMasterTaskLoopDirective
MX_END_VISIT_STMT(OMPMasterTaskLoopDirective)

#ifndef MX_ENTER_VISIT_OMPMaskedTaskLoopSimdDirective
#  define MX_ENTER_VISIT_OMPMaskedTaskLoopSimdDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPMaskedTaskLoopSimdDirective
#  define MX_EXIT_VISIT_OMPMaskedTaskLoopSimdDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPMaskedTaskLoopSimdDirective)
  MX_ENTER_VISIT_OMPMaskedTaskLoopSimdDirective
  MX_VISIT_BASE(OMPMaskedTaskLoopSimdDirective, OMPLoopDirective)
  MX_EXIT_VISIT_OMPMaskedTaskLoopSimdDirective
MX_END_VISIT_STMT(OMPMaskedTaskLoopSimdDirective)

#ifndef MX_ENTER_VISIT_OMPMaskedTaskLoopDirective
#  define MX_ENTER_VISIT_OMPMaskedTaskLoopDirective MX_ENTER_VISIT_OMPLoopDirective
#endif
#ifndef MX_EXIT_VISIT_OMPMaskedTaskLoopDirective
#  define MX_EXIT_VISIT_OMPMaskedTaskLoopDirective MX_EXIT_VISIT_OMPLoopDirective
#endif

MX_BEGIN_VISIT_STMT(OMPMaskedTaskLoopDirective)
  MX_ENTER_VISIT_OMPMaskedTaskLoopDirective
  MX_VISIT_BASE(OMPMaskedTaskLoopDirective, OMPLoopDirective)
  MX_VISIT_BOOL(OMPMaskedTaskLoopDirective, has_cancel, 23, MX_APPLY_METHOD, HasCancel, bool, NthStmt)
  MX_EXIT_VISIT_OMPMaskedTaskLoopDirective
MX_END_VISIT_STMT(OMPMaskedTaskLoopDirective)

#ifndef MX_ENTER_VISIT_OMPInteropDirective
#  define MX_ENTER_VISIT_OMPInteropDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPInteropDirective
#  define MX_EXIT_VISIT_OMPInteropDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPInteropDirective)
  MX_ENTER_VISIT_OMPInteropDirective
  MX_VISIT_BASE(OMPInteropDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPInteropDirective
MX_END_VISIT_STMT(OMPInteropDirective)

#ifndef MX_ENTER_VISIT_OMPFlushDirective
#  define MX_ENTER_VISIT_OMPFlushDirective MX_ENTER_VISIT_OMPExecutableDirective
#endif
#ifndef MX_EXIT_VISIT_OMPFlushDirective
#  define MX_EXIT_VISIT_OMPFlushDirective MX_EXIT_VISIT_OMPExecutableDirective
#endif

MX_BEGIN_VISIT_STMT(OMPFlushDirective)
  MX_ENTER_VISIT_OMPFlushDirective
  MX_VISIT_BASE(OMPFlushDirective, OMPExecutableDirective)
  MX_EXIT_VISIT_OMPFlushDirective
MX_END_VISIT_STMT(OMPFlushDirective)

#ifndef MX_ENTER_VISIT_OMPCanonicalLoop
#  define MX_ENTER_VISIT_OMPCanonicalLoop MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_OMPCanonicalLoop
#  define MX_EXIT_VISIT_OMPCanonicalLoop MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(OMPCanonicalLoop)
  MX_ENTER_VISIT_OMPCanonicalLoop
  MX_VISIT_BASE(OMPCanonicalLoop, Stmt)
  MX_VISIT_ENTITY(OMPCanonicalLoop, distance_func, 9, MX_APPLY_METHOD, DistanceFunc, CapturedStmt, NthStmt)
  MX_VISIT_ENTITY(OMPCanonicalLoop, loop_statement, 10, MX_APPLY_METHOD, LoopStatement, Stmt, NthStmt)
  MX_VISIT_ENTITY(OMPCanonicalLoop, loop_variable_func, 11, MX_APPLY_METHOD, LoopVariableFunc, CapturedStmt, NthStmt)
  MX_VISIT_ENTITY(OMPCanonicalLoop, loop_variable_reference, 13, MX_APPLY_METHOD, LoopVariableReference, DeclRefExpr, NthStmt)
  MX_EXIT_VISIT_OMPCanonicalLoop
MX_END_VISIT_STMT(OMPCanonicalLoop)

#ifndef MX_ENTER_VISIT_NullStmt
#  define MX_ENTER_VISIT_NullStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_NullStmt
#  define MX_EXIT_VISIT_NullStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(NullStmt)
  MX_ENTER_VISIT_NullStmt
  MX_VISIT_BASE(NullStmt, Stmt)
  MX_VISIT_ENTITY(NullStmt, semi_token, 9, MX_APPLY_METHOD, SemiToken, Token, NthStmt)
  MX_VISIT_BOOL(NullStmt, has_leading_empty_macro, 12, MX_APPLY_METHOD, HasLeadingEmptyMacro, bool, NthStmt)
  MX_EXIT_VISIT_NullStmt
MX_END_VISIT_STMT(NullStmt)

#ifndef MX_ENTER_VISIT_MSDependentExistsStmt
#  define MX_ENTER_VISIT_MSDependentExistsStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_MSDependentExistsStmt
#  define MX_EXIT_VISIT_MSDependentExistsStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(MSDependentExistsStmt)
  MX_ENTER_VISIT_MSDependentExistsStmt
  MX_VISIT_BASE(MSDependentExistsStmt, Stmt)
  MX_VISIT_ENTITY(MSDependentExistsStmt, keyword_token, 9, MX_APPLY_METHOD, KeywordToken, Token, NthStmt)
  MX_VISIT_ENTITY(MSDependentExistsStmt, sub_statement, 10, MX_APPLY_METHOD, SubStatement, CompoundStmt, NthStmt)
  MX_VISIT_BOOL(MSDependentExistsStmt, is_if_exists, 12, MX_APPLY_METHOD, IsIfExists, bool, NthStmt)
  MX_VISIT_BOOL(MSDependentExistsStmt, is_if_not_exists, 16, MX_APPLY_METHOD, IsIfNotExists, bool, NthStmt)
  MX_EXIT_VISIT_MSDependentExistsStmt
MX_END_VISIT_STMT(MSDependentExistsStmt)

#ifndef MX_ENTER_VISIT_IndirectGotoStmt
#  define MX_ENTER_VISIT_IndirectGotoStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_IndirectGotoStmt
#  define MX_EXIT_VISIT_IndirectGotoStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(IndirectGotoStmt)
  MX_ENTER_VISIT_IndirectGotoStmt
  MX_VISIT_BASE(IndirectGotoStmt, Stmt)
  MX_VISIT_OPTIONAL_ENTITY(IndirectGotoStmt, constant_target, 9, MX_APPLY_METHOD, ConstantTarget, LabelDecl, NthStmt)
  MX_VISIT_ENTITY(IndirectGotoStmt, goto_token, 10, MX_APPLY_METHOD, GotoToken, Token, NthStmt)
  MX_VISIT_ENTITY(IndirectGotoStmt, star_token, 11, MX_APPLY_METHOD, StarToken, Token, NthStmt)
  MX_VISIT_ENTITY(IndirectGotoStmt, target, 13, MX_APPLY_METHOD, Target, Expr, NthStmt)
  MX_EXIT_VISIT_IndirectGotoStmt
MX_END_VISIT_STMT(IndirectGotoStmt)

#ifndef MX_ENTER_VISIT_IfStmt
#  define MX_ENTER_VISIT_IfStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_IfStmt
#  define MX_EXIT_VISIT_IfStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(IfStmt)
  MX_ENTER_VISIT_IfStmt
  MX_VISIT_BASE(IfStmt, Stmt)
  MX_VISIT_ENTITY(IfStmt, condition, 9, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(IfStmt, condition_variable, 10, MX_APPLY_METHOD, ConditionVariable, VarDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(IfStmt, condition_variable_declaration_statement, 11, MX_APPLY_METHOD, ConditionVariableDeclarationStatement, DeclStmt, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(IfStmt, else_, 13, MX_APPLY_METHOD, Else, Stmt, NthStmt)
  MX_VISIT_ENTITY(IfStmt, else_token, 14, MX_APPLY_METHOD, ElseToken, Token, NthStmt)
  MX_VISIT_ENTITY(IfStmt, if_token, 17, MX_APPLY_METHOD, IfToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(IfStmt, initializer, 18, MX_APPLY_METHOD, Initializer, Stmt, NthStmt)
  MX_VISIT_ENTITY(IfStmt, l_paren_token, 19, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(IfStmt, nondiscarded_case, 20, MX_APPLY_METHOD, NondiscardedCase, Stmt, NthStmt)
  MX_VISIT_ENTITY(IfStmt, r_paren_token, 21, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENUM(IfStmt, statement_kind, 56, MX_APPLY_METHOD, StatementKind, IfStatementKind, NthStmt)
  MX_VISIT_ENTITY(IfStmt, then, 22, MX_APPLY_METHOD, Then, Stmt, NthStmt)
  MX_VISIT_BOOL(IfStmt, has_else_storage, 12, MX_APPLY_METHOD, HasElseStorage, bool, NthStmt)
  MX_VISIT_BOOL(IfStmt, has_initializer_storage, 16, MX_APPLY_METHOD, HasInitializerStorage, bool, NthStmt)
  MX_VISIT_BOOL(IfStmt, has_variable_storage, 23, MX_APPLY_METHOD, HasVariableStorage, bool, NthStmt)
  MX_VISIT_BOOL(IfStmt, is_consteval, 24, MX_APPLY_METHOD, IsConsteval, bool, NthStmt)
  MX_VISIT_BOOL(IfStmt, is_constexpr, 25, MX_APPLY_METHOD, IsConstexpr, bool, NthStmt)
  MX_VISIT_BOOL(IfStmt, is_negated_consteval, 57, MX_APPLY_METHOD, IsNegatedConsteval, bool, NthStmt)
  MX_VISIT_BOOL(IfStmt, is_non_negated_consteval, 58, MX_APPLY_METHOD, IsNonNegatedConsteval, bool, NthStmt)
  MX_VISIT_BOOL(IfStmt, is_obj_c_availability_check, 59, MX_APPLY_METHOD, IsObjCAvailabilityCheck, bool, NthStmt)
  MX_EXIT_VISIT_IfStmt
MX_END_VISIT_STMT(IfStmt)

#ifndef MX_ENTER_VISIT_GotoStmt
#  define MX_ENTER_VISIT_GotoStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_GotoStmt
#  define MX_EXIT_VISIT_GotoStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(GotoStmt)
  MX_ENTER_VISIT_GotoStmt
  MX_VISIT_BASE(GotoStmt, Stmt)
  MX_VISIT_ENTITY(GotoStmt, goto_token, 9, MX_APPLY_METHOD, GotoToken, Token, NthStmt)
  MX_VISIT_ENTITY(GotoStmt, label, 10, MX_APPLY_METHOD, Label, LabelDecl, NthStmt)
  MX_VISIT_ENTITY(GotoStmt, label_token, 11, MX_APPLY_METHOD, LabelToken, Token, NthStmt)
  MX_EXIT_VISIT_GotoStmt
MX_END_VISIT_STMT(GotoStmt)

#ifndef MX_ENTER_VISIT_ForStmt
#  define MX_ENTER_VISIT_ForStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ForStmt
#  define MX_EXIT_VISIT_ForStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ForStmt)
  MX_ENTER_VISIT_ForStmt
  MX_VISIT_BASE(ForStmt, Stmt)
  MX_VISIT_ENTITY(ForStmt, body, 9, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(ForStmt, condition, 10, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(ForStmt, condition_variable, 11, MX_APPLY_METHOD, ConditionVariable, VarDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(ForStmt, condition_variable_declaration_statement, 13, MX_APPLY_METHOD, ConditionVariableDeclarationStatement, DeclStmt, NthStmt)
  MX_VISIT_ENTITY(ForStmt, for_token, 14, MX_APPLY_METHOD, ForToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(ForStmt, increment, 17, MX_APPLY_METHOD, Increment, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(ForStmt, initializer, 18, MX_APPLY_METHOD, Initializer, Stmt, NthStmt)
  MX_VISIT_ENTITY(ForStmt, l_paren_token, 19, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(ForStmt, r_paren_token, 20, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_ForStmt
MX_END_VISIT_STMT(ForStmt)

#ifndef MX_ENTER_VISIT_DoStmt
#  define MX_ENTER_VISIT_DoStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_DoStmt
#  define MX_EXIT_VISIT_DoStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(DoStmt)
  MX_ENTER_VISIT_DoStmt
  MX_VISIT_BASE(DoStmt, Stmt)
  MX_VISIT_ENTITY(DoStmt, body, 9, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(DoStmt, condition, 10, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_ENTITY(DoStmt, do_token, 11, MX_APPLY_METHOD, DoToken, Token, NthStmt)
  MX_VISIT_ENTITY(DoStmt, r_paren_token, 13, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(DoStmt, while_token, 14, MX_APPLY_METHOD, WhileToken, Token, NthStmt)
  MX_EXIT_VISIT_DoStmt
MX_END_VISIT_STMT(DoStmt)

#ifndef MX_ENTER_VISIT_DeclStmt
#  define MX_ENTER_VISIT_DeclStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_DeclStmt
#  define MX_EXIT_VISIT_DeclStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(DeclStmt)
  MX_ENTER_VISIT_DeclStmt
  MX_VISIT_BASE(DeclStmt, Stmt)
  MX_VISIT_ENTITY_LIST(DeclStmt, declarations, 15, MX_APPLY_METHOD, Declarations, Decl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(DeclStmt, single_declaration, 9, MX_APPLY_METHOD, SingleDeclaration, Decl, NthStmt)
  MX_VISIT_BOOL(DeclStmt, is_single_declaration, 12, MX_APPLY_METHOD, IsSingleDeclaration, bool, NthStmt)
  MX_EXIT_VISIT_DeclStmt
MX_END_VISIT_STMT(DeclStmt)

#ifndef MX_ENTER_VISIT_CoroutineBodyStmt
#  define MX_ENTER_VISIT_CoroutineBodyStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_CoroutineBodyStmt
#  define MX_EXIT_VISIT_CoroutineBodyStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(CoroutineBodyStmt)
  MX_ENTER_VISIT_CoroutineBodyStmt
  MX_VISIT_BASE(CoroutineBodyStmt, Stmt)
  MX_VISIT_ENTITY_LIST(CoroutineBodyStmt, children_excl_body, 15, MX_APPLY_METHOD, ChildrenExclBody, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, allocate, 9, MX_APPLY_METHOD, Allocate, Expr, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, body, 10, MX_APPLY_METHOD, Body, CompoundStmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, deallocate, 11, MX_APPLY_METHOD, Deallocate, Expr, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, exception_handler, 13, MX_APPLY_METHOD, ExceptionHandler, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, fallthrough_handler, 14, MX_APPLY_METHOD, FallthroughHandler, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, final_suspend_statement, 17, MX_APPLY_METHOD, FinalSuspendStatement, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, initializer_suspend_statement, 18, MX_APPLY_METHOD, InitializerSuspendStatement, Stmt, NthStmt)
  MX_VISIT_ENTITY_LIST(CoroutineBodyStmt, parameter_moves, 26, MX_APPLY_METHOD, ParameterMoves, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, promise_declaration, 19, MX_APPLY_METHOD, PromiseDeclaration, VarDecl, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, promise_declaration_statement, 20, MX_APPLY_METHOD, PromiseDeclarationStatement, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, result_declaration, 21, MX_APPLY_METHOD, ResultDeclaration, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, return_statement, 22, MX_APPLY_METHOD, ReturnStatement, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, return_statement_on_alloc_failure, 30, MX_APPLY_METHOD, ReturnStatementOnAllocFailure, Stmt, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, return_value, 31, MX_APPLY_METHOD, ReturnValue, Expr, NthStmt)
  MX_VISIT_ENTITY(CoroutineBodyStmt, return_value_initializer, 32, MX_APPLY_METHOD, ReturnValueInitializer, Expr, NthStmt)
  MX_VISIT_BOOL(CoroutineBodyStmt, has_dependent_promise_type, 12, MX_APPLY_METHOD, HasDependentPromiseType, bool, NthStmt)
  MX_EXIT_VISIT_CoroutineBodyStmt
MX_END_VISIT_STMT(CoroutineBodyStmt)

#ifndef MX_ENTER_VISIT_CoreturnStmt
#  define MX_ENTER_VISIT_CoreturnStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_CoreturnStmt
#  define MX_EXIT_VISIT_CoreturnStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(CoreturnStmt)
  MX_ENTER_VISIT_CoreturnStmt
  MX_VISIT_BASE(CoreturnStmt, Stmt)
  MX_VISIT_ENTITY(CoreturnStmt, keyword_token, 9, MX_APPLY_METHOD, KeywordToken, Token, NthStmt)
  MX_VISIT_ENTITY(CoreturnStmt, operand, 10, MX_APPLY_METHOD, Operand, Expr, NthStmt)
  MX_VISIT_ENTITY(CoreturnStmt, promise_call, 11, MX_APPLY_METHOD, PromiseCall, Expr, NthStmt)
  MX_VISIT_BOOL(CoreturnStmt, is_implicit, 12, MX_APPLY_METHOD, IsImplicit, bool, NthStmt)
  MX_EXIT_VISIT_CoreturnStmt
MX_END_VISIT_STMT(CoreturnStmt)

#ifndef MX_ENTER_VISIT_ContinueStmt
#  define MX_ENTER_VISIT_ContinueStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ContinueStmt
#  define MX_EXIT_VISIT_ContinueStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(ContinueStmt)
  MX_ENTER_VISIT_ContinueStmt
  MX_VISIT_BASE(ContinueStmt, Stmt)
  MX_VISIT_ENTITY(ContinueStmt, continue_token, 9, MX_APPLY_METHOD, ContinueToken, Token, NthStmt)
  MX_EXIT_VISIT_ContinueStmt
MX_END_VISIT_STMT(ContinueStmt)

#ifndef MX_ENTER_VISIT_CompoundStmt
#  define MX_ENTER_VISIT_CompoundStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_CompoundStmt
#  define MX_EXIT_VISIT_CompoundStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(CompoundStmt)
  MX_ENTER_VISIT_CompoundStmt
  MX_VISIT_BASE(CompoundStmt, Stmt)
  MX_VISIT_ENTITY(CompoundStmt, left_brace_token, 9, MX_APPLY_METHOD, LeftBraceToken, Token, NthStmt)
  MX_VISIT_ENTITY(CompoundStmt, right_brace_token, 10, MX_APPLY_METHOD, RightBraceToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CompoundStmt, statement_expression_result, 11, MX_APPLY_METHOD, StatementExpressionResult, Stmt, NthStmt)
  MX_VISIT_BOOL(CompoundStmt, has_stored_fp_features, 12, MX_APPLY_METHOD, HasStoredFPFeatures, bool, NthStmt)
  MX_EXIT_VISIT_CompoundStmt
MX_END_VISIT_STMT(CompoundStmt)

#ifndef MX_ENTER_VISIT_CapturedStmt
#  define MX_ENTER_VISIT_CapturedStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_CapturedStmt
#  define MX_EXIT_VISIT_CapturedStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(CapturedStmt)
  MX_ENTER_VISIT_CapturedStmt
  MX_VISIT_BASE(CapturedStmt, Stmt)
  MX_VISIT_ENTITY(CapturedStmt, captured_declaration, 9, MX_APPLY_METHOD, CapturedDeclaration, CapturedDecl, NthStmt)
  MX_VISIT_ENTITY(CapturedStmt, captured_record_declaration, 10, MX_APPLY_METHOD, CapturedRecordDeclaration, RecordDecl, NthStmt)
  MX_VISIT_ENUM(CapturedStmt, captured_region_kind, 56, MX_APPLY_METHOD, CapturedRegionKind, CapturedRegionKind, NthStmt)
  MX_VISIT_ENTITY(CapturedStmt, captured_statement, 11, MX_APPLY_METHOD, CapturedStatement, Stmt, NthStmt)
  MX_EXIT_VISIT_CapturedStmt
MX_END_VISIT_STMT(CapturedStmt)

#ifndef MX_ENTER_VISIT_CXXTryStmt
#  define MX_ENTER_VISIT_CXXTryStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_CXXTryStmt
#  define MX_EXIT_VISIT_CXXTryStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(CXXTryStmt)
  MX_ENTER_VISIT_CXXTryStmt
  MX_VISIT_BASE(CXXTryStmt, Stmt)
  MX_VISIT_ENTITY(CXXTryStmt, try_block, 9, MX_APPLY_METHOD, TryBlock, CompoundStmt, NthStmt)
  MX_VISIT_ENTITY(CXXTryStmt, try_token, 10, MX_APPLY_METHOD, TryToken, Token, NthStmt)
  MX_VISIT_ENTITY_LIST(CXXTryStmt, handlers, 15, MX_APPLY_METHOD, Handlers, CXXCatchStmt, NthStmt)
  MX_EXIT_VISIT_CXXTryStmt
MX_END_VISIT_STMT(CXXTryStmt)

#ifndef MX_ENTER_VISIT_CXXForRangeStmt
#  define MX_ENTER_VISIT_CXXForRangeStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_CXXForRangeStmt
#  define MX_EXIT_VISIT_CXXForRangeStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(CXXForRangeStmt)
  MX_ENTER_VISIT_CXXForRangeStmt
  MX_VISIT_BASE(CXXForRangeStmt, Stmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXForRangeStmt, begin_statement, 9, MX_APPLY_METHOD, BeginStatement, DeclStmt, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, body, 10, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, coawait_token, 11, MX_APPLY_METHOD, CoawaitToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, colon_token, 13, MX_APPLY_METHOD, ColonToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXForRangeStmt, condition, 14, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXForRangeStmt, end_statement, 17, MX_APPLY_METHOD, EndStatement, DeclStmt, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, for_token, 18, MX_APPLY_METHOD, ForToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, increment, 19, MX_APPLY_METHOD, Increment, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXForRangeStmt, initializer, 20, MX_APPLY_METHOD, Initializer, Stmt, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, loop_variable_statement, 21, MX_APPLY_METHOD, LoopVariableStatement, DeclStmt, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, loop_variable, 22, MX_APPLY_METHOD, LoopVariable, VarDecl, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, r_paren_token, 30, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, range_initializer, 31, MX_APPLY_METHOD, RangeInitializer, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXForRangeStmt, range_statement, 32, MX_APPLY_METHOD, RangeStatement, DeclStmt, NthStmt)
  MX_EXIT_VISIT_CXXForRangeStmt
MX_END_VISIT_STMT(CXXForRangeStmt)

#ifndef MX_ENTER_VISIT_CXXCatchStmt
#  define MX_ENTER_VISIT_CXXCatchStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_CXXCatchStmt
#  define MX_EXIT_VISIT_CXXCatchStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(CXXCatchStmt)
  MX_ENTER_VISIT_CXXCatchStmt
  MX_VISIT_BASE(CXXCatchStmt, Stmt)
  MX_VISIT_ENTITY(CXXCatchStmt, catch_token, 9, MX_APPLY_METHOD, CatchToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXCatchStmt, caught_type, 10, MX_APPLY_METHOD, CaughtType, Type, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXCatchStmt, exception_declaration, 11, MX_APPLY_METHOD, ExceptionDeclaration, VarDecl, NthStmt)
  MX_VISIT_ENTITY(CXXCatchStmt, handler_block, 13, MX_APPLY_METHOD, HandlerBlock, Stmt, NthStmt)
  MX_EXIT_VISIT_CXXCatchStmt
MX_END_VISIT_STMT(CXXCatchStmt)

#ifndef MX_ENTER_VISIT_BreakStmt
#  define MX_ENTER_VISIT_BreakStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_BreakStmt
#  define MX_EXIT_VISIT_BreakStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(BreakStmt)
  MX_ENTER_VISIT_BreakStmt
  MX_VISIT_BASE(BreakStmt, Stmt)
  MX_VISIT_ENTITY(BreakStmt, break_token, 9, MX_APPLY_METHOD, BreakToken, Token, NthStmt)
  MX_EXIT_VISIT_BreakStmt
MX_END_VISIT_STMT(BreakStmt)

#ifndef MX_ENTER_VISIT_AsmStmt
#  define MX_ENTER_VISIT_AsmStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_AsmStmt
#  define MX_EXIT_VISIT_AsmStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(AsmStmt)
  MX_ENTER_VISIT_AsmStmt
  MX_VISIT_BASE(AsmStmt, Stmt)
  MX_VISIT_TEXT(AsmStmt, generate_assembly_string, 60, MX_APPLY_METHOD, GenerateAssemblyString, basic_string, NthStmt)
  MX_VISIT_ENTITY(AsmStmt, assembly_token, 9, MX_APPLY_METHOD, AssemblyToken, Token, NthStmt)
  MX_VISIT_ENTITY_LIST(AsmStmt, inputs, 15, MX_APPLY_METHOD, Inputs, Expr, NthStmt)
  MX_VISIT_BOOL(AsmStmt, is_simple, 12, MX_APPLY_METHOD, IsSimple, bool, NthStmt)
  MX_VISIT_BOOL(AsmStmt, is_volatile, 16, MX_APPLY_METHOD, IsVolatile, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(AsmStmt, outputs, 26, MX_APPLY_METHOD, Outputs, Expr, NthStmt)
  MX_VISIT_TEXT_LIST(AsmStmt, output_constraints, 61, MX_APPLY_METHOD, OutputConstraints, basic_string_view, NthStmt)
  MX_VISIT_ENTITY_LIST(AsmStmt, output_expressions, 27, MX_APPLY_METHOD, OutputExpressions, Expr, NthStmt)
  MX_VISIT_TEXT_LIST(AsmStmt, input_constraints, 62, MX_APPLY_METHOD, InputConstraints, basic_string_view, NthStmt)
  MX_VISIT_ENTITY_LIST(AsmStmt, input_expressions, 28, MX_APPLY_METHOD, InputExpressions, Expr, NthStmt)
  MX_VISIT_TEXT_LIST(AsmStmt, clobbers, 63, MX_APPLY_METHOD, Clobbers, basic_string_view, NthStmt)
  MX_EXIT_VISIT_AsmStmt
MX_END_VISIT_STMT(AsmStmt)

#ifndef MX_ENTER_VISIT_MSAsmStmt
#  define MX_ENTER_VISIT_MSAsmStmt MX_ENTER_VISIT_AsmStmt
#endif
#ifndef MX_EXIT_VISIT_MSAsmStmt
#  define MX_EXIT_VISIT_MSAsmStmt MX_EXIT_VISIT_AsmStmt
#endif

MX_BEGIN_VISIT_STMT(MSAsmStmt)
  MX_ENTER_VISIT_MSAsmStmt
  MX_VISIT_BASE(MSAsmStmt, AsmStmt)
  MX_VISIT_TEXT_LIST(MSAsmStmt, all_constraints, 64, MX_APPLY_METHOD, AllConstraints, basic_string_view, NthStmt)
  MX_VISIT_ENTITY_LIST(MSAsmStmt, all_expressions, 29, MX_APPLY_METHOD, AllExpressions, Expr, NthStmt)
  MX_VISIT_TEXT(MSAsmStmt, assembly_string, 65, MX_APPLY_METHOD, AssemblyString, basic_string_view, NthStmt)
  MX_VISIT_ENTITY(MSAsmStmt, l_brace_token, 10, MX_APPLY_METHOD, LBraceToken, Token, NthStmt)
  MX_VISIT_BOOL(MSAsmStmt, has_braces, 23, MX_APPLY_METHOD, HasBraces, bool, NthStmt)
  MX_EXIT_VISIT_MSAsmStmt
MX_END_VISIT_STMT(MSAsmStmt)

#ifndef MX_ENTER_VISIT_GCCAsmStmt
#  define MX_ENTER_VISIT_GCCAsmStmt MX_ENTER_VISIT_AsmStmt
#endif
#ifndef MX_EXIT_VISIT_GCCAsmStmt
#  define MX_EXIT_VISIT_GCCAsmStmt MX_EXIT_VISIT_AsmStmt
#endif

MX_BEGIN_VISIT_STMT(GCCAsmStmt)
  MX_ENTER_VISIT_GCCAsmStmt
  MX_VISIT_BASE(GCCAsmStmt, AsmStmt)
  MX_VISIT_ENTITY(GCCAsmStmt, assembly_string, 10, MX_APPLY_METHOD, AssemblyString, StringLiteral, NthStmt)
  MX_VISIT_ENTITY(GCCAsmStmt, r_paren_token, 11, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_BOOL(GCCAsmStmt, is_assembly_goto, 23, MX_APPLY_METHOD, IsAssemblyGoto, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(GCCAsmStmt, labels, 29, MX_APPLY_METHOD, Labels, AddrLabelExpr, NthStmt)
  MX_VISIT_ENTITY_LIST(GCCAsmStmt, clobber_string_literals, 52, MX_APPLY_METHOD, ClobberStringLiterals, StringLiteral, NthStmt)
  MX_VISIT_TEXT_LIST(GCCAsmStmt, output_names, 64, MX_APPLY_METHOD, OutputNames, basic_string_view, NthStmt)
  MX_VISIT_ENTITY_LIST(GCCAsmStmt, output_constraint_literals, 53, MX_APPLY_METHOD, OutputConstraintLiterals, StringLiteral, NthStmt)
  MX_VISIT_TEXT_LIST(GCCAsmStmt, input_names, 66, MX_APPLY_METHOD, InputNames, basic_string_view, NthStmt)
  MX_VISIT_ENTITY_LIST(GCCAsmStmt, input_constraint_literals, 54, MX_APPLY_METHOD, InputConstraintLiterals, StringLiteral, NthStmt)
  MX_VISIT_ENTITY_LIST(GCCAsmStmt, label_expressions, 67, MX_APPLY_METHOD, LabelExpressions, AddrLabelExpr, NthStmt)
  MX_VISIT_TEXT_LIST(GCCAsmStmt, label_names, 68, MX_APPLY_METHOD, LabelNames, basic_string_view, NthStmt)
  MX_EXIT_VISIT_GCCAsmStmt
MX_END_VISIT_STMT(GCCAsmStmt)

#ifndef MX_ENTER_VISIT_WhileStmt
#  define MX_ENTER_VISIT_WhileStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_WhileStmt
#  define MX_EXIT_VISIT_WhileStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(WhileStmt)
  MX_ENTER_VISIT_WhileStmt
  MX_VISIT_BASE(WhileStmt, Stmt)
  MX_VISIT_ENTITY(WhileStmt, body, 9, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(WhileStmt, condition, 10, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(WhileStmt, condition_variable, 11, MX_APPLY_METHOD, ConditionVariable, VarDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(WhileStmt, condition_variable_declaration_statement, 13, MX_APPLY_METHOD, ConditionVariableDeclarationStatement, DeclStmt, NthStmt)
  MX_VISIT_ENTITY(WhileStmt, l_paren_token, 14, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(WhileStmt, r_paren_token, 17, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(WhileStmt, while_token, 18, MX_APPLY_METHOD, WhileToken, Token, NthStmt)
  MX_VISIT_BOOL(WhileStmt, has_variable_storage, 12, MX_APPLY_METHOD, HasVariableStorage, bool, NthStmt)
  MX_EXIT_VISIT_WhileStmt
MX_END_VISIT_STMT(WhileStmt)

#ifndef MX_ENTER_VISIT_ValueStmt
#  define MX_ENTER_VISIT_ValueStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_ValueStmt
#  define MX_EXIT_VISIT_ValueStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(ValueStmt)
  MX_ENTER_VISIT_ValueStmt
  MX_VISIT_BASE(ValueStmt, Stmt)
  MX_VISIT_OPTIONAL_ENTITY(ValueStmt, expression_statement, 9, MX_APPLY_METHOD, ExpressionStatement, Expr, NthStmt)
  MX_EXIT_VISIT_ValueStmt
MX_END_VISIT_STMT(ValueStmt)

#ifndef MX_ENTER_VISIT_LabelStmt
#  define MX_ENTER_VISIT_LabelStmt MX_ENTER_VISIT_ValueStmt
#endif
#ifndef MX_EXIT_VISIT_LabelStmt
#  define MX_EXIT_VISIT_LabelStmt MX_EXIT_VISIT_ValueStmt
#endif

MX_BEGIN_VISIT_STMT(LabelStmt)
  MX_ENTER_VISIT_LabelStmt
  MX_VISIT_BASE(LabelStmt, ValueStmt)
  MX_VISIT_ENTITY(LabelStmt, declaration, 10, MX_APPLY_METHOD, Declaration, LabelDecl, NthStmt)
  MX_VISIT_ENTITY(LabelStmt, identifier_token, 11, MX_APPLY_METHOD, IdentifierToken, Token, NthStmt)
  MX_VISIT_TEXT(LabelStmt, name, 60, MX_APPLY_METHOD, Name, basic_string_view, NthStmt)
  MX_VISIT_ENTITY(LabelStmt, sub_statement, 13, MX_APPLY_METHOD, SubStatement, Stmt, NthStmt)
  MX_VISIT_BOOL(LabelStmt, is_side_entry, 12, MX_APPLY_METHOD, IsSideEntry, bool, NthStmt)
  MX_EXIT_VISIT_LabelStmt
MX_END_VISIT_STMT(LabelStmt)

#ifndef MX_ENTER_VISIT_Expr
#  define MX_ENTER_VISIT_Expr MX_ENTER_VISIT_ValueStmt
#endif
#ifndef MX_EXIT_VISIT_Expr
#  define MX_EXIT_VISIT_Expr MX_EXIT_VISIT_ValueStmt
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(Expr)
  MX_ENTER_VISIT_Expr
  MX_VISIT_BASE(Expr, ValueStmt)
  MX_VISIT_BOOL(Expr, has_side_effects, 12, MX_APPLY_METHOD, HasSideEffects, bool, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_casts, 10, MX_APPLY_METHOD, IgnoreCasts, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_conversion_operator_single_step, 11, MX_APPLY_METHOD, IgnoreConversionOperatorSingleStep, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_implicit_casts, 13, MX_APPLY_METHOD, IgnoreImplicitCasts, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_implicit, 14, MX_APPLY_METHOD, IgnoreImplicit, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_implicit_as_written, 17, MX_APPLY_METHOD, IgnoreImplicitAsWritten, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_parenthesis_base_casts, 18, MX_APPLY_METHOD, IgnoreParenthesisBaseCasts, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_parenthesis_casts, 19, MX_APPLY_METHOD, IgnoreParenthesisCasts, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_parenthesis_implicit_casts, 20, MX_APPLY_METHOD, IgnoreParenthesisImplicitCasts, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_parenthesis_l_value_casts, 21, MX_APPLY_METHOD, IgnoreParenthesisLValueCasts, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_parenthesis_noop_casts, 22, MX_APPLY_METHOD, IgnoreParenthesisNoopCasts, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_parentheses, 30, MX_APPLY_METHOD, IgnoreParentheses, Expr, NthStmt)
  MX_VISIT_ENTITY(Expr, ignore_unless_spelled_in_source, 31, MX_APPLY_METHOD, IgnoreUnlessSpelledInSource, Expr, NthStmt)
  MX_VISIT_BOOL(Expr, contains_errors, 16, MX_APPLY_METHOD, ContainsErrors, bool, NthStmt)
  MX_VISIT_BOOL(Expr, contains_unexpanded_parameter_pack, 23, MX_APPLY_METHOD, ContainsUnexpandedParameterPack, bool, NthStmt)
  MX_VISIT_ENUM(Expr, dependence, 56, MX_APPLY_METHOD, Dependence, ExprDependence, NthStmt)
  MX_VISIT_ENTITY(Expr, expression_token, 32, MX_APPLY_METHOD, ExpressionToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(Expr, obj_c_property, 33, MX_APPLY_METHOD, ObjCProperty, ObjCPropertyRefExpr, NthStmt)
  MX_VISIT_ENUM(Expr, object_kind, 69, MX_APPLY_METHOD, ObjectKind, ExprObjectKind, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(Expr, referenced_declaration_of_callee, 34, MX_APPLY_METHOD, ReferencedDeclarationOfCallee, Decl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(Expr, source_bit_field, 35, MX_APPLY_METHOD, SourceBitField, FieldDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(Expr, type, 36, MX_APPLY_METHOD, Type, Type, NthStmt)
  MX_VISIT_ENUM(Expr, value_kind, 70, MX_APPLY_METHOD, ValueKind, ExprValueKind, NthStmt)
  MX_VISIT_BOOL(Expr, has_non_trivial_call, 24, MX_APPLY_METHOD, HasNonTrivialCall, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_default_argument, 25, MX_APPLY_METHOD, IsDefaultArgument, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_gl_value, 57, MX_APPLY_METHOD, IsGLValue, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_implicit_cxx_this, 58, MX_APPLY_METHOD, IsImplicitCXXThis, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_instantiation_dependent, 59, MX_APPLY_METHOD, IsInstantiationDependent, bool, NthStmt)
  MX_VISIT_OPTIONAL_BOOL(Expr, is_integer_constant_expression, 71, MX_APPLY_METHOD, IsIntegerConstantExpression, bool, NthStmt)
  MX_VISIT_OPTIONAL_BOOL(Expr, is_known_to_have_boolean_value, 73, MX_APPLY_METHOD, IsKnownToHaveBooleanValue, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_l_value, 75, MX_APPLY_METHOD, IsLValue, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_objcgc_candidate, 76, MX_APPLY_METHOD, IsOBJCGCCandidate, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_obj_c_self_expression, 77, MX_APPLY_METHOD, IsObjCSelfExpression, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_ordinary_or_bit_field_object, 78, MX_APPLY_METHOD, IsOrdinaryOrBitFieldObject, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_pr_value, 79, MX_APPLY_METHOD, IsPRValue, bool, NthStmt)
  MX_VISIT_OPTIONAL_BOOL(Expr, is_read_if_discarded_in_c_plus_plus11, 80, MX_APPLY_METHOD, IsReadIfDiscardedInCPlusPlus11, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_type_dependent, 82, MX_APPLY_METHOD, IsTypeDependent, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_value_dependent, 83, MX_APPLY_METHOD, IsValueDependent, bool, NthStmt)
  MX_VISIT_BOOL(Expr, is_x_value, 84, MX_APPLY_METHOD, IsXValue, bool, NthStmt)
  MX_VISIT_BOOL(Expr, refers_to_bit_field, 85, MX_APPLY_METHOD, RefersToBitField, bool, NthStmt)
  MX_VISIT_BOOL(Expr, refers_to_global_register_variable, 86, MX_APPLY_METHOD, RefersToGlobalRegisterVariable, bool, NthStmt)
  MX_VISIT_BOOL(Expr, refers_to_matrix_element, 87, MX_APPLY_METHOD, RefersToMatrixElement, bool, NthStmt)
  MX_VISIT_BOOL(Expr, refers_to_vector_element, 88, MX_APPLY_METHOD, RefersToVectorElement, bool, NthStmt)
  MX_EXIT_VISIT_Expr
MX_END_VISIT_STMT(Expr)

#ifndef MX_ENTER_VISIT_DesignatedInitUpdateExpr
#  define MX_ENTER_VISIT_DesignatedInitUpdateExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_DesignatedInitUpdateExpr
#  define MX_EXIT_VISIT_DesignatedInitUpdateExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(DesignatedInitUpdateExpr)
  MX_ENTER_VISIT_DesignatedInitUpdateExpr
  MX_VISIT_BASE(DesignatedInitUpdateExpr, Expr)
  MX_VISIT_ENTITY(DesignatedInitUpdateExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(DesignatedInitUpdateExpr, updater, 38, MX_APPLY_METHOD, Updater, InitListExpr, NthStmt)
  MX_EXIT_VISIT_DesignatedInitUpdateExpr
MX_END_VISIT_STMT(DesignatedInitUpdateExpr)

#ifndef MX_ENTER_VISIT_DesignatedInitExpr
#  define MX_ENTER_VISIT_DesignatedInitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_DesignatedInitExpr
#  define MX_EXIT_VISIT_DesignatedInitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(DesignatedInitExpr)
  MX_ENTER_VISIT_DesignatedInitExpr
  MX_VISIT_BASE(DesignatedInitExpr, Expr)
  MX_VISIT_ENTITY_LIST(DesignatedInitExpr, designators, 15, MX_APPLY_METHOD, Designators, Designator, NthStmt)
  MX_VISIT_TOKEN_RANGE(DesignatedInitExpr, designators_tokens, 37, 38, NthStmt)
  MX_VISIT_ENTITY(DesignatedInitExpr, equal_or_colon_token, 39, MX_APPLY_METHOD, EqualOrColonToken, Token, NthStmt)
  MX_VISIT_ENTITY(DesignatedInitExpr, initializer, 40, MX_APPLY_METHOD, Initializer, Expr, NthStmt)
  MX_VISIT_BOOL(DesignatedInitExpr, is_direct_initializer, 89, MX_APPLY_METHOD, IsDirectInitializer, bool, NthStmt)
  MX_VISIT_BOOL(DesignatedInitExpr, uses_gnu_syntax, 90, MX_APPLY_METHOD, UsesGNUSyntax, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(DesignatedInitExpr, sub_expressions, 26, MX_APPLY_METHOD, SubExpressions, Expr, NthStmt)
  MX_EXIT_VISIT_DesignatedInitExpr
MX_END_VISIT_STMT(DesignatedInitExpr)

#ifndef MX_ENTER_VISIT_DependentScopeDeclRefExpr
#  define MX_ENTER_VISIT_DependentScopeDeclRefExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_DependentScopeDeclRefExpr
#  define MX_EXIT_VISIT_DependentScopeDeclRefExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(DependentScopeDeclRefExpr)
  MX_ENTER_VISIT_DependentScopeDeclRefExpr
  MX_VISIT_BASE(DependentScopeDeclRefExpr, Expr)
  MX_VISIT_ENTITY(DependentScopeDeclRefExpr, l_angle_token, 37, MX_APPLY_METHOD, LAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(DependentScopeDeclRefExpr, r_angle_token, 38, MX_APPLY_METHOD, RAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(DependentScopeDeclRefExpr, template_keyword_token, 39, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthStmt)
  MX_VISIT_BOOL(DependentScopeDeclRefExpr, has_explicit_template_arguments, 89, MX_APPLY_METHOD, HasExplicitTemplateArguments, bool, NthStmt)
  MX_VISIT_BOOL(DependentScopeDeclRefExpr, has_template_keyword, 90, MX_APPLY_METHOD, HasTemplateKeyword, bool, NthStmt)
  MX_EXIT_VISIT_DependentScopeDeclRefExpr
MX_END_VISIT_STMT(DependentScopeDeclRefExpr)

#ifndef MX_ENTER_VISIT_DependentCoawaitExpr
#  define MX_ENTER_VISIT_DependentCoawaitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_DependentCoawaitExpr
#  define MX_EXIT_VISIT_DependentCoawaitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(DependentCoawaitExpr)
  MX_ENTER_VISIT_DependentCoawaitExpr
  MX_VISIT_BASE(DependentCoawaitExpr, Expr)
  MX_VISIT_ENTITY(DependentCoawaitExpr, keyword_token, 37, MX_APPLY_METHOD, KeywordToken, Token, NthStmt)
  MX_VISIT_ENTITY(DependentCoawaitExpr, operand, 38, MX_APPLY_METHOD, Operand, Expr, NthStmt)
  MX_VISIT_ENTITY(DependentCoawaitExpr, operator_coawait_lookup, 39, MX_APPLY_METHOD, OperatorCoawaitLookup, UnresolvedLookupExpr, NthStmt)
  MX_EXIT_VISIT_DependentCoawaitExpr
MX_END_VISIT_STMT(DependentCoawaitExpr)

#ifndef MX_ENTER_VISIT_DeclRefExpr
#  define MX_ENTER_VISIT_DeclRefExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_DeclRefExpr
#  define MX_EXIT_VISIT_DeclRefExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(DeclRefExpr)
  MX_ENTER_VISIT_DeclRefExpr
  MX_VISIT_BASE(DeclRefExpr, Expr)
  MX_VISIT_ENTITY(DeclRefExpr, declaration, 37, MX_APPLY_METHOD, Declaration, ValueDecl, NthStmt)
  MX_VISIT_ENTITY(DeclRefExpr, found_declaration, 38, MX_APPLY_METHOD, FoundDeclaration, NamedDecl, NthStmt)
  MX_VISIT_ENTITY(DeclRefExpr, l_angle_token, 39, MX_APPLY_METHOD, LAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(DeclRefExpr, r_angle_token, 40, MX_APPLY_METHOD, RAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(DeclRefExpr, template_keyword_token, 41, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthStmt)
  MX_VISIT_BOOL(DeclRefExpr, had_multiple_candidates, 89, MX_APPLY_METHOD, HadMultipleCandidates, bool, NthStmt)
  MX_VISIT_BOOL(DeclRefExpr, has_explicit_template_arguments, 90, MX_APPLY_METHOD, HasExplicitTemplateArguments, bool, NthStmt)
  MX_VISIT_BOOL(DeclRefExpr, has_qualifier, 91, MX_APPLY_METHOD, HasQualifier, bool, NthStmt)
  MX_VISIT_BOOL(DeclRefExpr, has_template_keyword_and_arguments_info, 92, MX_APPLY_METHOD, HasTemplateKeywordAndArgumentsInfo, bool, NthStmt)
  MX_VISIT_BOOL(DeclRefExpr, has_template_keyword, 93, MX_APPLY_METHOD, HasTemplateKeyword, bool, NthStmt)
  MX_VISIT_BOOL(DeclRefExpr, is_immediate_escalating, 94, MX_APPLY_METHOD, IsImmediateEscalating, bool, NthStmt)
  MX_VISIT_ENUM(DeclRefExpr, is_non_odr_use, 95, MX_APPLY_METHOD, IsNonOdrUse, NonOdrUseReason, NthStmt)
  MX_VISIT_BOOL(DeclRefExpr, refers_to_enclosing_variable_or_capture, 96, MX_APPLY_METHOD, RefersToEnclosingVariableOrCapture, bool, NthStmt)
  MX_EXIT_VISIT_DeclRefExpr
MX_END_VISIT_STMT(DeclRefExpr)

#ifndef MX_ENTER_VISIT_CoroutineSuspendExpr
#  define MX_ENTER_VISIT_CoroutineSuspendExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CoroutineSuspendExpr
#  define MX_EXIT_VISIT_CoroutineSuspendExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(CoroutineSuspendExpr)
  MX_ENTER_VISIT_CoroutineSuspendExpr
  MX_VISIT_BASE(CoroutineSuspendExpr, Expr)
  MX_VISIT_ENTITY(CoroutineSuspendExpr, common_expression, 37, MX_APPLY_METHOD, CommonExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CoroutineSuspendExpr, keyword_token, 38, MX_APPLY_METHOD, KeywordToken, Token, NthStmt)
  MX_VISIT_ENTITY(CoroutineSuspendExpr, opaque_value, 39, MX_APPLY_METHOD, OpaqueValue, OpaqueValueExpr, NthStmt)
  MX_VISIT_ENTITY(CoroutineSuspendExpr, operand, 40, MX_APPLY_METHOD, Operand, Expr, NthStmt)
  MX_VISIT_ENTITY(CoroutineSuspendExpr, ready_expression, 41, MX_APPLY_METHOD, ReadyExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CoroutineSuspendExpr, resume_expression, 42, MX_APPLY_METHOD, ResumeExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CoroutineSuspendExpr, suspend_expression, 43, MX_APPLY_METHOD, SuspendExpression, Expr, NthStmt)
  MX_EXIT_VISIT_CoroutineSuspendExpr
MX_END_VISIT_STMT(CoroutineSuspendExpr)

#ifndef MX_ENTER_VISIT_CoawaitExpr
#  define MX_ENTER_VISIT_CoawaitExpr MX_ENTER_VISIT_CoroutineSuspendExpr
#endif
#ifndef MX_EXIT_VISIT_CoawaitExpr
#  define MX_EXIT_VISIT_CoawaitExpr MX_EXIT_VISIT_CoroutineSuspendExpr
#endif

MX_BEGIN_VISIT_STMT(CoawaitExpr)
  MX_ENTER_VISIT_CoawaitExpr
  MX_VISIT_BASE(CoawaitExpr, CoroutineSuspendExpr)
  MX_VISIT_BOOL(CoawaitExpr, is_implicit, 89, MX_APPLY_METHOD, IsImplicit, bool, NthStmt)
  MX_EXIT_VISIT_CoawaitExpr
MX_END_VISIT_STMT(CoawaitExpr)

#ifndef MX_ENTER_VISIT_CoyieldExpr
#  define MX_ENTER_VISIT_CoyieldExpr MX_ENTER_VISIT_CoroutineSuspendExpr
#endif
#ifndef MX_EXIT_VISIT_CoyieldExpr
#  define MX_EXIT_VISIT_CoyieldExpr MX_EXIT_VISIT_CoroutineSuspendExpr
#endif

MX_BEGIN_VISIT_STMT(CoyieldExpr)
  MX_ENTER_VISIT_CoyieldExpr
  MX_VISIT_BASE(CoyieldExpr, CoroutineSuspendExpr)
  MX_EXIT_VISIT_CoyieldExpr
MX_END_VISIT_STMT(CoyieldExpr)

#ifndef MX_ENTER_VISIT_ConvertVectorExpr
#  define MX_ENTER_VISIT_ConvertVectorExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ConvertVectorExpr
#  define MX_EXIT_VISIT_ConvertVectorExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ConvertVectorExpr)
  MX_ENTER_VISIT_ConvertVectorExpr
  MX_VISIT_BASE(ConvertVectorExpr, Expr)
  MX_VISIT_ENTITY(ConvertVectorExpr, builtin_token, 37, MX_APPLY_METHOD, BuiltinToken, Token, NthStmt)
  MX_VISIT_ENTITY(ConvertVectorExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(ConvertVectorExpr, src_expression, 39, MX_APPLY_METHOD, SrcExpression, Expr, NthStmt)
  MX_EXIT_VISIT_ConvertVectorExpr
MX_END_VISIT_STMT(ConvertVectorExpr)

#ifndef MX_ENTER_VISIT_ConceptSpecializationExpr
#  define MX_ENTER_VISIT_ConceptSpecializationExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ConceptSpecializationExpr
#  define MX_EXIT_VISIT_ConceptSpecializationExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ConceptSpecializationExpr)
  MX_ENTER_VISIT_ConceptSpecializationExpr
  MX_VISIT_BASE(ConceptSpecializationExpr, Expr)
  MX_VISIT_ENTITY(ConceptSpecializationExpr, specialization_declaration, 37, MX_APPLY_METHOD, SpecializationDeclaration, ImplicitConceptSpecializationDecl, NthStmt)
  MX_VISIT_ENTITY_LIST(ConceptSpecializationExpr, template_arguments, 15, MX_APPLY_METHOD, TemplateArguments, TemplateArgument, NthStmt)
  MX_VISIT_BOOL(ConceptSpecializationExpr, is_satisfied, 89, MX_APPLY_METHOD, IsSatisfied, bool, NthStmt)
  MX_EXIT_VISIT_ConceptSpecializationExpr
MX_END_VISIT_STMT(ConceptSpecializationExpr)

#ifndef MX_ENTER_VISIT_CompoundLiteralExpr
#  define MX_ENTER_VISIT_CompoundLiteralExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CompoundLiteralExpr
#  define MX_EXIT_VISIT_CompoundLiteralExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CompoundLiteralExpr)
  MX_ENTER_VISIT_CompoundLiteralExpr
  MX_VISIT_BASE(CompoundLiteralExpr, Expr)
  MX_VISIT_ENTITY(CompoundLiteralExpr, initializer, 37, MX_APPLY_METHOD, Initializer, Expr, NthStmt)
  MX_VISIT_ENTITY(CompoundLiteralExpr, l_paren_token, 38, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_BOOL(CompoundLiteralExpr, is_file_scope, 89, MX_APPLY_METHOD, IsFileScope, bool, NthStmt)
  MX_EXIT_VISIT_CompoundLiteralExpr
MX_END_VISIT_STMT(CompoundLiteralExpr)

#ifndef MX_ENTER_VISIT_ChooseExpr
#  define MX_ENTER_VISIT_ChooseExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ChooseExpr
#  define MX_EXIT_VISIT_ChooseExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ChooseExpr)
  MX_ENTER_VISIT_ChooseExpr
  MX_VISIT_BASE(ChooseExpr, Expr)
  MX_VISIT_ENTITY(ChooseExpr, builtin_token, 37, MX_APPLY_METHOD, BuiltinToken, Token, NthStmt)
  MX_VISIT_ENTITY(ChooseExpr, chosen_sub_expression, 38, MX_APPLY_METHOD, ChosenSubExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(ChooseExpr, condition, 39, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_ENTITY(ChooseExpr, lhs, 40, MX_APPLY_METHOD, LHS, Expr, NthStmt)
  MX_VISIT_ENTITY(ChooseExpr, rhs, 41, MX_APPLY_METHOD, RHS, Expr, NthStmt)
  MX_VISIT_ENTITY(ChooseExpr, r_paren_token, 42, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_BOOL(ChooseExpr, is_condition_dependent, 89, MX_APPLY_METHOD, IsConditionDependent, bool, NthStmt)
  MX_VISIT_BOOL(ChooseExpr, is_condition_true, 90, MX_APPLY_METHOD, IsConditionTrue, bool, NthStmt)
  MX_EXIT_VISIT_ChooseExpr
MX_END_VISIT_STMT(ChooseExpr)

#ifndef MX_ENTER_VISIT_CharacterLiteral
#  define MX_ENTER_VISIT_CharacterLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CharacterLiteral
#  define MX_EXIT_VISIT_CharacterLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CharacterLiteral)
  MX_ENTER_VISIT_CharacterLiteral
  MX_VISIT_BASE(CharacterLiteral, Expr)
  MX_VISIT_ENUM(CharacterLiteral, literal_kind, 95, MX_APPLY_METHOD, LiteralKind, CharacterLiteralCharacterKind, NthStmt)
  MX_VISIT_ENTITY(CharacterLiteral, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_EXIT_VISIT_CharacterLiteral
MX_END_VISIT_STMT(CharacterLiteral)

#ifndef MX_ENTER_VISIT_CastExpr
#  define MX_ENTER_VISIT_CastExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CastExpr
#  define MX_EXIT_VISIT_CastExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(CastExpr)
  MX_ENTER_VISIT_CastExpr
  MX_VISIT_BASE(CastExpr, Expr)
  MX_VISIT_ENUM(CastExpr, cast_kind, 95, MX_APPLY_METHOD, CastKind, CastKind, NthStmt)
  MX_VISIT_TEXT(CastExpr, cast_kind_name, 60, MX_APPLY_METHOD, CastKindName, basic_string_view, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CastExpr, conversion_function, 37, MX_APPLY_METHOD, ConversionFunction, NamedDecl, NthStmt)
  MX_VISIT_ENTITY(CastExpr, sub_expression, 38, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CastExpr, sub_expression_as_written, 39, MX_APPLY_METHOD, SubExpressionAsWritten, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CastExpr, target_union_field, 40, MX_APPLY_METHOD, TargetUnionField, FieldDecl, NthStmt)
  MX_VISIT_BOOL(CastExpr, has_stored_fp_features, 89, MX_APPLY_METHOD, HasStoredFPFeatures, bool, NthStmt)
  MX_EXIT_VISIT_CastExpr
MX_END_VISIT_STMT(CastExpr)

#ifndef MX_ENTER_VISIT_ImplicitCastExpr
#  define MX_ENTER_VISIT_ImplicitCastExpr MX_ENTER_VISIT_CastExpr
#endif
#ifndef MX_EXIT_VISIT_ImplicitCastExpr
#  define MX_EXIT_VISIT_ImplicitCastExpr MX_EXIT_VISIT_CastExpr
#endif

MX_BEGIN_VISIT_STMT(ImplicitCastExpr)
  MX_ENTER_VISIT_ImplicitCastExpr
  MX_VISIT_BASE(ImplicitCastExpr, CastExpr)
  MX_VISIT_BOOL(ImplicitCastExpr, is_part_of_explicit_cast, 90, MX_APPLY_METHOD, IsPartOfExplicitCast, bool, NthStmt)
  MX_EXIT_VISIT_ImplicitCastExpr
MX_END_VISIT_STMT(ImplicitCastExpr)

#ifndef MX_ENTER_VISIT_ExplicitCastExpr
#  define MX_ENTER_VISIT_ExplicitCastExpr MX_ENTER_VISIT_CastExpr
#endif
#ifndef MX_EXIT_VISIT_ExplicitCastExpr
#  define MX_EXIT_VISIT_ExplicitCastExpr MX_EXIT_VISIT_CastExpr
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(ExplicitCastExpr)
  MX_ENTER_VISIT_ExplicitCastExpr
  MX_VISIT_BASE(ExplicitCastExpr, CastExpr)
  MX_VISIT_ENTITY(ExplicitCastExpr, type_as_written, 41, MX_APPLY_METHOD, TypeAsWritten, Type, NthStmt)
  MX_EXIT_VISIT_ExplicitCastExpr
MX_END_VISIT_STMT(ExplicitCastExpr)

#ifndef MX_ENTER_VISIT_CXXNamedCastExpr
#  define MX_ENTER_VISIT_CXXNamedCastExpr MX_ENTER_VISIT_ExplicitCastExpr
#endif
#ifndef MX_EXIT_VISIT_CXXNamedCastExpr
#  define MX_EXIT_VISIT_CXXNamedCastExpr MX_EXIT_VISIT_ExplicitCastExpr
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(CXXNamedCastExpr)
  MX_ENTER_VISIT_CXXNamedCastExpr
  MX_VISIT_BASE(CXXNamedCastExpr, ExplicitCastExpr)
  MX_VISIT_TOKEN_RANGE(CXXNamedCastExpr, angle_brackets, 42, 43, NthStmt)
  MX_VISIT_TEXT(CXXNamedCastExpr, cast_name, 65, MX_APPLY_METHOD, CastName, basic_string_view, NthStmt)
  MX_VISIT_ENTITY(CXXNamedCastExpr, operator_token, 44, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXNamedCastExpr, r_paren_token, 45, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_CXXNamedCastExpr
MX_END_VISIT_STMT(CXXNamedCastExpr)

#ifndef MX_ENTER_VISIT_CXXDynamicCastExpr
#  define MX_ENTER_VISIT_CXXDynamicCastExpr MX_ENTER_VISIT_CXXNamedCastExpr
#endif
#ifndef MX_EXIT_VISIT_CXXDynamicCastExpr
#  define MX_EXIT_VISIT_CXXDynamicCastExpr MX_EXIT_VISIT_CXXNamedCastExpr
#endif

MX_BEGIN_VISIT_STMT(CXXDynamicCastExpr)
  MX_ENTER_VISIT_CXXDynamicCastExpr
  MX_VISIT_BASE(CXXDynamicCastExpr, CXXNamedCastExpr)
  MX_VISIT_BOOL(CXXDynamicCastExpr, is_always_null, 90, MX_APPLY_METHOD, IsAlwaysNull, bool, NthStmt)
  MX_EXIT_VISIT_CXXDynamicCastExpr
MX_END_VISIT_STMT(CXXDynamicCastExpr)

#ifndef MX_ENTER_VISIT_CXXConstCastExpr
#  define MX_ENTER_VISIT_CXXConstCastExpr MX_ENTER_VISIT_CXXNamedCastExpr
#endif
#ifndef MX_EXIT_VISIT_CXXConstCastExpr
#  define MX_EXIT_VISIT_CXXConstCastExpr MX_EXIT_VISIT_CXXNamedCastExpr
#endif

MX_BEGIN_VISIT_STMT(CXXConstCastExpr)
  MX_ENTER_VISIT_CXXConstCastExpr
  MX_VISIT_BASE(CXXConstCastExpr, CXXNamedCastExpr)
  MX_EXIT_VISIT_CXXConstCastExpr
MX_END_VISIT_STMT(CXXConstCastExpr)

#ifndef MX_ENTER_VISIT_CXXAddrspaceCastExpr
#  define MX_ENTER_VISIT_CXXAddrspaceCastExpr MX_ENTER_VISIT_CXXNamedCastExpr
#endif
#ifndef MX_EXIT_VISIT_CXXAddrspaceCastExpr
#  define MX_EXIT_VISIT_CXXAddrspaceCastExpr MX_EXIT_VISIT_CXXNamedCastExpr
#endif

MX_BEGIN_VISIT_STMT(CXXAddrspaceCastExpr)
  MX_ENTER_VISIT_CXXAddrspaceCastExpr
  MX_VISIT_BASE(CXXAddrspaceCastExpr, CXXNamedCastExpr)
  MX_EXIT_VISIT_CXXAddrspaceCastExpr
MX_END_VISIT_STMT(CXXAddrspaceCastExpr)

#ifndef MX_ENTER_VISIT_CXXStaticCastExpr
#  define MX_ENTER_VISIT_CXXStaticCastExpr MX_ENTER_VISIT_CXXNamedCastExpr
#endif
#ifndef MX_EXIT_VISIT_CXXStaticCastExpr
#  define MX_EXIT_VISIT_CXXStaticCastExpr MX_EXIT_VISIT_CXXNamedCastExpr
#endif

MX_BEGIN_VISIT_STMT(CXXStaticCastExpr)
  MX_ENTER_VISIT_CXXStaticCastExpr
  MX_VISIT_BASE(CXXStaticCastExpr, CXXNamedCastExpr)
  MX_EXIT_VISIT_CXXStaticCastExpr
MX_END_VISIT_STMT(CXXStaticCastExpr)

#ifndef MX_ENTER_VISIT_CXXReinterpretCastExpr
#  define MX_ENTER_VISIT_CXXReinterpretCastExpr MX_ENTER_VISIT_CXXNamedCastExpr
#endif
#ifndef MX_EXIT_VISIT_CXXReinterpretCastExpr
#  define MX_EXIT_VISIT_CXXReinterpretCastExpr MX_EXIT_VISIT_CXXNamedCastExpr
#endif

MX_BEGIN_VISIT_STMT(CXXReinterpretCastExpr)
  MX_ENTER_VISIT_CXXReinterpretCastExpr
  MX_VISIT_BASE(CXXReinterpretCastExpr, CXXNamedCastExpr)
  MX_EXIT_VISIT_CXXReinterpretCastExpr
MX_END_VISIT_STMT(CXXReinterpretCastExpr)

#ifndef MX_ENTER_VISIT_CXXFunctionalCastExpr
#  define MX_ENTER_VISIT_CXXFunctionalCastExpr MX_ENTER_VISIT_ExplicitCastExpr
#endif
#ifndef MX_EXIT_VISIT_CXXFunctionalCastExpr
#  define MX_EXIT_VISIT_CXXFunctionalCastExpr MX_EXIT_VISIT_ExplicitCastExpr
#endif

MX_BEGIN_VISIT_STMT(CXXFunctionalCastExpr)
  MX_ENTER_VISIT_CXXFunctionalCastExpr
  MX_VISIT_BASE(CXXFunctionalCastExpr, ExplicitCastExpr)
  MX_VISIT_ENTITY(CXXFunctionalCastExpr, l_paren_token, 42, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXFunctionalCastExpr, r_paren_token, 43, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXFunctionalCastExpr, is_list_initialization, 90, MX_APPLY_METHOD, IsListInitialization, bool, NthStmt)
  MX_EXIT_VISIT_CXXFunctionalCastExpr
MX_END_VISIT_STMT(CXXFunctionalCastExpr)

#ifndef MX_ENTER_VISIT_CStyleCastExpr
#  define MX_ENTER_VISIT_CStyleCastExpr MX_ENTER_VISIT_ExplicitCastExpr
#endif
#ifndef MX_EXIT_VISIT_CStyleCastExpr
#  define MX_EXIT_VISIT_CStyleCastExpr MX_EXIT_VISIT_ExplicitCastExpr
#endif

MX_BEGIN_VISIT_STMT(CStyleCastExpr)
  MX_ENTER_VISIT_CStyleCastExpr
  MX_VISIT_BASE(CStyleCastExpr, ExplicitCastExpr)
  MX_VISIT_ENTITY(CStyleCastExpr, l_paren_token, 42, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(CStyleCastExpr, r_paren_token, 43, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_CStyleCastExpr
MX_END_VISIT_STMT(CStyleCastExpr)

#ifndef MX_ENTER_VISIT_BuiltinBitCastExpr
#  define MX_ENTER_VISIT_BuiltinBitCastExpr MX_ENTER_VISIT_ExplicitCastExpr
#endif
#ifndef MX_EXIT_VISIT_BuiltinBitCastExpr
#  define MX_EXIT_VISIT_BuiltinBitCastExpr MX_EXIT_VISIT_ExplicitCastExpr
#endif

MX_BEGIN_VISIT_STMT(BuiltinBitCastExpr)
  MX_ENTER_VISIT_BuiltinBitCastExpr
  MX_VISIT_BASE(BuiltinBitCastExpr, ExplicitCastExpr)
  MX_EXIT_VISIT_BuiltinBitCastExpr
MX_END_VISIT_STMT(BuiltinBitCastExpr)

#ifndef MX_ENTER_VISIT_ObjCBridgedCastExpr
#  define MX_ENTER_VISIT_ObjCBridgedCastExpr MX_ENTER_VISIT_ExplicitCastExpr
#endif
#ifndef MX_EXIT_VISIT_ObjCBridgedCastExpr
#  define MX_EXIT_VISIT_ObjCBridgedCastExpr MX_EXIT_VISIT_ExplicitCastExpr
#endif

MX_BEGIN_VISIT_STMT(ObjCBridgedCastExpr)
  MX_ENTER_VISIT_ObjCBridgedCastExpr
  MX_VISIT_BASE(ObjCBridgedCastExpr, ExplicitCastExpr)
  MX_VISIT_ENTITY(ObjCBridgedCastExpr, bridge_keyword_token, 42, MX_APPLY_METHOD, BridgeKeywordToken, Token, NthStmt)
  MX_VISIT_ENUM(ObjCBridgedCastExpr, bridge_kind, 97, MX_APPLY_METHOD, BridgeKind, ObjCBridgeCastKind, NthStmt)
  MX_VISIT_TEXT(ObjCBridgedCastExpr, bridge_kind_name, 65, MX_APPLY_METHOD, BridgeKindName, basic_string_view, NthStmt)
  MX_VISIT_ENTITY(ObjCBridgedCastExpr, l_paren_token, 43, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_EXIT_VISIT_ObjCBridgedCastExpr
MX_END_VISIT_STMT(ObjCBridgedCastExpr)

#ifndef MX_ENTER_VISIT_CallExpr
#  define MX_ENTER_VISIT_CallExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CallExpr
#  define MX_EXIT_VISIT_CallExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CallExpr)
  MX_ENTER_VISIT_CallExpr
  MX_VISIT_BASE(CallExpr, Expr)
  MX_VISIT_ENTITY_LIST(CallExpr, arguments, 15, MX_APPLY_METHOD, Arguments, Expr, NthStmt)
  MX_VISIT_ENUM(CallExpr, adl_call_kind, 95, MX_APPLY_METHOD, ADLCallKind, CallExprADLCallKind, NthStmt)
  MX_VISIT_ENTITY(CallExpr, call_return_type, 37, MX_APPLY_METHOD, CallReturnType, Type, NthStmt)
  MX_VISIT_ENTITY(CallExpr, callee, 38, MX_APPLY_METHOD, Callee, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CallExpr, callee_declaration, 39, MX_APPLY_METHOD, CalleeDeclaration, Decl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CallExpr, direct_callee, 40, MX_APPLY_METHOD, DirectCallee, FunctionDecl, NthStmt)
  MX_VISIT_ENTITY(CallExpr, r_paren_token, 41, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_BOOL(CallExpr, has_stored_fp_features, 89, MX_APPLY_METHOD, HasStoredFPFeatures, bool, NthStmt)
  MX_VISIT_BOOL(CallExpr, has_unused_result_attribute, 90, MX_APPLY_METHOD, HasUnusedResultAttribute, bool, NthStmt)
  MX_VISIT_BOOL(CallExpr, is_builtin_assume_false, 91, MX_APPLY_METHOD, IsBuiltinAssumeFalse, bool, NthStmt)
  MX_VISIT_BOOL(CallExpr, is_call_to_std_move, 92, MX_APPLY_METHOD, IsCallToStdMove, bool, NthStmt)
  MX_VISIT_BOOL(CallExpr, is_unevaluated_builtin_call, 93, MX_APPLY_METHOD, IsUnevaluatedBuiltinCall, bool, NthStmt)
  MX_VISIT_BOOL(CallExpr, uses_adl, 94, MX_APPLY_METHOD, UsesADL, bool, NthStmt)
  MX_EXIT_VISIT_CallExpr
MX_END_VISIT_STMT(CallExpr)

#ifndef MX_ENTER_VISIT_CXXOperatorCallExpr
#  define MX_ENTER_VISIT_CXXOperatorCallExpr MX_ENTER_VISIT_CallExpr
#endif
#ifndef MX_EXIT_VISIT_CXXOperatorCallExpr
#  define MX_EXIT_VISIT_CXXOperatorCallExpr MX_EXIT_VISIT_CallExpr
#endif

MX_BEGIN_VISIT_STMT(CXXOperatorCallExpr)
  MX_ENTER_VISIT_CXXOperatorCallExpr
  MX_VISIT_BASE(CXXOperatorCallExpr, CallExpr)
  MX_VISIT_ENUM(CXXOperatorCallExpr, operator_, 97, MX_APPLY_METHOD, Operator, OverloadedOperatorKind, NthStmt)
  MX_VISIT_ENTITY(CXXOperatorCallExpr, operator_token, 42, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXOperatorCallExpr, is_assignment_operation, 96, MX_APPLY_METHOD, IsAssignmentOperation, bool, NthStmt)
  MX_VISIT_BOOL(CXXOperatorCallExpr, is_comparison_operation, 98, MX_APPLY_METHOD, IsComparisonOperation, bool, NthStmt)
  MX_VISIT_BOOL(CXXOperatorCallExpr, is_infix_binary_operation, 99, MX_APPLY_METHOD, IsInfixBinaryOperation, bool, NthStmt)
  MX_EXIT_VISIT_CXXOperatorCallExpr
MX_END_VISIT_STMT(CXXOperatorCallExpr)

#ifndef MX_ENTER_VISIT_CXXMemberCallExpr
#  define MX_ENTER_VISIT_CXXMemberCallExpr MX_ENTER_VISIT_CallExpr
#endif
#ifndef MX_EXIT_VISIT_CXXMemberCallExpr
#  define MX_EXIT_VISIT_CXXMemberCallExpr MX_EXIT_VISIT_CallExpr
#endif

MX_BEGIN_VISIT_STMT(CXXMemberCallExpr)
  MX_ENTER_VISIT_CXXMemberCallExpr
  MX_VISIT_BASE(CXXMemberCallExpr, CallExpr)
  MX_VISIT_ENTITY(CXXMemberCallExpr, implicit_object_argument, 42, MX_APPLY_METHOD, ImplicitObjectArgument, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXMemberCallExpr, method_declaration, 43, MX_APPLY_METHOD, MethodDeclaration, CXXMethodDecl, NthStmt)
  MX_VISIT_ENTITY(CXXMemberCallExpr, object_type, 44, MX_APPLY_METHOD, ObjectType, Type, NthStmt)
  MX_VISIT_ENTITY(CXXMemberCallExpr, record_declaration, 45, MX_APPLY_METHOD, RecordDeclaration, CXXRecordDecl, NthStmt)
  MX_EXIT_VISIT_CXXMemberCallExpr
MX_END_VISIT_STMT(CXXMemberCallExpr)

#ifndef MX_ENTER_VISIT_CUDAKernelCallExpr
#  define MX_ENTER_VISIT_CUDAKernelCallExpr MX_ENTER_VISIT_CallExpr
#endif
#ifndef MX_EXIT_VISIT_CUDAKernelCallExpr
#  define MX_EXIT_VISIT_CUDAKernelCallExpr MX_EXIT_VISIT_CallExpr
#endif

MX_BEGIN_VISIT_STMT(CUDAKernelCallExpr)
  MX_ENTER_VISIT_CUDAKernelCallExpr
  MX_VISIT_BASE(CUDAKernelCallExpr, CallExpr)
  MX_VISIT_ENTITY(CUDAKernelCallExpr, config, 42, MX_APPLY_METHOD, Config, CallExpr, NthStmt)
  MX_EXIT_VISIT_CUDAKernelCallExpr
MX_END_VISIT_STMT(CUDAKernelCallExpr)

#ifndef MX_ENTER_VISIT_UserDefinedLiteral
#  define MX_ENTER_VISIT_UserDefinedLiteral MX_ENTER_VISIT_CallExpr
#endif
#ifndef MX_EXIT_VISIT_UserDefinedLiteral
#  define MX_EXIT_VISIT_UserDefinedLiteral MX_EXIT_VISIT_CallExpr
#endif

MX_BEGIN_VISIT_STMT(UserDefinedLiteral)
  MX_ENTER_VISIT_UserDefinedLiteral
  MX_VISIT_BASE(UserDefinedLiteral, CallExpr)
  MX_VISIT_ENTITY(UserDefinedLiteral, cooked_literal, 42, MX_APPLY_METHOD, CookedLiteral, Expr, NthStmt)
  MX_VISIT_ENUM(UserDefinedLiteral, literal_operator_kind, 97, MX_APPLY_METHOD, LiteralOperatorKind, UserDefinedLiteralLiteralOperatorKind, NthStmt)
  MX_VISIT_ENTITY(UserDefinedLiteral, ud_suffix_token, 43, MX_APPLY_METHOD, UDSuffixToken, Token, NthStmt)
  MX_EXIT_VISIT_UserDefinedLiteral
MX_END_VISIT_STMT(UserDefinedLiteral)

#ifndef MX_ENTER_VISIT_CXXUuidofExpr
#  define MX_ENTER_VISIT_CXXUuidofExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXUuidofExpr
#  define MX_EXIT_VISIT_CXXUuidofExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXUuidofExpr)
  MX_ENTER_VISIT_CXXUuidofExpr
  MX_VISIT_BASE(CXXUuidofExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(CXXUuidofExpr, expression_operand, 37, MX_APPLY_METHOD, ExpressionOperand, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXUuidofExpr, guid_declaration, 38, MX_APPLY_METHOD, GuidDeclaration, MSGuidDecl, NthStmt)
  MX_VISIT_ENTITY(CXXUuidofExpr, type_operand, 39, MX_APPLY_METHOD, TypeOperand, Type, NthStmt)
  MX_VISIT_ENTITY(CXXUuidofExpr, type_operand_source_info, 40, MX_APPLY_METHOD, TypeOperandSourceInfo, Type, NthStmt)
  MX_VISIT_BOOL(CXXUuidofExpr, is_type_operand, 89, MX_APPLY_METHOD, IsTypeOperand, bool, NthStmt)
  MX_EXIT_VISIT_CXXUuidofExpr
MX_END_VISIT_STMT(CXXUuidofExpr)

#ifndef MX_ENTER_VISIT_CXXUnresolvedConstructExpr
#  define MX_ENTER_VISIT_CXXUnresolvedConstructExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXUnresolvedConstructExpr
#  define MX_EXIT_VISIT_CXXUnresolvedConstructExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXUnresolvedConstructExpr)
  MX_ENTER_VISIT_CXXUnresolvedConstructExpr
  MX_VISIT_BASE(CXXUnresolvedConstructExpr, Expr)
  MX_VISIT_ENTITY_LIST(CXXUnresolvedConstructExpr, arguments, 15, MX_APPLY_METHOD, Arguments, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXUnresolvedConstructExpr, l_paren_token, 37, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXUnresolvedConstructExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXUnresolvedConstructExpr, type_as_written, 39, MX_APPLY_METHOD, TypeAsWritten, Type, NthStmt)
  MX_VISIT_BOOL(CXXUnresolvedConstructExpr, is_list_initialization, 89, MX_APPLY_METHOD, IsListInitialization, bool, NthStmt)
  MX_EXIT_VISIT_CXXUnresolvedConstructExpr
MX_END_VISIT_STMT(CXXUnresolvedConstructExpr)

#ifndef MX_ENTER_VISIT_CXXTypeidExpr
#  define MX_ENTER_VISIT_CXXTypeidExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXTypeidExpr
#  define MX_EXIT_VISIT_CXXTypeidExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXTypeidExpr)
  MX_ENTER_VISIT_CXXTypeidExpr
  MX_VISIT_BASE(CXXTypeidExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(CXXTypeidExpr, expression_operand, 37, MX_APPLY_METHOD, ExpressionOperand, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXTypeidExpr, type_operand, 38, MX_APPLY_METHOD, TypeOperand, Type, NthStmt)
  MX_VISIT_ENTITY(CXXTypeidExpr, type_operand_source_info, 39, MX_APPLY_METHOD, TypeOperandSourceInfo, Type, NthStmt)
  MX_VISIT_OPTIONAL_BOOL(CXXTypeidExpr, is_most_derived, 89, MX_APPLY_METHOD, IsMostDerived, bool, NthStmt)
  MX_VISIT_BOOL(CXXTypeidExpr, is_potentially_evaluated, 91, MX_APPLY_METHOD, IsPotentiallyEvaluated, bool, NthStmt)
  MX_VISIT_BOOL(CXXTypeidExpr, is_type_operand, 92, MX_APPLY_METHOD, IsTypeOperand, bool, NthStmt)
  MX_EXIT_VISIT_CXXTypeidExpr
MX_END_VISIT_STMT(CXXTypeidExpr)

#ifndef MX_ENTER_VISIT_CXXThrowExpr
#  define MX_ENTER_VISIT_CXXThrowExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXThrowExpr
#  define MX_EXIT_VISIT_CXXThrowExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXThrowExpr)
  MX_ENTER_VISIT_CXXThrowExpr
  MX_VISIT_BASE(CXXThrowExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(CXXThrowExpr, sub_expression, 37, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXThrowExpr, throw_token, 38, MX_APPLY_METHOD, ThrowToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXThrowExpr, is_thrown_variable_in_scope, 89, MX_APPLY_METHOD, IsThrownVariableInScope, bool, NthStmt)
  MX_EXIT_VISIT_CXXThrowExpr
MX_END_VISIT_STMT(CXXThrowExpr)

#ifndef MX_ENTER_VISIT_CXXThisExpr
#  define MX_ENTER_VISIT_CXXThisExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXThisExpr
#  define MX_EXIT_VISIT_CXXThisExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXThisExpr)
  MX_ENTER_VISIT_CXXThisExpr
  MX_VISIT_BASE(CXXThisExpr, Expr)
  MX_VISIT_ENTITY(CXXThisExpr, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_BOOL(CXXThisExpr, is_implicit, 89, MX_APPLY_METHOD, IsImplicit, bool, NthStmt)
  MX_EXIT_VISIT_CXXThisExpr
MX_END_VISIT_STMT(CXXThisExpr)

#ifndef MX_ENTER_VISIT_CXXStdInitializerListExpr
#  define MX_ENTER_VISIT_CXXStdInitializerListExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXStdInitializerListExpr
#  define MX_EXIT_VISIT_CXXStdInitializerListExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXStdInitializerListExpr)
  MX_ENTER_VISIT_CXXStdInitializerListExpr
  MX_VISIT_BASE(CXXStdInitializerListExpr, Expr)
  MX_VISIT_ENTITY(CXXStdInitializerListExpr, sub_expression, 37, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_EXIT_VISIT_CXXStdInitializerListExpr
MX_END_VISIT_STMT(CXXStdInitializerListExpr)

#ifndef MX_ENTER_VISIT_CXXScalarValueInitExpr
#  define MX_ENTER_VISIT_CXXScalarValueInitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXScalarValueInitExpr
#  define MX_EXIT_VISIT_CXXScalarValueInitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXScalarValueInitExpr)
  MX_ENTER_VISIT_CXXScalarValueInitExpr
  MX_VISIT_BASE(CXXScalarValueInitExpr, Expr)
  MX_VISIT_ENTITY(CXXScalarValueInitExpr, r_paren_token, 37, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_CXXScalarValueInitExpr
MX_END_VISIT_STMT(CXXScalarValueInitExpr)

#ifndef MX_ENTER_VISIT_CXXRewrittenBinaryOperator
#  define MX_ENTER_VISIT_CXXRewrittenBinaryOperator MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXRewrittenBinaryOperator
#  define MX_EXIT_VISIT_CXXRewrittenBinaryOperator MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXRewrittenBinaryOperator)
  MX_ENTER_VISIT_CXXRewrittenBinaryOperator
  MX_VISIT_BASE(CXXRewrittenBinaryOperator, Expr)
  MX_VISIT_ENTITY(CXXRewrittenBinaryOperator, lhs, 37, MX_APPLY_METHOD, LHS, Expr, NthStmt)
  MX_VISIT_ENUM(CXXRewrittenBinaryOperator, opcode, 95, MX_APPLY_METHOD, Opcode, BinaryOperatorKind, NthStmt)
  MX_VISIT_TEXT(CXXRewrittenBinaryOperator, opcode_string, 60, MX_APPLY_METHOD, OpcodeString, basic_string_view, NthStmt)
  MX_VISIT_ENUM(CXXRewrittenBinaryOperator, operator_, 97, MX_APPLY_METHOD, Operator, BinaryOperatorKind, NthStmt)
  MX_VISIT_ENTITY(CXXRewrittenBinaryOperator, operator_token, 38, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXRewrittenBinaryOperator, rhs, 39, MX_APPLY_METHOD, RHS, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXRewrittenBinaryOperator, semantic_form, 40, MX_APPLY_METHOD, SemanticForm, Expr, NthStmt)
  MX_VISIT_BOOL(CXXRewrittenBinaryOperator, is_assignment_operation, 89, MX_APPLY_METHOD, IsAssignmentOperation, bool, NthStmt)
  MX_VISIT_BOOL(CXXRewrittenBinaryOperator, is_comparison_operation, 90, MX_APPLY_METHOD, IsComparisonOperation, bool, NthStmt)
  MX_VISIT_BOOL(CXXRewrittenBinaryOperator, is_reversed, 91, MX_APPLY_METHOD, IsReversed, bool, NthStmt)
  MX_EXIT_VISIT_CXXRewrittenBinaryOperator
MX_END_VISIT_STMT(CXXRewrittenBinaryOperator)

#ifndef MX_ENTER_VISIT_CXXPseudoDestructorExpr
#  define MX_ENTER_VISIT_CXXPseudoDestructorExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXPseudoDestructorExpr
#  define MX_EXIT_VISIT_CXXPseudoDestructorExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXPseudoDestructorExpr)
  MX_ENTER_VISIT_CXXPseudoDestructorExpr
  MX_VISIT_BASE(CXXPseudoDestructorExpr, Expr)
  MX_VISIT_ENTITY(CXXPseudoDestructorExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXPseudoDestructorExpr, colon_colon_token, 38, MX_APPLY_METHOD, ColonColonToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXPseudoDestructorExpr, destroyed_type, 39, MX_APPLY_METHOD, DestroyedType, Type, NthStmt)
  MX_VISIT_ENTITY(CXXPseudoDestructorExpr, destroyed_type_token, 40, MX_APPLY_METHOD, DestroyedTypeToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXPseudoDestructorExpr, operator_token, 41, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXPseudoDestructorExpr, tilde_token, 42, MX_APPLY_METHOD, TildeToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXPseudoDestructorExpr, has_qualifier, 89, MX_APPLY_METHOD, HasQualifier, bool, NthStmt)
  MX_VISIT_BOOL(CXXPseudoDestructorExpr, is_arrow, 90, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_EXIT_VISIT_CXXPseudoDestructorExpr
MX_END_VISIT_STMT(CXXPseudoDestructorExpr)

#ifndef MX_ENTER_VISIT_CXXParenListInitExpr
#  define MX_ENTER_VISIT_CXXParenListInitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXParenListInitExpr
#  define MX_EXIT_VISIT_CXXParenListInitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXParenListInitExpr)
  MX_ENTER_VISIT_CXXParenListInitExpr
  MX_VISIT_BASE(CXXParenListInitExpr, Expr)
  MX_VISIT_ENTITY(CXXParenListInitExpr, array_filler, 37, MX_APPLY_METHOD, ArrayFiller, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXParenListInitExpr, initializer_token, 38, MX_APPLY_METHOD, InitializerToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXParenListInitExpr, initialized_field_in_union, 39, MX_APPLY_METHOD, InitializedFieldInUnion, FieldDecl, NthStmt)
  MX_EXIT_VISIT_CXXParenListInitExpr
MX_END_VISIT_STMT(CXXParenListInitExpr)

#ifndef MX_ENTER_VISIT_CXXNullPtrLiteralExpr
#  define MX_ENTER_VISIT_CXXNullPtrLiteralExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXNullPtrLiteralExpr
#  define MX_EXIT_VISIT_CXXNullPtrLiteralExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXNullPtrLiteralExpr)
  MX_ENTER_VISIT_CXXNullPtrLiteralExpr
  MX_VISIT_BASE(CXXNullPtrLiteralExpr, Expr)
  MX_VISIT_ENTITY(CXXNullPtrLiteralExpr, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_EXIT_VISIT_CXXNullPtrLiteralExpr
MX_END_VISIT_STMT(CXXNullPtrLiteralExpr)

#ifndef MX_ENTER_VISIT_CXXNoexceptExpr
#  define MX_ENTER_VISIT_CXXNoexceptExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXNoexceptExpr
#  define MX_EXIT_VISIT_CXXNoexceptExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXNoexceptExpr)
  MX_ENTER_VISIT_CXXNoexceptExpr
  MX_VISIT_BASE(CXXNoexceptExpr, Expr)
  MX_VISIT_ENTITY(CXXNoexceptExpr, operand, 37, MX_APPLY_METHOD, Operand, Expr, NthStmt)
  MX_VISIT_BOOL(CXXNoexceptExpr, value, 89, MX_APPLY_METHOD, Value, bool, NthStmt)
  MX_EXIT_VISIT_CXXNoexceptExpr
MX_END_VISIT_STMT(CXXNoexceptExpr)

#ifndef MX_ENTER_VISIT_CXXNewExpr
#  define MX_ENTER_VISIT_CXXNewExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXNewExpr
#  define MX_EXIT_VISIT_CXXNewExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXNewExpr)
  MX_ENTER_VISIT_CXXNewExpr
  MX_VISIT_BASE(CXXNewExpr, Expr)
  MX_VISIT_BOOL(CXXNewExpr, does_usual_array_delete_want_size, 89, MX_APPLY_METHOD, DoesUsualArrayDeleteWantSize, bool, NthStmt)
  MX_VISIT_ENTITY(CXXNewExpr, allocated_type, 37, MX_APPLY_METHOD, AllocatedType, Type, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXNewExpr, array_size, 38, MX_APPLY_METHOD, ArraySize, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXNewExpr, construct_expression, 39, MX_APPLY_METHOD, ConstructExpression, CXXConstructExpr, NthStmt)
  MX_VISIT_TOKEN_RANGE(CXXNewExpr, direct_initializer_range, 40, 41, NthStmt)
  MX_VISIT_ENUM(CXXNewExpr, initialization_style, 95, MX_APPLY_METHOD, InitializationStyle, CXXNewExprInitializationStyle, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXNewExpr, initializer, 42, MX_APPLY_METHOD, Initializer, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXNewExpr, operator_delete, 43, MX_APPLY_METHOD, OperatorDelete, FunctionDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXNewExpr, operator_new, 44, MX_APPLY_METHOD, OperatorNew, FunctionDecl, NthStmt)
  MX_VISIT_TOKEN_RANGE(CXXNewExpr, type_id_parentheses, 45, 46, NthStmt)
  MX_VISIT_BOOL(CXXNewExpr, has_initializer, 90, MX_APPLY_METHOD, HasInitializer, bool, NthStmt)
  MX_VISIT_BOOL(CXXNewExpr, is_array, 91, MX_APPLY_METHOD, IsArray, bool, NthStmt)
  MX_VISIT_BOOL(CXXNewExpr, is_global_new, 92, MX_APPLY_METHOD, IsGlobalNew, bool, NthStmt)
  MX_VISIT_BOOL(CXXNewExpr, is_parenthesis_type_id, 93, MX_APPLY_METHOD, IsParenthesisTypeId, bool, NthStmt)
  MX_VISIT_BOOL(CXXNewExpr, pass_alignment, 94, MX_APPLY_METHOD, PassAlignment, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(CXXNewExpr, placement_arguments, 15, MX_APPLY_METHOD, PlacementArguments, Expr, NthStmt)
  MX_VISIT_BOOL(CXXNewExpr, should_null_check_allocation, 96, MX_APPLY_METHOD, ShouldNullCheckAllocation, bool, NthStmt)
  MX_EXIT_VISIT_CXXNewExpr
MX_END_VISIT_STMT(CXXNewExpr)

#ifndef MX_ENTER_VISIT_CXXInheritedCtorInitExpr
#  define MX_ENTER_VISIT_CXXInheritedCtorInitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXInheritedCtorInitExpr
#  define MX_EXIT_VISIT_CXXInheritedCtorInitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXInheritedCtorInitExpr)
  MX_ENTER_VISIT_CXXInheritedCtorInitExpr
  MX_VISIT_BASE(CXXInheritedCtorInitExpr, Expr)
  MX_VISIT_BOOL(CXXInheritedCtorInitExpr, constructs_virtual_base, 89, MX_APPLY_METHOD, ConstructsVirtualBase, bool, NthStmt)
  MX_VISIT_ENUM(CXXInheritedCtorInitExpr, construction_kind, 95, MX_APPLY_METHOD, ConstructionKind, CXXConstructExprConstructionKind, NthStmt)
  MX_VISIT_ENTITY(CXXInheritedCtorInitExpr, constructor, 37, MX_APPLY_METHOD, Constructor, CXXConstructorDecl, NthStmt)
  MX_VISIT_ENTITY(CXXInheritedCtorInitExpr, token, 38, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_BOOL(CXXInheritedCtorInitExpr, inherited_from_virtual_base, 90, MX_APPLY_METHOD, InheritedFromVirtualBase, bool, NthStmt)
  MX_EXIT_VISIT_CXXInheritedCtorInitExpr
MX_END_VISIT_STMT(CXXInheritedCtorInitExpr)

#ifndef MX_ENTER_VISIT_CXXFoldExpr
#  define MX_ENTER_VISIT_CXXFoldExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXFoldExpr
#  define MX_EXIT_VISIT_CXXFoldExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXFoldExpr)
  MX_ENTER_VISIT_CXXFoldExpr
  MX_VISIT_BASE(CXXFoldExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(CXXFoldExpr, callee, 37, MX_APPLY_METHOD, Callee, UnresolvedLookupExpr, NthStmt)
  MX_VISIT_ENTITY(CXXFoldExpr, ellipsis_token, 38, MX_APPLY_METHOD, EllipsisToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXFoldExpr, initializer, 39, MX_APPLY_METHOD, Initializer, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXFoldExpr, lhs, 40, MX_APPLY_METHOD, LHS, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXFoldExpr, l_paren_token, 41, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENUM(CXXFoldExpr, operator_, 95, MX_APPLY_METHOD, Operator, BinaryOperatorKind, NthStmt)
  MX_VISIT_ENTITY(CXXFoldExpr, pattern, 42, MX_APPLY_METHOD, Pattern, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXFoldExpr, rhs, 43, MX_APPLY_METHOD, RHS, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXFoldExpr, r_paren_token, 44, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXFoldExpr, is_left_fold, 89, MX_APPLY_METHOD, IsLeftFold, bool, NthStmt)
  MX_VISIT_BOOL(CXXFoldExpr, is_right_fold, 90, MX_APPLY_METHOD, IsRightFold, bool, NthStmt)
  MX_EXIT_VISIT_CXXFoldExpr
MX_END_VISIT_STMT(CXXFoldExpr)

#ifndef MX_ENTER_VISIT_CXXDependentScopeMemberExpr
#  define MX_ENTER_VISIT_CXXDependentScopeMemberExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXDependentScopeMemberExpr
#  define MX_EXIT_VISIT_CXXDependentScopeMemberExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXDependentScopeMemberExpr)
  MX_ENTER_VISIT_CXXDependentScopeMemberExpr
  MX_VISIT_BASE(CXXDependentScopeMemberExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(CXXDependentScopeMemberExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXDependentScopeMemberExpr, base_type, 38, MX_APPLY_METHOD, BaseType, Type, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXDependentScopeMemberExpr, first_qualifier_found_in_scope, 39, MX_APPLY_METHOD, FirstQualifierFoundInScope, NamedDecl, NthStmt)
  MX_VISIT_ENTITY(CXXDependentScopeMemberExpr, l_angle_token, 40, MX_APPLY_METHOD, LAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXDependentScopeMemberExpr, member_token, 41, MX_APPLY_METHOD, MemberToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXDependentScopeMemberExpr, operator_token, 42, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXDependentScopeMemberExpr, r_angle_token, 43, MX_APPLY_METHOD, RAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(CXXDependentScopeMemberExpr, template_keyword_token, 44, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXDependentScopeMemberExpr, has_explicit_template_arguments, 89, MX_APPLY_METHOD, HasExplicitTemplateArguments, bool, NthStmt)
  MX_VISIT_BOOL(CXXDependentScopeMemberExpr, has_template_keyword, 90, MX_APPLY_METHOD, HasTemplateKeyword, bool, NthStmt)
  MX_VISIT_BOOL(CXXDependentScopeMemberExpr, is_arrow, 91, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_VISIT_BOOL(CXXDependentScopeMemberExpr, is_implicit_access, 92, MX_APPLY_METHOD, IsImplicitAccess, bool, NthStmt)
  MX_EXIT_VISIT_CXXDependentScopeMemberExpr
MX_END_VISIT_STMT(CXXDependentScopeMemberExpr)

#ifndef MX_ENTER_VISIT_CXXDeleteExpr
#  define MX_ENTER_VISIT_CXXDeleteExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXDeleteExpr
#  define MX_EXIT_VISIT_CXXDeleteExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXDeleteExpr)
  MX_ENTER_VISIT_CXXDeleteExpr
  MX_VISIT_BASE(CXXDeleteExpr, Expr)
  MX_VISIT_BOOL(CXXDeleteExpr, does_usual_array_delete_want_size, 89, MX_APPLY_METHOD, DoesUsualArrayDeleteWantSize, bool, NthStmt)
  MX_VISIT_ENTITY(CXXDeleteExpr, argument, 37, MX_APPLY_METHOD, Argument, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXDeleteExpr, destroyed_type, 38, MX_APPLY_METHOD, DestroyedType, Type, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXDeleteExpr, operator_delete, 39, MX_APPLY_METHOD, OperatorDelete, FunctionDecl, NthStmt)
  MX_VISIT_BOOL(CXXDeleteExpr, is_array_form, 90, MX_APPLY_METHOD, IsArrayForm, bool, NthStmt)
  MX_VISIT_BOOL(CXXDeleteExpr, is_array_form_as_written, 91, MX_APPLY_METHOD, IsArrayFormAsWritten, bool, NthStmt)
  MX_VISIT_BOOL(CXXDeleteExpr, is_global_delete, 92, MX_APPLY_METHOD, IsGlobalDelete, bool, NthStmt)
  MX_EXIT_VISIT_CXXDeleteExpr
MX_END_VISIT_STMT(CXXDeleteExpr)

#ifndef MX_ENTER_VISIT_CXXDefaultInitExpr
#  define MX_ENTER_VISIT_CXXDefaultInitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXDefaultInitExpr
#  define MX_EXIT_VISIT_CXXDefaultInitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXDefaultInitExpr)
  MX_ENTER_VISIT_CXXDefaultInitExpr
  MX_VISIT_BASE(CXXDefaultInitExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(CXXDefaultInitExpr, expression, 37, MX_APPLY_METHOD, Expression, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXDefaultInitExpr, field, 38, MX_APPLY_METHOD, Field, FieldDecl, NthStmt)
  MX_VISIT_ENTITY(CXXDefaultInitExpr, rewritten_expression, 39, MX_APPLY_METHOD, RewrittenExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXDefaultInitExpr, used_token, 40, MX_APPLY_METHOD, UsedToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXDefaultInitExpr, has_rewritten_initializer, 89, MX_APPLY_METHOD, HasRewrittenInitializer, bool, NthStmt)
  MX_EXIT_VISIT_CXXDefaultInitExpr
MX_END_VISIT_STMT(CXXDefaultInitExpr)

#ifndef MX_ENTER_VISIT_CXXDefaultArgExpr
#  define MX_ENTER_VISIT_CXXDefaultArgExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXDefaultArgExpr
#  define MX_EXIT_VISIT_CXXDefaultArgExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXDefaultArgExpr)
  MX_ENTER_VISIT_CXXDefaultArgExpr
  MX_VISIT_BASE(CXXDefaultArgExpr, Expr)
  MX_VISIT_ENTITY(CXXDefaultArgExpr, adjusted_rewritten_expression, 37, MX_APPLY_METHOD, AdjustedRewrittenExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXDefaultArgExpr, expression, 38, MX_APPLY_METHOD, Expression, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXDefaultArgExpr, parameter, 39, MX_APPLY_METHOD, Parameter, ParmVarDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CXXDefaultArgExpr, rewritten_expression, 40, MX_APPLY_METHOD, RewrittenExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(CXXDefaultArgExpr, used_token, 41, MX_APPLY_METHOD, UsedToken, Token, NthStmt)
  MX_VISIT_BOOL(CXXDefaultArgExpr, has_rewritten_initializer, 89, MX_APPLY_METHOD, HasRewrittenInitializer, bool, NthStmt)
  MX_EXIT_VISIT_CXXDefaultArgExpr
MX_END_VISIT_STMT(CXXDefaultArgExpr)

#ifndef MX_ENTER_VISIT_CXXConstructExpr
#  define MX_ENTER_VISIT_CXXConstructExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXConstructExpr
#  define MX_EXIT_VISIT_CXXConstructExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXConstructExpr)
  MX_ENTER_VISIT_CXXConstructExpr
  MX_VISIT_BASE(CXXConstructExpr, Expr)
  MX_VISIT_ENTITY_LIST(CXXConstructExpr, arguments, 15, MX_APPLY_METHOD, Arguments, Expr, NthStmt)
  MX_VISIT_ENUM(CXXConstructExpr, construction_kind, 95, MX_APPLY_METHOD, ConstructionKind, CXXConstructExprConstructionKind, NthStmt)
  MX_VISIT_ENTITY(CXXConstructExpr, constructor, 37, MX_APPLY_METHOD, Constructor, CXXConstructorDecl, NthStmt)
  MX_VISIT_ENTITY(CXXConstructExpr, token, 38, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_TOKEN_RANGE(CXXConstructExpr, parenthesis_or_brace_range, 39, 40, NthStmt)
  MX_VISIT_BOOL(CXXConstructExpr, had_multiple_candidates, 89, MX_APPLY_METHOD, HadMultipleCandidates, bool, NthStmt)
  MX_VISIT_BOOL(CXXConstructExpr, is_elidable, 90, MX_APPLY_METHOD, IsElidable, bool, NthStmt)
  MX_VISIT_BOOL(CXXConstructExpr, is_immediate_escalating, 91, MX_APPLY_METHOD, IsImmediateEscalating, bool, NthStmt)
  MX_VISIT_BOOL(CXXConstructExpr, is_list_initialization, 92, MX_APPLY_METHOD, IsListInitialization, bool, NthStmt)
  MX_VISIT_BOOL(CXXConstructExpr, is_std_initializer_list_initialization, 93, MX_APPLY_METHOD, IsStdInitializerListInitialization, bool, NthStmt)
  MX_VISIT_BOOL(CXXConstructExpr, requires_zero_initialization, 94, MX_APPLY_METHOD, RequiresZeroInitialization, bool, NthStmt)
  MX_EXIT_VISIT_CXXConstructExpr
MX_END_VISIT_STMT(CXXConstructExpr)

#ifndef MX_ENTER_VISIT_CXXTemporaryObjectExpr
#  define MX_ENTER_VISIT_CXXTemporaryObjectExpr MX_ENTER_VISIT_CXXConstructExpr
#endif
#ifndef MX_EXIT_VISIT_CXXTemporaryObjectExpr
#  define MX_EXIT_VISIT_CXXTemporaryObjectExpr MX_EXIT_VISIT_CXXConstructExpr
#endif

MX_BEGIN_VISIT_STMT(CXXTemporaryObjectExpr)
  MX_ENTER_VISIT_CXXTemporaryObjectExpr
  MX_VISIT_BASE(CXXTemporaryObjectExpr, CXXConstructExpr)
  MX_EXIT_VISIT_CXXTemporaryObjectExpr
MX_END_VISIT_STMT(CXXTemporaryObjectExpr)

#ifndef MX_ENTER_VISIT_CXXBoolLiteralExpr
#  define MX_ENTER_VISIT_CXXBoolLiteralExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXBoolLiteralExpr
#  define MX_EXIT_VISIT_CXXBoolLiteralExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXBoolLiteralExpr)
  MX_ENTER_VISIT_CXXBoolLiteralExpr
  MX_VISIT_BASE(CXXBoolLiteralExpr, Expr)
  MX_VISIT_ENTITY(CXXBoolLiteralExpr, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_BOOL(CXXBoolLiteralExpr, value, 89, MX_APPLY_METHOD, Value, bool, NthStmt)
  MX_EXIT_VISIT_CXXBoolLiteralExpr
MX_END_VISIT_STMT(CXXBoolLiteralExpr)

#ifndef MX_ENTER_VISIT_CXXBindTemporaryExpr
#  define MX_ENTER_VISIT_CXXBindTemporaryExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_CXXBindTemporaryExpr
#  define MX_EXIT_VISIT_CXXBindTemporaryExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(CXXBindTemporaryExpr)
  MX_ENTER_VISIT_CXXBindTemporaryExpr
  MX_VISIT_BASE(CXXBindTemporaryExpr, Expr)
  MX_VISIT_ENTITY(CXXBindTemporaryExpr, sub_expression, 37, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_EXIT_VISIT_CXXBindTemporaryExpr
MX_END_VISIT_STMT(CXXBindTemporaryExpr)

#ifndef MX_ENTER_VISIT_BlockExpr
#  define MX_ENTER_VISIT_BlockExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_BlockExpr
#  define MX_EXIT_VISIT_BlockExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(BlockExpr)
  MX_ENTER_VISIT_BlockExpr
  MX_VISIT_BASE(BlockExpr, Expr)
  MX_VISIT_ENTITY(BlockExpr, block_declaration, 37, MX_APPLY_METHOD, BlockDeclaration, BlockDecl, NthStmt)
  MX_VISIT_ENTITY(BlockExpr, body, 38, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(BlockExpr, caret_token, 39, MX_APPLY_METHOD, CaretToken, Token, NthStmt)
  MX_VISIT_ENTITY(BlockExpr, function_type, 40, MX_APPLY_METHOD, FunctionType, FunctionProtoType, NthStmt)
  MX_EXIT_VISIT_BlockExpr
MX_END_VISIT_STMT(BlockExpr)

#ifndef MX_ENTER_VISIT_BinaryOperator
#  define MX_ENTER_VISIT_BinaryOperator MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_BinaryOperator
#  define MX_EXIT_VISIT_BinaryOperator MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(BinaryOperator)
  MX_ENTER_VISIT_BinaryOperator
  MX_VISIT_BASE(BinaryOperator, Expr)
  MX_VISIT_ENTITY(BinaryOperator, lhs, 37, MX_APPLY_METHOD, LHS, Expr, NthStmt)
  MX_VISIT_ENUM(BinaryOperator, opcode, 95, MX_APPLY_METHOD, Opcode, BinaryOperatorKind, NthStmt)
  MX_VISIT_TEXT(BinaryOperator, opcode_string, 60, MX_APPLY_METHOD, OpcodeString, basic_string_view, NthStmt)
  MX_VISIT_ENTITY(BinaryOperator, operator_token, 38, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(BinaryOperator, rhs, 39, MX_APPLY_METHOD, RHS, Expr, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, has_stored_fp_features, 89, MX_APPLY_METHOD, HasStoredFPFeatures, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_additive_operation, 90, MX_APPLY_METHOD, IsAdditiveOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_assignment_operation, 91, MX_APPLY_METHOD, IsAssignmentOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_bitwise_operation, 92, MX_APPLY_METHOD, IsBitwiseOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_comma_operation, 93, MX_APPLY_METHOD, IsCommaOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_comparison_operation, 94, MX_APPLY_METHOD, IsComparisonOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_compound_assignment_operation, 96, MX_APPLY_METHOD, IsCompoundAssignmentOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_equality_operation, 98, MX_APPLY_METHOD, IsEqualityOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_logical_operation, 99, MX_APPLY_METHOD, IsLogicalOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_multiplicative_operation, 100, MX_APPLY_METHOD, IsMultiplicativeOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_pointer_memory_operation, 101, MX_APPLY_METHOD, IsPointerMemoryOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_relational_operation, 102, MX_APPLY_METHOD, IsRelationalOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_shift_assign_operation, 103, MX_APPLY_METHOD, IsShiftAssignOperation, bool, NthStmt)
  MX_VISIT_BOOL(BinaryOperator, is_shift_operation, 104, MX_APPLY_METHOD, IsShiftOperation, bool, NthStmt)
  MX_EXIT_VISIT_BinaryOperator
MX_END_VISIT_STMT(BinaryOperator)

#ifndef MX_ENTER_VISIT_CompoundAssignOperator
#  define MX_ENTER_VISIT_CompoundAssignOperator MX_ENTER_VISIT_BinaryOperator
#endif
#ifndef MX_EXIT_VISIT_CompoundAssignOperator
#  define MX_EXIT_VISIT_CompoundAssignOperator MX_EXIT_VISIT_BinaryOperator
#endif

MX_BEGIN_VISIT_STMT(CompoundAssignOperator)
  MX_ENTER_VISIT_CompoundAssignOperator
  MX_VISIT_BASE(CompoundAssignOperator, BinaryOperator)
  MX_VISIT_ENTITY(CompoundAssignOperator, computation_lhs_type, 40, MX_APPLY_METHOD, ComputationLHSType, Type, NthStmt)
  MX_VISIT_ENTITY(CompoundAssignOperator, computation_result_type, 41, MX_APPLY_METHOD, ComputationResultType, Type, NthStmt)
  MX_EXIT_VISIT_CompoundAssignOperator
MX_END_VISIT_STMT(CompoundAssignOperator)

#ifndef MX_ENTER_VISIT_AtomicExpr
#  define MX_ENTER_VISIT_AtomicExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_AtomicExpr
#  define MX_EXIT_VISIT_AtomicExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(AtomicExpr)
  MX_ENTER_VISIT_AtomicExpr
  MX_VISIT_BASE(AtomicExpr, Expr)
  MX_VISIT_ENTITY(AtomicExpr, builtin_token, 37, MX_APPLY_METHOD, BuiltinToken, Token, NthStmt)
  MX_VISIT_ENUM(AtomicExpr, operation, 95, MX_APPLY_METHOD, Operation, AtomicExprAtomicOp, NthStmt)
  MX_VISIT_ENTITY(AtomicExpr, order, 38, MX_APPLY_METHOD, Order, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(AtomicExpr, order_fail, 39, MX_APPLY_METHOD, OrderFail, Expr, NthStmt)
  MX_VISIT_ENTITY(AtomicExpr, pointer, 40, MX_APPLY_METHOD, Pointer, Expr, NthStmt)
  MX_VISIT_ENTITY(AtomicExpr, r_paren_token, 41, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(AtomicExpr, scope, 42, MX_APPLY_METHOD, Scope, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(AtomicExpr, value1, 43, MX_APPLY_METHOD, Value1, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(AtomicExpr, value2, 44, MX_APPLY_METHOD, Value2, Expr, NthStmt)
  MX_VISIT_ENTITY(AtomicExpr, value_type, 45, MX_APPLY_METHOD, ValueType, Type, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(AtomicExpr, weak, 46, MX_APPLY_METHOD, Weak, Expr, NthStmt)
  MX_VISIT_BOOL(AtomicExpr, is_cmp_x_chg, 89, MX_APPLY_METHOD, IsCmpXChg, bool, NthStmt)
  MX_VISIT_BOOL(AtomicExpr, is_open_cl, 90, MX_APPLY_METHOD, IsOpenCL, bool, NthStmt)
  MX_VISIT_BOOL(AtomicExpr, is_volatile, 91, MX_APPLY_METHOD, IsVolatile, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(AtomicExpr, sub_expressions, 15, MX_APPLY_METHOD, SubExpressions, Expr, NthStmt)
  MX_EXIT_VISIT_AtomicExpr
MX_END_VISIT_STMT(AtomicExpr)

#ifndef MX_ENTER_VISIT_AsTypeExpr
#  define MX_ENTER_VISIT_AsTypeExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_AsTypeExpr
#  define MX_EXIT_VISIT_AsTypeExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(AsTypeExpr)
  MX_ENTER_VISIT_AsTypeExpr
  MX_VISIT_BASE(AsTypeExpr, Expr)
  MX_VISIT_ENTITY(AsTypeExpr, builtin_token, 37, MX_APPLY_METHOD, BuiltinToken, Token, NthStmt)
  MX_VISIT_ENTITY(AsTypeExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(AsTypeExpr, src_expression, 39, MX_APPLY_METHOD, SrcExpression, Expr, NthStmt)
  MX_EXIT_VISIT_AsTypeExpr
MX_END_VISIT_STMT(AsTypeExpr)

#ifndef MX_ENTER_VISIT_ArrayTypeTraitExpr
#  define MX_ENTER_VISIT_ArrayTypeTraitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ArrayTypeTraitExpr
#  define MX_EXIT_VISIT_ArrayTypeTraitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ArrayTypeTraitExpr)
  MX_ENTER_VISIT_ArrayTypeTraitExpr
  MX_VISIT_BASE(ArrayTypeTraitExpr, Expr)
  MX_VISIT_ENTITY(ArrayTypeTraitExpr, dimension_expression, 37, MX_APPLY_METHOD, DimensionExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(ArrayTypeTraitExpr, queried_type, 38, MX_APPLY_METHOD, QueriedType, Type, NthStmt)
  MX_VISIT_ENUM(ArrayTypeTraitExpr, trait, 95, MX_APPLY_METHOD, Trait, ArrayTypeTrait, NthStmt)
  MX_EXIT_VISIT_ArrayTypeTraitExpr
MX_END_VISIT_STMT(ArrayTypeTraitExpr)

#ifndef MX_ENTER_VISIT_ArraySubscriptExpr
#  define MX_ENTER_VISIT_ArraySubscriptExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ArraySubscriptExpr
#  define MX_EXIT_VISIT_ArraySubscriptExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ArraySubscriptExpr)
  MX_ENTER_VISIT_ArraySubscriptExpr
  MX_VISIT_BASE(ArraySubscriptExpr, Expr)
  MX_VISIT_ENTITY(ArraySubscriptExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(ArraySubscriptExpr, index, 38, MX_APPLY_METHOD, Index, Expr, NthStmt)
  MX_VISIT_ENTITY(ArraySubscriptExpr, lhs, 39, MX_APPLY_METHOD, LHS, Expr, NthStmt)
  MX_VISIT_ENTITY(ArraySubscriptExpr, r_bracket_token, 40, MX_APPLY_METHOD, RBracketToken, Token, NthStmt)
  MX_VISIT_ENTITY(ArraySubscriptExpr, rhs, 41, MX_APPLY_METHOD, RHS, Expr, NthStmt)
  MX_EXIT_VISIT_ArraySubscriptExpr
MX_END_VISIT_STMT(ArraySubscriptExpr)

#ifndef MX_ENTER_VISIT_ArrayInitLoopExpr
#  define MX_ENTER_VISIT_ArrayInitLoopExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ArrayInitLoopExpr
#  define MX_EXIT_VISIT_ArrayInitLoopExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ArrayInitLoopExpr)
  MX_ENTER_VISIT_ArrayInitLoopExpr
  MX_VISIT_BASE(ArrayInitLoopExpr, Expr)
  MX_VISIT_ENTITY(ArrayInitLoopExpr, common_expression, 37, MX_APPLY_METHOD, CommonExpression, OpaqueValueExpr, NthStmt)
  MX_VISIT_ENTITY(ArrayInitLoopExpr, sub_expression, 38, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_EXIT_VISIT_ArrayInitLoopExpr
MX_END_VISIT_STMT(ArrayInitLoopExpr)

#ifndef MX_ENTER_VISIT_ArrayInitIndexExpr
#  define MX_ENTER_VISIT_ArrayInitIndexExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ArrayInitIndexExpr
#  define MX_EXIT_VISIT_ArrayInitIndexExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ArrayInitIndexExpr)
  MX_ENTER_VISIT_ArrayInitIndexExpr
  MX_VISIT_BASE(ArrayInitIndexExpr, Expr)
  MX_EXIT_VISIT_ArrayInitIndexExpr
MX_END_VISIT_STMT(ArrayInitIndexExpr)

#ifndef MX_ENTER_VISIT_AddrLabelExpr
#  define MX_ENTER_VISIT_AddrLabelExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_AddrLabelExpr
#  define MX_EXIT_VISIT_AddrLabelExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(AddrLabelExpr)
  MX_ENTER_VISIT_AddrLabelExpr
  MX_VISIT_BASE(AddrLabelExpr, Expr)
  MX_VISIT_ENTITY(AddrLabelExpr, amp_amp_token, 37, MX_APPLY_METHOD, AmpAmpToken, Token, NthStmt)
  MX_VISIT_ENTITY(AddrLabelExpr, label, 38, MX_APPLY_METHOD, Label, LabelDecl, NthStmt)
  MX_VISIT_ENTITY(AddrLabelExpr, label_token, 39, MX_APPLY_METHOD, LabelToken, Token, NthStmt)
  MX_EXIT_VISIT_AddrLabelExpr
MX_END_VISIT_STMT(AddrLabelExpr)

#ifndef MX_ENTER_VISIT_AbstractConditionalOperator
#  define MX_ENTER_VISIT_AbstractConditionalOperator MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_AbstractConditionalOperator
#  define MX_EXIT_VISIT_AbstractConditionalOperator MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(AbstractConditionalOperator)
  MX_ENTER_VISIT_AbstractConditionalOperator
  MX_VISIT_BASE(AbstractConditionalOperator, Expr)
  MX_VISIT_ENTITY(AbstractConditionalOperator, colon_token, 37, MX_APPLY_METHOD, ColonToken, Token, NthStmt)
  MX_VISIT_ENTITY(AbstractConditionalOperator, condition, 38, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_ENTITY(AbstractConditionalOperator, false_expression, 39, MX_APPLY_METHOD, FalseExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(AbstractConditionalOperator, question_token, 40, MX_APPLY_METHOD, QuestionToken, Token, NthStmt)
  MX_VISIT_ENTITY(AbstractConditionalOperator, true_expression, 41, MX_APPLY_METHOD, TrueExpression, Expr, NthStmt)
  MX_EXIT_VISIT_AbstractConditionalOperator
MX_END_VISIT_STMT(AbstractConditionalOperator)

#ifndef MX_ENTER_VISIT_ConditionalOperator
#  define MX_ENTER_VISIT_ConditionalOperator MX_ENTER_VISIT_AbstractConditionalOperator
#endif
#ifndef MX_EXIT_VISIT_ConditionalOperator
#  define MX_EXIT_VISIT_ConditionalOperator MX_EXIT_VISIT_AbstractConditionalOperator
#endif

MX_BEGIN_VISIT_STMT(ConditionalOperator)
  MX_ENTER_VISIT_ConditionalOperator
  MX_VISIT_BASE(ConditionalOperator, AbstractConditionalOperator)
  MX_VISIT_ENTITY(ConditionalOperator, lhs, 42, MX_APPLY_METHOD, LHS, Expr, NthStmt)
  MX_VISIT_ENTITY(ConditionalOperator, rhs, 43, MX_APPLY_METHOD, RHS, Expr, NthStmt)
  MX_EXIT_VISIT_ConditionalOperator
MX_END_VISIT_STMT(ConditionalOperator)

#ifndef MX_ENTER_VISIT_BinaryConditionalOperator
#  define MX_ENTER_VISIT_BinaryConditionalOperator MX_ENTER_VISIT_AbstractConditionalOperator
#endif
#ifndef MX_EXIT_VISIT_BinaryConditionalOperator
#  define MX_EXIT_VISIT_BinaryConditionalOperator MX_EXIT_VISIT_AbstractConditionalOperator
#endif

MX_BEGIN_VISIT_STMT(BinaryConditionalOperator)
  MX_ENTER_VISIT_BinaryConditionalOperator
  MX_VISIT_BASE(BinaryConditionalOperator, AbstractConditionalOperator)
  MX_VISIT_ENTITY(BinaryConditionalOperator, common, 42, MX_APPLY_METHOD, Common, Expr, NthStmt)
  MX_VISIT_ENTITY(BinaryConditionalOperator, opaque_value, 43, MX_APPLY_METHOD, OpaqueValue, OpaqueValueExpr, NthStmt)
  MX_EXIT_VISIT_BinaryConditionalOperator
MX_END_VISIT_STMT(BinaryConditionalOperator)

#ifndef MX_ENTER_VISIT_VAArgExpr
#  define MX_ENTER_VISIT_VAArgExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_VAArgExpr
#  define MX_EXIT_VISIT_VAArgExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(VAArgExpr)
  MX_ENTER_VISIT_VAArgExpr
  MX_VISIT_BASE(VAArgExpr, Expr)
  MX_VISIT_ENTITY(VAArgExpr, builtin_token, 37, MX_APPLY_METHOD, BuiltinToken, Token, NthStmt)
  MX_VISIT_ENTITY(VAArgExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(VAArgExpr, sub_expression, 39, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_VISIT_BOOL(VAArgExpr, is_microsoft_abi, 89, MX_APPLY_METHOD, IsMicrosoftABI, bool, NthStmt)
  MX_EXIT_VISIT_VAArgExpr
MX_END_VISIT_STMT(VAArgExpr)

#ifndef MX_ENTER_VISIT_UnaryOperator
#  define MX_ENTER_VISIT_UnaryOperator MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_UnaryOperator
#  define MX_EXIT_VISIT_UnaryOperator MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(UnaryOperator)
  MX_ENTER_VISIT_UnaryOperator
  MX_VISIT_BASE(UnaryOperator, Expr)
  MX_VISIT_BOOL(UnaryOperator, can_overflow, 89, MX_APPLY_METHOD, CanOverflow, bool, NthStmt)
  MX_VISIT_ENUM(UnaryOperator, opcode, 95, MX_APPLY_METHOD, Opcode, UnaryOperatorKind, NthStmt)
  MX_VISIT_ENTITY(UnaryOperator, operator_token, 37, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(UnaryOperator, sub_expression, 38, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_VISIT_BOOL(UnaryOperator, has_stored_fp_features, 90, MX_APPLY_METHOD, HasStoredFPFeatures, bool, NthStmt)
  MX_VISIT_BOOL(UnaryOperator, is_arithmetic_operation, 91, MX_APPLY_METHOD, IsArithmeticOperation, bool, NthStmt)
  MX_VISIT_BOOL(UnaryOperator, is_decrement_operation, 92, MX_APPLY_METHOD, IsDecrementOperation, bool, NthStmt)
  MX_VISIT_BOOL(UnaryOperator, is_increment_decrement_operation, 93, MX_APPLY_METHOD, IsIncrementDecrementOperation, bool, NthStmt)
  MX_VISIT_BOOL(UnaryOperator, is_increment_operation, 94, MX_APPLY_METHOD, IsIncrementOperation, bool, NthStmt)
  MX_VISIT_BOOL(UnaryOperator, is_postfix, 96, MX_APPLY_METHOD, IsPostfix, bool, NthStmt)
  MX_VISIT_BOOL(UnaryOperator, is_prefix, 98, MX_APPLY_METHOD, IsPrefix, bool, NthStmt)
  MX_EXIT_VISIT_UnaryOperator
MX_END_VISIT_STMT(UnaryOperator)

#ifndef MX_ENTER_VISIT_UnaryExprOrTypeTraitExpr
#  define MX_ENTER_VISIT_UnaryExprOrTypeTraitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_UnaryExprOrTypeTraitExpr
#  define MX_EXIT_VISIT_UnaryExprOrTypeTraitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(UnaryExprOrTypeTraitExpr)
  MX_ENTER_VISIT_UnaryExprOrTypeTraitExpr
  MX_VISIT_BASE(UnaryExprOrTypeTraitExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(UnaryExprOrTypeTraitExpr, argument_expression, 37, MX_APPLY_METHOD, ArgumentExpression, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(UnaryExprOrTypeTraitExpr, argument_type, 38, MX_APPLY_METHOD, ArgumentType, Type, NthStmt)
  MX_VISIT_ENUM(UnaryExprOrTypeTraitExpr, keyword_kind, 95, MX_APPLY_METHOD, KeywordKind, UnaryExprOrTypeTrait, NthStmt)
  MX_VISIT_ENTITY(UnaryExprOrTypeTraitExpr, operator_token, 39, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(UnaryExprOrTypeTraitExpr, r_paren_token, 40, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(UnaryExprOrTypeTraitExpr, type_of_argument, 41, MX_APPLY_METHOD, TypeOfArgument, Type, NthStmt)
  MX_VISIT_BOOL(UnaryExprOrTypeTraitExpr, is_argument_type, 89, MX_APPLY_METHOD, IsArgumentType, bool, NthStmt)
  MX_EXIT_VISIT_UnaryExprOrTypeTraitExpr
MX_END_VISIT_STMT(UnaryExprOrTypeTraitExpr)

#ifndef MX_ENTER_VISIT_TypoExpr
#  define MX_ENTER_VISIT_TypoExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_TypoExpr
#  define MX_EXIT_VISIT_TypoExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(TypoExpr)
  MX_ENTER_VISIT_TypoExpr
  MX_VISIT_BASE(TypoExpr, Expr)
  MX_EXIT_VISIT_TypoExpr
MX_END_VISIT_STMT(TypoExpr)

#ifndef MX_ENTER_VISIT_TypeTraitExpr
#  define MX_ENTER_VISIT_TypeTraitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_TypeTraitExpr
#  define MX_EXIT_VISIT_TypeTraitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(TypeTraitExpr)
  MX_ENTER_VISIT_TypeTraitExpr
  MX_VISIT_BASE(TypeTraitExpr, Expr)
  MX_VISIT_ENUM(TypeTraitExpr, trait, 95, MX_APPLY_METHOD, Trait, TypeTrait, NthStmt)
  MX_VISIT_OPTIONAL_BOOL(TypeTraitExpr, value, 89, MX_APPLY_METHOD, Value, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(TypeTraitExpr, arguments, 15, MX_APPLY_METHOD, Arguments, Type, NthStmt)
  MX_EXIT_VISIT_TypeTraitExpr
MX_END_VISIT_STMT(TypeTraitExpr)

#ifndef MX_ENTER_VISIT_SubstNonTypeTemplateParmPackExpr
#  define MX_ENTER_VISIT_SubstNonTypeTemplateParmPackExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_SubstNonTypeTemplateParmPackExpr
#  define MX_EXIT_VISIT_SubstNonTypeTemplateParmPackExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(SubstNonTypeTemplateParmPackExpr)
  MX_ENTER_VISIT_SubstNonTypeTemplateParmPackExpr
  MX_VISIT_BASE(SubstNonTypeTemplateParmPackExpr, Expr)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmPackExpr, associated_declaration, 37, MX_APPLY_METHOD, AssociatedDeclaration, Decl, NthStmt)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmPackExpr, parameter_pack, 38, MX_APPLY_METHOD, ParameterPack, NonTypeTemplateParmDecl, NthStmt)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmPackExpr, parameter_pack_token, 39, MX_APPLY_METHOD, ParameterPackToken, Token, NthStmt)
  MX_EXIT_VISIT_SubstNonTypeTemplateParmPackExpr
MX_END_VISIT_STMT(SubstNonTypeTemplateParmPackExpr)

#ifndef MX_ENTER_VISIT_SubstNonTypeTemplateParmExpr
#  define MX_ENTER_VISIT_SubstNonTypeTemplateParmExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_SubstNonTypeTemplateParmExpr
#  define MX_EXIT_VISIT_SubstNonTypeTemplateParmExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(SubstNonTypeTemplateParmExpr)
  MX_ENTER_VISIT_SubstNonTypeTemplateParmExpr
  MX_VISIT_BASE(SubstNonTypeTemplateParmExpr, Expr)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmExpr, associated_declaration, 37, MX_APPLY_METHOD, AssociatedDeclaration, Decl, NthStmt)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmExpr, name_token, 38, MX_APPLY_METHOD, NameToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_INT(SubstNonTypeTemplateParmExpr, pack_index, 105, MX_APPLY_METHOD, PackIndex, , NthStmt)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmExpr, parameter, 39, MX_APPLY_METHOD, Parameter, NonTypeTemplateParmDecl, NthStmt)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmExpr, parameter_type, 40, MX_APPLY_METHOD, ParameterType, Type, NthStmt)
  MX_VISIT_ENTITY(SubstNonTypeTemplateParmExpr, replacement, 41, MX_APPLY_METHOD, Replacement, Expr, NthStmt)
  MX_VISIT_BOOL(SubstNonTypeTemplateParmExpr, is_reference_parameter, 90, MX_APPLY_METHOD, IsReferenceParameter, bool, NthStmt)
  MX_EXIT_VISIT_SubstNonTypeTemplateParmExpr
MX_END_VISIT_STMT(SubstNonTypeTemplateParmExpr)

#ifndef MX_ENTER_VISIT_StringLiteral
#  define MX_ENTER_VISIT_StringLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_StringLiteral
#  define MX_EXIT_VISIT_StringLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(StringLiteral)
  MX_ENTER_VISIT_StringLiteral
  MX_VISIT_BASE(StringLiteral, Expr)
  MX_VISIT_OPTIONAL_BOOL(StringLiteral, contains_non_ascii, 89, MX_APPLY_METHOD, ContainsNonAscii, bool, NthStmt)
  MX_VISIT_OPTIONAL_BOOL(StringLiteral, contains_non_ascii_or_null, 91, MX_APPLY_METHOD, ContainsNonAsciiOrNull, bool, NthStmt)
  MX_VISIT_TEXT(StringLiteral, bytes, 60, MX_APPLY_METHOD, Bytes, basic_string_view, NthStmt)
  MX_VISIT_ENUM(StringLiteral, literal_kind, 95, MX_APPLY_METHOD, LiteralKind, StringLiteralStringKind, NthStmt)
  MX_VISIT_OPTIONAL_TEXT(StringLiteral, string, 65, MX_APPLY_METHOD, String, basic_string_view, NthStmt)
  MX_VISIT_BOOL(StringLiteral, is_ordinary, 94, MX_APPLY_METHOD, IsOrdinary, bool, NthStmt)
  MX_VISIT_BOOL(StringLiteral, is_pascal, 96, MX_APPLY_METHOD, IsPascal, bool, NthStmt)
  MX_VISIT_BOOL(StringLiteral, is_utf16, 98, MX_APPLY_METHOD, IsUTF16, bool, NthStmt)
  MX_VISIT_BOOL(StringLiteral, is_utf32, 99, MX_APPLY_METHOD, IsUTF32, bool, NthStmt)
  MX_VISIT_BOOL(StringLiteral, is_utf8, 100, MX_APPLY_METHOD, IsUTF8, bool, NthStmt)
  MX_VISIT_BOOL(StringLiteral, is_unevaluated, 101, MX_APPLY_METHOD, IsUnevaluated, bool, NthStmt)
  MX_VISIT_BOOL(StringLiteral, is_wide, 102, MX_APPLY_METHOD, IsWide, bool, NthStmt)
  MX_EXIT_VISIT_StringLiteral
MX_END_VISIT_STMT(StringLiteral)

#ifndef MX_ENTER_VISIT_StmtExpr
#  define MX_ENTER_VISIT_StmtExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_StmtExpr
#  define MX_EXIT_VISIT_StmtExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(StmtExpr)
  MX_ENTER_VISIT_StmtExpr
  MX_VISIT_BASE(StmtExpr, Expr)
  MX_VISIT_ENTITY(StmtExpr, l_paren_token, 37, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(StmtExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(StmtExpr, sub_statement, 39, MX_APPLY_METHOD, SubStatement, CompoundStmt, NthStmt)
  MX_EXIT_VISIT_StmtExpr
MX_END_VISIT_STMT(StmtExpr)

#ifndef MX_ENTER_VISIT_SourceLocExpr
#  define MX_ENTER_VISIT_SourceLocExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_SourceLocExpr
#  define MX_EXIT_VISIT_SourceLocExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(SourceLocExpr)
  MX_ENTER_VISIT_SourceLocExpr
  MX_VISIT_BASE(SourceLocExpr, Expr)
  MX_VISIT_TEXT(SourceLocExpr, builtin_string, 60, MX_APPLY_METHOD, BuiltinString, basic_string_view, NthStmt)
  MX_VISIT_ENUM(SourceLocExpr, identifier_kind, 95, MX_APPLY_METHOD, IdentifierKind, SourceLocExprIdentKind, NthStmt)
  MX_VISIT_ENTITY(SourceLocExpr, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_BOOL(SourceLocExpr, is_int_type, 89, MX_APPLY_METHOD, IsIntType, bool, NthStmt)
  MX_EXIT_VISIT_SourceLocExpr
MX_END_VISIT_STMT(SourceLocExpr)

#ifndef MX_ENTER_VISIT_SizeOfPackExpr
#  define MX_ENTER_VISIT_SizeOfPackExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_SizeOfPackExpr
#  define MX_EXIT_VISIT_SizeOfPackExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(SizeOfPackExpr)
  MX_ENTER_VISIT_SizeOfPackExpr
  MX_VISIT_BASE(SizeOfPackExpr, Expr)
  MX_VISIT_ENTITY(SizeOfPackExpr, operator_token, 37, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(SizeOfPackExpr, pack, 38, MX_APPLY_METHOD, Pack, NamedDecl, NthStmt)
  MX_VISIT_OPTIONAL_INT(SizeOfPackExpr, pack_length, 105, MX_APPLY_METHOD, PackLength, , NthStmt)
  MX_VISIT_ENTITY(SizeOfPackExpr, pack_token, 39, MX_APPLY_METHOD, PackToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY_LIST(SizeOfPackExpr, partial_arguments, 15, MX_APPLY_METHOD, PartialArguments, TemplateArgument, NthStmt)
  MX_VISIT_ENTITY(SizeOfPackExpr, r_paren_token, 40, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_BOOL(SizeOfPackExpr, is_partially_substituted, 91, MX_APPLY_METHOD, IsPartiallySubstituted, bool, NthStmt)
  MX_EXIT_VISIT_SizeOfPackExpr
MX_END_VISIT_STMT(SizeOfPackExpr)

#ifndef MX_ENTER_VISIT_ShuffleVectorExpr
#  define MX_ENTER_VISIT_ShuffleVectorExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ShuffleVectorExpr
#  define MX_EXIT_VISIT_ShuffleVectorExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ShuffleVectorExpr)
  MX_ENTER_VISIT_ShuffleVectorExpr
  MX_VISIT_BASE(ShuffleVectorExpr, Expr)
  MX_VISIT_ENTITY(ShuffleVectorExpr, builtin_token, 37, MX_APPLY_METHOD, BuiltinToken, Token, NthStmt)
  MX_VISIT_ENTITY(ShuffleVectorExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_ShuffleVectorExpr
MX_END_VISIT_STMT(ShuffleVectorExpr)

#ifndef MX_ENTER_VISIT_SYCLUniqueStableNameExpr
#  define MX_ENTER_VISIT_SYCLUniqueStableNameExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_SYCLUniqueStableNameExpr
#  define MX_EXIT_VISIT_SYCLUniqueStableNameExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(SYCLUniqueStableNameExpr)
  MX_ENTER_VISIT_SYCLUniqueStableNameExpr
  MX_VISIT_BASE(SYCLUniqueStableNameExpr, Expr)
  MX_VISIT_TEXT(SYCLUniqueStableNameExpr, compute_name, 60, MX_APPLY_METHOD, ComputeName, basic_string, NthStmt)
  MX_VISIT_ENTITY(SYCLUniqueStableNameExpr, l_paren_token, 37, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(SYCLUniqueStableNameExpr, token, 38, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_ENTITY(SYCLUniqueStableNameExpr, r_paren_token, 39, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_SYCLUniqueStableNameExpr
MX_END_VISIT_STMT(SYCLUniqueStableNameExpr)

#ifndef MX_ENTER_VISIT_RequiresExpr
#  define MX_ENTER_VISIT_RequiresExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_RequiresExpr
#  define MX_EXIT_VISIT_RequiresExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(RequiresExpr)
  MX_ENTER_VISIT_RequiresExpr
  MX_VISIT_BASE(RequiresExpr, Expr)
  MX_VISIT_ENTITY(RequiresExpr, body, 37, MX_APPLY_METHOD, Body, RequiresExprBodyDecl, NthStmt)
  MX_VISIT_ENTITY_LIST(RequiresExpr, local_parameters, 15, MX_APPLY_METHOD, LocalParameters, ParmVarDecl, NthStmt)
  MX_VISIT_ENTITY(RequiresExpr, r_brace_token, 38, MX_APPLY_METHOD, RBraceToken, Token, NthStmt)
  MX_VISIT_ENTITY(RequiresExpr, requires_keyword_token, 39, MX_APPLY_METHOD, RequiresKeywordToken, Token, NthStmt)
  MX_VISIT_BOOL(RequiresExpr, is_satisfied, 89, MX_APPLY_METHOD, IsSatisfied, bool, NthStmt)
  MX_EXIT_VISIT_RequiresExpr
MX_END_VISIT_STMT(RequiresExpr)

#ifndef MX_ENTER_VISIT_RecoveryExpr
#  define MX_ENTER_VISIT_RecoveryExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_RecoveryExpr
#  define MX_EXIT_VISIT_RecoveryExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(RecoveryExpr)
  MX_ENTER_VISIT_RecoveryExpr
  MX_VISIT_BASE(RecoveryExpr, Expr)
  MX_VISIT_ENTITY_LIST(RecoveryExpr, sub_expressions, 15, MX_APPLY_METHOD, SubExpressions, Expr, NthStmt)
  MX_EXIT_VISIT_RecoveryExpr
MX_END_VISIT_STMT(RecoveryExpr)

#ifndef MX_ENTER_VISIT_PseudoObjectExpr
#  define MX_ENTER_VISIT_PseudoObjectExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_PseudoObjectExpr
#  define MX_EXIT_VISIT_PseudoObjectExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(PseudoObjectExpr)
  MX_ENTER_VISIT_PseudoObjectExpr
  MX_VISIT_BASE(PseudoObjectExpr, Expr)
  MX_VISIT_ENTITY(PseudoObjectExpr, result_expression, 37, MX_APPLY_METHOD, ResultExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(PseudoObjectExpr, syntactic_form, 38, MX_APPLY_METHOD, SyntacticForm, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(PseudoObjectExpr, semantics, 15, MX_APPLY_METHOD, Semantics, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(PseudoObjectExpr, semantic_expressions, 26, MX_APPLY_METHOD, SemanticExpressions, Expr, NthStmt)
  MX_EXIT_VISIT_PseudoObjectExpr
MX_END_VISIT_STMT(PseudoObjectExpr)

#ifndef MX_ENTER_VISIT_PredefinedExpr
#  define MX_ENTER_VISIT_PredefinedExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_PredefinedExpr
#  define MX_EXIT_VISIT_PredefinedExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(PredefinedExpr)
  MX_ENTER_VISIT_PredefinedExpr
  MX_VISIT_BASE(PredefinedExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(PredefinedExpr, function_name, 37, MX_APPLY_METHOD, FunctionName, StringLiteral, NthStmt)
  MX_VISIT_ENUM(PredefinedExpr, identifier_kind, 95, MX_APPLY_METHOD, IdentifierKind, PredefinedExprIdentKind, NthStmt)
  MX_VISIT_TEXT(PredefinedExpr, identifier_kind_name, 60, MX_APPLY_METHOD, IdentifierKindName, basic_string_view, NthStmt)
  MX_VISIT_ENTITY(PredefinedExpr, token, 38, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_BOOL(PredefinedExpr, is_transparent, 89, MX_APPLY_METHOD, IsTransparent, bool, NthStmt)
  MX_EXIT_VISIT_PredefinedExpr
MX_END_VISIT_STMT(PredefinedExpr)

#ifndef MX_ENTER_VISIT_ParenListExpr
#  define MX_ENTER_VISIT_ParenListExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ParenListExpr
#  define MX_EXIT_VISIT_ParenListExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ParenListExpr)
  MX_ENTER_VISIT_ParenListExpr
  MX_VISIT_BASE(ParenListExpr, Expr)
  MX_VISIT_ENTITY(ParenListExpr, l_paren_token, 37, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(ParenListExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY_LIST(ParenListExpr, expressions, 15, MX_APPLY_METHOD, Expressions, Expr, NthStmt)
  MX_EXIT_VISIT_ParenListExpr
MX_END_VISIT_STMT(ParenListExpr)

#ifndef MX_ENTER_VISIT_ParenExpr
#  define MX_ENTER_VISIT_ParenExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ParenExpr
#  define MX_EXIT_VISIT_ParenExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ParenExpr)
  MX_ENTER_VISIT_ParenExpr
  MX_VISIT_BASE(ParenExpr, Expr)
  MX_VISIT_ENTITY(ParenExpr, l_paren_token, 37, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(ParenExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(ParenExpr, sub_expression, 39, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_EXIT_VISIT_ParenExpr
MX_END_VISIT_STMT(ParenExpr)

#ifndef MX_ENTER_VISIT_PackExpansionExpr
#  define MX_ENTER_VISIT_PackExpansionExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_PackExpansionExpr
#  define MX_EXIT_VISIT_PackExpansionExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(PackExpansionExpr)
  MX_ENTER_VISIT_PackExpansionExpr
  MX_VISIT_BASE(PackExpansionExpr, Expr)
  MX_VISIT_ENTITY(PackExpansionExpr, ellipsis_token, 37, MX_APPLY_METHOD, EllipsisToken, Token, NthStmt)
  MX_VISIT_ENTITY(PackExpansionExpr, pattern, 38, MX_APPLY_METHOD, Pattern, Expr, NthStmt)
  MX_EXIT_VISIT_PackExpansionExpr
MX_END_VISIT_STMT(PackExpansionExpr)

#ifndef MX_ENTER_VISIT_OverloadExpr
#  define MX_ENTER_VISIT_OverloadExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_OverloadExpr
#  define MX_EXIT_VISIT_OverloadExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(OverloadExpr)
  MX_ENTER_VISIT_OverloadExpr
  MX_VISIT_BASE(OverloadExpr, Expr)
  MX_VISIT_ENTITY(OverloadExpr, l_angle_token, 37, MX_APPLY_METHOD, LAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(OverloadExpr, name_token, 38, MX_APPLY_METHOD, NameToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(OverloadExpr, naming_class, 39, MX_APPLY_METHOD, NamingClass, CXXRecordDecl, NthStmt)
  MX_VISIT_ENTITY(OverloadExpr, r_angle_token, 40, MX_APPLY_METHOD, RAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(OverloadExpr, template_keyword_token, 41, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthStmt)
  MX_VISIT_BOOL(OverloadExpr, has_explicit_template_arguments, 89, MX_APPLY_METHOD, HasExplicitTemplateArguments, bool, NthStmt)
  MX_VISIT_BOOL(OverloadExpr, has_template_keyword, 90, MX_APPLY_METHOD, HasTemplateKeyword, bool, NthStmt)
  MX_EXIT_VISIT_OverloadExpr
MX_END_VISIT_STMT(OverloadExpr)

#ifndef MX_ENTER_VISIT_UnresolvedMemberExpr
#  define MX_ENTER_VISIT_UnresolvedMemberExpr MX_ENTER_VISIT_OverloadExpr
#endif
#ifndef MX_EXIT_VISIT_UnresolvedMemberExpr
#  define MX_EXIT_VISIT_UnresolvedMemberExpr MX_EXIT_VISIT_OverloadExpr
#endif

MX_BEGIN_VISIT_STMT(UnresolvedMemberExpr)
  MX_ENTER_VISIT_UnresolvedMemberExpr
  MX_VISIT_BASE(UnresolvedMemberExpr, OverloadExpr)
  MX_VISIT_ENTITY(UnresolvedMemberExpr, base, 42, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(UnresolvedMemberExpr, base_type, 43, MX_APPLY_METHOD, BaseType, Type, NthStmt)
  MX_VISIT_ENTITY(UnresolvedMemberExpr, member_token, 44, MX_APPLY_METHOD, MemberToken, Token, NthStmt)
  MX_VISIT_ENTITY(UnresolvedMemberExpr, operator_token, 45, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_BOOL(UnresolvedMemberExpr, has_unresolved_using, 91, MX_APPLY_METHOD, HasUnresolvedUsing, bool, NthStmt)
  MX_VISIT_BOOL(UnresolvedMemberExpr, is_arrow, 92, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_VISIT_BOOL(UnresolvedMemberExpr, is_implicit_access, 93, MX_APPLY_METHOD, IsImplicitAccess, bool, NthStmt)
  MX_EXIT_VISIT_UnresolvedMemberExpr
MX_END_VISIT_STMT(UnresolvedMemberExpr)

#ifndef MX_ENTER_VISIT_UnresolvedLookupExpr
#  define MX_ENTER_VISIT_UnresolvedLookupExpr MX_ENTER_VISIT_OverloadExpr
#endif
#ifndef MX_EXIT_VISIT_UnresolvedLookupExpr
#  define MX_EXIT_VISIT_UnresolvedLookupExpr MX_EXIT_VISIT_OverloadExpr
#endif

MX_BEGIN_VISIT_STMT(UnresolvedLookupExpr)
  MX_ENTER_VISIT_UnresolvedLookupExpr
  MX_VISIT_BASE(UnresolvedLookupExpr, OverloadExpr)
  MX_VISIT_BOOL(UnresolvedLookupExpr, is_overloaded, 91, MX_APPLY_METHOD, IsOverloaded, bool, NthStmt)
  MX_VISIT_BOOL(UnresolvedLookupExpr, requires_adl, 92, MX_APPLY_METHOD, RequiresADL, bool, NthStmt)
  MX_EXIT_VISIT_UnresolvedLookupExpr
MX_END_VISIT_STMT(UnresolvedLookupExpr)

#ifndef MX_ENTER_VISIT_OpaqueValueExpr
#  define MX_ENTER_VISIT_OpaqueValueExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_OpaqueValueExpr
#  define MX_EXIT_VISIT_OpaqueValueExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(OpaqueValueExpr)
  MX_ENTER_VISIT_OpaqueValueExpr
  MX_VISIT_BASE(OpaqueValueExpr, Expr)
  MX_VISIT_ENTITY(OpaqueValueExpr, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(OpaqueValueExpr, source_expression, 38, MX_APPLY_METHOD, SourceExpression, Expr, NthStmt)
  MX_VISIT_BOOL(OpaqueValueExpr, is_unique, 89, MX_APPLY_METHOD, IsUnique, bool, NthStmt)
  MX_EXIT_VISIT_OpaqueValueExpr
MX_END_VISIT_STMT(OpaqueValueExpr)

#ifndef MX_ENTER_VISIT_OffsetOfExpr
#  define MX_ENTER_VISIT_OffsetOfExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_OffsetOfExpr
#  define MX_EXIT_VISIT_OffsetOfExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(OffsetOfExpr)
  MX_ENTER_VISIT_OffsetOfExpr
  MX_VISIT_BASE(OffsetOfExpr, Expr)
  MX_VISIT_ENTITY(OffsetOfExpr, operator_token, 37, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(OffsetOfExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_OffsetOfExpr
MX_END_VISIT_STMT(OffsetOfExpr)

#ifndef MX_ENTER_VISIT_ObjCSubscriptRefExpr
#  define MX_ENTER_VISIT_ObjCSubscriptRefExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCSubscriptRefExpr
#  define MX_EXIT_VISIT_ObjCSubscriptRefExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCSubscriptRefExpr)
  MX_ENTER_VISIT_ObjCSubscriptRefExpr
  MX_VISIT_BASE(ObjCSubscriptRefExpr, Expr)
  MX_VISIT_ENTITY(ObjCSubscriptRefExpr, at_index_method_declaration, 37, MX_APPLY_METHOD, AtIndexMethodDeclaration, ObjCMethodDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCSubscriptRefExpr, base_expression, 38, MX_APPLY_METHOD, BaseExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCSubscriptRefExpr, key_expression, 39, MX_APPLY_METHOD, KeyExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCSubscriptRefExpr, r_bracket_token, 40, MX_APPLY_METHOD, RBracketToken, Token, NthStmt)
  MX_VISIT_BOOL(ObjCSubscriptRefExpr, is_array_subscript_reference_expression, 89, MX_APPLY_METHOD, IsArraySubscriptReferenceExpression, bool, NthStmt)
  MX_EXIT_VISIT_ObjCSubscriptRefExpr
MX_END_VISIT_STMT(ObjCSubscriptRefExpr)

#ifndef MX_ENTER_VISIT_ObjCStringLiteral
#  define MX_ENTER_VISIT_ObjCStringLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCStringLiteral
#  define MX_EXIT_VISIT_ObjCStringLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCStringLiteral)
  MX_ENTER_VISIT_ObjCStringLiteral
  MX_VISIT_BASE(ObjCStringLiteral, Expr)
  MX_VISIT_ENTITY(ObjCStringLiteral, at_token, 37, MX_APPLY_METHOD, AtToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCStringLiteral, string, 38, MX_APPLY_METHOD, String, StringLiteral, NthStmt)
  MX_EXIT_VISIT_ObjCStringLiteral
MX_END_VISIT_STMT(ObjCStringLiteral)

#ifndef MX_ENTER_VISIT_ObjCSelectorExpr
#  define MX_ENTER_VISIT_ObjCSelectorExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCSelectorExpr
#  define MX_EXIT_VISIT_ObjCSelectorExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCSelectorExpr)
  MX_ENTER_VISIT_ObjCSelectorExpr
  MX_VISIT_BASE(ObjCSelectorExpr, Expr)
  MX_VISIT_ENTITY(ObjCSelectorExpr, at_token, 37, MX_APPLY_METHOD, AtToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCSelectorExpr, r_paren_token, 38, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_ObjCSelectorExpr
MX_END_VISIT_STMT(ObjCSelectorExpr)

#ifndef MX_ENTER_VISIT_ObjCProtocolExpr
#  define MX_ENTER_VISIT_ObjCProtocolExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCProtocolExpr
#  define MX_EXIT_VISIT_ObjCProtocolExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCProtocolExpr)
  MX_ENTER_VISIT_ObjCProtocolExpr
  MX_VISIT_BASE(ObjCProtocolExpr, Expr)
  MX_VISIT_ENTITY(ObjCProtocolExpr, at_token, 37, MX_APPLY_METHOD, AtToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCProtocolExpr, protocol, 38, MX_APPLY_METHOD, Protocol, ObjCProtocolDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCProtocolExpr, protocol_id_token, 39, MX_APPLY_METHOD, ProtocolIdToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCProtocolExpr, r_paren_token, 40, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_ObjCProtocolExpr
MX_END_VISIT_STMT(ObjCProtocolExpr)

#ifndef MX_ENTER_VISIT_ObjCPropertyRefExpr
#  define MX_ENTER_VISIT_ObjCPropertyRefExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCPropertyRefExpr
#  define MX_EXIT_VISIT_ObjCPropertyRefExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCPropertyRefExpr)
  MX_ENTER_VISIT_ObjCPropertyRefExpr
  MX_VISIT_BASE(ObjCPropertyRefExpr, Expr)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, class_receiver, 38, MX_APPLY_METHOD, ClassReceiver, ObjCInterfaceDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, explicit_property, 39, MX_APPLY_METHOD, ExplicitProperty, ObjCPropertyDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, implicit_property_getter, 40, MX_APPLY_METHOD, ImplicitPropertyGetter, ObjCMethodDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, implicit_property_setter, 41, MX_APPLY_METHOD, ImplicitPropertySetter, ObjCMethodDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, token, 42, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, receiver_token, 43, MX_APPLY_METHOD, ReceiverToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, receiver_type, 44, MX_APPLY_METHOD, ReceiverType, Type, NthStmt)
  MX_VISIT_ENTITY(ObjCPropertyRefExpr, super_receiver_type, 45, MX_APPLY_METHOD, SuperReceiverType, Type, NthStmt)
  MX_VISIT_BOOL(ObjCPropertyRefExpr, is_class_receiver, 89, MX_APPLY_METHOD, IsClassReceiver, bool, NthStmt)
  MX_VISIT_BOOL(ObjCPropertyRefExpr, is_explicit_property, 90, MX_APPLY_METHOD, IsExplicitProperty, bool, NthStmt)
  MX_VISIT_BOOL(ObjCPropertyRefExpr, is_implicit_property, 91, MX_APPLY_METHOD, IsImplicitProperty, bool, NthStmt)
  MX_VISIT_BOOL(ObjCPropertyRefExpr, is_messaging_getter, 92, MX_APPLY_METHOD, IsMessagingGetter, bool, NthStmt)
  MX_VISIT_BOOL(ObjCPropertyRefExpr, is_messaging_setter, 93, MX_APPLY_METHOD, IsMessagingSetter, bool, NthStmt)
  MX_VISIT_BOOL(ObjCPropertyRefExpr, is_object_receiver, 94, MX_APPLY_METHOD, IsObjectReceiver, bool, NthStmt)
  MX_VISIT_BOOL(ObjCPropertyRefExpr, is_super_receiver, 96, MX_APPLY_METHOD, IsSuperReceiver, bool, NthStmt)
  MX_EXIT_VISIT_ObjCPropertyRefExpr
MX_END_VISIT_STMT(ObjCPropertyRefExpr)

#ifndef MX_ENTER_VISIT_ObjCMessageExpr
#  define MX_ENTER_VISIT_ObjCMessageExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCMessageExpr
#  define MX_EXIT_VISIT_ObjCMessageExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCMessageExpr)
  MX_ENTER_VISIT_ObjCMessageExpr
  MX_VISIT_BASE(ObjCMessageExpr, Expr)
  MX_VISIT_ENTITY_LIST(ObjCMessageExpr, arguments, 15, MX_APPLY_METHOD, Arguments, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, call_return_type, 37, MX_APPLY_METHOD, CallReturnType, Type, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, class_receiver, 38, MX_APPLY_METHOD, ClassReceiver, Type, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, instance_receiver, 39, MX_APPLY_METHOD, InstanceReceiver, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, left_token, 40, MX_APPLY_METHOD, LeftToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, method_declaration, 41, MX_APPLY_METHOD, MethodDeclaration, ObjCMethodDecl, NthStmt)
  MX_VISIT_ENUM(ObjCMessageExpr, method_family, 95, MX_APPLY_METHOD, MethodFamily, ObjCMethodFamily, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, receiver_interface, 42, MX_APPLY_METHOD, ReceiverInterface, ObjCInterfaceDecl, NthStmt)
  MX_VISIT_ENUM(ObjCMessageExpr, receiver_kind, 97, MX_APPLY_METHOD, ReceiverKind, ObjCMessageExprReceiverKind, NthStmt)
  MX_VISIT_TOKEN_RANGE(ObjCMessageExpr, receiver_range, 43, 44, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, receiver_type, 45, MX_APPLY_METHOD, ReceiverType, Type, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, right_token, 46, MX_APPLY_METHOD, RightToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, selector_start_token, 47, MX_APPLY_METHOD, SelectorStartToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, super_token, 48, MX_APPLY_METHOD, SuperToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCMessageExpr, super_type, 49, MX_APPLY_METHOD, SuperType, Type, NthStmt)
  MX_VISIT_BOOL(ObjCMessageExpr, is_class_message, 89, MX_APPLY_METHOD, IsClassMessage, bool, NthStmt)
  MX_VISIT_BOOL(ObjCMessageExpr, is_delegate_initializer_call, 90, MX_APPLY_METHOD, IsDelegateInitializerCall, bool, NthStmt)
  MX_VISIT_BOOL(ObjCMessageExpr, is_implicit, 91, MX_APPLY_METHOD, IsImplicit, bool, NthStmt)
  MX_VISIT_BOOL(ObjCMessageExpr, is_instance_message, 92, MX_APPLY_METHOD, IsInstanceMessage, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(ObjCMessageExpr, selector_tokens, 26, MX_APPLY_METHOD, SelectorTokens, Token, NthStmt)
  MX_EXIT_VISIT_ObjCMessageExpr
MX_END_VISIT_STMT(ObjCMessageExpr)

#ifndef MX_ENTER_VISIT_ObjCIvarRefExpr
#  define MX_ENTER_VISIT_ObjCIvarRefExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCIvarRefExpr
#  define MX_EXIT_VISIT_ObjCIvarRefExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCIvarRefExpr)
  MX_ENTER_VISIT_ObjCIvarRefExpr
  MX_VISIT_BASE(ObjCIvarRefExpr, Expr)
  MX_VISIT_ENTITY(ObjCIvarRefExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCIvarRefExpr, declaration, 38, MX_APPLY_METHOD, Declaration, ObjCIvarDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCIvarRefExpr, token, 39, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCIvarRefExpr, operation_token, 40, MX_APPLY_METHOD, OperationToken, Token, NthStmt)
  MX_VISIT_BOOL(ObjCIvarRefExpr, is_arrow, 89, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_VISIT_BOOL(ObjCIvarRefExpr, is_free_instance_variable, 90, MX_APPLY_METHOD, IsFreeInstanceVariable, bool, NthStmt)
  MX_EXIT_VISIT_ObjCIvarRefExpr
MX_END_VISIT_STMT(ObjCIvarRefExpr)

#ifndef MX_ENTER_VISIT_ObjCIsaExpr
#  define MX_ENTER_VISIT_ObjCIsaExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCIsaExpr
#  define MX_EXIT_VISIT_ObjCIsaExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCIsaExpr)
  MX_ENTER_VISIT_ObjCIsaExpr
  MX_VISIT_BASE(ObjCIsaExpr, Expr)
  MX_VISIT_ENTITY(ObjCIsaExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(ObjCIsaExpr, base_token_end, 38, MX_APPLY_METHOD, BaseTokenEnd, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCIsaExpr, isa_member_token, 39, MX_APPLY_METHOD, IsaMemberToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCIsaExpr, operation_token, 40, MX_APPLY_METHOD, OperationToken, Token, NthStmt)
  MX_VISIT_BOOL(ObjCIsaExpr, is_arrow, 89, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_EXIT_VISIT_ObjCIsaExpr
MX_END_VISIT_STMT(ObjCIsaExpr)

#ifndef MX_ENTER_VISIT_ObjCIndirectCopyRestoreExpr
#  define MX_ENTER_VISIT_ObjCIndirectCopyRestoreExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCIndirectCopyRestoreExpr
#  define MX_EXIT_VISIT_ObjCIndirectCopyRestoreExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCIndirectCopyRestoreExpr)
  MX_ENTER_VISIT_ObjCIndirectCopyRestoreExpr
  MX_VISIT_BASE(ObjCIndirectCopyRestoreExpr, Expr)
  MX_VISIT_ENTITY(ObjCIndirectCopyRestoreExpr, sub_expression, 37, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_VISIT_BOOL(ObjCIndirectCopyRestoreExpr, should_copy, 89, MX_APPLY_METHOD, ShouldCopy, bool, NthStmt)
  MX_EXIT_VISIT_ObjCIndirectCopyRestoreExpr
MX_END_VISIT_STMT(ObjCIndirectCopyRestoreExpr)

#ifndef MX_ENTER_VISIT_ObjCEncodeExpr
#  define MX_ENTER_VISIT_ObjCEncodeExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCEncodeExpr
#  define MX_EXIT_VISIT_ObjCEncodeExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCEncodeExpr)
  MX_ENTER_VISIT_ObjCEncodeExpr
  MX_VISIT_BASE(ObjCEncodeExpr, Expr)
  MX_VISIT_ENTITY(ObjCEncodeExpr, at_token, 37, MX_APPLY_METHOD, AtToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCEncodeExpr, encoded_type, 38, MX_APPLY_METHOD, EncodedType, Type, NthStmt)
  MX_VISIT_ENTITY(ObjCEncodeExpr, r_paren_token, 39, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_ObjCEncodeExpr
MX_END_VISIT_STMT(ObjCEncodeExpr)

#ifndef MX_ENTER_VISIT_ObjCDictionaryLiteral
#  define MX_ENTER_VISIT_ObjCDictionaryLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCDictionaryLiteral
#  define MX_EXIT_VISIT_ObjCDictionaryLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCDictionaryLiteral)
  MX_ENTER_VISIT_ObjCDictionaryLiteral
  MX_VISIT_BASE(ObjCDictionaryLiteral, Expr)
  MX_VISIT_ENTITY(ObjCDictionaryLiteral, dictionary_with_objects_method, 37, MX_APPLY_METHOD, DictionaryWithObjectsMethod, ObjCMethodDecl, NthStmt)
  MX_EXIT_VISIT_ObjCDictionaryLiteral
MX_END_VISIT_STMT(ObjCDictionaryLiteral)

#ifndef MX_ENTER_VISIT_ObjCBoxedExpr
#  define MX_ENTER_VISIT_ObjCBoxedExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCBoxedExpr
#  define MX_EXIT_VISIT_ObjCBoxedExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCBoxedExpr)
  MX_ENTER_VISIT_ObjCBoxedExpr
  MX_VISIT_BASE(ObjCBoxedExpr, Expr)
  MX_VISIT_ENTITY(ObjCBoxedExpr, at_token, 37, MX_APPLY_METHOD, AtToken, Token, NthStmt)
  MX_VISIT_ENTITY(ObjCBoxedExpr, boxing_method, 38, MX_APPLY_METHOD, BoxingMethod, ObjCMethodDecl, NthStmt)
  MX_VISIT_ENTITY(ObjCBoxedExpr, sub_expression, 39, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_VISIT_BOOL(ObjCBoxedExpr, is_expressible_as_constant_initializer, 89, MX_APPLY_METHOD, IsExpressibleAsConstantInitializer, bool, NthStmt)
  MX_EXIT_VISIT_ObjCBoxedExpr
MX_END_VISIT_STMT(ObjCBoxedExpr)

#ifndef MX_ENTER_VISIT_ObjCBoolLiteralExpr
#  define MX_ENTER_VISIT_ObjCBoolLiteralExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCBoolLiteralExpr
#  define MX_EXIT_VISIT_ObjCBoolLiteralExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCBoolLiteralExpr)
  MX_ENTER_VISIT_ObjCBoolLiteralExpr
  MX_VISIT_BASE(ObjCBoolLiteralExpr, Expr)
  MX_VISIT_ENTITY(ObjCBoolLiteralExpr, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_BOOL(ObjCBoolLiteralExpr, value, 89, MX_APPLY_METHOD, Value, bool, NthStmt)
  MX_EXIT_VISIT_ObjCBoolLiteralExpr
MX_END_VISIT_STMT(ObjCBoolLiteralExpr)

#ifndef MX_ENTER_VISIT_ObjCAvailabilityCheckExpr
#  define MX_ENTER_VISIT_ObjCAvailabilityCheckExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCAvailabilityCheckExpr
#  define MX_EXIT_VISIT_ObjCAvailabilityCheckExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCAvailabilityCheckExpr)
  MX_ENTER_VISIT_ObjCAvailabilityCheckExpr
  MX_VISIT_BASE(ObjCAvailabilityCheckExpr, Expr)
  MX_VISIT_BOOL(ObjCAvailabilityCheckExpr, has_version, 89, MX_APPLY_METHOD, HasVersion, bool, NthStmt)
  MX_EXIT_VISIT_ObjCAvailabilityCheckExpr
MX_END_VISIT_STMT(ObjCAvailabilityCheckExpr)

#ifndef MX_ENTER_VISIT_ObjCArrayLiteral
#  define MX_ENTER_VISIT_ObjCArrayLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ObjCArrayLiteral
#  define MX_EXIT_VISIT_ObjCArrayLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ObjCArrayLiteral)
  MX_ENTER_VISIT_ObjCArrayLiteral
  MX_VISIT_BASE(ObjCArrayLiteral, Expr)
  MX_VISIT_ENTITY(ObjCArrayLiteral, array_with_objects_method, 37, MX_APPLY_METHOD, ArrayWithObjectsMethod, ObjCMethodDecl, NthStmt)
  MX_VISIT_ENTITY_LIST(ObjCArrayLiteral, elements, 15, MX_APPLY_METHOD, Elements, Expr, NthStmt)
  MX_EXIT_VISIT_ObjCArrayLiteral
MX_END_VISIT_STMT(ObjCArrayLiteral)

#ifndef MX_ENTER_VISIT_OMPIteratorExpr
#  define MX_ENTER_VISIT_OMPIteratorExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_OMPIteratorExpr
#  define MX_EXIT_VISIT_OMPIteratorExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(OMPIteratorExpr)
  MX_ENTER_VISIT_OMPIteratorExpr
  MX_VISIT_BASE(OMPIteratorExpr, Expr)
  MX_VISIT_ENTITY(OMPIteratorExpr, iterator_kw_token, 37, MX_APPLY_METHOD, IteratorKwToken, Token, NthStmt)
  MX_VISIT_ENTITY(OMPIteratorExpr, l_paren_token, 38, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(OMPIteratorExpr, r_paren_token, 39, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_OMPIteratorExpr
MX_END_VISIT_STMT(OMPIteratorExpr)

#ifndef MX_ENTER_VISIT_OMPArrayShapingExpr
#  define MX_ENTER_VISIT_OMPArrayShapingExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_OMPArrayShapingExpr
#  define MX_EXIT_VISIT_OMPArrayShapingExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(OMPArrayShapingExpr)
  MX_ENTER_VISIT_OMPArrayShapingExpr
  MX_VISIT_BASE(OMPArrayShapingExpr, Expr)
  MX_VISIT_ENTITY(OMPArrayShapingExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY_LIST(OMPArrayShapingExpr, dimensions, 15, MX_APPLY_METHOD, Dimensions, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPArrayShapingExpr, l_paren_token, 38, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(OMPArrayShapingExpr, r_paren_token, 39, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_EXIT_VISIT_OMPArrayShapingExpr
MX_END_VISIT_STMT(OMPArrayShapingExpr)

#ifndef MX_ENTER_VISIT_OMPArraySectionExpr
#  define MX_ENTER_VISIT_OMPArraySectionExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_OMPArraySectionExpr
#  define MX_EXIT_VISIT_OMPArraySectionExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(OMPArraySectionExpr)
  MX_ENTER_VISIT_OMPArraySectionExpr
  MX_VISIT_BASE(OMPArraySectionExpr, Expr)
  MX_VISIT_ENTITY(OMPArraySectionExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPArraySectionExpr, first_colon_token, 38, MX_APPLY_METHOD, FirstColonToken, Token, NthStmt)
  MX_VISIT_ENTITY(OMPArraySectionExpr, second_colon_token, 39, MX_APPLY_METHOD, SecondColonToken, Token, NthStmt)
  MX_VISIT_ENTITY(OMPArraySectionExpr, length, 40, MX_APPLY_METHOD, Length, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPArraySectionExpr, lower_bound, 41, MX_APPLY_METHOD, LowerBound, Expr, NthStmt)
  MX_VISIT_ENTITY(OMPArraySectionExpr, r_bracket_token, 42, MX_APPLY_METHOD, RBracketToken, Token, NthStmt)
  MX_VISIT_ENTITY(OMPArraySectionExpr, stride, 43, MX_APPLY_METHOD, Stride, Expr, NthStmt)
  MX_EXIT_VISIT_OMPArraySectionExpr
MX_END_VISIT_STMT(OMPArraySectionExpr)

#ifndef MX_ENTER_VISIT_NoInitExpr
#  define MX_ENTER_VISIT_NoInitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_NoInitExpr
#  define MX_EXIT_VISIT_NoInitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(NoInitExpr)
  MX_ENTER_VISIT_NoInitExpr
  MX_VISIT_BASE(NoInitExpr, Expr)
  MX_EXIT_VISIT_NoInitExpr
MX_END_VISIT_STMT(NoInitExpr)

#ifndef MX_ENTER_VISIT_MemberExpr
#  define MX_ENTER_VISIT_MemberExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_MemberExpr
#  define MX_EXIT_VISIT_MemberExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(MemberExpr)
  MX_ENTER_VISIT_MemberExpr
  MX_VISIT_BASE(MemberExpr, Expr)
  MX_VISIT_ENTITY(MemberExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(MemberExpr, l_angle_token, 38, MX_APPLY_METHOD, LAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(MemberExpr, member_declaration, 39, MX_APPLY_METHOD, MemberDeclaration, ValueDecl, NthStmt)
  MX_VISIT_ENTITY(MemberExpr, member_token, 40, MX_APPLY_METHOD, MemberToken, Token, NthStmt)
  MX_VISIT_ENTITY(MemberExpr, operator_token, 41, MX_APPLY_METHOD, OperatorToken, Token, NthStmt)
  MX_VISIT_ENTITY(MemberExpr, r_angle_token, 42, MX_APPLY_METHOD, RAngleToken, Token, NthStmt)
  MX_VISIT_ENTITY(MemberExpr, template_keyword_token, 43, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthStmt)
  MX_VISIT_BOOL(MemberExpr, had_multiple_candidates, 89, MX_APPLY_METHOD, HadMultipleCandidates, bool, NthStmt)
  MX_VISIT_BOOL(MemberExpr, has_explicit_template_arguments, 90, MX_APPLY_METHOD, HasExplicitTemplateArguments, bool, NthStmt)
  MX_VISIT_BOOL(MemberExpr, has_qualifier, 91, MX_APPLY_METHOD, HasQualifier, bool, NthStmt)
  MX_VISIT_BOOL(MemberExpr, has_template_keyword, 92, MX_APPLY_METHOD, HasTemplateKeyword, bool, NthStmt)
  MX_VISIT_BOOL(MemberExpr, is_arrow, 93, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_VISIT_BOOL(MemberExpr, is_implicit_access, 94, MX_APPLY_METHOD, IsImplicitAccess, bool, NthStmt)
  MX_VISIT_ENUM(MemberExpr, is_non_odr_use, 95, MX_APPLY_METHOD, IsNonOdrUse, NonOdrUseReason, NthStmt)
  MX_EXIT_VISIT_MemberExpr
MX_END_VISIT_STMT(MemberExpr)

#ifndef MX_ENTER_VISIT_MatrixSubscriptExpr
#  define MX_ENTER_VISIT_MatrixSubscriptExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_MatrixSubscriptExpr
#  define MX_EXIT_VISIT_MatrixSubscriptExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(MatrixSubscriptExpr)
  MX_ENTER_VISIT_MatrixSubscriptExpr
  MX_VISIT_BASE(MatrixSubscriptExpr, Expr)
  MX_VISIT_ENTITY(MatrixSubscriptExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(MatrixSubscriptExpr, column_index, 38, MX_APPLY_METHOD, ColumnIndex, Expr, NthStmt)
  MX_VISIT_ENTITY(MatrixSubscriptExpr, r_bracket_token, 39, MX_APPLY_METHOD, RBracketToken, Token, NthStmt)
  MX_VISIT_ENTITY(MatrixSubscriptExpr, row_index, 40, MX_APPLY_METHOD, RowIndex, Expr, NthStmt)
  MX_VISIT_BOOL(MatrixSubscriptExpr, is_incomplete, 89, MX_APPLY_METHOD, IsIncomplete, bool, NthStmt)
  MX_EXIT_VISIT_MatrixSubscriptExpr
MX_END_VISIT_STMT(MatrixSubscriptExpr)

#ifndef MX_ENTER_VISIT_MaterializeTemporaryExpr
#  define MX_ENTER_VISIT_MaterializeTemporaryExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_MaterializeTemporaryExpr
#  define MX_EXIT_VISIT_MaterializeTemporaryExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(MaterializeTemporaryExpr)
  MX_ENTER_VISIT_MaterializeTemporaryExpr
  MX_VISIT_BASE(MaterializeTemporaryExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(MaterializeTemporaryExpr, extending_declaration, 37, MX_APPLY_METHOD, ExtendingDeclaration, ValueDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(MaterializeTemporaryExpr, lifetime_extended_temporary_declaration, 38, MX_APPLY_METHOD, LifetimeExtendedTemporaryDeclaration, LifetimeExtendedTemporaryDecl, NthStmt)
  MX_VISIT_ENUM(MaterializeTemporaryExpr, storage_duration, 95, MX_APPLY_METHOD, StorageDuration, StorageDuration, NthStmt)
  MX_VISIT_ENTITY(MaterializeTemporaryExpr, sub_expression, 39, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_VISIT_BOOL(MaterializeTemporaryExpr, is_bound_to_lvalue_reference, 89, MX_APPLY_METHOD, IsBoundToLvalueReference, bool, NthStmt)
  MX_VISIT_BOOL(MaterializeTemporaryExpr, is_usable_in_constant_expressions, 90, MX_APPLY_METHOD, IsUsableInConstantExpressions, bool, NthStmt)
  MX_EXIT_VISIT_MaterializeTemporaryExpr
MX_END_VISIT_STMT(MaterializeTemporaryExpr)

#ifndef MX_ENTER_VISIT_MSPropertySubscriptExpr
#  define MX_ENTER_VISIT_MSPropertySubscriptExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_MSPropertySubscriptExpr
#  define MX_EXIT_VISIT_MSPropertySubscriptExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(MSPropertySubscriptExpr)
  MX_ENTER_VISIT_MSPropertySubscriptExpr
  MX_VISIT_BASE(MSPropertySubscriptExpr, Expr)
  MX_VISIT_ENTITY(MSPropertySubscriptExpr, base, 37, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_ENTITY(MSPropertySubscriptExpr, index, 38, MX_APPLY_METHOD, Index, Expr, NthStmt)
  MX_VISIT_ENTITY(MSPropertySubscriptExpr, r_bracket_token, 39, MX_APPLY_METHOD, RBracketToken, Token, NthStmt)
  MX_EXIT_VISIT_MSPropertySubscriptExpr
MX_END_VISIT_STMT(MSPropertySubscriptExpr)

#ifndef MX_ENTER_VISIT_MSPropertyRefExpr
#  define MX_ENTER_VISIT_MSPropertyRefExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_MSPropertyRefExpr
#  define MX_EXIT_VISIT_MSPropertyRefExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(MSPropertyRefExpr)
  MX_ENTER_VISIT_MSPropertyRefExpr
  MX_VISIT_BASE(MSPropertyRefExpr, Expr)
  MX_VISIT_ENTITY(MSPropertyRefExpr, base_expression, 37, MX_APPLY_METHOD, BaseExpression, Expr, NthStmt)
  MX_VISIT_ENTITY(MSPropertyRefExpr, member_token, 38, MX_APPLY_METHOD, MemberToken, Token, NthStmt)
  MX_VISIT_ENTITY(MSPropertyRefExpr, property_declaration, 39, MX_APPLY_METHOD, PropertyDeclaration, MSPropertyDecl, NthStmt)
  MX_VISIT_BOOL(MSPropertyRefExpr, is_arrow, 89, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_VISIT_BOOL(MSPropertyRefExpr, is_implicit_access, 90, MX_APPLY_METHOD, IsImplicitAccess, bool, NthStmt)
  MX_EXIT_VISIT_MSPropertyRefExpr
MX_END_VISIT_STMT(MSPropertyRefExpr)

#ifndef MX_ENTER_VISIT_LambdaExpr
#  define MX_ENTER_VISIT_LambdaExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_LambdaExpr
#  define MX_EXIT_VISIT_LambdaExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(LambdaExpr)
  MX_ENTER_VISIT_LambdaExpr
  MX_VISIT_BASE(LambdaExpr, Expr)
  MX_VISIT_ENTITY(LambdaExpr, body, 37, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(LambdaExpr, call_operator, 38, MX_APPLY_METHOD, CallOperator, CXXMethodDecl, NthStmt)
  MX_VISIT_ENUM(LambdaExpr, capture_default, 95, MX_APPLY_METHOD, CaptureDefault, LambdaCaptureDefault, NthStmt)
  MX_VISIT_ENTITY(LambdaExpr, capture_default_token, 39, MX_APPLY_METHOD, CaptureDefaultToken, Token, NthStmt)
  MX_VISIT_ENTITY(LambdaExpr, compound_statement_body, 40, MX_APPLY_METHOD, CompoundStatementBody, CompoundStmt, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(LambdaExpr, dependent_call_operator, 41, MX_APPLY_METHOD, DependentCallOperator, FunctionTemplateDecl, NthStmt)
  MX_VISIT_ENTITY_LIST(LambdaExpr, explicit_template_parameters, 15, MX_APPLY_METHOD, ExplicitTemplateParameters, NamedDecl, NthStmt)
  MX_VISIT_TOKEN_RANGE(LambdaExpr, introducer_range, 42, 43, NthStmt)
  MX_VISIT_ENTITY(LambdaExpr, lambda_class, 44, MX_APPLY_METHOD, LambdaClass, CXXRecordDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(LambdaExpr, template_parameter_list, 45, MX_APPLY_METHOD, TemplateParameterList, TemplateParameterList, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(LambdaExpr, trailing_requires_clause, 46, MX_APPLY_METHOD, TrailingRequiresClause, Expr, NthStmt)
  MX_VISIT_BOOL(LambdaExpr, has_explicit_parameters, 89, MX_APPLY_METHOD, HasExplicitParameters, bool, NthStmt)
  MX_VISIT_BOOL(LambdaExpr, has_explicit_result_type, 90, MX_APPLY_METHOD, HasExplicitResultType, bool, NthStmt)
  MX_VISIT_BOOL(LambdaExpr, is_generic_lambda, 91, MX_APPLY_METHOD, IsGenericLambda, bool, NthStmt)
  MX_VISIT_BOOL(LambdaExpr, is_mutable, 92, MX_APPLY_METHOD, IsMutable, bool, NthStmt)
  MX_EXIT_VISIT_LambdaExpr
MX_END_VISIT_STMT(LambdaExpr)

#ifndef MX_ENTER_VISIT_IntegerLiteral
#  define MX_ENTER_VISIT_IntegerLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_IntegerLiteral
#  define MX_EXIT_VISIT_IntegerLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(IntegerLiteral)
  MX_ENTER_VISIT_IntegerLiteral
  MX_VISIT_BASE(IntegerLiteral, Expr)
  MX_VISIT_ENTITY(IntegerLiteral, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_EXIT_VISIT_IntegerLiteral
MX_END_VISIT_STMT(IntegerLiteral)

#ifndef MX_ENTER_VISIT_InitListExpr
#  define MX_ENTER_VISIT_InitListExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_InitListExpr
#  define MX_EXIT_VISIT_InitListExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(InitListExpr)
  MX_ENTER_VISIT_InitListExpr
  MX_VISIT_BASE(InitListExpr, Expr)
  MX_VISIT_OPTIONAL_ENTITY(InitListExpr, array_filler, 37, MX_APPLY_METHOD, ArrayFiller, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(InitListExpr, initialized_field_in_union, 38, MX_APPLY_METHOD, InitializedFieldInUnion, FieldDecl, NthStmt)
  MX_VISIT_ENTITY(InitListExpr, l_brace_token, 39, MX_APPLY_METHOD, LBraceToken, Token, NthStmt)
  MX_VISIT_ENTITY(InitListExpr, r_brace_token, 40, MX_APPLY_METHOD, RBraceToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(InitListExpr, semantic_form, 41, MX_APPLY_METHOD, SemanticForm, InitListExpr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(InitListExpr, syntactic_form, 42, MX_APPLY_METHOD, SyntacticForm, InitListExpr, NthStmt)
  MX_VISIT_BOOL(InitListExpr, had_array_range_designator, 89, MX_APPLY_METHOD, HadArrayRangeDesignator, bool, NthStmt)
  MX_VISIT_BOOL(InitListExpr, has_array_filler, 90, MX_APPLY_METHOD, HasArrayFiller, bool, NthStmt)
  MX_VISIT_BOOL(InitListExpr, has_designated_initializer, 91, MX_APPLY_METHOD, HasDesignatedInitializer, bool, NthStmt)
  MX_VISIT_ENTITY_LIST(InitListExpr, initializers, 15, MX_APPLY_METHOD, Initializers, Expr, NthStmt)
  MX_VISIT_BOOL(InitListExpr, is_explicit, 92, MX_APPLY_METHOD, IsExplicit, bool, NthStmt)
  MX_VISIT_BOOL(InitListExpr, is_semantic_form, 93, MX_APPLY_METHOD, IsSemanticForm, bool, NthStmt)
  MX_VISIT_BOOL(InitListExpr, is_string_literal_initializer, 94, MX_APPLY_METHOD, IsStringLiteralInitializer, bool, NthStmt)
  MX_VISIT_BOOL(InitListExpr, is_syntactic_form, 96, MX_APPLY_METHOD, IsSyntacticForm, bool, NthStmt)
  MX_VISIT_OPTIONAL_BOOL(InitListExpr, is_transparent, 98, MX_APPLY_METHOD, IsTransparent, bool, NthStmt)
  MX_EXIT_VISIT_InitListExpr
MX_END_VISIT_STMT(InitListExpr)

#ifndef MX_ENTER_VISIT_ImplicitValueInitExpr
#  define MX_ENTER_VISIT_ImplicitValueInitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ImplicitValueInitExpr
#  define MX_EXIT_VISIT_ImplicitValueInitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ImplicitValueInitExpr)
  MX_ENTER_VISIT_ImplicitValueInitExpr
  MX_VISIT_BASE(ImplicitValueInitExpr, Expr)
  MX_EXIT_VISIT_ImplicitValueInitExpr
MX_END_VISIT_STMT(ImplicitValueInitExpr)

#ifndef MX_ENTER_VISIT_ImaginaryLiteral
#  define MX_ENTER_VISIT_ImaginaryLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ImaginaryLiteral
#  define MX_EXIT_VISIT_ImaginaryLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ImaginaryLiteral)
  MX_ENTER_VISIT_ImaginaryLiteral
  MX_VISIT_BASE(ImaginaryLiteral, Expr)
  MX_VISIT_ENTITY(ImaginaryLiteral, sub_expression, 37, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_EXIT_VISIT_ImaginaryLiteral
MX_END_VISIT_STMT(ImaginaryLiteral)

#ifndef MX_ENTER_VISIT_GenericSelectionExpr
#  define MX_ENTER_VISIT_GenericSelectionExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_GenericSelectionExpr
#  define MX_EXIT_VISIT_GenericSelectionExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(GenericSelectionExpr)
  MX_ENTER_VISIT_GenericSelectionExpr
  MX_VISIT_BASE(GenericSelectionExpr, Expr)
  MX_VISIT_ENTITY_LIST(GenericSelectionExpr, association_expressions, 15, MX_APPLY_METHOD, AssociationExpressions, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(GenericSelectionExpr, controlling_expression, 37, MX_APPLY_METHOD, ControllingExpression, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(GenericSelectionExpr, controlling_type, 38, MX_APPLY_METHOD, ControllingType, Type, NthStmt)
  MX_VISIT_ENTITY(GenericSelectionExpr, default_token, 39, MX_APPLY_METHOD, DefaultToken, Token, NthStmt)
  MX_VISIT_ENTITY(GenericSelectionExpr, generic_token, 40, MX_APPLY_METHOD, GenericToken, Token, NthStmt)
  MX_VISIT_ENTITY(GenericSelectionExpr, r_paren_token, 41, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(GenericSelectionExpr, result_expression, 42, MX_APPLY_METHOD, ResultExpression, Expr, NthStmt)
  MX_VISIT_BOOL(GenericSelectionExpr, is_expression_predicate, 89, MX_APPLY_METHOD, IsExpressionPredicate, bool, NthStmt)
  MX_VISIT_BOOL(GenericSelectionExpr, is_result_dependent, 90, MX_APPLY_METHOD, IsResultDependent, bool, NthStmt)
  MX_VISIT_BOOL(GenericSelectionExpr, is_type_predicate, 91, MX_APPLY_METHOD, IsTypePredicate, bool, NthStmt)
  MX_EXIT_VISIT_GenericSelectionExpr
MX_END_VISIT_STMT(GenericSelectionExpr)

#ifndef MX_ENTER_VISIT_GNUNullExpr
#  define MX_ENTER_VISIT_GNUNullExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_GNUNullExpr
#  define MX_EXIT_VISIT_GNUNullExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(GNUNullExpr)
  MX_ENTER_VISIT_GNUNullExpr
  MX_VISIT_BASE(GNUNullExpr, Expr)
  MX_VISIT_ENTITY(GNUNullExpr, token_token, 37, MX_APPLY_METHOD, TokenToken, Token, NthStmt)
  MX_EXIT_VISIT_GNUNullExpr
MX_END_VISIT_STMT(GNUNullExpr)

#ifndef MX_ENTER_VISIT_FunctionParmPackExpr
#  define MX_ENTER_VISIT_FunctionParmPackExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_FunctionParmPackExpr
#  define MX_EXIT_VISIT_FunctionParmPackExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(FunctionParmPackExpr)
  MX_ENTER_VISIT_FunctionParmPackExpr
  MX_VISIT_BASE(FunctionParmPackExpr, Expr)
  MX_VISIT_ENTITY(FunctionParmPackExpr, parameter_pack, 37, MX_APPLY_METHOD, ParameterPack, VarDecl, NthStmt)
  MX_VISIT_ENTITY(FunctionParmPackExpr, parameter_pack_token, 38, MX_APPLY_METHOD, ParameterPackToken, Token, NthStmt)
  MX_VISIT_ENTITY_LIST(FunctionParmPackExpr, expansions, 15, MX_APPLY_METHOD, Expansions, VarDecl, NthStmt)
  MX_EXIT_VISIT_FunctionParmPackExpr
MX_END_VISIT_STMT(FunctionParmPackExpr)

#ifndef MX_ENTER_VISIT_FullExpr
#  define MX_ENTER_VISIT_FullExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_FullExpr
#  define MX_EXIT_VISIT_FullExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(FullExpr)
  MX_ENTER_VISIT_FullExpr
  MX_VISIT_BASE(FullExpr, Expr)
  MX_VISIT_ENTITY(FullExpr, sub_expression, 37, MX_APPLY_METHOD, SubExpression, Expr, NthStmt)
  MX_EXIT_VISIT_FullExpr
MX_END_VISIT_STMT(FullExpr)

#ifndef MX_ENTER_VISIT_ExprWithCleanups
#  define MX_ENTER_VISIT_ExprWithCleanups MX_ENTER_VISIT_FullExpr
#endif
#ifndef MX_EXIT_VISIT_ExprWithCleanups
#  define MX_EXIT_VISIT_ExprWithCleanups MX_EXIT_VISIT_FullExpr
#endif

MX_BEGIN_VISIT_STMT(ExprWithCleanups)
  MX_ENTER_VISIT_ExprWithCleanups
  MX_VISIT_BASE(ExprWithCleanups, FullExpr)
  MX_VISIT_BOOL(ExprWithCleanups, cleanups_have_side_effects, 89, MX_APPLY_METHOD, CleanupsHaveSideEffects, bool, NthStmt)
  MX_EXIT_VISIT_ExprWithCleanups
MX_END_VISIT_STMT(ExprWithCleanups)

#ifndef MX_ENTER_VISIT_ConstantExpr
#  define MX_ENTER_VISIT_ConstantExpr MX_ENTER_VISIT_FullExpr
#endif
#ifndef MX_EXIT_VISIT_ConstantExpr
#  define MX_EXIT_VISIT_ConstantExpr MX_EXIT_VISIT_FullExpr
#endif

MX_BEGIN_VISIT_STMT(ConstantExpr)
  MX_ENTER_VISIT_ConstantExpr
  MX_VISIT_BASE(ConstantExpr, FullExpr)
  MX_VISIT_ENUM(ConstantExpr, result_storage_kind, 95, MX_APPLY_METHOD, ResultStorageKind, ConstantExprResultStorageKind, NthStmt)
  MX_VISIT_BOOL(ConstantExpr, has_ap_value_result, 89, MX_APPLY_METHOD, HasAPValueResult, bool, NthStmt)
  MX_VISIT_BOOL(ConstantExpr, is_immediate_invocation, 90, MX_APPLY_METHOD, IsImmediateInvocation, bool, NthStmt)
  MX_EXIT_VISIT_ConstantExpr
MX_END_VISIT_STMT(ConstantExpr)

#ifndef MX_ENTER_VISIT_FloatingLiteral
#  define MX_ENTER_VISIT_FloatingLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_FloatingLiteral
#  define MX_EXIT_VISIT_FloatingLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(FloatingLiteral)
  MX_ENTER_VISIT_FloatingLiteral
  MX_VISIT_BASE(FloatingLiteral, Expr)
  MX_VISIT_ENTITY(FloatingLiteral, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_VISIT_BOOL(FloatingLiteral, is_exact, 89, MX_APPLY_METHOD, IsExact, bool, NthStmt)
  MX_EXIT_VISIT_FloatingLiteral
MX_END_VISIT_STMT(FloatingLiteral)

#ifndef MX_ENTER_VISIT_FixedPointLiteral
#  define MX_ENTER_VISIT_FixedPointLiteral MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_FixedPointLiteral
#  define MX_EXIT_VISIT_FixedPointLiteral MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(FixedPointLiteral)
  MX_ENTER_VISIT_FixedPointLiteral
  MX_VISIT_BASE(FixedPointLiteral, Expr)
  MX_VISIT_ENTITY(FixedPointLiteral, token, 37, MX_APPLY_METHOD, Token, Token, NthStmt)
  MX_EXIT_VISIT_FixedPointLiteral
MX_END_VISIT_STMT(FixedPointLiteral)

#ifndef MX_ENTER_VISIT_ExtVectorElementExpr
#  define MX_ENTER_VISIT_ExtVectorElementExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ExtVectorElementExpr
#  define MX_EXIT_VISIT_ExtVectorElementExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ExtVectorElementExpr)
  MX_ENTER_VISIT_ExtVectorElementExpr
  MX_VISIT_BASE(ExtVectorElementExpr, Expr)
  MX_VISIT_BOOL(ExtVectorElementExpr, contains_duplicate_elements, 89, MX_APPLY_METHOD, ContainsDuplicateElements, bool, NthStmt)
  MX_VISIT_ENTITY(ExtVectorElementExpr, accessor_token, 37, MX_APPLY_METHOD, AccessorToken, Token, NthStmt)
  MX_VISIT_ENTITY(ExtVectorElementExpr, base, 38, MX_APPLY_METHOD, Base, Expr, NthStmt)
  MX_VISIT_BOOL(ExtVectorElementExpr, is_arrow, 90, MX_APPLY_METHOD, IsArrow, bool, NthStmt)
  MX_EXIT_VISIT_ExtVectorElementExpr
MX_END_VISIT_STMT(ExtVectorElementExpr)

#ifndef MX_ENTER_VISIT_ExpressionTraitExpr
#  define MX_ENTER_VISIT_ExpressionTraitExpr MX_ENTER_VISIT_Expr
#endif
#ifndef MX_EXIT_VISIT_ExpressionTraitExpr
#  define MX_EXIT_VISIT_ExpressionTraitExpr MX_EXIT_VISIT_Expr
#endif

MX_BEGIN_VISIT_STMT(ExpressionTraitExpr)
  MX_ENTER_VISIT_ExpressionTraitExpr
  MX_VISIT_BASE(ExpressionTraitExpr, Expr)
  MX_VISIT_ENTITY(ExpressionTraitExpr, queried_expression, 37, MX_APPLY_METHOD, QueriedExpression, Expr, NthStmt)
  MX_VISIT_ENUM(ExpressionTraitExpr, trait, 95, MX_APPLY_METHOD, Trait, ExpressionTrait, NthStmt)
  MX_VISIT_BOOL(ExpressionTraitExpr, value, 89, MX_APPLY_METHOD, Value, bool, NthStmt)
  MX_EXIT_VISIT_ExpressionTraitExpr
MX_END_VISIT_STMT(ExpressionTraitExpr)

#ifndef MX_ENTER_VISIT_AttributedStmt
#  define MX_ENTER_VISIT_AttributedStmt MX_ENTER_VISIT_ValueStmt
#endif
#ifndef MX_EXIT_VISIT_AttributedStmt
#  define MX_EXIT_VISIT_AttributedStmt MX_EXIT_VISIT_ValueStmt
#endif

MX_BEGIN_VISIT_STMT(AttributedStmt)
  MX_ENTER_VISIT_AttributedStmt
  MX_VISIT_BASE(AttributedStmt, ValueStmt)
  MX_VISIT_ENTITY(AttributedStmt, attribute_token, 10, MX_APPLY_METHOD, AttributeToken, Token, NthStmt)
  MX_VISIT_ENTITY_LIST(AttributedStmt, attributes, 15, MX_APPLY_METHOD, Attributes, Attr, NthStmt)
  MX_VISIT_ENTITY(AttributedStmt, sub_statement, 11, MX_APPLY_METHOD, SubStatement, Stmt, NthStmt)
  MX_EXIT_VISIT_AttributedStmt
MX_END_VISIT_STMT(AttributedStmt)

#ifndef MX_ENTER_VISIT_SwitchStmt
#  define MX_ENTER_VISIT_SwitchStmt MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_SwitchStmt
#  define MX_EXIT_VISIT_SwitchStmt MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_STMT(SwitchStmt)
  MX_ENTER_VISIT_SwitchStmt
  MX_VISIT_BASE(SwitchStmt, Stmt)
  MX_VISIT_ENTITY(SwitchStmt, body, 9, MX_APPLY_METHOD, Body, Stmt, NthStmt)
  MX_VISIT_ENTITY(SwitchStmt, condition, 10, MX_APPLY_METHOD, Condition, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(SwitchStmt, condition_variable, 11, MX_APPLY_METHOD, ConditionVariable, VarDecl, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(SwitchStmt, condition_variable_declaration_statement, 13, MX_APPLY_METHOD, ConditionVariableDeclarationStatement, DeclStmt, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(SwitchStmt, initializer, 14, MX_APPLY_METHOD, Initializer, Stmt, NthStmt)
  MX_VISIT_ENTITY(SwitchStmt, l_paren_token, 17, MX_APPLY_METHOD, LParenToken, Token, NthStmt)
  MX_VISIT_ENTITY(SwitchStmt, r_paren_token, 18, MX_APPLY_METHOD, RParenToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(SwitchStmt, first_switch_case, 19, MX_APPLY_METHOD, FirstSwitchCase, SwitchCase, NthStmt)
  MX_VISIT_ENTITY(SwitchStmt, switch_token, 20, MX_APPLY_METHOD, SwitchToken, Token, NthStmt)
  MX_VISIT_BOOL(SwitchStmt, has_initializer_storage, 12, MX_APPLY_METHOD, HasInitializerStorage, bool, NthStmt)
  MX_VISIT_BOOL(SwitchStmt, has_variable_storage, 16, MX_APPLY_METHOD, HasVariableStorage, bool, NthStmt)
  MX_VISIT_BOOL(SwitchStmt, is_all_enum_cases_covered, 23, MX_APPLY_METHOD, IsAllEnumCasesCovered, bool, NthStmt)
  MX_EXIT_VISIT_SwitchStmt
MX_END_VISIT_STMT(SwitchStmt)

#ifndef MX_ENTER_VISIT_SwitchCase
#  define MX_ENTER_VISIT_SwitchCase MX_ENTER_VISIT_Stmt
#endif
#ifndef MX_EXIT_VISIT_SwitchCase
#  define MX_EXIT_VISIT_SwitchCase MX_EXIT_VISIT_Stmt
#endif

MX_BEGIN_VISIT_ABSTRACT_STMT(SwitchCase)
  MX_ENTER_VISIT_SwitchCase
  MX_VISIT_BASE(SwitchCase, Stmt)
  MX_VISIT_ENTITY(SwitchCase, colon_token, 9, MX_APPLY_METHOD, ColonToken, Token, NthStmt)
  MX_VISIT_ENTITY(SwitchCase, keyword_token, 10, MX_APPLY_METHOD, KeywordToken, Token, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(SwitchCase, next_switch_case, 11, MX_APPLY_METHOD, NextSwitchCase, SwitchCase, NthStmt)
  MX_VISIT_ENTITY(SwitchCase, sub_statement, 13, MX_APPLY_METHOD, SubStatement, Stmt, NthStmt)
  MX_EXIT_VISIT_SwitchCase
MX_END_VISIT_STMT(SwitchCase)

#ifndef MX_ENTER_VISIT_DefaultStmt
#  define MX_ENTER_VISIT_DefaultStmt MX_ENTER_VISIT_SwitchCase
#endif
#ifndef MX_EXIT_VISIT_DefaultStmt
#  define MX_EXIT_VISIT_DefaultStmt MX_EXIT_VISIT_SwitchCase
#endif

MX_BEGIN_VISIT_STMT(DefaultStmt)
  MX_ENTER_VISIT_DefaultStmt
  MX_VISIT_BASE(DefaultStmt, SwitchCase)
  MX_VISIT_ENTITY(DefaultStmt, default_token, 14, MX_APPLY_METHOD, DefaultToken, Token, NthStmt)
  MX_EXIT_VISIT_DefaultStmt
MX_END_VISIT_STMT(DefaultStmt)

#ifndef MX_ENTER_VISIT_CaseStmt
#  define MX_ENTER_VISIT_CaseStmt MX_ENTER_VISIT_SwitchCase
#endif
#ifndef MX_EXIT_VISIT_CaseStmt
#  define MX_EXIT_VISIT_CaseStmt MX_EXIT_VISIT_SwitchCase
#endif

MX_BEGIN_VISIT_STMT(CaseStmt)
  MX_ENTER_VISIT_CaseStmt
  MX_VISIT_BASE(CaseStmt, SwitchCase)
  MX_VISIT_BOOL(CaseStmt, case_statement_is_gnu_range, 12, MX_APPLY_METHOD, CaseStatementIsGNURange, bool, NthStmt)
  MX_VISIT_ENTITY(CaseStmt, case_token, 14, MX_APPLY_METHOD, CaseToken, Token, NthStmt)
  MX_VISIT_ENTITY(CaseStmt, ellipsis_token, 17, MX_APPLY_METHOD, EllipsisToken, Token, NthStmt)
  MX_VISIT_ENTITY(CaseStmt, lhs, 18, MX_APPLY_METHOD, LHS, Expr, NthStmt)
  MX_VISIT_OPTIONAL_ENTITY(CaseStmt, rhs, 19, MX_APPLY_METHOD, RHS, Expr, NthStmt)
  MX_EXIT_VISIT_CaseStmt
MX_END_VISIT_STMT(CaseStmt)

#ifndef MX_ENTER_VISIT_Decl
#  define MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_Decl
#  define MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(Decl)
  MX_ENTER_VISIT_Decl
  MX_VISIT_DECL_LINK(Decl, parent_declaration, 0)
  MX_VISIT_STMT_LINK(Decl, parent_statement, 1)
  MX_VISIT_BOOL(Decl, is_definition, 2, MX_APPLY_FUNC, IsDefinition, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(Decl, attributes, 3, MX_APPLY_METHOD, Attributes, Attr, NthDecl)
  MX_VISIT_ENUM(Decl, access, 4, MX_APPLY_METHOD, Access, AccessSpecifier, NthDecl)
  MX_VISIT_ENUM(Decl, availability, 5, MX_APPLY_METHOD, Availability, AvailabilityResult, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(Decl, defining_attribute, 6, MX_APPLY_METHOD, DefiningAttribute, Attr, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(Decl, described_template, 7, MX_APPLY_METHOD, DescribedTemplate, TemplateDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(Decl, described_template_parameters, 8, MX_APPLY_METHOD, DescribedTemplateParameters, TemplateParameterList, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(Decl, external_source_symbol_attribute, 9, MX_APPLY_METHOD, ExternalSourceSymbolAttribute, ExternalSourceSymbolAttr, NthDecl)
  MX_VISIT_ENUM(Decl, friend_object_kind, 10, MX_APPLY_METHOD, FriendObjectKind, DeclFriendObjectKind, NthDecl)
  MX_VISIT_OPTIONAL_INT(Decl, max_alignment, 11, MX_APPLY_METHOD, MaxAlignment, , NthDecl)
  MX_VISIT_ENUM(Decl, module_ownership_kind, 13, MX_APPLY_METHOD, ModuleOwnershipKind, DeclModuleOwnershipKind, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(Decl, non_closure_context, 14, MX_APPLY_METHOD, NonClosureContext, Decl, NthDecl)
  MX_VISIT_BOOL(Decl, has_attributes, 15, MX_APPLY_METHOD, HasAttributes, bool, NthDecl)
  MX_VISIT_BOOL(Decl, has_owning_module, 16, MX_APPLY_METHOD, HasOwningModule, bool, NthDecl)
  MX_VISIT_BOOL(Decl, has_tag_identifier_namespace, 17, MX_APPLY_METHOD, HasTagIdentifierNamespace, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_defined_outside_function_or_method, 18, MX_APPLY_METHOD, IsDefinedOutsideFunctionOrMethod, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_deprecated, 19, MX_APPLY_METHOD, IsDeprecated, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_discarded_in_global_module_fragment, 20, MX_APPLY_METHOD, IsDiscardedInGlobalModuleFragment, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_file_context_declaration, 21, MX_APPLY_METHOD, IsFileContextDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_function_or_function_template, 22, MX_APPLY_METHOD, IsFunctionOrFunctionTemplate, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_function_pointer_type, 23, MX_APPLY_METHOD, IsFunctionPointerType, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_implicit, 24, MX_APPLY_METHOD, IsImplicit, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_in_anonymous_namespace, 25, MX_APPLY_METHOD, IsInAnonymousNamespace, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_in_another_module_unit, 26, MX_APPLY_METHOD, IsInAnotherModuleUnit, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_in_export_declaration_context, 27, MX_APPLY_METHOD, IsInExportDeclarationContext, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(Decl, is_in_local_scope_for_instantiation, 28, MX_APPLY_METHOD, IsInLocalScopeForInstantiation, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_in_std_namespace, 30, MX_APPLY_METHOD, IsInStdNamespace, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_invisible_outside_the_owning_module, 31, MX_APPLY_METHOD, IsInvisibleOutsideTheOwningModule, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_local_extern_declaration, 32, MX_APPLY_METHOD, IsLocalExternDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_module_private, 33, MX_APPLY_METHOD, IsModulePrivate, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_out_of_line, 34, MX_APPLY_METHOD, IsOutOfLine, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_parameter_pack, 35, MX_APPLY_METHOD, IsParameterPack, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_template_declaration, 36, MX_APPLY_METHOD, IsTemplateDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_template_parameter, 37, MX_APPLY_METHOD, IsTemplateParameter, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_template_parameter_pack, 38, MX_APPLY_METHOD, IsTemplateParameterPack, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_templated, 39, MX_APPLY_METHOD, IsTemplated, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_top_level_declaration_in_obj_c_container, 40, MX_APPLY_METHOD, IsTopLevelDeclarationInObjCContainer, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_unavailable, 41, MX_APPLY_METHOD, IsUnavailable, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_unconditionally_visible, 42, MX_APPLY_METHOD, IsUnconditionallyVisible, bool, NthDecl)
  MX_VISIT_BOOL(Decl, is_weak_imported, 43, MX_APPLY_METHOD, IsWeakImported, bool, NthDecl)
  MX_VISIT_ENUM(Decl, kind, 44, MX_APPLY_METHOD, Kind, DeclKind, NthDecl)
  MX_VISIT_ENUM(Decl, category, 45, MX_APPLY_METHOD, Category, DeclCategory, NthDecl)
  MX_VISIT_ENTITY(Decl, token, 46, MX_APPLY_METHOD, Token, Token, NthDecl)
  MX_VISIT_TOKEN_RANGE(Decl, tokens, 47, 48, NthDecl)
  MX_EXIT_VISIT_Decl
MX_END_VISIT_DECL(Decl)

#ifndef MX_ENTER_VISIT_ClassScopeFunctionSpecializationDecl
#  define MX_ENTER_VISIT_ClassScopeFunctionSpecializationDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_ClassScopeFunctionSpecializationDecl
#  define MX_EXIT_VISIT_ClassScopeFunctionSpecializationDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(ClassScopeFunctionSpecializationDecl)
  MX_ENTER_VISIT_ClassScopeFunctionSpecializationDecl
  MX_VISIT_BASE(ClassScopeFunctionSpecializationDecl, Decl)
  MX_VISIT_ENTITY(ClassScopeFunctionSpecializationDecl, specialization, 49, MX_APPLY_METHOD, Specialization, CXXMethodDecl, NthDecl)
  MX_VISIT_BOOL(ClassScopeFunctionSpecializationDecl, has_explicit_template_arguments, 50, MX_APPLY_METHOD, HasExplicitTemplateArguments, bool, NthDecl)
  MX_EXIT_VISIT_ClassScopeFunctionSpecializationDecl
MX_END_VISIT_DECL(ClassScopeFunctionSpecializationDecl)

#ifndef MX_ENTER_VISIT_CapturedDecl
#  define MX_ENTER_VISIT_CapturedDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_CapturedDecl
#  define MX_EXIT_VISIT_CapturedDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(CapturedDecl)
  MX_ENTER_VISIT_CapturedDecl
  MX_VISIT_BASE(CapturedDecl, Decl)
  MX_VISIT_ENTITY(CapturedDecl, context_parameter, 49, MX_APPLY_METHOD, ContextParameter, ImplicitParamDecl, NthDecl)
  MX_VISIT_BOOL(CapturedDecl, is_nothrow, 50, MX_APPLY_METHOD, IsNothrow, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(CapturedDecl, parameters, 51, MX_APPLY_METHOD, Parameters, ImplicitParamDecl, NthDecl)
  MX_VISIT_DECL_CONTEXT(CapturedDecl, declarations_in_context, 52, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_CapturedDecl
MX_END_VISIT_DECL(CapturedDecl)

#ifndef MX_ENTER_VISIT_BlockDecl
#  define MX_ENTER_VISIT_BlockDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_BlockDecl
#  define MX_EXIT_VISIT_BlockDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(BlockDecl)
  MX_ENTER_VISIT_BlockDecl
  MX_VISIT_BASE(BlockDecl, Decl)
  MX_VISIT_BOOL(BlockDecl, block_missing_return_type, 50, MX_APPLY_METHOD, BlockMissingReturnType, bool, NthDecl)
  MX_VISIT_BOOL(BlockDecl, can_avoid_copy_to_heap, 53, MX_APPLY_METHOD, CanAvoidCopyToHeap, bool, NthDecl)
  MX_VISIT_BOOL(BlockDecl, captures_cxx_this, 54, MX_APPLY_METHOD, CapturesCXXThis, bool, NthDecl)
  MX_VISIT_BOOL(BlockDecl, does_not_escape, 55, MX_APPLY_METHOD, DoesNotEscape, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(BlockDecl, block_mangling_context_declaration, 49, MX_APPLY_METHOD, BlockManglingContextDeclaration, Decl, NthDecl)
  MX_VISIT_ENTITY(BlockDecl, caret_token, 56, MX_APPLY_METHOD, CaretToken, Token, NthDecl)
  MX_VISIT_ENTITY(BlockDecl, compound_body, 57, MX_APPLY_METHOD, CompoundBody, CompoundStmt, NthDecl)
  MX_VISIT_ENTITY(BlockDecl, signature_as_written, 58, MX_APPLY_METHOD, SignatureAsWritten, Type, NthDecl)
  MX_VISIT_BOOL(BlockDecl, has_captures, 59, MX_APPLY_METHOD, HasCaptures, bool, NthDecl)
  MX_VISIT_BOOL(BlockDecl, is_conversion_from_lambda, 60, MX_APPLY_METHOD, IsConversionFromLambda, bool, NthDecl)
  MX_VISIT_BOOL(BlockDecl, is_variadic, 61, MX_APPLY_METHOD, IsVariadic, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(BlockDecl, parameters, 51, MX_APPLY_METHOD, Parameters, ParmVarDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(BlockDecl, parameter_declarations, 52, MX_APPLY_METHOD, ParameterDeclarations, ParmVarDecl, NthDecl)
  MX_VISIT_DECL_CONTEXT(BlockDecl, declarations_in_context, 62, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_BlockDecl
MX_END_VISIT_DECL(BlockDecl)

#ifndef MX_ENTER_VISIT_AccessSpecDecl
#  define MX_ENTER_VISIT_AccessSpecDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_AccessSpecDecl
#  define MX_EXIT_VISIT_AccessSpecDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(AccessSpecDecl)
  MX_ENTER_VISIT_AccessSpecDecl
  MX_VISIT_BASE(AccessSpecDecl, Decl)
  MX_VISIT_ENTITY(AccessSpecDecl, access_specifier_token, 49, MX_APPLY_METHOD, AccessSpecifierToken, Token, NthDecl)
  MX_VISIT_ENTITY(AccessSpecDecl, colon_token, 56, MX_APPLY_METHOD, ColonToken, Token, NthDecl)
  MX_EXIT_VISIT_AccessSpecDecl
MX_END_VISIT_DECL(AccessSpecDecl)

#ifndef MX_ENTER_VISIT_OMPDeclarativeDirectiveDecl
#  define MX_ENTER_VISIT_OMPDeclarativeDirectiveDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_OMPDeclarativeDirectiveDecl
#  define MX_EXIT_VISIT_OMPDeclarativeDirectiveDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(OMPDeclarativeDirectiveDecl)
  MX_ENTER_VISIT_OMPDeclarativeDirectiveDecl
  MX_VISIT_BASE(OMPDeclarativeDirectiveDecl, Decl)
  MX_EXIT_VISIT_OMPDeclarativeDirectiveDecl
MX_END_VISIT_DECL(OMPDeclarativeDirectiveDecl)

#ifndef MX_ENTER_VISIT_OMPThreadPrivateDecl
#  define MX_ENTER_VISIT_OMPThreadPrivateDecl MX_ENTER_VISIT_OMPDeclarativeDirectiveDecl
#endif
#ifndef MX_EXIT_VISIT_OMPThreadPrivateDecl
#  define MX_EXIT_VISIT_OMPThreadPrivateDecl MX_EXIT_VISIT_OMPDeclarativeDirectiveDecl
#endif

MX_BEGIN_VISIT_DECL(OMPThreadPrivateDecl)
  MX_ENTER_VISIT_OMPThreadPrivateDecl
  MX_VISIT_BASE(OMPThreadPrivateDecl, OMPDeclarativeDirectiveDecl)
  MX_VISIT_ENTITY_LIST(OMPThreadPrivateDecl, varlists, 51, MX_APPLY_METHOD, Varlists, Expr, NthDecl)
  MX_EXIT_VISIT_OMPThreadPrivateDecl
MX_END_VISIT_DECL(OMPThreadPrivateDecl)

#ifndef MX_ENTER_VISIT_OMPRequiresDecl
#  define MX_ENTER_VISIT_OMPRequiresDecl MX_ENTER_VISIT_OMPDeclarativeDirectiveDecl
#endif
#ifndef MX_EXIT_VISIT_OMPRequiresDecl
#  define MX_EXIT_VISIT_OMPRequiresDecl MX_EXIT_VISIT_OMPDeclarativeDirectiveDecl
#endif

MX_BEGIN_VISIT_DECL(OMPRequiresDecl)
  MX_ENTER_VISIT_OMPRequiresDecl
  MX_VISIT_BASE(OMPRequiresDecl, OMPDeclarativeDirectiveDecl)
  MX_EXIT_VISIT_OMPRequiresDecl
MX_END_VISIT_DECL(OMPRequiresDecl)

#ifndef MX_ENTER_VISIT_OMPAllocateDecl
#  define MX_ENTER_VISIT_OMPAllocateDecl MX_ENTER_VISIT_OMPDeclarativeDirectiveDecl
#endif
#ifndef MX_EXIT_VISIT_OMPAllocateDecl
#  define MX_EXIT_VISIT_OMPAllocateDecl MX_EXIT_VISIT_OMPDeclarativeDirectiveDecl
#endif

MX_BEGIN_VISIT_DECL(OMPAllocateDecl)
  MX_ENTER_VISIT_OMPAllocateDecl
  MX_VISIT_BASE(OMPAllocateDecl, OMPDeclarativeDirectiveDecl)
  MX_VISIT_ENTITY_LIST(OMPAllocateDecl, varlists, 51, MX_APPLY_METHOD, Varlists, Expr, NthDecl)
  MX_EXIT_VISIT_OMPAllocateDecl
MX_END_VISIT_DECL(OMPAllocateDecl)

#ifndef MX_ENTER_VISIT_TranslationUnitDecl
#  define MX_ENTER_VISIT_TranslationUnitDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_TranslationUnitDecl
#  define MX_EXIT_VISIT_TranslationUnitDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(TranslationUnitDecl)
  MX_ENTER_VISIT_TranslationUnitDecl
  MX_VISIT_DECL_CONTEXT(TranslationUnitDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_TranslationUnitDecl
MX_END_VISIT_DECL(TranslationUnitDecl)

#ifndef MX_ENTER_VISIT_TopLevelStmtDecl
#  define MX_ENTER_VISIT_TopLevelStmtDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_TopLevelStmtDecl
#  define MX_EXIT_VISIT_TopLevelStmtDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(TopLevelStmtDecl)
  MX_ENTER_VISIT_TopLevelStmtDecl
  MX_VISIT_BASE(TopLevelStmtDecl, Decl)
  MX_VISIT_ENTITY(TopLevelStmtDecl, statement, 49, MX_APPLY_METHOD, Statement, Stmt, NthDecl)
  MX_VISIT_BOOL(TopLevelStmtDecl, is_semi_missing, 50, MX_APPLY_METHOD, IsSemiMissing, bool, NthDecl)
  MX_EXIT_VISIT_TopLevelStmtDecl
MX_END_VISIT_DECL(TopLevelStmtDecl)

#ifndef MX_ENTER_VISIT_StaticAssertDecl
#  define MX_ENTER_VISIT_StaticAssertDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_StaticAssertDecl
#  define MX_EXIT_VISIT_StaticAssertDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(StaticAssertDecl)
  MX_ENTER_VISIT_StaticAssertDecl
  MX_VISIT_BASE(StaticAssertDecl, Decl)
  MX_VISIT_ENTITY(StaticAssertDecl, assert_expression, 49, MX_APPLY_METHOD, AssertExpression, Expr, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(StaticAssertDecl, message, 56, MX_APPLY_METHOD, Message, Expr, NthDecl)
  MX_VISIT_ENTITY(StaticAssertDecl, r_paren_token, 57, MX_APPLY_METHOD, RParenToken, Token, NthDecl)
  MX_VISIT_BOOL(StaticAssertDecl, is_failed, 50, MX_APPLY_METHOD, IsFailed, bool, NthDecl)
  MX_EXIT_VISIT_StaticAssertDecl
MX_END_VISIT_DECL(StaticAssertDecl)

#ifndef MX_ENTER_VISIT_RequiresExprBodyDecl
#  define MX_ENTER_VISIT_RequiresExprBodyDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_RequiresExprBodyDecl
#  define MX_EXIT_VISIT_RequiresExprBodyDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(RequiresExprBodyDecl)
  MX_ENTER_VISIT_RequiresExprBodyDecl
  MX_VISIT_BASE(RequiresExprBodyDecl, Decl)
  MX_VISIT_DECL_CONTEXT(RequiresExprBodyDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_RequiresExprBodyDecl
MX_END_VISIT_DECL(RequiresExprBodyDecl)

#ifndef MX_ENTER_VISIT_PragmaDetectMismatchDecl
#  define MX_ENTER_VISIT_PragmaDetectMismatchDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_PragmaDetectMismatchDecl
#  define MX_EXIT_VISIT_PragmaDetectMismatchDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(PragmaDetectMismatchDecl)
  MX_ENTER_VISIT_PragmaDetectMismatchDecl
  MX_VISIT_BASE(PragmaDetectMismatchDecl, Decl)
  MX_VISIT_TEXT(PragmaDetectMismatchDecl, name, 63, MX_APPLY_METHOD, Name, basic_string_view, NthDecl)
  MX_VISIT_TEXT(PragmaDetectMismatchDecl, value, 64, MX_APPLY_METHOD, Value, basic_string_view, NthDecl)
  MX_EXIT_VISIT_PragmaDetectMismatchDecl
MX_END_VISIT_DECL(PragmaDetectMismatchDecl)

#ifndef MX_ENTER_VISIT_PragmaCommentDecl
#  define MX_ENTER_VISIT_PragmaCommentDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_PragmaCommentDecl
#  define MX_EXIT_VISIT_PragmaCommentDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(PragmaCommentDecl)
  MX_ENTER_VISIT_PragmaCommentDecl
  MX_VISIT_BASE(PragmaCommentDecl, Decl)
  MX_VISIT_TEXT(PragmaCommentDecl, argument, 63, MX_APPLY_METHOD, Argument, basic_string_view, NthDecl)
  MX_VISIT_ENUM(PragmaCommentDecl, comment_kind, 65, MX_APPLY_METHOD, CommentKind, PragmaMSCommentKind, NthDecl)
  MX_EXIT_VISIT_PragmaCommentDecl
MX_END_VISIT_DECL(PragmaCommentDecl)

#ifndef MX_ENTER_VISIT_ObjCPropertyImplDecl
#  define MX_ENTER_VISIT_ObjCPropertyImplDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_ObjCPropertyImplDecl
#  define MX_EXIT_VISIT_ObjCPropertyImplDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(ObjCPropertyImplDecl)
  MX_ENTER_VISIT_ObjCPropertyImplDecl
  MX_VISIT_BASE(ObjCPropertyImplDecl, Decl)
  MX_VISIT_ENTITY(ObjCPropertyImplDecl, getter_cxx_constructor, 49, MX_APPLY_METHOD, GetterCXXConstructor, Expr, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyImplDecl, getter_method_declaration, 56, MX_APPLY_METHOD, GetterMethodDeclaration, ObjCMethodDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyImplDecl, property_declaration, 57, MX_APPLY_METHOD, PropertyDeclaration, ObjCPropertyDecl, NthDecl)
  MX_VISIT_ENUM(ObjCPropertyImplDecl, property_implementation, 65, MX_APPLY_METHOD, PropertyImplementation, ObjCPropertyImplDeclKind, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyImplDecl, property_instance_variable_declaration, 58, MX_APPLY_METHOD, PropertyInstanceVariableDeclaration, ObjCIvarDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyImplDecl, property_instance_variable_declaration_token, 66, MX_APPLY_METHOD, PropertyInstanceVariableDeclarationToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyImplDecl, setter_cxx_assignment, 67, MX_APPLY_METHOD, SetterCXXAssignment, Expr, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyImplDecl, setter_method_declaration, 68, MX_APPLY_METHOD, SetterMethodDeclaration, ObjCMethodDecl, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyImplDecl, is_instance_variable_name_specified, 50, MX_APPLY_METHOD, IsInstanceVariableNameSpecified, bool, NthDecl)
  MX_EXIT_VISIT_ObjCPropertyImplDecl
MX_END_VISIT_DECL(ObjCPropertyImplDecl)

#ifndef MX_ENTER_VISIT_NamedDecl
#  define MX_ENTER_VISIT_NamedDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_NamedDecl
#  define MX_EXIT_VISIT_NamedDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(NamedDecl)
  MX_ENTER_VISIT_NamedDecl
  MX_VISIT_BASE(NamedDecl, Decl)
  MX_VISIT_ENUM(NamedDecl, formal_linkage, 65, MX_APPLY_METHOD, FormalLinkage, Linkage, NthDecl)
  MX_VISIT_TEXT(NamedDecl, name, 63, MX_APPLY_METHOD, Name, basic_string, NthDecl)
  MX_VISIT_OPTIONAL_ENUM(NamedDecl, obj_cf_string_formatting_family, 69, MX_APPLY_METHOD, ObjCFStringFormattingFamily, ObjCStringFormatFamily, NthDecl)
  MX_VISIT_TEXT(NamedDecl, qualified_name_as_string, 64, MX_APPLY_METHOD, QualifiedNameAsString, basic_string, NthDecl)
  MX_VISIT_ENTITY(NamedDecl, underlying_declaration, 49, MX_APPLY_METHOD, UnderlyingDeclaration, NamedDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENUM(NamedDecl, visibility, 70, MX_APPLY_METHOD, Visibility, Visibility, NthDecl)
  MX_VISIT_BOOL(NamedDecl, has_external_formal_linkage, 54, MX_APPLY_METHOD, HasExternalFormalLinkage, bool, NthDecl)
  MX_VISIT_BOOL(NamedDecl, has_linkage, 55, MX_APPLY_METHOD, HasLinkage, bool, NthDecl)
  MX_VISIT_BOOL(NamedDecl, has_linkage_been_computed, 59, MX_APPLY_METHOD, HasLinkageBeenComputed, bool, NthDecl)
  MX_VISIT_BOOL(NamedDecl, is_cxx_class_member, 60, MX_APPLY_METHOD, IsCXXClassMember, bool, NthDecl)
  MX_VISIT_BOOL(NamedDecl, is_cxx_instance_member, 61, MX_APPLY_METHOD, IsCXXInstanceMember, bool, NthDecl)
  MX_VISIT_BOOL(NamedDecl, is_externally_declarable, 71, MX_APPLY_METHOD, IsExternallyDeclarable, bool, NthDecl)
  MX_VISIT_BOOL(NamedDecl, is_externally_visible, 72, MX_APPLY_METHOD, IsExternallyVisible, bool, NthDecl)
  MX_VISIT_BOOL(NamedDecl, is_linkage_valid, 73, MX_APPLY_METHOD, IsLinkageValid, bool, NthDecl)
  MX_EXIT_VISIT_NamedDecl
MX_END_VISIT_DECL(NamedDecl)

#ifndef MX_ENTER_VISIT_LabelDecl
#  define MX_ENTER_VISIT_LabelDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_LabelDecl
#  define MX_EXIT_VISIT_LabelDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(LabelDecl)
  MX_ENTER_VISIT_LabelDecl
  MX_VISIT_BASE(LabelDecl, NamedDecl)
  MX_VISIT_TEXT(LabelDecl, ms_assembly_label, 74, MX_APPLY_METHOD, MSAssemblyLabel, basic_string_view, NthDecl)
  MX_VISIT_ENTITY(LabelDecl, statement, 56, MX_APPLY_METHOD, Statement, LabelStmt, NthDecl)
  MX_VISIT_BOOL(LabelDecl, is_gnu_local, 75, MX_APPLY_METHOD, IsGnuLocal, bool, NthDecl)
  MX_VISIT_BOOL(LabelDecl, is_ms_assembly_label, 76, MX_APPLY_METHOD, IsMSAssemblyLabel, bool, NthDecl)
  MX_VISIT_BOOL(LabelDecl, is_resolved_ms_assembly_label, 77, MX_APPLY_METHOD, IsResolvedMSAssemblyLabel, bool, NthDecl)
  MX_EXIT_VISIT_LabelDecl
MX_END_VISIT_DECL(LabelDecl)

#ifndef MX_ENTER_VISIT_HLSLBufferDecl
#  define MX_ENTER_VISIT_HLSLBufferDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_HLSLBufferDecl
#  define MX_EXIT_VISIT_HLSLBufferDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(HLSLBufferDecl)
  MX_ENTER_VISIT_HLSLBufferDecl
  MX_VISIT_BASE(HLSLBufferDecl, NamedDecl)
  MX_VISIT_ENTITY(HLSLBufferDecl, l_brace_token, 56, MX_APPLY_METHOD, LBraceToken, Token, NthDecl)
  MX_VISIT_ENTITY(HLSLBufferDecl, token_start, 57, MX_APPLY_METHOD, TokenStart, Token, NthDecl)
  MX_VISIT_ENTITY(HLSLBufferDecl, r_brace_token, 58, MX_APPLY_METHOD, RBraceToken, Token, NthDecl)
  MX_VISIT_BOOL(HLSLBufferDecl, is_c_buffer, 75, MX_APPLY_METHOD, IsCBuffer, bool, NthDecl)
  MX_EXIT_VISIT_HLSLBufferDecl
MX_END_VISIT_DECL(HLSLBufferDecl)

#ifndef MX_ENTER_VISIT_BaseUsingDecl
#  define MX_ENTER_VISIT_BaseUsingDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_BaseUsingDecl
#  define MX_EXIT_VISIT_BaseUsingDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(BaseUsingDecl)
  MX_ENTER_VISIT_BaseUsingDecl
  MX_VISIT_BASE(BaseUsingDecl, NamedDecl)
  MX_VISIT_ENTITY_LIST(BaseUsingDecl, shadows, 51, MX_APPLY_METHOD, Shadows, UsingShadowDecl, NthDecl)
  MX_EXIT_VISIT_BaseUsingDecl
MX_END_VISIT_DECL(BaseUsingDecl)

#ifndef MX_ENTER_VISIT_UsingEnumDecl
#  define MX_ENTER_VISIT_UsingEnumDecl MX_ENTER_VISIT_BaseUsingDecl
#endif
#ifndef MX_EXIT_VISIT_UsingEnumDecl
#  define MX_EXIT_VISIT_UsingEnumDecl MX_EXIT_VISIT_BaseUsingDecl
#endif

MX_BEGIN_VISIT_DECL(UsingEnumDecl)
  MX_ENTER_VISIT_UsingEnumDecl
  MX_VISIT_BASE(UsingEnumDecl, BaseUsingDecl)
  MX_VISIT_ENTITY(UsingEnumDecl, enum_declaration, 56, MX_APPLY_METHOD, EnumDeclaration, EnumDecl, NthDecl)
  MX_VISIT_ENTITY(UsingEnumDecl, enum_token, 57, MX_APPLY_METHOD, EnumToken, Token, NthDecl)
  MX_VISIT_ENTITY(UsingEnumDecl, enum_type, 58, MX_APPLY_METHOD, EnumType, Type, NthDecl)
  MX_VISIT_ENTITY(UsingEnumDecl, using_token, 66, MX_APPLY_METHOD, UsingToken, Token, NthDecl)
  MX_EXIT_VISIT_UsingEnumDecl
MX_END_VISIT_DECL(UsingEnumDecl)

#ifndef MX_ENTER_VISIT_UsingDecl
#  define MX_ENTER_VISIT_UsingDecl MX_ENTER_VISIT_BaseUsingDecl
#endif
#ifndef MX_EXIT_VISIT_UsingDecl
#  define MX_EXIT_VISIT_UsingDecl MX_EXIT_VISIT_BaseUsingDecl
#endif

MX_BEGIN_VISIT_DECL(UsingDecl)
  MX_ENTER_VISIT_UsingDecl
  MX_VISIT_BASE(UsingDecl, BaseUsingDecl)
  MX_VISIT_ENTITY(UsingDecl, using_token, 56, MX_APPLY_METHOD, UsingToken, Token, NthDecl)
  MX_VISIT_BOOL(UsingDecl, has_typename, 75, MX_APPLY_METHOD, HasTypename, bool, NthDecl)
  MX_VISIT_BOOL(UsingDecl, is_access_declaration, 76, MX_APPLY_METHOD, IsAccessDeclaration, bool, NthDecl)
  MX_EXIT_VISIT_UsingDecl
MX_END_VISIT_DECL(UsingDecl)

#ifndef MX_ENTER_VISIT_ValueDecl
#  define MX_ENTER_VISIT_ValueDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_ValueDecl
#  define MX_EXIT_VISIT_ValueDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(ValueDecl)
  MX_ENTER_VISIT_ValueDecl
  MX_VISIT_BASE(ValueDecl, NamedDecl)
  MX_VISIT_OPTIONAL_ENTITY(ValueDecl, potentially_decomposed_variable_declaration, 56, MX_APPLY_METHOD, PotentiallyDecomposedVariableDeclaration, VarDecl, NthDecl)
  MX_VISIT_ENTITY(ValueDecl, type, 57, MX_APPLY_METHOD, Type, Type, NthDecl)
  MX_VISIT_BOOL(ValueDecl, is_initializer_capture, 75, MX_APPLY_METHOD, IsInitializerCapture, bool, NthDecl)
  MX_VISIT_BOOL(ValueDecl, is_weak, 76, MX_APPLY_METHOD, IsWeak, bool, NthDecl)
  MX_EXIT_VISIT_ValueDecl
MX_END_VISIT_DECL(ValueDecl)

#ifndef MX_ENTER_VISIT_UnresolvedUsingValueDecl
#  define MX_ENTER_VISIT_UnresolvedUsingValueDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_UnresolvedUsingValueDecl
#  define MX_EXIT_VISIT_UnresolvedUsingValueDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(UnresolvedUsingValueDecl)
  MX_ENTER_VISIT_UnresolvedUsingValueDecl
  MX_VISIT_BASE(UnresolvedUsingValueDecl, ValueDecl)
  MX_VISIT_ENTITY(UnresolvedUsingValueDecl, ellipsis_token, 58, MX_APPLY_METHOD, EllipsisToken, Token, NthDecl)
  MX_VISIT_ENTITY(UnresolvedUsingValueDecl, using_token, 66, MX_APPLY_METHOD, UsingToken, Token, NthDecl)
  MX_VISIT_BOOL(UnresolvedUsingValueDecl, is_access_declaration, 77, MX_APPLY_METHOD, IsAccessDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(UnresolvedUsingValueDecl, is_pack_expansion, 78, MX_APPLY_METHOD, IsPackExpansion, bool, NthDecl)
  MX_EXIT_VISIT_UnresolvedUsingValueDecl
MX_END_VISIT_DECL(UnresolvedUsingValueDecl)

#ifndef MX_ENTER_VISIT_UnnamedGlobalConstantDecl
#  define MX_ENTER_VISIT_UnnamedGlobalConstantDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_UnnamedGlobalConstantDecl
#  define MX_EXIT_VISIT_UnnamedGlobalConstantDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(UnnamedGlobalConstantDecl)
  MX_ENTER_VISIT_UnnamedGlobalConstantDecl
  MX_VISIT_BASE(UnnamedGlobalConstantDecl, ValueDecl)
  MX_EXIT_VISIT_UnnamedGlobalConstantDecl
MX_END_VISIT_DECL(UnnamedGlobalConstantDecl)

#ifndef MX_ENTER_VISIT_TemplateParamObjectDecl
#  define MX_ENTER_VISIT_TemplateParamObjectDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_TemplateParamObjectDecl
#  define MX_EXIT_VISIT_TemplateParamObjectDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(TemplateParamObjectDecl)
  MX_ENTER_VISIT_TemplateParamObjectDecl
  MX_VISIT_BASE(TemplateParamObjectDecl, ValueDecl)
  MX_EXIT_VISIT_TemplateParamObjectDecl
MX_END_VISIT_DECL(TemplateParamObjectDecl)

#ifndef MX_ENTER_VISIT_OMPDeclareReductionDecl
#  define MX_ENTER_VISIT_OMPDeclareReductionDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_OMPDeclareReductionDecl
#  define MX_EXIT_VISIT_OMPDeclareReductionDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(OMPDeclareReductionDecl)
  MX_ENTER_VISIT_OMPDeclareReductionDecl
  MX_VISIT_BASE(OMPDeclareReductionDecl, ValueDecl)
  MX_VISIT_ENTITY(OMPDeclareReductionDecl, combiner, 58, MX_APPLY_METHOD, Combiner, Expr, NthDecl)
  MX_VISIT_ENTITY(OMPDeclareReductionDecl, combiner_in, 66, MX_APPLY_METHOD, CombinerIn, Expr, NthDecl)
  MX_VISIT_ENTITY(OMPDeclareReductionDecl, combiner_out, 67, MX_APPLY_METHOD, CombinerOut, Expr, NthDecl)
  MX_VISIT_ENTITY(OMPDeclareReductionDecl, initializer_original, 68, MX_APPLY_METHOD, InitializerOriginal, Expr, NthDecl)
  MX_VISIT_ENTITY(OMPDeclareReductionDecl, initializer_private, 79, MX_APPLY_METHOD, InitializerPrivate, Expr, NthDecl)
  MX_VISIT_ENTITY(OMPDeclareReductionDecl, initializer, 80, MX_APPLY_METHOD, Initializer, Expr, NthDecl)
  MX_VISIT_ENUM(OMPDeclareReductionDecl, initializer_kind, 81, MX_APPLY_METHOD, InitializerKind, OMPDeclareReductionDeclInitKind, NthDecl)
  MX_VISIT_DECL_CONTEXT(OMPDeclareReductionDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_OMPDeclareReductionDecl
MX_END_VISIT_DECL(OMPDeclareReductionDecl)

#ifndef MX_ENTER_VISIT_MSGuidDecl
#  define MX_ENTER_VISIT_MSGuidDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_MSGuidDecl
#  define MX_EXIT_VISIT_MSGuidDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(MSGuidDecl)
  MX_ENTER_VISIT_MSGuidDecl
  MX_VISIT_BASE(MSGuidDecl, ValueDecl)
  MX_EXIT_VISIT_MSGuidDecl
MX_END_VISIT_DECL(MSGuidDecl)

#ifndef MX_ENTER_VISIT_IndirectFieldDecl
#  define MX_ENTER_VISIT_IndirectFieldDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_IndirectFieldDecl
#  define MX_EXIT_VISIT_IndirectFieldDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(IndirectFieldDecl)
  MX_ENTER_VISIT_IndirectFieldDecl
  MX_VISIT_BASE(IndirectFieldDecl, ValueDecl)
  MX_VISIT_ENTITY_LIST(IndirectFieldDecl, chain, 51, MX_APPLY_METHOD, Chain, NamedDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(IndirectFieldDecl, anonymous_field, 58, MX_APPLY_METHOD, AnonymousField, FieldDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(IndirectFieldDecl, variable_declaration, 66, MX_APPLY_METHOD, VariableDeclaration, VarDecl, NthDecl)
  MX_EXIT_VISIT_IndirectFieldDecl
MX_END_VISIT_DECL(IndirectFieldDecl)

#ifndef MX_ENTER_VISIT_EnumConstantDecl
#  define MX_ENTER_VISIT_EnumConstantDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_EnumConstantDecl
#  define MX_EXIT_VISIT_EnumConstantDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(EnumConstantDecl)
  MX_ENTER_VISIT_EnumConstantDecl
  MX_VISIT_BASE(EnumConstantDecl, ValueDecl)
  MX_VISIT_OPTIONAL_ENTITY(EnumConstantDecl, initializer_expression, 58, MX_APPLY_METHOD, InitializerExpression, Expr, NthDecl)
  MX_EXIT_VISIT_EnumConstantDecl
MX_END_VISIT_DECL(EnumConstantDecl)

#ifndef MX_ENTER_VISIT_DeclaratorDecl
#  define MX_ENTER_VISIT_DeclaratorDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_DeclaratorDecl
#  define MX_EXIT_VISIT_DeclaratorDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(DeclaratorDecl)
  MX_ENTER_VISIT_DeclaratorDecl
  MX_VISIT_BASE(DeclaratorDecl, ValueDecl)
  MX_VISIT_ENTITY(DeclaratorDecl, first_inner_token, 58, MX_APPLY_METHOD, FirstInnerToken, Token, NthDecl)
  MX_VISIT_ENTITY(DeclaratorDecl, first_outer_token, 66, MX_APPLY_METHOD, FirstOuterToken, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(DeclaratorDecl, trailing_requires_clause, 67, MX_APPLY_METHOD, TrailingRequiresClause, Expr, NthDecl)
  MX_VISIT_ENTITY(DeclaratorDecl, type_spec_end_token, 68, MX_APPLY_METHOD, TypeSpecEndToken, Token, NthDecl)
  MX_VISIT_ENTITY(DeclaratorDecl, type_spec_start_token, 79, MX_APPLY_METHOD, TypeSpecStartToken, Token, NthDecl)
  MX_VISIT_ENTITY_LIST(DeclaratorDecl, template_parameter_lists, 51, MX_APPLY_METHOD, TemplateParameterLists, TemplateParameterList, NthDecl)
  MX_EXIT_VISIT_DeclaratorDecl
MX_END_VISIT_DECL(DeclaratorDecl)

#ifndef MX_ENTER_VISIT_VarDecl
#  define MX_ENTER_VISIT_VarDecl MX_ENTER_VISIT_DeclaratorDecl
#endif
#ifndef MX_EXIT_VISIT_VarDecl
#  define MX_EXIT_VISIT_VarDecl MX_EXIT_VISIT_DeclaratorDecl
#endif

MX_BEGIN_VISIT_DECL(VarDecl)
  MX_ENTER_VISIT_VarDecl
  MX_VISIT_BASE(VarDecl, DeclaratorDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarDecl, acting_definition, 80, MX_APPLY_METHOD, ActingDefinition, VarDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarDecl, described_variable_template, 82, MX_APPLY_METHOD, DescribedVariableTemplate, VarTemplateDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarDecl, initializer, 83, MX_APPLY_METHOD, Initializer, Expr, NthDecl)
  MX_VISIT_ENUM(VarDecl, initializer_style, 81, MX_APPLY_METHOD, InitializerStyle, VarDeclInitializationStyle, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarDecl, initializing_declaration, 84, MX_APPLY_METHOD, InitializingDeclaration, VarDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarDecl, instantiated_from_static_data_member, 85, MX_APPLY_METHOD, InstantiatedFromStaticDataMember, VarDecl, NthDecl)
  MX_VISIT_ENUM(VarDecl, language_linkage, 86, MX_APPLY_METHOD, LanguageLinkage, LanguageLinkage, NthDecl)
  MX_VISIT_ENTITY(VarDecl, point_of_instantiation, 87, MX_APPLY_METHOD, PointOfInstantiation, Token, NthDecl)
  MX_VISIT_ENUM(VarDecl, storage_class, 88, MX_APPLY_METHOD, StorageClass, StorageClass, NthDecl)
  MX_VISIT_ENUM(VarDecl, storage_duration, 89, MX_APPLY_METHOD, StorageDuration, StorageDuration, NthDecl)
  MX_VISIT_ENUM(VarDecl, tls_kind, 90, MX_APPLY_METHOD, TLSKind, VarDeclTLSKind, NthDecl)
  MX_VISIT_ENUM(VarDecl, tsc_spec, 91, MX_APPLY_METHOD, TSCSpec, ThreadStorageClassSpecifier, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarDecl, template_instantiation_pattern, 92, MX_APPLY_METHOD, TemplateInstantiationPattern, VarDecl, NthDecl)
  MX_VISIT_ENUM(VarDecl, template_specialization_kind, 93, MX_APPLY_METHOD, TemplateSpecializationKind, TemplateSpecializationKind, NthDecl)
  MX_VISIT_ENUM(VarDecl, template_specialization_kind_for_instantiation, 94, MX_APPLY_METHOD, TemplateSpecializationKindForInstantiation, TemplateSpecializationKind, NthDecl)
  MX_VISIT_BOOL(VarDecl, has_constant_initialization, 77, MX_APPLY_METHOD, HasConstantInitialization, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, has_dependent_alignment, 78, MX_APPLY_METHOD, HasDependentAlignment, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, has_external_storage, 95, MX_APPLY_METHOD, HasExternalStorage, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(VarDecl, has_flexible_array_initializer, 96, MX_APPLY_METHOD, HasFlexibleArrayInitializer, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, has_global_storage, 98, MX_APPLY_METHOD, HasGlobalStorage, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(VarDecl, has_ice_initializer, 99, MX_APPLY_METHOD, HasICEInitializer, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, has_initializer, 101, MX_APPLY_METHOD, HasInitializer, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, has_local_storage, 102, MX_APPLY_METHOD, HasLocalStorage, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_arc_pseudo_strong, 103, MX_APPLY_METHOD, IsARCPseudoStrong, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_cxx_for_range_declaration, 104, MX_APPLY_METHOD, IsCXXForRangeDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_constexpr, 105, MX_APPLY_METHOD, IsConstexpr, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_direct_initializer, 106, MX_APPLY_METHOD, IsDirectInitializer, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_escaping_byref, 107, MX_APPLY_METHOD, IsEscapingByref, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_exception_variable, 108, MX_APPLY_METHOD, IsExceptionVariable, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_extern_c, 109, MX_APPLY_METHOD, IsExternC, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_file_variable_declaration, 110, MX_APPLY_METHOD, IsFileVariableDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_function_or_method_variable_declaration, 111, MX_APPLY_METHOD, IsFunctionOrMethodVariableDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_in_extern_c_context, 112, MX_APPLY_METHOD, IsInExternCContext, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_in_extern_cxx_context, 113, MX_APPLY_METHOD, IsInExternCXXContext, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_inline, 114, MX_APPLY_METHOD, IsInline, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_inline_specified, 115, MX_APPLY_METHOD, IsInlineSpecified, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_known_to_be_defined, 116, MX_APPLY_METHOD, IsKnownToBeDefined, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_local_variable_declaration, 117, MX_APPLY_METHOD, IsLocalVariableDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_local_variable_declaration_or_parm, 118, MX_APPLY_METHOD, IsLocalVariableDeclarationOrParm, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_nrvo_variable, 119, MX_APPLY_METHOD, IsNRVOVariable, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_no_destroy, 120, MX_APPLY_METHOD, IsNoDestroy, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_non_escaping_byref, 121, MX_APPLY_METHOD, IsNonEscapingByref, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_obj_c_for_declaration, 122, MX_APPLY_METHOD, IsObjCForDeclaration, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_previous_declaration_in_same_block_scope, 123, MX_APPLY_METHOD, IsPreviousDeclarationInSameBlockScope, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_static_data_member, 124, MX_APPLY_METHOD, IsStaticDataMember, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_static_local, 125, MX_APPLY_METHOD, IsStaticLocal, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_this_declaration_a_demoted_definition, 126, MX_APPLY_METHOD, IsThisDeclarationADemotedDefinition, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, is_usable_in_constant_expressions, 127, MX_APPLY_METHOD, IsUsableInConstantExpressions, bool, NthDecl)
  MX_VISIT_BOOL(VarDecl, might_be_usable_in_constant_expressions, 128, MX_APPLY_METHOD, MightBeUsableInConstantExpressions, bool, NthDecl)
  MX_EXIT_VISIT_VarDecl
MX_END_VISIT_DECL(VarDecl)

#ifndef MX_ENTER_VISIT_ParmVarDecl
#  define MX_ENTER_VISIT_ParmVarDecl MX_ENTER_VISIT_VarDecl
#endif
#ifndef MX_EXIT_VISIT_ParmVarDecl
#  define MX_EXIT_VISIT_ParmVarDecl MX_EXIT_VISIT_VarDecl
#endif

MX_BEGIN_VISIT_DECL(ParmVarDecl)
  MX_ENTER_VISIT_ParmVarDecl
  MX_VISIT_BASE(ParmVarDecl, VarDecl)
  MX_VISIT_OPTIONAL_ENTITY(ParmVarDecl, default_argument, 129, MX_APPLY_METHOD, DefaultArgument, Expr, NthDecl)
  MX_VISIT_TOKEN_RANGE(ParmVarDecl, default_argument_range, 130, 131, NthDecl)
  MX_VISIT_ENUM(ParmVarDecl, obj_c_decl_qualifier, 132, MX_APPLY_METHOD, ObjCDeclQualifier, DeclObjCDeclQualifier, NthDecl)
  MX_VISIT_ENTITY(ParmVarDecl, original_type, 133, MX_APPLY_METHOD, OriginalType, Type, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ParmVarDecl, uninstantiated_default_argument, 134, MX_APPLY_METHOD, UninstantiatedDefaultArgument, Expr, NthDecl)
  MX_VISIT_BOOL(ParmVarDecl, has_default_argument, 135, MX_APPLY_METHOD, HasDefaultArgument, bool, NthDecl)
  MX_VISIT_BOOL(ParmVarDecl, has_inherited_default_argument, 136, MX_APPLY_METHOD, HasInheritedDefaultArgument, bool, NthDecl)
  MX_VISIT_BOOL(ParmVarDecl, has_uninstantiated_default_argument, 137, MX_APPLY_METHOD, HasUninstantiatedDefaultArgument, bool, NthDecl)
  MX_VISIT_BOOL(ParmVarDecl, has_unparsed_default_argument, 138, MX_APPLY_METHOD, HasUnparsedDefaultArgument, bool, NthDecl)
  MX_VISIT_BOOL(ParmVarDecl, is_destroyed_in_callee, 139, MX_APPLY_METHOD, IsDestroyedInCallee, bool, NthDecl)
  MX_VISIT_BOOL(ParmVarDecl, is_knr_promoted, 140, MX_APPLY_METHOD, IsKNRPromoted, bool, NthDecl)
  MX_VISIT_BOOL(ParmVarDecl, is_obj_c_method_parameter, 141, MX_APPLY_METHOD, IsObjCMethodParameter, bool, NthDecl)
  MX_EXIT_VISIT_ParmVarDecl
MX_END_VISIT_DECL(ParmVarDecl)

#ifndef MX_ENTER_VISIT_OMPCapturedExprDecl
#  define MX_ENTER_VISIT_OMPCapturedExprDecl MX_ENTER_VISIT_VarDecl
#endif
#ifndef MX_EXIT_VISIT_OMPCapturedExprDecl
#  define MX_EXIT_VISIT_OMPCapturedExprDecl MX_EXIT_VISIT_VarDecl
#endif

MX_BEGIN_VISIT_DECL(OMPCapturedExprDecl)
  MX_ENTER_VISIT_OMPCapturedExprDecl
  MX_VISIT_BASE(OMPCapturedExprDecl, VarDecl)
  MX_EXIT_VISIT_OMPCapturedExprDecl
MX_END_VISIT_DECL(OMPCapturedExprDecl)

#ifndef MX_ENTER_VISIT_ImplicitParamDecl
#  define MX_ENTER_VISIT_ImplicitParamDecl MX_ENTER_VISIT_VarDecl
#endif
#ifndef MX_EXIT_VISIT_ImplicitParamDecl
#  define MX_EXIT_VISIT_ImplicitParamDecl MX_EXIT_VISIT_VarDecl
#endif

MX_BEGIN_VISIT_DECL(ImplicitParamDecl)
  MX_ENTER_VISIT_ImplicitParamDecl
  MX_VISIT_BASE(ImplicitParamDecl, VarDecl)
  MX_VISIT_ENUM(ImplicitParamDecl, parameter_kind, 132, MX_APPLY_METHOD, ParameterKind, ImplicitParamDeclImplicitParamKind, NthDecl)
  MX_EXIT_VISIT_ImplicitParamDecl
MX_END_VISIT_DECL(ImplicitParamDecl)

#ifndef MX_ENTER_VISIT_DecompositionDecl
#  define MX_ENTER_VISIT_DecompositionDecl MX_ENTER_VISIT_VarDecl
#endif
#ifndef MX_EXIT_VISIT_DecompositionDecl
#  define MX_EXIT_VISIT_DecompositionDecl MX_EXIT_VISIT_VarDecl
#endif

MX_BEGIN_VISIT_DECL(DecompositionDecl)
  MX_ENTER_VISIT_DecompositionDecl
  MX_VISIT_BASE(DecompositionDecl, VarDecl)
  MX_VISIT_ENTITY_LIST(DecompositionDecl, bindings, 52, MX_APPLY_METHOD, Bindings, BindingDecl, NthDecl)
  MX_EXIT_VISIT_DecompositionDecl
MX_END_VISIT_DECL(DecompositionDecl)

#ifndef MX_ENTER_VISIT_VarTemplateSpecializationDecl
#  define MX_ENTER_VISIT_VarTemplateSpecializationDecl MX_ENTER_VISIT_VarDecl
#endif
#ifndef MX_EXIT_VISIT_VarTemplateSpecializationDecl
#  define MX_EXIT_VISIT_VarTemplateSpecializationDecl MX_EXIT_VISIT_VarDecl
#endif

MX_BEGIN_VISIT_DECL(VarTemplateSpecializationDecl)
  MX_ENTER_VISIT_VarTemplateSpecializationDecl
  MX_VISIT_BASE(VarTemplateSpecializationDecl, VarDecl)
  MX_VISIT_ENTITY(VarTemplateSpecializationDecl, extern_token, 129, MX_APPLY_METHOD, ExternToken, Token, NthDecl)
  MX_VISIT_ENUM(VarTemplateSpecializationDecl, specialization_kind, 132, MX_APPLY_METHOD, SpecializationKind, TemplateSpecializationKind, NthDecl)
  MX_VISIT_ENTITY(VarTemplateSpecializationDecl, specialized_template, 130, MX_APPLY_METHOD, SpecializedTemplate, VarTemplateDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(VarTemplateSpecializationDecl, template_arguments, 52, MX_APPLY_METHOD, TemplateArguments, TemplateArgument, NthDecl)
  MX_VISIT_ENTITY_LIST(VarTemplateSpecializationDecl, template_instantiation_arguments, 62, MX_APPLY_METHOD, TemplateInstantiationArguments, TemplateArgument, NthDecl)
  MX_VISIT_ENTITY(VarTemplateSpecializationDecl, template_keyword_token, 131, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarTemplateSpecializationDecl, type_as_written, 133, MX_APPLY_METHOD, TypeAsWritten, Type, NthDecl)
  MX_VISIT_BOOL(VarTemplateSpecializationDecl, is_class_scope_explicit_specialization, 135, MX_APPLY_METHOD, IsClassScopeExplicitSpecialization, bool, NthDecl)
  MX_VISIT_BOOL(VarTemplateSpecializationDecl, is_explicit_instantiation_or_specialization, 136, MX_APPLY_METHOD, IsExplicitInstantiationOrSpecialization, bool, NthDecl)
  MX_VISIT_BOOL(VarTemplateSpecializationDecl, is_explicit_specialization, 137, MX_APPLY_METHOD, IsExplicitSpecialization, bool, NthDecl)
  MX_EXIT_VISIT_VarTemplateSpecializationDecl
MX_END_VISIT_DECL(VarTemplateSpecializationDecl)

#ifndef MX_ENTER_VISIT_VarTemplatePartialSpecializationDecl
#  define MX_ENTER_VISIT_VarTemplatePartialSpecializationDecl MX_ENTER_VISIT_VarTemplateSpecializationDecl
#endif
#ifndef MX_EXIT_VISIT_VarTemplatePartialSpecializationDecl
#  define MX_EXIT_VISIT_VarTemplatePartialSpecializationDecl MX_EXIT_VISIT_VarTemplateSpecializationDecl
#endif

MX_BEGIN_VISIT_DECL(VarTemplatePartialSpecializationDecl)
  MX_ENTER_VISIT_VarTemplatePartialSpecializationDecl
  MX_VISIT_BASE(VarTemplatePartialSpecializationDecl, VarTemplateSpecializationDecl)
  MX_VISIT_OPTIONAL_ENTITY(VarTemplatePartialSpecializationDecl, instantiated_from_member, 134, MX_APPLY_METHOD, InstantiatedFromMember, VarTemplatePartialSpecializationDecl, NthDecl)
  MX_VISIT_ENTITY(VarTemplatePartialSpecializationDecl, template_parameters, 142, MX_APPLY_METHOD, TemplateParameters, TemplateParameterList, NthDecl)
  MX_VISIT_BOOL(VarTemplatePartialSpecializationDecl, has_associated_constraints, 138, MX_APPLY_METHOD, HasAssociatedConstraints, bool, NthDecl)
  MX_EXIT_VISIT_VarTemplatePartialSpecializationDecl
MX_END_VISIT_DECL(VarTemplatePartialSpecializationDecl)

#ifndef MX_ENTER_VISIT_NonTypeTemplateParmDecl
#  define MX_ENTER_VISIT_NonTypeTemplateParmDecl MX_ENTER_VISIT_DeclaratorDecl
#endif
#ifndef MX_EXIT_VISIT_NonTypeTemplateParmDecl
#  define MX_EXIT_VISIT_NonTypeTemplateParmDecl MX_EXIT_VISIT_DeclaratorDecl
#endif

MX_BEGIN_VISIT_DECL(NonTypeTemplateParmDecl)
  MX_ENTER_VISIT_NonTypeTemplateParmDecl
  MX_VISIT_BASE(NonTypeTemplateParmDecl, DeclaratorDecl)
  MX_VISIT_BOOL(NonTypeTemplateParmDecl, default_argument_was_inherited, 77, MX_APPLY_METHOD, DefaultArgumentWasInherited, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(NonTypeTemplateParmDecl, default_argument, 80, MX_APPLY_METHOD, DefaultArgument, Expr, NthDecl)
  MX_VISIT_ENTITY(NonTypeTemplateParmDecl, default_argument_token, 82, MX_APPLY_METHOD, DefaultArgumentToken, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(NonTypeTemplateParmDecl, placeholder_type_constraint, 83, MX_APPLY_METHOD, PlaceholderTypeConstraint, Expr, NthDecl)
  MX_VISIT_BOOL(NonTypeTemplateParmDecl, has_default_argument, 78, MX_APPLY_METHOD, HasDefaultArgument, bool, NthDecl)
  MX_VISIT_BOOL(NonTypeTemplateParmDecl, has_placeholder_type_constraint, 95, MX_APPLY_METHOD, HasPlaceholderTypeConstraint, bool, NthDecl)
  MX_VISIT_BOOL(NonTypeTemplateParmDecl, is_expanded_parameter_pack, 96, MX_APPLY_METHOD, IsExpandedParameterPack, bool, NthDecl)
  MX_VISIT_BOOL(NonTypeTemplateParmDecl, is_pack_expansion, 97, MX_APPLY_METHOD, IsPackExpansion, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(NonTypeTemplateParmDecl, expansion_types, 52, MX_APPLY_METHOD, ExpansionTypes, Type, NthDecl)
  MX_EXIT_VISIT_NonTypeTemplateParmDecl
MX_END_VISIT_DECL(NonTypeTemplateParmDecl)

#ifndef MX_ENTER_VISIT_MSPropertyDecl
#  define MX_ENTER_VISIT_MSPropertyDecl MX_ENTER_VISIT_DeclaratorDecl
#endif
#ifndef MX_EXIT_VISIT_MSPropertyDecl
#  define MX_EXIT_VISIT_MSPropertyDecl MX_EXIT_VISIT_DeclaratorDecl
#endif

MX_BEGIN_VISIT_DECL(MSPropertyDecl)
  MX_ENTER_VISIT_MSPropertyDecl
  MX_VISIT_BASE(MSPropertyDecl, DeclaratorDecl)
  MX_VISIT_BOOL(MSPropertyDecl, has_getter, 77, MX_APPLY_METHOD, HasGetter, bool, NthDecl)
  MX_VISIT_BOOL(MSPropertyDecl, has_setter, 78, MX_APPLY_METHOD, HasSetter, bool, NthDecl)
  MX_EXIT_VISIT_MSPropertyDecl
MX_END_VISIT_DECL(MSPropertyDecl)

#ifndef MX_ENTER_VISIT_FunctionDecl
#  define MX_ENTER_VISIT_FunctionDecl MX_ENTER_VISIT_DeclaratorDecl
#endif
#ifndef MX_EXIT_VISIT_FunctionDecl
#  define MX_EXIT_VISIT_FunctionDecl MX_EXIT_VISIT_DeclaratorDecl
#endif

MX_BEGIN_VISIT_DECL(FunctionDecl)
  MX_ENTER_VISIT_FunctionDecl
  MX_VISIT_BASE(FunctionDecl, DeclaratorDecl)
  MX_VISIT_BOOL(FunctionDecl, body_contains_immediate_escalating_expressions, 77, MX_APPLY_METHOD, BodyContainsImmediateEscalatingExpressions, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, friend_constraint_refers_to_enclosing_template, 78, MX_APPLY_METHOD, FriendConstraintRefersToEnclosingTemplate, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, uses_fp_intrin, 95, MX_APPLY_METHOD, UsesFPIntrin, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(FunctionDecl, does_declaration_force_externally_visible_definition, 96, MX_APPLY_METHOD, DoesDeclarationForceExternallyVisibleDefinition, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, does_this_declaration_have_a_body, 98, MX_APPLY_METHOD, DoesThisDeclarationHaveABody, bool, NthDecl)
  MX_VISIT_ENTITY(FunctionDecl, call_result_type, 80, MX_APPLY_METHOD, CallResultType, Type, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, constexpr_kind, 81, MX_APPLY_METHOD, ConstexprKind, ConstexprSpecKind, NthDecl)
  MX_VISIT_ENTITY(FunctionDecl, declared_return_type, 82, MX_APPLY_METHOD, DeclaredReturnType, Type, NthDecl)
  MX_VISIT_ENTITY(FunctionDecl, default_token, 83, MX_APPLY_METHOD, DefaultToken, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FunctionDecl, described_function_template, 84, MX_APPLY_METHOD, DescribedFunctionTemplate, FunctionTemplateDecl, NthDecl)
  MX_VISIT_ENTITY(FunctionDecl, ellipsis_token, 85, MX_APPLY_METHOD, EllipsisToken, Token, NthDecl)
  MX_VISIT_TOKEN_RANGE(FunctionDecl, exception_spec_tokens, 87, 92, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, exception_spec_type, 86, MX_APPLY_METHOD, ExceptionSpecType, ExceptionSpecificationType, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FunctionDecl, instantiated_from_declaration, 129, MX_APPLY_METHOD, InstantiatedFromDeclaration, FunctionDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FunctionDecl, instantiated_from_member_function, 130, MX_APPLY_METHOD, InstantiatedFromMemberFunction, FunctionDecl, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, language_linkage, 88, MX_APPLY_METHOD, LanguageLinkage, LanguageLinkage, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, multi_version_kind, 89, MX_APPLY_METHOD, MultiVersionKind, MultiVersionKind, NthDecl)
  MX_VISIT_OPTIONAL_INT(FunctionDecl, odr_hash, 143, MX_APPLY_METHOD, ODRHash, , NthDecl)
  MX_VISIT_ENUM(FunctionDecl, overloaded_operator, 90, MX_APPLY_METHOD, OverloadedOperator, OverloadedOperatorKind, NthDecl)
  MX_VISIT_TOKEN_RANGE(FunctionDecl, parameters_tokens, 131, 133, NthDecl)
  MX_VISIT_ENTITY(FunctionDecl, point_of_instantiation, 134, MX_APPLY_METHOD, PointOfInstantiation, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FunctionDecl, primary_template, 142, MX_APPLY_METHOD, PrimaryTemplate, FunctionTemplateDecl, NthDecl)
  MX_VISIT_ENTITY(FunctionDecl, return_type, 144, MX_APPLY_METHOD, ReturnType, Type, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, storage_class, 91, MX_APPLY_METHOD, StorageClass, StorageClass, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FunctionDecl, template_instantiation_pattern, 145, MX_APPLY_METHOD, TemplateInstantiationPattern, FunctionDecl, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, template_specialization_kind, 93, MX_APPLY_METHOD, TemplateSpecializationKind, TemplateSpecializationKind, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, template_specialization_kind_for_instantiation, 94, MX_APPLY_METHOD, TemplateSpecializationKindForInstantiation, TemplateSpecializationKind, NthDecl)
  MX_VISIT_ENUM(FunctionDecl, templated_kind, 132, MX_APPLY_METHOD, TemplatedKind, FunctionDeclTemplatedKind, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, has_implicit_return_zero, 100, MX_APPLY_METHOD, HasImplicitReturnZero, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, has_inherited_prototype, 101, MX_APPLY_METHOD, HasInheritedPrototype, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, has_one_parameter_or_default_arguments, 102, MX_APPLY_METHOD, HasOneParameterOrDefaultArguments, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, has_prototype, 103, MX_APPLY_METHOD, HasPrototype, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, has_skipped_body, 104, MX_APPLY_METHOD, HasSkippedBody, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, has_trivial_body, 105, MX_APPLY_METHOD, HasTrivialBody, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, has_written_prototype, 106, MX_APPLY_METHOD, HasWrittenPrototype, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, instantiation_is_pending, 107, MX_APPLY_METHOD, InstantiationIsPending, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_cpu_dispatch_multi_version, 108, MX_APPLY_METHOD, IsCPUDispatchMultiVersion, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_cpu_specific_multi_version, 109, MX_APPLY_METHOD, IsCPUSpecificMultiVersion, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_consteval, 110, MX_APPLY_METHOD, IsConsteval, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_constexpr, 111, MX_APPLY_METHOD, IsConstexpr, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_constexpr_specified, 112, MX_APPLY_METHOD, IsConstexprSpecified, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_defaulted, 113, MX_APPLY_METHOD, IsDefaulted, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_deleted, 114, MX_APPLY_METHOD, IsDeleted, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_deleted_as_written, 115, MX_APPLY_METHOD, IsDeletedAsWritten, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_destroying_operator_delete, 116, MX_APPLY_METHOD, IsDestroyingOperatorDelete, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_explicitly_defaulted, 117, MX_APPLY_METHOD, IsExplicitlyDefaulted, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_extern_c, 118, MX_APPLY_METHOD, IsExternC, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_function_template_specialization, 119, MX_APPLY_METHOD, IsFunctionTemplateSpecialization, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_global, 120, MX_APPLY_METHOD, IsGlobal, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_immediate_escalating, 121, MX_APPLY_METHOD, IsImmediateEscalating, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_immediate_function, 122, MX_APPLY_METHOD, IsImmediateFunction, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_implicitly_instantiable, 123, MX_APPLY_METHOD, IsImplicitlyInstantiable, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_in_extern_c_context, 124, MX_APPLY_METHOD, IsInExternCContext, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_in_extern_cxx_context, 125, MX_APPLY_METHOD, IsInExternCXXContext, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_ineligible_or_not_selected, 126, MX_APPLY_METHOD, IsIneligibleOrNotSelected, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_inline_builtin_declaration, 127, MX_APPLY_METHOD, IsInlineBuiltinDeclaration, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(FunctionDecl, is_inline_definition_externally_visible, 128, MX_APPLY_METHOD, IsInlineDefinitionExternallyVisible, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_inline_specified, 136, MX_APPLY_METHOD, IsInlineSpecified, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_inlined, 137, MX_APPLY_METHOD, IsInlined, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_late_template_parsed, 138, MX_APPLY_METHOD, IsLateTemplateParsed, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(FunctionDecl, is_ms_extern_inline, 139, MX_APPLY_METHOD, IsMSExternInline, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_msvcrt_entry_point, 141, MX_APPLY_METHOD, IsMSVCRTEntryPoint, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_main, 146, MX_APPLY_METHOD, IsMain, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_member_like_constrained_friend, 147, MX_APPLY_METHOD, IsMemberLikeConstrainedFriend, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_multi_version, 148, MX_APPLY_METHOD, IsMultiVersion, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_no_return, 149, MX_APPLY_METHOD, IsNoReturn, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_overloaded_operator, 150, MX_APPLY_METHOD, IsOverloadedOperator, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_pure, 151, MX_APPLY_METHOD, IsPure, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_replaceable_global_allocation_function, 152, MX_APPLY_METHOD, IsReplaceableGlobalAllocationFunction, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(FunctionDecl, is_reserved_global_placement_operator, 153, MX_APPLY_METHOD, IsReservedGlobalPlacementOperator, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_static, 155, MX_APPLY_METHOD, IsStatic, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_target_clones_multi_version, 156, MX_APPLY_METHOD, IsTargetClonesMultiVersion, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_target_multi_version, 157, MX_APPLY_METHOD, IsTargetMultiVersion, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_template_instantiation, 158, MX_APPLY_METHOD, IsTemplateInstantiation, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_this_declaration_a_definition, 159, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_this_declaration_instantiated_from_a_friend_definition, 160, MX_APPLY_METHOD, IsThisDeclarationInstantiatedFromAFriendDefinition, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_trivial, 161, MX_APPLY_METHOD, IsTrivial, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_trivial_for_call, 162, MX_APPLY_METHOD, IsTrivialForCall, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_user_provided, 163, MX_APPLY_METHOD, IsUserProvided, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_variadic, 164, MX_APPLY_METHOD, IsVariadic, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, is_virtual_as_written, 165, MX_APPLY_METHOD, IsVirtualAsWritten, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(FunctionDecl, parameters, 52, MX_APPLY_METHOD, Parameters, ParmVarDecl, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, uses_seh_try, 166, MX_APPLY_METHOD, UsesSEHTry, bool, NthDecl)
  MX_VISIT_BOOL(FunctionDecl, will_have_body, 167, MX_APPLY_METHOD, WillHaveBody, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FunctionDecl, body, 168, MX_APPLY_METHOD, Body, Stmt, NthDecl)
  MX_VISIT_DECL_CONTEXT(FunctionDecl, declarations_in_context, 62, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_FunctionDecl
MX_END_VISIT_DECL(FunctionDecl)

#ifndef MX_ENTER_VISIT_CXXMethodDecl
#  define MX_ENTER_VISIT_CXXMethodDecl MX_ENTER_VISIT_FunctionDecl
#endif
#ifndef MX_EXIT_VISIT_CXXMethodDecl
#  define MX_EXIT_VISIT_CXXMethodDecl MX_EXIT_VISIT_FunctionDecl
#endif

MX_BEGIN_VISIT_DECL(CXXMethodDecl)
  MX_ENTER_VISIT_CXXMethodDecl
  MX_VISIT_BASE(CXXMethodDecl, FunctionDecl)
  MX_VISIT_ENUM(CXXMethodDecl, reference_qualifier, 169, MX_APPLY_METHOD, ReferenceQualifier, RefQualifierKind, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXMethodDecl, this_object_type, 170, MX_APPLY_METHOD, ThisObjectType, Type, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXMethodDecl, this_type, 171, MX_APPLY_METHOD, ThisType, Type, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, has_inline_body, 172, MX_APPLY_METHOD, HasInlineBody, bool, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, is_const, 173, MX_APPLY_METHOD, IsConst, bool, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, is_copy_assignment_operator, 174, MX_APPLY_METHOD, IsCopyAssignmentOperator, bool, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, is_instance, 175, MX_APPLY_METHOD, IsInstance, bool, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, is_lambda_static_invoker, 176, MX_APPLY_METHOD, IsLambdaStaticInvoker, bool, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, is_move_assignment_operator, 177, MX_APPLY_METHOD, IsMoveAssignmentOperator, bool, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, is_virtual, 178, MX_APPLY_METHOD, IsVirtual, bool, NthDecl)
  MX_VISIT_BOOL(CXXMethodDecl, is_volatile, 179, MX_APPLY_METHOD, IsVolatile, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(CXXMethodDecl, overridden_methods, 180, MX_APPLY_METHOD, OverriddenMethods, CXXMethodDecl, NthDecl)
  MX_EXIT_VISIT_CXXMethodDecl
MX_END_VISIT_DECL(CXXMethodDecl)

#ifndef MX_ENTER_VISIT_CXXDestructorDecl
#  define MX_ENTER_VISIT_CXXDestructorDecl MX_ENTER_VISIT_CXXMethodDecl
#endif
#ifndef MX_EXIT_VISIT_CXXDestructorDecl
#  define MX_EXIT_VISIT_CXXDestructorDecl MX_EXIT_VISIT_CXXMethodDecl
#endif

MX_BEGIN_VISIT_DECL(CXXDestructorDecl)
  MX_ENTER_VISIT_CXXDestructorDecl
  MX_VISIT_BASE(CXXDestructorDecl, CXXMethodDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXDestructorDecl, operator_delete, 181, MX_APPLY_METHOD, OperatorDelete, FunctionDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXDestructorDecl, operator_delete_this_argument, 182, MX_APPLY_METHOD, OperatorDeleteThisArgument, Expr, NthDecl)
  MX_EXIT_VISIT_CXXDestructorDecl
MX_END_VISIT_DECL(CXXDestructorDecl)

#ifndef MX_ENTER_VISIT_CXXConversionDecl
#  define MX_ENTER_VISIT_CXXConversionDecl MX_ENTER_VISIT_CXXMethodDecl
#endif
#ifndef MX_EXIT_VISIT_CXXConversionDecl
#  define MX_EXIT_VISIT_CXXConversionDecl MX_EXIT_VISIT_CXXMethodDecl
#endif

MX_BEGIN_VISIT_DECL(CXXConversionDecl)
  MX_ENTER_VISIT_CXXConversionDecl
  MX_VISIT_BASE(CXXConversionDecl, CXXMethodDecl)
  MX_VISIT_ENTITY(CXXConversionDecl, conversion_type, 181, MX_APPLY_METHOD, ConversionType, Type, NthDecl)
  MX_VISIT_BOOL(CXXConversionDecl, is_explicit, 183, MX_APPLY_METHOD, IsExplicit, bool, NthDecl)
  MX_VISIT_BOOL(CXXConversionDecl, is_lambda_to_block_pointer_conversion, 184, MX_APPLY_METHOD, IsLambdaToBlockPointerConversion, bool, NthDecl)
  MX_EXIT_VISIT_CXXConversionDecl
MX_END_VISIT_DECL(CXXConversionDecl)

#ifndef MX_ENTER_VISIT_CXXConstructorDecl
#  define MX_ENTER_VISIT_CXXConstructorDecl MX_ENTER_VISIT_CXXMethodDecl
#endif
#ifndef MX_EXIT_VISIT_CXXConstructorDecl
#  define MX_EXIT_VISIT_CXXConstructorDecl MX_EXIT_VISIT_CXXMethodDecl
#endif

MX_BEGIN_VISIT_DECL(CXXConstructorDecl)
  MX_ENTER_VISIT_CXXConstructorDecl
  MX_VISIT_BASE(CXXConstructorDecl, CXXMethodDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXConstructorDecl, target_constructor, 181, MX_APPLY_METHOD, TargetConstructor, CXXConstructorDecl, NthDecl)
  MX_VISIT_BOOL(CXXConstructorDecl, is_default_constructor, 183, MX_APPLY_METHOD, IsDefaultConstructor, bool, NthDecl)
  MX_VISIT_BOOL(CXXConstructorDecl, is_delegating_constructor, 184, MX_APPLY_METHOD, IsDelegatingConstructor, bool, NthDecl)
  MX_VISIT_BOOL(CXXConstructorDecl, is_explicit, 185, MX_APPLY_METHOD, IsExplicit, bool, NthDecl)
  MX_VISIT_BOOL(CXXConstructorDecl, is_inheriting_constructor, 186, MX_APPLY_METHOD, IsInheritingConstructor, bool, NthDecl)
  MX_VISIT_BOOL(CXXConstructorDecl, is_specialization_copying_object, 187, MX_APPLY_METHOD, IsSpecializationCopyingObject, bool, NthDecl)
  MX_EXIT_VISIT_CXXConstructorDecl
MX_END_VISIT_DECL(CXXConstructorDecl)

#ifndef MX_ENTER_VISIT_CXXDeductionGuideDecl
#  define MX_ENTER_VISIT_CXXDeductionGuideDecl MX_ENTER_VISIT_FunctionDecl
#endif
#ifndef MX_EXIT_VISIT_CXXDeductionGuideDecl
#  define MX_EXIT_VISIT_CXXDeductionGuideDecl MX_EXIT_VISIT_FunctionDecl
#endif

MX_BEGIN_VISIT_DECL(CXXDeductionGuideDecl)
  MX_ENTER_VISIT_CXXDeductionGuideDecl
  MX_VISIT_BASE(CXXDeductionGuideDecl, FunctionDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXDeductionGuideDecl, corresponding_constructor, 170, MX_APPLY_METHOD, CorrespondingConstructor, CXXConstructorDecl, NthDecl)
  MX_VISIT_ENTITY(CXXDeductionGuideDecl, deduced_template, 171, MX_APPLY_METHOD, DeducedTemplate, TemplateDecl, NthDecl)
  MX_VISIT_ENUM(CXXDeductionGuideDecl, deduction_candidate_kind, 169, MX_APPLY_METHOD, DeductionCandidateKind, DeductionCandidate, NthDecl)
  MX_VISIT_BOOL(CXXDeductionGuideDecl, is_explicit, 172, MX_APPLY_METHOD, IsExplicit, bool, NthDecl)
  MX_EXIT_VISIT_CXXDeductionGuideDecl
MX_END_VISIT_DECL(CXXDeductionGuideDecl)

#ifndef MX_ENTER_VISIT_FieldDecl
#  define MX_ENTER_VISIT_FieldDecl MX_ENTER_VISIT_DeclaratorDecl
#endif
#ifndef MX_EXIT_VISIT_FieldDecl
#  define MX_EXIT_VISIT_FieldDecl MX_EXIT_VISIT_DeclaratorDecl
#endif

MX_BEGIN_VISIT_DECL(FieldDecl)
  MX_ENTER_VISIT_FieldDecl
  MX_VISIT_BASE(FieldDecl, DeclaratorDecl)
  MX_VISIT_OPTIONAL_ENTITY(FieldDecl, bit_width, 80, MX_APPLY_METHOD, BitWidth, Expr, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FieldDecl, captured_vla_type, 82, MX_APPLY_METHOD, CapturedVLAType, VariableArrayType, NthDecl)
  MX_VISIT_ENUM(FieldDecl, in_class_initializer_style, 81, MX_APPLY_METHOD, InClassInitializerStyle, InClassInitStyle, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FieldDecl, in_class_initializer, 83, MX_APPLY_METHOD, InClassInitializer, Expr, NthDecl)
  MX_VISIT_BOOL(FieldDecl, has_captured_vla_type, 77, MX_APPLY_METHOD, HasCapturedVLAType, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, has_in_class_initializer, 78, MX_APPLY_METHOD, HasInClassInitializer, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, has_non_null_in_class_initializer, 95, MX_APPLY_METHOD, HasNonNullInClassInitializer, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, is_anonymous_struct_or_union, 96, MX_APPLY_METHOD, IsAnonymousStructOrUnion, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, is_bit_field, 97, MX_APPLY_METHOD, IsBitField, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, is_mutable, 98, MX_APPLY_METHOD, IsMutable, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, is_potentially_overlapping, 99, MX_APPLY_METHOD, IsPotentiallyOverlapping, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, is_unnamed_bitfield, 100, MX_APPLY_METHOD, IsUnnamedBitfield, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, is_zero_length_bit_field, 101, MX_APPLY_METHOD, IsZeroLengthBitField, bool, NthDecl)
  MX_VISIT_BOOL(FieldDecl, is_zero_size, 102, MX_APPLY_METHOD, IsZeroSize, bool, NthDecl)
  MX_VISIT_OPTIONAL_INT(FieldDecl, offset_in_bits, 84, MX_APPLY_METHOD, OffsetInBits, , NthDecl)
  MX_EXIT_VISIT_FieldDecl
MX_END_VISIT_DECL(FieldDecl)

#ifndef MX_ENTER_VISIT_ObjCIvarDecl
#  define MX_ENTER_VISIT_ObjCIvarDecl MX_ENTER_VISIT_FieldDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCIvarDecl
#  define MX_EXIT_VISIT_ObjCIvarDecl MX_EXIT_VISIT_FieldDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCIvarDecl)
  MX_ENTER_VISIT_ObjCIvarDecl
  MX_VISIT_BASE(ObjCIvarDecl, FieldDecl)
  MX_VISIT_ENUM(ObjCIvarDecl, access_control, 86, MX_APPLY_METHOD, AccessControl, ObjCIvarDeclAccessControl, NthDecl)
  MX_VISIT_ENUM(ObjCIvarDecl, canonical_access_control, 88, MX_APPLY_METHOD, CanonicalAccessControl, ObjCIvarDeclAccessControl, NthDecl)
  MX_VISIT_ENTITY(ObjCIvarDecl, containing_interface, 85, MX_APPLY_METHOD, ContainingInterface, ObjCInterfaceDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCIvarDecl, next_instance_variable, 87, MX_APPLY_METHOD, NextInstanceVariable, ObjCIvarDecl, NthDecl)
  MX_VISIT_BOOL(ObjCIvarDecl, synthesize, 104, MX_APPLY_METHOD, Synthesize, bool, NthDecl)
  MX_EXIT_VISIT_ObjCIvarDecl
MX_END_VISIT_DECL(ObjCIvarDecl)

#ifndef MX_ENTER_VISIT_ObjCAtDefsFieldDecl
#  define MX_ENTER_VISIT_ObjCAtDefsFieldDecl MX_ENTER_VISIT_FieldDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCAtDefsFieldDecl
#  define MX_EXIT_VISIT_ObjCAtDefsFieldDecl MX_EXIT_VISIT_FieldDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCAtDefsFieldDecl)
  MX_ENTER_VISIT_ObjCAtDefsFieldDecl
  MX_VISIT_BASE(ObjCAtDefsFieldDecl, FieldDecl)
  MX_EXIT_VISIT_ObjCAtDefsFieldDecl
MX_END_VISIT_DECL(ObjCAtDefsFieldDecl)

#ifndef MX_ENTER_VISIT_BindingDecl
#  define MX_ENTER_VISIT_BindingDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_BindingDecl
#  define MX_EXIT_VISIT_BindingDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_DECL(BindingDecl)
  MX_ENTER_VISIT_BindingDecl
  MX_VISIT_BASE(BindingDecl, ValueDecl)
  MX_VISIT_ENTITY(BindingDecl, binding, 58, MX_APPLY_METHOD, Binding, Expr, NthDecl)
  MX_VISIT_ENTITY(BindingDecl, decomposed_declaration, 66, MX_APPLY_METHOD, DecomposedDeclaration, ValueDecl, NthDecl)
  MX_VISIT_ENTITY(BindingDecl, holding_variable, 67, MX_APPLY_METHOD, HoldingVariable, VarDecl, NthDecl)
  MX_EXIT_VISIT_BindingDecl
MX_END_VISIT_DECL(BindingDecl)

#ifndef MX_ENTER_VISIT_OMPDeclarativeDirectiveValueDecl
#  define MX_ENTER_VISIT_OMPDeclarativeDirectiveValueDecl MX_ENTER_VISIT_ValueDecl
#endif
#ifndef MX_EXIT_VISIT_OMPDeclarativeDirectiveValueDecl
#  define MX_EXIT_VISIT_OMPDeclarativeDirectiveValueDecl MX_EXIT_VISIT_ValueDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(OMPDeclarativeDirectiveValueDecl)
  MX_ENTER_VISIT_OMPDeclarativeDirectiveValueDecl
  MX_VISIT_BASE(OMPDeclarativeDirectiveValueDecl, ValueDecl)
  MX_EXIT_VISIT_OMPDeclarativeDirectiveValueDecl
MX_END_VISIT_DECL(OMPDeclarativeDirectiveValueDecl)

#ifndef MX_ENTER_VISIT_OMPDeclareMapperDecl
#  define MX_ENTER_VISIT_OMPDeclareMapperDecl MX_ENTER_VISIT_OMPDeclarativeDirectiveValueDecl
#endif
#ifndef MX_EXIT_VISIT_OMPDeclareMapperDecl
#  define MX_EXIT_VISIT_OMPDeclareMapperDecl MX_EXIT_VISIT_OMPDeclarativeDirectiveValueDecl
#endif

MX_BEGIN_VISIT_DECL(OMPDeclareMapperDecl)
  MX_ENTER_VISIT_OMPDeclareMapperDecl
  MX_VISIT_BASE(OMPDeclareMapperDecl, OMPDeclarativeDirectiveValueDecl)
  MX_VISIT_ENTITY(OMPDeclareMapperDecl, mapper_variable_reference, 58, MX_APPLY_METHOD, MapperVariableReference, Expr, NthDecl)
  MX_VISIT_DECL_CONTEXT(OMPDeclareMapperDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_OMPDeclareMapperDecl
MX_END_VISIT_DECL(OMPDeclareMapperDecl)

#ifndef MX_ENTER_VISIT_UsingShadowDecl
#  define MX_ENTER_VISIT_UsingShadowDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_UsingShadowDecl
#  define MX_EXIT_VISIT_UsingShadowDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(UsingShadowDecl)
  MX_ENTER_VISIT_UsingShadowDecl
  MX_VISIT_BASE(UsingShadowDecl, NamedDecl)
  MX_VISIT_ENTITY(UsingShadowDecl, introducer, 56, MX_APPLY_METHOD, Introducer, BaseUsingDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(UsingShadowDecl, next_using_shadow_declaration, 57, MX_APPLY_METHOD, NextUsingShadowDeclaration, UsingShadowDecl, NthDecl)
  MX_VISIT_ENTITY(UsingShadowDecl, target_declaration, 58, MX_APPLY_METHOD, TargetDeclaration, NamedDecl, NthDecl)
  MX_EXIT_VISIT_UsingShadowDecl
MX_END_VISIT_DECL(UsingShadowDecl)

#ifndef MX_ENTER_VISIT_ConstructorUsingShadowDecl
#  define MX_ENTER_VISIT_ConstructorUsingShadowDecl MX_ENTER_VISIT_UsingShadowDecl
#endif
#ifndef MX_EXIT_VISIT_ConstructorUsingShadowDecl
#  define MX_EXIT_VISIT_ConstructorUsingShadowDecl MX_EXIT_VISIT_UsingShadowDecl
#endif

MX_BEGIN_VISIT_DECL(ConstructorUsingShadowDecl)
  MX_ENTER_VISIT_ConstructorUsingShadowDecl
  MX_VISIT_BASE(ConstructorUsingShadowDecl, UsingShadowDecl)
  MX_VISIT_BOOL(ConstructorUsingShadowDecl, constructs_virtual_base, 75, MX_APPLY_METHOD, ConstructsVirtualBase, bool, NthDecl)
  MX_VISIT_ENTITY(ConstructorUsingShadowDecl, constructed_base_class, 66, MX_APPLY_METHOD, ConstructedBaseClass, CXXRecordDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ConstructorUsingShadowDecl, constructed_base_class_shadow_declaration, 67, MX_APPLY_METHOD, ConstructedBaseClassShadowDeclaration, ConstructorUsingShadowDecl, NthDecl)
  MX_VISIT_ENTITY(ConstructorUsingShadowDecl, nominated_base_class, 68, MX_APPLY_METHOD, NominatedBaseClass, CXXRecordDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ConstructorUsingShadowDecl, nominated_base_class_shadow_declaration, 79, MX_APPLY_METHOD, NominatedBaseClassShadowDeclaration, ConstructorUsingShadowDecl, NthDecl)
  MX_EXIT_VISIT_ConstructorUsingShadowDecl
MX_END_VISIT_DECL(ConstructorUsingShadowDecl)

#ifndef MX_ENTER_VISIT_UsingPackDecl
#  define MX_ENTER_VISIT_UsingPackDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_UsingPackDecl
#  define MX_EXIT_VISIT_UsingPackDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(UsingPackDecl)
  MX_ENTER_VISIT_UsingPackDecl
  MX_VISIT_BASE(UsingPackDecl, NamedDecl)
  MX_VISIT_ENTITY_LIST(UsingPackDecl, expansions, 51, MX_APPLY_METHOD, Expansions, NamedDecl, NthDecl)
  MX_VISIT_ENTITY(UsingPackDecl, instantiated_from_using_declaration, 56, MX_APPLY_METHOD, InstantiatedFromUsingDeclaration, NamedDecl, NthDecl)
  MX_EXIT_VISIT_UsingPackDecl
MX_END_VISIT_DECL(UsingPackDecl)

#ifndef MX_ENTER_VISIT_UsingDirectiveDecl
#  define MX_ENTER_VISIT_UsingDirectiveDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_UsingDirectiveDecl
#  define MX_EXIT_VISIT_UsingDirectiveDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(UsingDirectiveDecl)
  MX_ENTER_VISIT_UsingDirectiveDecl
  MX_VISIT_BASE(UsingDirectiveDecl, NamedDecl)
  MX_VISIT_ENTITY(UsingDirectiveDecl, identifier_token, 56, MX_APPLY_METHOD, IdentifierToken, Token, NthDecl)
  MX_VISIT_ENTITY(UsingDirectiveDecl, namespace_key_token, 57, MX_APPLY_METHOD, NamespaceKeyToken, Token, NthDecl)
  MX_VISIT_ENTITY(UsingDirectiveDecl, nominated_namespace_as_written, 58, MX_APPLY_METHOD, NominatedNamespaceAsWritten, NamedDecl, NthDecl)
  MX_VISIT_ENTITY(UsingDirectiveDecl, using_token, 66, MX_APPLY_METHOD, UsingToken, Token, NthDecl)
  MX_EXIT_VISIT_UsingDirectiveDecl
MX_END_VISIT_DECL(UsingDirectiveDecl)

#ifndef MX_ENTER_VISIT_UnresolvedUsingIfExistsDecl
#  define MX_ENTER_VISIT_UnresolvedUsingIfExistsDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_UnresolvedUsingIfExistsDecl
#  define MX_EXIT_VISIT_UnresolvedUsingIfExistsDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(UnresolvedUsingIfExistsDecl)
  MX_ENTER_VISIT_UnresolvedUsingIfExistsDecl
  MX_VISIT_BASE(UnresolvedUsingIfExistsDecl, NamedDecl)
  MX_EXIT_VISIT_UnresolvedUsingIfExistsDecl
MX_END_VISIT_DECL(UnresolvedUsingIfExistsDecl)

#ifndef MX_ENTER_VISIT_TypeDecl
#  define MX_ENTER_VISIT_TypeDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_TypeDecl
#  define MX_EXIT_VISIT_TypeDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(TypeDecl)
  MX_ENTER_VISIT_TypeDecl
  MX_VISIT_BASE(TypeDecl, NamedDecl)
  MX_VISIT_OPTIONAL_ENTITY(TypeDecl, type_for_declaration, 56, MX_APPLY_METHOD, TypeForDeclaration, Type, NthDecl)
  MX_EXIT_VISIT_TypeDecl
MX_END_VISIT_DECL(TypeDecl)

#ifndef MX_ENTER_VISIT_TemplateTypeParmDecl
#  define MX_ENTER_VISIT_TemplateTypeParmDecl MX_ENTER_VISIT_TypeDecl
#endif
#ifndef MX_EXIT_VISIT_TemplateTypeParmDecl
#  define MX_EXIT_VISIT_TemplateTypeParmDecl MX_EXIT_VISIT_TypeDecl
#endif

MX_BEGIN_VISIT_DECL(TemplateTypeParmDecl)
  MX_ENTER_VISIT_TemplateTypeParmDecl
  MX_VISIT_BASE(TemplateTypeParmDecl, TypeDecl)
  MX_VISIT_BOOL(TemplateTypeParmDecl, default_argument_was_inherited, 75, MX_APPLY_METHOD, DefaultArgumentWasInherited, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(TemplateTypeParmDecl, default_argument, 57, MX_APPLY_METHOD, DefaultArgument, Type, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(TemplateTypeParmDecl, default_argument_info, 58, MX_APPLY_METHOD, DefaultArgumentInfo, Type, NthDecl)
  MX_VISIT_ENTITY(TemplateTypeParmDecl, default_argument_token, 66, MX_APPLY_METHOD, DefaultArgumentToken, Token, NthDecl)
  MX_VISIT_BOOL(TemplateTypeParmDecl, has_default_argument, 76, MX_APPLY_METHOD, HasDefaultArgument, bool, NthDecl)
  MX_VISIT_BOOL(TemplateTypeParmDecl, has_type_constraint, 77, MX_APPLY_METHOD, HasTypeConstraint, bool, NthDecl)
  MX_VISIT_BOOL(TemplateTypeParmDecl, is_expanded_parameter_pack, 78, MX_APPLY_METHOD, IsExpandedParameterPack, bool, NthDecl)
  MX_VISIT_BOOL(TemplateTypeParmDecl, is_pack_expansion, 95, MX_APPLY_METHOD, IsPackExpansion, bool, NthDecl)
  MX_VISIT_BOOL(TemplateTypeParmDecl, was_declared_with_typename, 96, MX_APPLY_METHOD, WasDeclaredWithTypename, bool, NthDecl)
  MX_EXIT_VISIT_TemplateTypeParmDecl
MX_END_VISIT_DECL(TemplateTypeParmDecl)

#ifndef MX_ENTER_VISIT_TagDecl
#  define MX_ENTER_VISIT_TagDecl MX_ENTER_VISIT_TypeDecl
#endif
#ifndef MX_EXIT_VISIT_TagDecl
#  define MX_EXIT_VISIT_TagDecl MX_EXIT_VISIT_TypeDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(TagDecl)
  MX_ENTER_VISIT_TagDecl
  MX_VISIT_BASE(TagDecl, TypeDecl)
  MX_VISIT_TOKEN_RANGE(TagDecl, brace_range, 57, 58, NthDecl)
  MX_VISIT_ENTITY(TagDecl, first_inner_token, 66, MX_APPLY_METHOD, FirstInnerToken, Token, NthDecl)
  MX_VISIT_ENTITY(TagDecl, first_outer_token, 67, MX_APPLY_METHOD, FirstOuterToken, Token, NthDecl)
  MX_VISIT_ENUM(TagDecl, tag_kind, 81, MX_APPLY_METHOD, TagKind, TagTypeKind, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(TagDecl, typedef_name_for_anonymous_declaration, 68, MX_APPLY_METHOD, TypedefNameForAnonymousDeclaration, TypedefNameDecl, NthDecl)
  MX_VISIT_BOOL(TagDecl, has_name_for_linkage, 75, MX_APPLY_METHOD, HasNameForLinkage, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_being_defined, 76, MX_APPLY_METHOD, IsBeingDefined, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_class, 77, MX_APPLY_METHOD, IsClass, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_complete_definition, 78, MX_APPLY_METHOD, IsCompleteDefinition, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_complete_definition_required, 95, MX_APPLY_METHOD, IsCompleteDefinitionRequired, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_dependent_type, 96, MX_APPLY_METHOD, IsDependentType, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_enum, 97, MX_APPLY_METHOD, IsEnum, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_free_standing, 98, MX_APPLY_METHOD, IsFreeStanding, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_interface, 99, MX_APPLY_METHOD, IsInterface, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_struct, 100, MX_APPLY_METHOD, IsStruct, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_this_declaration_a_definition, 101, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_this_declaration_a_demoted_definition, 102, MX_APPLY_METHOD, IsThisDeclarationADemotedDefinition, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, is_union, 103, MX_APPLY_METHOD, IsUnion, bool, NthDecl)
  MX_VISIT_BOOL(TagDecl, may_have_out_of_date_definition, 104, MX_APPLY_METHOD, MayHaveOutOfDateDefinition, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(TagDecl, template_parameter_lists, 51, MX_APPLY_METHOD, TemplateParameterLists, TemplateParameterList, NthDecl)
  MX_VISIT_DECL_CONTEXT(TagDecl, declarations_in_context, 52, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_TagDecl
MX_END_VISIT_DECL(TagDecl)

#ifndef MX_ENTER_VISIT_RecordDecl
#  define MX_ENTER_VISIT_RecordDecl MX_ENTER_VISIT_TagDecl
#endif
#ifndef MX_EXIT_VISIT_RecordDecl
#  define MX_EXIT_VISIT_RecordDecl MX_EXIT_VISIT_TagDecl
#endif

MX_BEGIN_VISIT_DECL(RecordDecl)
  MX_ENTER_VISIT_RecordDecl
  MX_VISIT_BASE(RecordDecl, TagDecl)
  MX_VISIT_BOOL(RecordDecl, can_pass_in_registers, 105, MX_APPLY_METHOD, CanPassInRegisters, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(RecordDecl, fields, 62, MX_APPLY_METHOD, Fields, FieldDecl, NthDecl)
  MX_VISIT_ENUM(RecordDecl, argument_passing_restrictions, 86, MX_APPLY_METHOD, ArgumentPassingRestrictions, RecordDeclArgPassingKind, NthDecl)
  MX_VISIT_BOOL(RecordDecl, has_flexible_array_member, 106, MX_APPLY_METHOD, HasFlexibleArrayMember, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, has_loaded_fields_from_external_storage, 107, MX_APPLY_METHOD, HasLoadedFieldsFromExternalStorage, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, has_non_trivial_to_primitive_copy_c_union, 108, MX_APPLY_METHOD, HasNonTrivialToPrimitiveCopyCUnion, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, has_non_trivial_to_primitive_default_initialize_c_union, 109, MX_APPLY_METHOD, HasNonTrivialToPrimitiveDefaultInitializeCUnion, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, has_non_trivial_to_primitive_destruct_c_union, 110, MX_APPLY_METHOD, HasNonTrivialToPrimitiveDestructCUnion, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, has_object_member, 111, MX_APPLY_METHOD, HasObjectMember, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, has_volatile_member, 112, MX_APPLY_METHOD, HasVolatileMember, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_anonymous_struct_or_union, 113, MX_APPLY_METHOD, IsAnonymousStructOrUnion, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_captured_record, 114, MX_APPLY_METHOD, IsCapturedRecord, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_injected_class_name, 115, MX_APPLY_METHOD, IsInjectedClassName, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_lambda, 116, MX_APPLY_METHOD, IsLambda, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_ms_struct, 117, MX_APPLY_METHOD, IsMsStruct, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_non_trivial_to_primitive_copy, 118, MX_APPLY_METHOD, IsNonTrivialToPrimitiveCopy, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_non_trivial_to_primitive_default_initialize, 119, MX_APPLY_METHOD, IsNonTrivialToPrimitiveDefaultInitialize, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_non_trivial_to_primitive_destroy, 120, MX_APPLY_METHOD, IsNonTrivialToPrimitiveDestroy, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_or_contains_union, 121, MX_APPLY_METHOD, IsOrContainsUnion, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_parameter_destroyed_in_callee, 122, MX_APPLY_METHOD, IsParameterDestroyedInCallee, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, is_randomized, 123, MX_APPLY_METHOD, IsRandomized, bool, NthDecl)
  MX_VISIT_BOOL(RecordDecl, may_insert_extra_padding, 124, MX_APPLY_METHOD, MayInsertExtraPadding, bool, NthDecl)
  MX_VISIT_OPTIONAL_INT(RecordDecl, size, 79, MX_APPLY_METHOD, Size, , NthDecl)
  MX_VISIT_OPTIONAL_INT(RecordDecl, alignment, 80, MX_APPLY_METHOD, Alignment, , NthDecl)
  MX_VISIT_OPTIONAL_INT(RecordDecl, size_without_trailing_padding, 82, MX_APPLY_METHOD, SizeWithoutTrailingPadding, , NthDecl)
  MX_EXIT_VISIT_RecordDecl
MX_END_VISIT_DECL(RecordDecl)

#ifndef MX_ENTER_VISIT_CXXRecordDecl
#  define MX_ENTER_VISIT_CXXRecordDecl MX_ENTER_VISIT_RecordDecl
#endif
#ifndef MX_EXIT_VISIT_CXXRecordDecl
#  define MX_EXIT_VISIT_CXXRecordDecl MX_EXIT_VISIT_RecordDecl
#endif

MX_BEGIN_VISIT_DECL(CXXRecordDecl)
  MX_ENTER_VISIT_CXXRecordDecl
  MX_VISIT_BASE(CXXRecordDecl, RecordDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, allow_const_default_initializer, 128, MX_APPLY_METHOD, AllowConstDefaultInitializer, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY_LIST(CXXRecordDecl, bases, 180, MX_APPLY_METHOD, Bases, CXXBaseSpecifier, NthDecl)
  MX_VISIT_OPTIONAL_ENUM(CXXRecordDecl, calculate_inheritance_model, 88, MX_APPLY_METHOD, CalculateInheritanceModel, MSInheritanceModel, NthDecl)
  MX_VISIT_ENTITY_LIST(CXXRecordDecl, constructors, 188, MX_APPLY_METHOD, Constructors, CXXConstructorDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY_LIST(CXXRecordDecl, friends, 189, MX_APPLY_METHOD, Friends, FriendDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, dependent_lambda_call_operator, 83, MX_APPLY_METHOD, DependentLambdaCallOperator, FunctionTemplateDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, described_class_template, 84, MX_APPLY_METHOD, DescribedClassTemplate, ClassTemplateDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, destructor, 85, MX_APPLY_METHOD, Destructor, CXXDestructorDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, generic_lambda_template_parameter_list, 87, MX_APPLY_METHOD, GenericLambdaTemplateParameterList, TemplateParameterList, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, instantiated_from_member_class, 92, MX_APPLY_METHOD, InstantiatedFromMemberClass, CXXRecordDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, lambda_call_operator, 129, MX_APPLY_METHOD, LambdaCallOperator, CXXMethodDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENUM(CXXRecordDecl, lambda_capture_default, 89, MX_APPLY_METHOD, LambdaCaptureDefault, LambdaCaptureDefault, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, lambda_context_declaration, 130, MX_APPLY_METHOD, LambdaContextDeclaration, Decl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY_LIST(CXXRecordDecl, lambda_explicit_template_parameters, 190, MX_APPLY_METHOD, LambdaExplicitTemplateParameters, NamedDecl, NthDecl)
  MX_VISIT_OPTIONAL_INT(CXXRecordDecl, lambda_mangling_number, 143, MX_APPLY_METHOD, LambdaManglingNumber, , NthDecl)
  MX_VISIT_OPTIONAL_ENUM(CXXRecordDecl, ms_inheritance_model, 90, MX_APPLY_METHOD, MSInheritanceModel, MSInheritanceModel, NthDecl)
  MX_VISIT_ENUM(CXXRecordDecl, ms_vtor_disp_mode, 91, MX_APPLY_METHOD, MSVtorDispMode, MSVtorDispMode, NthDecl)
  MX_VISIT_OPTIONAL_INT(CXXRecordDecl, odr_hash, 191, MX_APPLY_METHOD, ODRHash, , NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, template_instantiation_pattern, 131, MX_APPLY_METHOD, TemplateInstantiationPattern, CXXRecordDecl, NthDecl)
  MX_VISIT_ENUM(CXXRecordDecl, template_specialization_kind, 93, MX_APPLY_METHOD, TemplateSpecializationKind, TemplateSpecializationKind, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_any_dependent_bases, 148, MX_APPLY_METHOD, HasAnyDependentBases, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_constexpr_default_constructor, 150, MX_APPLY_METHOD, HasConstexprDefaultConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_constexpr_destructor, 152, MX_APPLY_METHOD, HasConstexprDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_constexpr_non_copy_move_constructor, 154, MX_APPLY_METHOD, HasConstexprNonCopyMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_copy_assignment_with_const_parameter, 156, MX_APPLY_METHOD, HasCopyAssignmentWithConstParameter, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_copy_constructor_with_const_parameter, 158, MX_APPLY_METHOD, HasCopyConstructorWithConstParameter, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_default_constructor, 160, MX_APPLY_METHOD, HasDefaultConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_definition, 162, MX_APPLY_METHOD, HasDefinition, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_direct_fields, 164, MX_APPLY_METHOD, HasDirectFields, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_friends, 166, MX_APPLY_METHOD, HasFriends, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_in_class_initializer, 172, MX_APPLY_METHOD, HasInClassInitializer, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_inherited_assignment, 174, MX_APPLY_METHOD, HasInheritedAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_inherited_constructor, 176, MX_APPLY_METHOD, HasInheritedConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_initializer_method, 178, MX_APPLY_METHOD, HasInitializerMethod, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_irrelevant_destructor, 183, MX_APPLY_METHOD, HasIrrelevantDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_known_lambda_internal_linkage, 185, MX_APPLY_METHOD, HasKnownLambdaInternalLinkage, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_move_assignment, 187, MX_APPLY_METHOD, HasMoveAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_move_constructor, 193, MX_APPLY_METHOD, HasMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_mutable_fields, 195, MX_APPLY_METHOD, HasMutableFields, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_literal_type_fields_or_bases, 197, MX_APPLY_METHOD, HasNonLiteralTypeFieldsOrBases, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_copy_assignment, 199, MX_APPLY_METHOD, HasNonTrivialCopyAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_copy_constructor, 201, MX_APPLY_METHOD, HasNonTrivialCopyConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_copy_constructor_for_call, 203, MX_APPLY_METHOD, HasNonTrivialCopyConstructorForCall, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_default_constructor, 205, MX_APPLY_METHOD, HasNonTrivialDefaultConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_destructor, 207, MX_APPLY_METHOD, HasNonTrivialDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_destructor_for_call, 209, MX_APPLY_METHOD, HasNonTrivialDestructorForCall, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_move_assignment, 211, MX_APPLY_METHOD, HasNonTrivialMoveAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_move_constructor, 213, MX_APPLY_METHOD, HasNonTrivialMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_non_trivial_move_constructor_for_call, 215, MX_APPLY_METHOD, HasNonTrivialMoveConstructorForCall, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_private_fields, 217, MX_APPLY_METHOD, HasPrivateFields, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_protected_fields, 219, MX_APPLY_METHOD, HasProtectedFields, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_simple_copy_assignment, 221, MX_APPLY_METHOD, HasSimpleCopyAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_simple_copy_constructor, 223, MX_APPLY_METHOD, HasSimpleCopyConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_simple_destructor, 225, MX_APPLY_METHOD, HasSimpleDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_simple_move_assignment, 227, MX_APPLY_METHOD, HasSimpleMoveAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_simple_move_constructor, 229, MX_APPLY_METHOD, HasSimpleMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_copy_assignment, 231, MX_APPLY_METHOD, HasTrivialCopyAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_copy_constructor, 233, MX_APPLY_METHOD, HasTrivialCopyConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_copy_constructor_for_call, 235, MX_APPLY_METHOD, HasTrivialCopyConstructorForCall, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_default_constructor, 237, MX_APPLY_METHOD, HasTrivialDefaultConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_destructor, 239, MX_APPLY_METHOD, HasTrivialDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_destructor_for_call, 241, MX_APPLY_METHOD, HasTrivialDestructorForCall, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_move_assignment, 243, MX_APPLY_METHOD, HasTrivialMoveAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_move_constructor, 245, MX_APPLY_METHOD, HasTrivialMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_trivial_move_constructor_for_call, 247, MX_APPLY_METHOD, HasTrivialMoveConstructorForCall, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_uninitialized_reference_member, 249, MX_APPLY_METHOD, HasUninitializedReferenceMember, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_declared_constructor, 251, MX_APPLY_METHOD, HasUserDeclaredConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_declared_copy_assignment, 253, MX_APPLY_METHOD, HasUserDeclaredCopyAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_declared_copy_constructor, 255, MX_APPLY_METHOD, HasUserDeclaredCopyConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_declared_destructor, 257, MX_APPLY_METHOD, HasUserDeclaredDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_declared_move_assignment, 259, MX_APPLY_METHOD, HasUserDeclaredMoveAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_declared_move_constructor, 261, MX_APPLY_METHOD, HasUserDeclaredMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_declared_move_operation, 263, MX_APPLY_METHOD, HasUserDeclaredMoveOperation, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_user_provided_default_constructor, 265, MX_APPLY_METHOD, HasUserProvidedDefaultConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_variant_members, 267, MX_APPLY_METHOD, HasVariantMembers, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, implicit_copy_assignment_has_const_parameter, 269, MX_APPLY_METHOD, ImplicitCopyAssignmentHasConstParameter, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, implicit_copy_constructor_has_const_parameter, 271, MX_APPLY_METHOD, ImplicitCopyConstructorHasConstParameter, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_abstract, 273, MX_APPLY_METHOD, IsAbstract, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_aggregate, 275, MX_APPLY_METHOD, IsAggregate, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_any_destructor_no_return, 277, MX_APPLY_METHOD, IsAnyDestructorNoReturn, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_c_like, 279, MX_APPLY_METHOD, IsCLike, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_cxx11_standard_layout, 281, MX_APPLY_METHOD, IsCXX11StandardLayout, bool, NthDecl)
  MX_VISIT_BOOL(CXXRecordDecl, is_dependent_lambda, 283, MX_APPLY_METHOD, IsDependentLambda, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_dynamic_class, 284, MX_APPLY_METHOD, IsDynamicClass, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_effectively_final, 286, MX_APPLY_METHOD, IsEffectivelyFinal, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_empty, 288, MX_APPLY_METHOD, IsEmpty, bool, NthDecl)
  MX_VISIT_BOOL(CXXRecordDecl, is_generic_lambda, 290, MX_APPLY_METHOD, IsGenericLambda, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_interface_like, 291, MX_APPLY_METHOD, IsInterfaceLike, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_literal, 293, MX_APPLY_METHOD, IsLiteral, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, is_local_class, 133, MX_APPLY_METHOD, IsLocalClass, FunctionDecl, NthDecl)
  MX_VISIT_BOOL(CXXRecordDecl, is_never_dependent_lambda, 295, MX_APPLY_METHOD, IsNeverDependentLambda, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_pod, 296, MX_APPLY_METHOD, IsPOD, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_polymorphic, 298, MX_APPLY_METHOD, IsPolymorphic, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_standard_layout, 300, MX_APPLY_METHOD, IsStandardLayout, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_structural, 302, MX_APPLY_METHOD, IsStructural, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_trivial, 304, MX_APPLY_METHOD, IsTrivial, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, is_trivially_copyable, 306, MX_APPLY_METHOD, IsTriviallyCopyable, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, lambda_is_default_constructible_and_assignable, 308, MX_APPLY_METHOD, LambdaIsDefaultConstructibleAndAssignable, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, may_be_abstract, 310, MX_APPLY_METHOD, MayBeAbstract, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, may_be_dynamic_class, 312, MX_APPLY_METHOD, MayBeDynamicClass, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, may_be_non_dynamic_class, 314, MX_APPLY_METHOD, MayBeNonDynamicClass, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY_LIST(CXXRecordDecl, methods, 316, MX_APPLY_METHOD, Methods, CXXMethodDecl, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_implicit_copy_assignment, 318, MX_APPLY_METHOD, NeedsImplicitCopyAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_implicit_copy_constructor, 320, MX_APPLY_METHOD, NeedsImplicitCopyConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_implicit_default_constructor, 322, MX_APPLY_METHOD, NeedsImplicitDefaultConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_implicit_destructor, 324, MX_APPLY_METHOD, NeedsImplicitDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_implicit_move_assignment, 326, MX_APPLY_METHOD, NeedsImplicitMoveAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_implicit_move_constructor, 328, MX_APPLY_METHOD, NeedsImplicitMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_overload_resolution_for_copy_assignment, 330, MX_APPLY_METHOD, NeedsOverloadResolutionForCopyAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_overload_resolution_for_copy_constructor, 332, MX_APPLY_METHOD, NeedsOverloadResolutionForCopyConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_overload_resolution_for_destructor, 334, MX_APPLY_METHOD, NeedsOverloadResolutionForDestructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_overload_resolution_for_move_assignment, 336, MX_APPLY_METHOD, NeedsOverloadResolutionForMoveAssignment, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, needs_overload_resolution_for_move_constructor, 338, MX_APPLY_METHOD, NeedsOverloadResolutionForMoveConstructor, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, null_field_offset_is_zero, 340, MX_APPLY_METHOD, NullFieldOffsetIsZero, bool, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY_LIST(CXXRecordDecl, virtual_bases, 342, MX_APPLY_METHOD, VirtualBases, CXXBaseSpecifier, NthDecl)
  MX_VISIT_OPTIONAL_INT(CXXRecordDecl, size_without_virtual_bases, 134, MX_APPLY_METHOD, SizeWithoutVirtualBases, , NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(CXXRecordDecl, primary_base, 142, MX_APPLY_METHOD, PrimaryBase, CXXRecordDecl, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_own_virtual_function_table_pointer, 345, MX_APPLY_METHOD, HasOwnVirtualFunctionTablePointer, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_extendable_virtual_function_table_pointer, 347, MX_APPLY_METHOD, HasExtendableVirtualFunctionTablePointer, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_virtual_base_table_pointer, 349, MX_APPLY_METHOD, HasVirtualBaseTablePointer, bool, NthDecl)
  MX_VISIT_OPTIONAL_BOOL(CXXRecordDecl, has_own_virtual_base_table_pointer, 351, MX_APPLY_METHOD, HasOwnVirtualBaseTablePointer, bool, NthDecl)
  MX_EXIT_VISIT_CXXRecordDecl
MX_END_VISIT_DECL(CXXRecordDecl)

#ifndef MX_ENTER_VISIT_ClassTemplateSpecializationDecl
#  define MX_ENTER_VISIT_ClassTemplateSpecializationDecl MX_ENTER_VISIT_CXXRecordDecl
#endif
#ifndef MX_EXIT_VISIT_ClassTemplateSpecializationDecl
#  define MX_EXIT_VISIT_ClassTemplateSpecializationDecl MX_EXIT_VISIT_CXXRecordDecl
#endif

MX_BEGIN_VISIT_DECL(ClassTemplateSpecializationDecl)
  MX_ENTER_VISIT_ClassTemplateSpecializationDecl
  MX_VISIT_BASE(ClassTemplateSpecializationDecl, CXXRecordDecl)
  MX_VISIT_ENTITY(ClassTemplateSpecializationDecl, extern_token, 144, MX_APPLY_METHOD, ExternToken, Token, NthDecl)
  MX_VISIT_ENTITY(ClassTemplateSpecializationDecl, point_of_instantiation, 145, MX_APPLY_METHOD, PointOfInstantiation, Token, NthDecl)
  MX_VISIT_ENUM(ClassTemplateSpecializationDecl, specialization_kind, 94, MX_APPLY_METHOD, SpecializationKind, TemplateSpecializationKind, NthDecl)
  MX_VISIT_ENTITY(ClassTemplateSpecializationDecl, specialized_template, 168, MX_APPLY_METHOD, SpecializedTemplate, ClassTemplateDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ClassTemplateSpecializationDecl, template_arguments, 353, MX_APPLY_METHOD, TemplateArguments, TemplateArgument, NthDecl)
  MX_VISIT_ENTITY_LIST(ClassTemplateSpecializationDecl, template_instantiation_arguments, 354, MX_APPLY_METHOD, TemplateInstantiationArguments, TemplateArgument, NthDecl)
  MX_VISIT_ENTITY(ClassTemplateSpecializationDecl, template_keyword_token, 170, MX_APPLY_METHOD, TemplateKeywordToken, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ClassTemplateSpecializationDecl, type_as_written, 171, MX_APPLY_METHOD, TypeAsWritten, Type, NthDecl)
  MX_VISIT_BOOL(ClassTemplateSpecializationDecl, is_class_scope_explicit_specialization, 355, MX_APPLY_METHOD, IsClassScopeExplicitSpecialization, bool, NthDecl)
  MX_VISIT_BOOL(ClassTemplateSpecializationDecl, is_explicit_instantiation_or_specialization, 356, MX_APPLY_METHOD, IsExplicitInstantiationOrSpecialization, bool, NthDecl)
  MX_VISIT_BOOL(ClassTemplateSpecializationDecl, is_explicit_specialization, 357, MX_APPLY_METHOD, IsExplicitSpecialization, bool, NthDecl)
  MX_EXIT_VISIT_ClassTemplateSpecializationDecl
MX_END_VISIT_DECL(ClassTemplateSpecializationDecl)

#ifndef MX_ENTER_VISIT_ClassTemplatePartialSpecializationDecl
#  define MX_ENTER_VISIT_ClassTemplatePartialSpecializationDecl MX_ENTER_VISIT_ClassTemplateSpecializationDecl
#endif
#ifndef MX_EXIT_VISIT_ClassTemplatePartialSpecializationDecl
#  define MX_EXIT_VISIT_ClassTemplatePartialSpecializationDecl MX_EXIT_VISIT_ClassTemplateSpecializationDecl
#endif

MX_BEGIN_VISIT_DECL(ClassTemplatePartialSpecializationDecl)
  MX_ENTER_VISIT_ClassTemplatePartialSpecializationDecl
  MX_VISIT_BASE(ClassTemplatePartialSpecializationDecl, ClassTemplateSpecializationDecl)
  MX_VISIT_ENTITY(ClassTemplatePartialSpecializationDecl, injected_specialization_type, 181, MX_APPLY_METHOD, InjectedSpecializationType, Type, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ClassTemplatePartialSpecializationDecl, instantiated_from_member, 182, MX_APPLY_METHOD, InstantiatedFromMember, ClassTemplatePartialSpecializationDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ClassTemplatePartialSpecializationDecl, instantiated_from_member_template, 358, MX_APPLY_METHOD, InstantiatedFromMemberTemplate, ClassTemplatePartialSpecializationDecl, NthDecl)
  MX_VISIT_ENTITY(ClassTemplatePartialSpecializationDecl, template_parameters, 359, MX_APPLY_METHOD, TemplateParameters, TemplateParameterList, NthDecl)
  MX_VISIT_BOOL(ClassTemplatePartialSpecializationDecl, has_associated_constraints, 360, MX_APPLY_METHOD, HasAssociatedConstraints, bool, NthDecl)
  MX_EXIT_VISIT_ClassTemplatePartialSpecializationDecl
MX_END_VISIT_DECL(ClassTemplatePartialSpecializationDecl)

#ifndef MX_ENTER_VISIT_EnumDecl
#  define MX_ENTER_VISIT_EnumDecl MX_ENTER_VISIT_TagDecl
#endif
#ifndef MX_EXIT_VISIT_EnumDecl
#  define MX_EXIT_VISIT_EnumDecl MX_EXIT_VISIT_TagDecl
#endif

MX_BEGIN_VISIT_DECL(EnumDecl)
  MX_ENTER_VISIT_EnumDecl
  MX_VISIT_BASE(EnumDecl, TagDecl)
  MX_VISIT_ENTITY_LIST(EnumDecl, enumerators, 62, MX_APPLY_METHOD, Enumerators, EnumConstantDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(EnumDecl, instantiated_from_member_enum, 79, MX_APPLY_METHOD, InstantiatedFromMemberEnum, EnumDecl, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(EnumDecl, integer_type, 80, MX_APPLY_METHOD, IntegerType, Type, NthDecl)
  MX_VISIT_TOKEN_RANGE(EnumDecl, integer_type_range, 82, 83, NthDecl)
  MX_VISIT_OPTIONAL_INT(EnumDecl, odr_hash, 143, MX_APPLY_METHOD, ODRHash, , NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(EnumDecl, promotion_type, 84, MX_APPLY_METHOD, PromotionType, Type, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(EnumDecl, template_instantiation_pattern, 85, MX_APPLY_METHOD, TemplateInstantiationPattern, EnumDecl, NthDecl)
  MX_VISIT_ENUM(EnumDecl, template_specialization_kind, 86, MX_APPLY_METHOD, TemplateSpecializationKind, TemplateSpecializationKind, NthDecl)
  MX_VISIT_BOOL(EnumDecl, is_closed, 106, MX_APPLY_METHOD, IsClosed, bool, NthDecl)
  MX_VISIT_BOOL(EnumDecl, is_closed_flag, 107, MX_APPLY_METHOD, IsClosedFlag, bool, NthDecl)
  MX_VISIT_BOOL(EnumDecl, is_closed_non_flag, 108, MX_APPLY_METHOD, IsClosedNonFlag, bool, NthDecl)
  MX_VISIT_BOOL(EnumDecl, is_complete, 109, MX_APPLY_METHOD, IsComplete, bool, NthDecl)
  MX_VISIT_BOOL(EnumDecl, is_fixed, 110, MX_APPLY_METHOD, IsFixed, bool, NthDecl)
  MX_VISIT_BOOL(EnumDecl, is_scoped, 111, MX_APPLY_METHOD, IsScoped, bool, NthDecl)
  MX_VISIT_BOOL(EnumDecl, is_scoped_using_class_tag, 112, MX_APPLY_METHOD, IsScopedUsingClassTag, bool, NthDecl)
  MX_EXIT_VISIT_EnumDecl
MX_END_VISIT_DECL(EnumDecl)

#ifndef MX_ENTER_VISIT_UnresolvedUsingTypenameDecl
#  define MX_ENTER_VISIT_UnresolvedUsingTypenameDecl MX_ENTER_VISIT_TypeDecl
#endif
#ifndef MX_EXIT_VISIT_UnresolvedUsingTypenameDecl
#  define MX_EXIT_VISIT_UnresolvedUsingTypenameDecl MX_EXIT_VISIT_TypeDecl
#endif

MX_BEGIN_VISIT_DECL(UnresolvedUsingTypenameDecl)
  MX_ENTER_VISIT_UnresolvedUsingTypenameDecl
  MX_VISIT_BASE(UnresolvedUsingTypenameDecl, TypeDecl)
  MX_VISIT_ENTITY(UnresolvedUsingTypenameDecl, ellipsis_token, 57, MX_APPLY_METHOD, EllipsisToken, Token, NthDecl)
  MX_VISIT_ENTITY(UnresolvedUsingTypenameDecl, typename_token, 58, MX_APPLY_METHOD, TypenameToken, Token, NthDecl)
  MX_VISIT_ENTITY(UnresolvedUsingTypenameDecl, using_token, 66, MX_APPLY_METHOD, UsingToken, Token, NthDecl)
  MX_VISIT_BOOL(UnresolvedUsingTypenameDecl, is_pack_expansion, 75, MX_APPLY_METHOD, IsPackExpansion, bool, NthDecl)
  MX_EXIT_VISIT_UnresolvedUsingTypenameDecl
MX_END_VISIT_DECL(UnresolvedUsingTypenameDecl)

#ifndef MX_ENTER_VISIT_TypedefNameDecl
#  define MX_ENTER_VISIT_TypedefNameDecl MX_ENTER_VISIT_TypeDecl
#endif
#ifndef MX_EXIT_VISIT_TypedefNameDecl
#  define MX_EXIT_VISIT_TypedefNameDecl MX_EXIT_VISIT_TypeDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(TypedefNameDecl)
  MX_ENTER_VISIT_TypedefNameDecl
  MX_VISIT_BASE(TypedefNameDecl, TypeDecl)
  MX_VISIT_OPTIONAL_ENTITY(TypedefNameDecl, anonymous_declaration_with_typedef_name, 57, MX_APPLY_METHOD, AnonymousDeclarationWithTypedefName, TagDecl, NthDecl)
  MX_VISIT_ENTITY(TypedefNameDecl, underlying_type, 58, MX_APPLY_METHOD, UnderlyingType, Type, NthDecl)
  MX_VISIT_BOOL(TypedefNameDecl, is_moded, 75, MX_APPLY_METHOD, IsModed, bool, NthDecl)
  MX_VISIT_BOOL(TypedefNameDecl, is_transparent_tag, 76, MX_APPLY_METHOD, IsTransparentTag, bool, NthDecl)
  MX_EXIT_VISIT_TypedefNameDecl
MX_END_VISIT_DECL(TypedefNameDecl)

#ifndef MX_ENTER_VISIT_TypedefDecl
#  define MX_ENTER_VISIT_TypedefDecl MX_ENTER_VISIT_TypedefNameDecl
#endif
#ifndef MX_EXIT_VISIT_TypedefDecl
#  define MX_EXIT_VISIT_TypedefDecl MX_EXIT_VISIT_TypedefNameDecl
#endif

MX_BEGIN_VISIT_DECL(TypedefDecl)
  MX_ENTER_VISIT_TypedefDecl
  MX_VISIT_BASE(TypedefDecl, TypedefNameDecl)
  MX_EXIT_VISIT_TypedefDecl
MX_END_VISIT_DECL(TypedefDecl)

#ifndef MX_ENTER_VISIT_TypeAliasDecl
#  define MX_ENTER_VISIT_TypeAliasDecl MX_ENTER_VISIT_TypedefNameDecl
#endif
#ifndef MX_EXIT_VISIT_TypeAliasDecl
#  define MX_EXIT_VISIT_TypeAliasDecl MX_EXIT_VISIT_TypedefNameDecl
#endif

MX_BEGIN_VISIT_DECL(TypeAliasDecl)
  MX_ENTER_VISIT_TypeAliasDecl
  MX_VISIT_BASE(TypeAliasDecl, TypedefNameDecl)
  MX_VISIT_OPTIONAL_ENTITY(TypeAliasDecl, described_alias_template, 66, MX_APPLY_METHOD, DescribedAliasTemplate, TypeAliasTemplateDecl, NthDecl)
  MX_EXIT_VISIT_TypeAliasDecl
MX_END_VISIT_DECL(TypeAliasDecl)

#ifndef MX_ENTER_VISIT_ObjCTypeParamDecl
#  define MX_ENTER_VISIT_ObjCTypeParamDecl MX_ENTER_VISIT_TypedefNameDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCTypeParamDecl
#  define MX_EXIT_VISIT_ObjCTypeParamDecl MX_EXIT_VISIT_TypedefNameDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCTypeParamDecl)
  MX_ENTER_VISIT_ObjCTypeParamDecl
  MX_VISIT_BASE(ObjCTypeParamDecl, TypedefNameDecl)
  MX_VISIT_ENTITY(ObjCTypeParamDecl, colon_token, 66, MX_APPLY_METHOD, ColonToken, Token, NthDecl)
  MX_VISIT_ENUM(ObjCTypeParamDecl, variance, 81, MX_APPLY_METHOD, Variance, ObjCTypeParamVariance, NthDecl)
  MX_VISIT_ENTITY(ObjCTypeParamDecl, variance_token, 67, MX_APPLY_METHOD, VarianceToken, Token, NthDecl)
  MX_VISIT_BOOL(ObjCTypeParamDecl, has_explicit_bound, 77, MX_APPLY_METHOD, HasExplicitBound, bool, NthDecl)
  MX_EXIT_VISIT_ObjCTypeParamDecl
MX_END_VISIT_DECL(ObjCTypeParamDecl)

#ifndef MX_ENTER_VISIT_TemplateDecl
#  define MX_ENTER_VISIT_TemplateDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_TemplateDecl
#  define MX_EXIT_VISIT_TemplateDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(TemplateDecl)
  MX_ENTER_VISIT_TemplateDecl
  MX_VISIT_BASE(TemplateDecl, NamedDecl)
  MX_VISIT_ENTITY(TemplateDecl, template_parameters, 56, MX_APPLY_METHOD, TemplateParameters, TemplateParameterList, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(TemplateDecl, templated_declaration, 57, MX_APPLY_METHOD, TemplatedDeclaration, NamedDecl, NthDecl)
  MX_VISIT_BOOL(TemplateDecl, has_associated_constraints, 75, MX_APPLY_METHOD, HasAssociatedConstraints, bool, NthDecl)
  MX_VISIT_BOOL(TemplateDecl, is_type_alias, 76, MX_APPLY_METHOD, IsTypeAlias, bool, NthDecl)
  MX_EXIT_VISIT_TemplateDecl
MX_END_VISIT_DECL(TemplateDecl)

#ifndef MX_ENTER_VISIT_RedeclarableTemplateDecl
#  define MX_ENTER_VISIT_RedeclarableTemplateDecl MX_ENTER_VISIT_TemplateDecl
#endif
#ifndef MX_EXIT_VISIT_RedeclarableTemplateDecl
#  define MX_EXIT_VISIT_RedeclarableTemplateDecl MX_EXIT_VISIT_TemplateDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(RedeclarableTemplateDecl)
  MX_ENTER_VISIT_RedeclarableTemplateDecl
  MX_VISIT_BASE(RedeclarableTemplateDecl, TemplateDecl)
  MX_VISIT_OPTIONAL_ENTITY(RedeclarableTemplateDecl, instantiated_from_member_template, 58, MX_APPLY_METHOD, InstantiatedFromMemberTemplate, RedeclarableTemplateDecl, NthDecl)
  MX_VISIT_BOOL(RedeclarableTemplateDecl, is_member_specialization, 77, MX_APPLY_METHOD, IsMemberSpecialization, bool, NthDecl)
  MX_EXIT_VISIT_RedeclarableTemplateDecl
MX_END_VISIT_DECL(RedeclarableTemplateDecl)

#ifndef MX_ENTER_VISIT_FunctionTemplateDecl
#  define MX_ENTER_VISIT_FunctionTemplateDecl MX_ENTER_VISIT_RedeclarableTemplateDecl
#endif
#ifndef MX_EXIT_VISIT_FunctionTemplateDecl
#  define MX_EXIT_VISIT_FunctionTemplateDecl MX_EXIT_VISIT_RedeclarableTemplateDecl
#endif

MX_BEGIN_VISIT_DECL(FunctionTemplateDecl)
  MX_ENTER_VISIT_FunctionTemplateDecl
  MX_VISIT_BASE(FunctionTemplateDecl, RedeclarableTemplateDecl)
  MX_VISIT_BOOL(FunctionTemplateDecl, is_abbreviated, 78, MX_APPLY_METHOD, IsAbbreviated, bool, NthDecl)
  MX_VISIT_BOOL(FunctionTemplateDecl, is_this_declaration_a_definition, 95, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_EXIT_VISIT_FunctionTemplateDecl
MX_END_VISIT_DECL(FunctionTemplateDecl)

#ifndef MX_ENTER_VISIT_ClassTemplateDecl
#  define MX_ENTER_VISIT_ClassTemplateDecl MX_ENTER_VISIT_RedeclarableTemplateDecl
#endif
#ifndef MX_EXIT_VISIT_ClassTemplateDecl
#  define MX_EXIT_VISIT_ClassTemplateDecl MX_EXIT_VISIT_RedeclarableTemplateDecl
#endif

MX_BEGIN_VISIT_DECL(ClassTemplateDecl)
  MX_ENTER_VISIT_ClassTemplateDecl
  MX_VISIT_BASE(ClassTemplateDecl, RedeclarableTemplateDecl)
  MX_VISIT_BOOL(ClassTemplateDecl, is_this_declaration_a_definition, 78, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_EXIT_VISIT_ClassTemplateDecl
MX_END_VISIT_DECL(ClassTemplateDecl)

#ifndef MX_ENTER_VISIT_VarTemplateDecl
#  define MX_ENTER_VISIT_VarTemplateDecl MX_ENTER_VISIT_RedeclarableTemplateDecl
#endif
#ifndef MX_EXIT_VISIT_VarTemplateDecl
#  define MX_EXIT_VISIT_VarTemplateDecl MX_EXIT_VISIT_RedeclarableTemplateDecl
#endif

MX_BEGIN_VISIT_DECL(VarTemplateDecl)
  MX_ENTER_VISIT_VarTemplateDecl
  MX_VISIT_BASE(VarTemplateDecl, RedeclarableTemplateDecl)
  MX_VISIT_BOOL(VarTemplateDecl, is_this_declaration_a_definition, 78, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_EXIT_VISIT_VarTemplateDecl
MX_END_VISIT_DECL(VarTemplateDecl)

#ifndef MX_ENTER_VISIT_TypeAliasTemplateDecl
#  define MX_ENTER_VISIT_TypeAliasTemplateDecl MX_ENTER_VISIT_RedeclarableTemplateDecl
#endif
#ifndef MX_EXIT_VISIT_TypeAliasTemplateDecl
#  define MX_EXIT_VISIT_TypeAliasTemplateDecl MX_EXIT_VISIT_RedeclarableTemplateDecl
#endif

MX_BEGIN_VISIT_DECL(TypeAliasTemplateDecl)
  MX_ENTER_VISIT_TypeAliasTemplateDecl
  MX_VISIT_BASE(TypeAliasTemplateDecl, RedeclarableTemplateDecl)
  MX_EXIT_VISIT_TypeAliasTemplateDecl
MX_END_VISIT_DECL(TypeAliasTemplateDecl)

#ifndef MX_ENTER_VISIT_ConceptDecl
#  define MX_ENTER_VISIT_ConceptDecl MX_ENTER_VISIT_TemplateDecl
#endif
#ifndef MX_EXIT_VISIT_ConceptDecl
#  define MX_EXIT_VISIT_ConceptDecl MX_EXIT_VISIT_TemplateDecl
#endif

MX_BEGIN_VISIT_DECL(ConceptDecl)
  MX_ENTER_VISIT_ConceptDecl
  MX_VISIT_BASE(ConceptDecl, TemplateDecl)
  MX_VISIT_ENTITY(ConceptDecl, constraint_expression, 58, MX_APPLY_METHOD, ConstraintExpression, Expr, NthDecl)
  MX_VISIT_BOOL(ConceptDecl, is_type_concept, 77, MX_APPLY_METHOD, IsTypeConcept, bool, NthDecl)
  MX_EXIT_VISIT_ConceptDecl
MX_END_VISIT_DECL(ConceptDecl)

#ifndef MX_ENTER_VISIT_BuiltinTemplateDecl
#  define MX_ENTER_VISIT_BuiltinTemplateDecl MX_ENTER_VISIT_TemplateDecl
#endif
#ifndef MX_EXIT_VISIT_BuiltinTemplateDecl
#  define MX_EXIT_VISIT_BuiltinTemplateDecl MX_EXIT_VISIT_TemplateDecl
#endif

MX_BEGIN_VISIT_DECL(BuiltinTemplateDecl)
  MX_ENTER_VISIT_BuiltinTemplateDecl
  MX_VISIT_BASE(BuiltinTemplateDecl, TemplateDecl)
  MX_EXIT_VISIT_BuiltinTemplateDecl
MX_END_VISIT_DECL(BuiltinTemplateDecl)

#ifndef MX_ENTER_VISIT_TemplateTemplateParmDecl
#  define MX_ENTER_VISIT_TemplateTemplateParmDecl MX_ENTER_VISIT_TemplateDecl
#endif
#ifndef MX_EXIT_VISIT_TemplateTemplateParmDecl
#  define MX_EXIT_VISIT_TemplateTemplateParmDecl MX_EXIT_VISIT_TemplateDecl
#endif

MX_BEGIN_VISIT_DECL(TemplateTemplateParmDecl)
  MX_ENTER_VISIT_TemplateTemplateParmDecl
  MX_VISIT_BASE(TemplateTemplateParmDecl, TemplateDecl)
  MX_VISIT_BOOL(TemplateTemplateParmDecl, default_argument_was_inherited, 77, MX_APPLY_METHOD, DefaultArgumentWasInherited, bool, NthDecl)
  MX_VISIT_ENTITY(TemplateTemplateParmDecl, default_argument_token, 58, MX_APPLY_METHOD, DefaultArgumentToken, Token, NthDecl)
  MX_VISIT_BOOL(TemplateTemplateParmDecl, has_default_argument, 78, MX_APPLY_METHOD, HasDefaultArgument, bool, NthDecl)
  MX_VISIT_BOOL(TemplateTemplateParmDecl, is_expanded_parameter_pack, 95, MX_APPLY_METHOD, IsExpandedParameterPack, bool, NthDecl)
  MX_VISIT_BOOL(TemplateTemplateParmDecl, is_pack_expansion, 96, MX_APPLY_METHOD, IsPackExpansion, bool, NthDecl)
  MX_EXIT_VISIT_TemplateTemplateParmDecl
MX_END_VISIT_DECL(TemplateTemplateParmDecl)

#ifndef MX_ENTER_VISIT_ObjCPropertyDecl
#  define MX_ENTER_VISIT_ObjCPropertyDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCPropertyDecl
#  define MX_EXIT_VISIT_ObjCPropertyDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCPropertyDecl)
  MX_ENTER_VISIT_ObjCPropertyDecl
  MX_VISIT_BASE(ObjCPropertyDecl, NamedDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, at_token, 56, MX_APPLY_METHOD, AtToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, getter_method_declaration, 57, MX_APPLY_METHOD, GetterMethodDeclaration, ObjCMethodDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, getter_name_token, 58, MX_APPLY_METHOD, GetterNameToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, l_paren_token, 66, MX_APPLY_METHOD, LParenToken, Token, NthDecl)
  MX_VISIT_ENUM(ObjCPropertyDecl, property_implementation, 81, MX_APPLY_METHOD, PropertyImplementation, ObjCPropertyDeclPropertyControl, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, property_instance_variable_declaration, 67, MX_APPLY_METHOD, PropertyInstanceVariableDeclaration, ObjCIvarDecl, NthDecl)
  MX_VISIT_ENUM(ObjCPropertyDecl, query_kind, 86, MX_APPLY_METHOD, QueryKind, ObjCPropertyQueryKind, NthDecl)
  MX_VISIT_ENUM(ObjCPropertyDecl, setter_kind, 88, MX_APPLY_METHOD, SetterKind, ObjCPropertyDeclSetterKind, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, setter_method_declaration, 68, MX_APPLY_METHOD, SetterMethodDeclaration, ObjCMethodDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, setter_name_token, 79, MX_APPLY_METHOD, SetterNameToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCPropertyDecl, type, 80, MX_APPLY_METHOD, Type, Type, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyDecl, is_atomic, 75, MX_APPLY_METHOD, IsAtomic, bool, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyDecl, is_class_property, 76, MX_APPLY_METHOD, IsClassProperty, bool, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyDecl, is_direct_property, 77, MX_APPLY_METHOD, IsDirectProperty, bool, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyDecl, is_instance_property, 78, MX_APPLY_METHOD, IsInstanceProperty, bool, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyDecl, is_optional, 95, MX_APPLY_METHOD, IsOptional, bool, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyDecl, is_read_only, 96, MX_APPLY_METHOD, IsReadOnly, bool, NthDecl)
  MX_VISIT_BOOL(ObjCPropertyDecl, is_retaining, 97, MX_APPLY_METHOD, IsRetaining, bool, NthDecl)
  MX_EXIT_VISIT_ObjCPropertyDecl
MX_END_VISIT_DECL(ObjCPropertyDecl)

#ifndef MX_ENTER_VISIT_ObjCMethodDecl
#  define MX_ENTER_VISIT_ObjCMethodDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCMethodDecl
#  define MX_EXIT_VISIT_ObjCMethodDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCMethodDecl)
  MX_ENTER_VISIT_ObjCMethodDecl
  MX_VISIT_BASE(ObjCMethodDecl, NamedDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, defined_in_ns_object, 75, MX_APPLY_METHOD, DefinedInNSObject, bool, NthDecl)
  MX_VISIT_ENTITY(ObjCMethodDecl, find_property_declaration, 56, MX_APPLY_METHOD, FindPropertyDeclaration, ObjCPropertyDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCMethodDecl, class_interface, 57, MX_APPLY_METHOD, ClassInterface, ObjCInterfaceDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCMethodDecl, command_declaration, 58, MX_APPLY_METHOD, CommandDeclaration, ImplicitParamDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCMethodDecl, declarator_end_token, 66, MX_APPLY_METHOD, DeclaratorEndToken, Token, NthDecl)
  MX_VISIT_ENUM(ObjCMethodDecl, implementation_control, 81, MX_APPLY_METHOD, ImplementationControl, ObjCMethodDeclImplementationControl, NthDecl)
  MX_VISIT_ENUM(ObjCMethodDecl, method_family, 86, MX_APPLY_METHOD, MethodFamily, ObjCMethodFamily, NthDecl)
  MX_VISIT_ENUM(ObjCMethodDecl, obj_c_decl_qualifier, 88, MX_APPLY_METHOD, ObjCDeclQualifier, DeclObjCDeclQualifier, NthDecl)
  MX_VISIT_ENTITY(ObjCMethodDecl, return_type, 67, MX_APPLY_METHOD, ReturnType, Type, NthDecl)
  MX_VISIT_TOKEN_RANGE(ObjCMethodDecl, return_type_tokens, 68, 79, NthDecl)
  MX_VISIT_ENTITY(ObjCMethodDecl, selector_start_token, 80, MX_APPLY_METHOD, SelectorStartToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCMethodDecl, self_declaration, 82, MX_APPLY_METHOD, SelfDeclaration, ImplicitParamDecl, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, has_parameter_destroyed_in_callee, 76, MX_APPLY_METHOD, HasParameterDestroyedInCallee, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, has_redeclaration, 77, MX_APPLY_METHOD, HasRedeclaration, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, has_related_result_type, 78, MX_APPLY_METHOD, HasRelatedResultType, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, has_skipped_body, 95, MX_APPLY_METHOD, HasSkippedBody, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_class_method, 96, MX_APPLY_METHOD, IsClassMethod, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_defined, 97, MX_APPLY_METHOD, IsDefined, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_designated_initializer_for_the_interface, 98, MX_APPLY_METHOD, IsDesignatedInitializerForTheInterface, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_direct_method, 99, MX_APPLY_METHOD, IsDirectMethod, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_instance_method, 100, MX_APPLY_METHOD, IsInstanceMethod, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_optional, 101, MX_APPLY_METHOD, IsOptional, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_overriding, 102, MX_APPLY_METHOD, IsOverriding, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_property_accessor, 103, MX_APPLY_METHOD, IsPropertyAccessor, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_redeclaration, 104, MX_APPLY_METHOD, IsRedeclaration, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_synthesized_accessor_stub, 105, MX_APPLY_METHOD, IsSynthesizedAccessorStub, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_this_declaration_a_definition, 106, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_this_declaration_a_designated_initializer, 107, MX_APPLY_METHOD, IsThisDeclarationADesignatedInitializer, bool, NthDecl)
  MX_VISIT_BOOL(ObjCMethodDecl, is_variadic, 108, MX_APPLY_METHOD, IsVariadic, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCMethodDecl, parameters, 51, MX_APPLY_METHOD, Parameters, ParmVarDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCMethodDecl, selector_tokens, 52, MX_APPLY_METHOD, SelectorTokens, Token, NthDecl)
  MX_VISIT_DECL_CONTEXT(ObjCMethodDecl, declarations_in_context, 62, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_ObjCMethodDecl
MX_END_VISIT_DECL(ObjCMethodDecl)

#ifndef MX_ENTER_VISIT_ObjCContainerDecl
#  define MX_ENTER_VISIT_ObjCContainerDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCContainerDecl
#  define MX_EXIT_VISIT_ObjCContainerDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(ObjCContainerDecl)
  MX_ENTER_VISIT_ObjCContainerDecl
  MX_VISIT_BASE(ObjCContainerDecl, NamedDecl)
  MX_VISIT_ENTITY_LIST(ObjCContainerDecl, class_methods, 51, MX_APPLY_METHOD, ClassMethods, ObjCMethodDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCContainerDecl, class_properties, 52, MX_APPLY_METHOD, ClassProperties, ObjCPropertyDecl, NthDecl)
  MX_VISIT_TOKEN_RANGE(ObjCContainerDecl, at_end_range, 56, 57, NthDecl)
  MX_VISIT_ENTITY(ObjCContainerDecl, at_start_token, 58, MX_APPLY_METHOD, AtStartToken, Token, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCContainerDecl, instance_methods, 62, MX_APPLY_METHOD, InstanceMethods, ObjCMethodDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCContainerDecl, instance_properties, 180, MX_APPLY_METHOD, InstanceProperties, ObjCPropertyDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCContainerDecl, methods, 188, MX_APPLY_METHOD, Methods, ObjCMethodDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCContainerDecl, properties, 189, MX_APPLY_METHOD, Properties, ObjCPropertyDecl, NthDecl)
  MX_VISIT_DECL_CONTEXT(ObjCContainerDecl, declarations_in_context, 190, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_ObjCContainerDecl
MX_END_VISIT_DECL(ObjCContainerDecl)

#ifndef MX_ENTER_VISIT_ObjCCategoryDecl
#  define MX_ENTER_VISIT_ObjCCategoryDecl MX_ENTER_VISIT_ObjCContainerDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCCategoryDecl
#  define MX_EXIT_VISIT_ObjCCategoryDecl MX_EXIT_VISIT_ObjCContainerDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCCategoryDecl)
  MX_ENTER_VISIT_ObjCCategoryDecl
  MX_VISIT_BASE(ObjCCategoryDecl, ObjCContainerDecl)
  MX_VISIT_BOOL(ObjCCategoryDecl, is_class_extension, 75, MX_APPLY_METHOD, IsClassExtension, bool, NthDecl)
  MX_VISIT_ENTITY(ObjCCategoryDecl, category_name_token, 66, MX_APPLY_METHOD, CategoryNameToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCCategoryDecl, class_interface, 67, MX_APPLY_METHOD, ClassInterface, ObjCInterfaceDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCCategoryDecl, implementation, 68, MX_APPLY_METHOD, Implementation, ObjCCategoryImplDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCCategoryDecl, instance_variable_l_brace_token, 79, MX_APPLY_METHOD, InstanceVariableLBraceToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCCategoryDecl, instance_variable_r_brace_token, 80, MX_APPLY_METHOD, InstanceVariableRBraceToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCCategoryDecl, next_class_category, 82, MX_APPLY_METHOD, NextClassCategory, ObjCCategoryDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCCategoryDecl, instance_variables, 316, MX_APPLY_METHOD, InstanceVariables, ObjCIvarDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCCategoryDecl, protocol_tokens, 342, MX_APPLY_METHOD, ProtocolTokens, Token, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCCategoryDecl, protocols, 353, MX_APPLY_METHOD, Protocols, ObjCProtocolDecl, NthDecl)
  MX_EXIT_VISIT_ObjCCategoryDecl
MX_END_VISIT_DECL(ObjCCategoryDecl)

#ifndef MX_ENTER_VISIT_ObjCProtocolDecl
#  define MX_ENTER_VISIT_ObjCProtocolDecl MX_ENTER_VISIT_ObjCContainerDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCProtocolDecl
#  define MX_EXIT_VISIT_ObjCProtocolDecl MX_EXIT_VISIT_ObjCContainerDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCProtocolDecl)
  MX_ENTER_VISIT_ObjCProtocolDecl
  MX_VISIT_BASE(ObjCProtocolDecl, ObjCContainerDecl)
  MX_VISIT_TEXT(ObjCProtocolDecl, obj_c_runtime_name_as_string, 74, MX_APPLY_METHOD, ObjCRuntimeNameAsString, basic_string_view, NthDecl)
  MX_VISIT_BOOL(ObjCProtocolDecl, has_definition, 75, MX_APPLY_METHOD, HasDefinition, bool, NthDecl)
  MX_VISIT_BOOL(ObjCProtocolDecl, is_non_runtime_protocol, 76, MX_APPLY_METHOD, IsNonRuntimeProtocol, bool, NthDecl)
  MX_VISIT_BOOL(ObjCProtocolDecl, is_this_declaration_a_definition, 77, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCProtocolDecl, protocol_tokens, 316, MX_APPLY_METHOD, ProtocolTokens, Token, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCProtocolDecl, protocols, 342, MX_APPLY_METHOD, Protocols, ObjCProtocolDecl, NthDecl)
  MX_EXIT_VISIT_ObjCProtocolDecl
MX_END_VISIT_DECL(ObjCProtocolDecl)

#ifndef MX_ENTER_VISIT_ObjCInterfaceDecl
#  define MX_ENTER_VISIT_ObjCInterfaceDecl MX_ENTER_VISIT_ObjCContainerDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCInterfaceDecl
#  define MX_EXIT_VISIT_ObjCInterfaceDecl MX_EXIT_VISIT_ObjCContainerDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCInterfaceDecl)
  MX_ENTER_VISIT_ObjCInterfaceDecl
  MX_VISIT_BASE(ObjCInterfaceDecl, ObjCContainerDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, all_referenced_protocols, 316, MX_APPLY_METHOD, AllReferencedProtocols, ObjCProtocolDecl, NthDecl)
  MX_VISIT_BOOL(ObjCInterfaceDecl, declares_or_inherits_designated_initializers, 75, MX_APPLY_METHOD, DeclaresOrInheritsDesignatedInitializers, bool, NthDecl)
  MX_VISIT_ENTITY(ObjCInterfaceDecl, end_of_definition_token, 66, MX_APPLY_METHOD, EndOfDefinitionToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCInterfaceDecl, implementation, 67, MX_APPLY_METHOD, Implementation, ObjCImplementationDecl, NthDecl)
  MX_VISIT_TEXT(ObjCInterfaceDecl, obj_c_runtime_name_as_string, 74, MX_APPLY_METHOD, ObjCRuntimeNameAsString, basic_string_view, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ObjCInterfaceDecl, super_class, 68, MX_APPLY_METHOD, SuperClass, ObjCInterfaceDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCInterfaceDecl, super_class_token, 79, MX_APPLY_METHOD, SuperClassToken, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(ObjCInterfaceDecl, super_class_type, 80, MX_APPLY_METHOD, SuperClassTypeInfo, Type, NthDecl)
  MX_VISIT_ENTITY(ObjCInterfaceDecl, type_for_declaration, 82, MX_APPLY_METHOD, TypeForDeclaration, Type, NthDecl)
  MX_VISIT_BOOL(ObjCInterfaceDecl, has_definition, 76, MX_APPLY_METHOD, HasDefinition, bool, NthDecl)
  MX_VISIT_BOOL(ObjCInterfaceDecl, has_designated_initializers, 77, MX_APPLY_METHOD, HasDesignatedInitializers, bool, NthDecl)
  MX_VISIT_BOOL(ObjCInterfaceDecl, is_arc_weakref_unavailable, 78, MX_APPLY_METHOD, IsArcWeakrefUnavailable, bool, NthDecl)
  MX_VISIT_BOOL(ObjCInterfaceDecl, is_implicit_interface_declaration, 95, MX_APPLY_METHOD, IsImplicitInterfaceDeclaration, bool, NthDecl)
  MX_VISIT_ENTITY(ObjCInterfaceDecl, is_obj_c_requires_property_definitions, 83, MX_APPLY_METHOD, IsObjCRequiresPropertyDefinitions, ObjCInterfaceDecl, NthDecl)
  MX_VISIT_BOOL(ObjCInterfaceDecl, is_this_declaration_a_definition, 96, MX_APPLY_METHOD, IsThisDeclarationADefinition, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, instance_variables, 342, MX_APPLY_METHOD, InstanceVariables, ObjCIvarDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, known_categories, 353, MX_APPLY_METHOD, KnownCategories, ObjCCategoryDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, known_extensions, 354, MX_APPLY_METHOD, KnownExtensions, ObjCCategoryDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, protocol_tokens, 361, MX_APPLY_METHOD, ProtocolTokens, Token, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, protocols, 362, MX_APPLY_METHOD, Protocols, ObjCProtocolDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, visible_categories, 363, MX_APPLY_METHOD, VisibleCategories, ObjCCategoryDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCInterfaceDecl, visible_extensions, 364, MX_APPLY_METHOD, VisibleExtensions, ObjCCategoryDecl, NthDecl)
  MX_EXIT_VISIT_ObjCInterfaceDecl
MX_END_VISIT_DECL(ObjCInterfaceDecl)

#ifndef MX_ENTER_VISIT_ObjCImplDecl
#  define MX_ENTER_VISIT_ObjCImplDecl MX_ENTER_VISIT_ObjCContainerDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCImplDecl
#  define MX_EXIT_VISIT_ObjCImplDecl MX_EXIT_VISIT_ObjCContainerDecl
#endif

MX_BEGIN_VISIT_ABSTRACT_DECL(ObjCImplDecl)
  MX_ENTER_VISIT_ObjCImplDecl
  MX_VISIT_BASE(ObjCImplDecl, ObjCContainerDecl)
  MX_VISIT_ENTITY(ObjCImplDecl, class_interface, 66, MX_APPLY_METHOD, ClassInterface, ObjCInterfaceDecl, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCImplDecl, property_implementations, 316, MX_APPLY_METHOD, PropertyImplementations, ObjCPropertyImplDecl, NthDecl)
  MX_EXIT_VISIT_ObjCImplDecl
MX_END_VISIT_DECL(ObjCImplDecl)

#ifndef MX_ENTER_VISIT_ObjCCategoryImplDecl
#  define MX_ENTER_VISIT_ObjCCategoryImplDecl MX_ENTER_VISIT_ObjCImplDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCCategoryImplDecl
#  define MX_EXIT_VISIT_ObjCCategoryImplDecl MX_EXIT_VISIT_ObjCImplDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCCategoryImplDecl)
  MX_ENTER_VISIT_ObjCCategoryImplDecl
  MX_VISIT_BASE(ObjCCategoryImplDecl, ObjCImplDecl)
  MX_VISIT_ENTITY(ObjCCategoryImplDecl, category_declaration, 67, MX_APPLY_METHOD, CategoryDeclaration, ObjCCategoryDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCCategoryImplDecl, category_name_token, 68, MX_APPLY_METHOD, CategoryNameToken, Token, NthDecl)
  MX_EXIT_VISIT_ObjCCategoryImplDecl
MX_END_VISIT_DECL(ObjCCategoryImplDecl)

#ifndef MX_ENTER_VISIT_ObjCImplementationDecl
#  define MX_ENTER_VISIT_ObjCImplementationDecl MX_ENTER_VISIT_ObjCImplDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCImplementationDecl
#  define MX_EXIT_VISIT_ObjCImplementationDecl MX_EXIT_VISIT_ObjCImplDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCImplementationDecl)
  MX_ENTER_VISIT_ObjCImplementationDecl
  MX_VISIT_BASE(ObjCImplementationDecl, ObjCImplDecl)
  MX_VISIT_ENTITY(ObjCImplementationDecl, instance_variable_l_brace_token, 67, MX_APPLY_METHOD, InstanceVariableLBraceToken, Token, NthDecl)
  MX_VISIT_ENTITY(ObjCImplementationDecl, instance_variable_r_brace_token, 68, MX_APPLY_METHOD, InstanceVariableRBraceToken, Token, NthDecl)
  MX_VISIT_TEXT(ObjCImplementationDecl, obj_c_runtime_name_as_string, 74, MX_APPLY_METHOD, ObjCRuntimeNameAsString, basic_string_view, NthDecl)
  MX_VISIT_ENTITY(ObjCImplementationDecl, super_class, 79, MX_APPLY_METHOD, SuperClass, ObjCInterfaceDecl, NthDecl)
  MX_VISIT_ENTITY(ObjCImplementationDecl, super_class_token, 80, MX_APPLY_METHOD, SuperClassToken, Token, NthDecl)
  MX_VISIT_BOOL(ObjCImplementationDecl, has_destructors, 75, MX_APPLY_METHOD, HasDestructors, bool, NthDecl)
  MX_VISIT_BOOL(ObjCImplementationDecl, has_non_zero_constructors, 76, MX_APPLY_METHOD, HasNonZeroConstructors, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(ObjCImplementationDecl, instance_variables, 342, MX_APPLY_METHOD, InstanceVariables, ObjCIvarDecl, NthDecl)
  MX_EXIT_VISIT_ObjCImplementationDecl
MX_END_VISIT_DECL(ObjCImplementationDecl)

#ifndef MX_ENTER_VISIT_ObjCCompatibleAliasDecl
#  define MX_ENTER_VISIT_ObjCCompatibleAliasDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_ObjCCompatibleAliasDecl
#  define MX_EXIT_VISIT_ObjCCompatibleAliasDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(ObjCCompatibleAliasDecl)
  MX_ENTER_VISIT_ObjCCompatibleAliasDecl
  MX_VISIT_BASE(ObjCCompatibleAliasDecl, NamedDecl)
  MX_VISIT_ENTITY(ObjCCompatibleAliasDecl, class_interface, 56, MX_APPLY_METHOD, ClassInterface, ObjCInterfaceDecl, NthDecl)
  MX_EXIT_VISIT_ObjCCompatibleAliasDecl
MX_END_VISIT_DECL(ObjCCompatibleAliasDecl)

#ifndef MX_ENTER_VISIT_NamespaceDecl
#  define MX_ENTER_VISIT_NamespaceDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_NamespaceDecl
#  define MX_EXIT_VISIT_NamespaceDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(NamespaceDecl)
  MX_ENTER_VISIT_NamespaceDecl
  MX_VISIT_DECL_CONTEXT(NamespaceDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_NamespaceDecl
MX_END_VISIT_DECL(NamespaceDecl)

#ifndef MX_ENTER_VISIT_NamespaceAliasDecl
#  define MX_ENTER_VISIT_NamespaceAliasDecl MX_ENTER_VISIT_NamedDecl
#endif
#ifndef MX_EXIT_VISIT_NamespaceAliasDecl
#  define MX_EXIT_VISIT_NamespaceAliasDecl MX_EXIT_VISIT_NamedDecl
#endif

MX_BEGIN_VISIT_DECL(NamespaceAliasDecl)
  MX_ENTER_VISIT_NamespaceAliasDecl
  MX_VISIT_BASE(NamespaceAliasDecl, NamedDecl)
  MX_VISIT_ENTITY(NamespaceAliasDecl, alias_token, 56, MX_APPLY_METHOD, AliasToken, Token, NthDecl)
  MX_VISIT_ENTITY(NamespaceAliasDecl, aliased_namespace, 57, MX_APPLY_METHOD, AliasedNamespace, NamedDecl, NthDecl)
  MX_VISIT_ENTITY(NamespaceAliasDecl, namespace_token, 58, MX_APPLY_METHOD, NamespaceToken, Token, NthDecl)
  MX_VISIT_ENTITY(NamespaceAliasDecl, target_name_token, 66, MX_APPLY_METHOD, TargetNameToken, Token, NthDecl)
  MX_EXIT_VISIT_NamespaceAliasDecl
MX_END_VISIT_DECL(NamespaceAliasDecl)

#ifndef MX_ENTER_VISIT_LinkageSpecDecl
#  define MX_ENTER_VISIT_LinkageSpecDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_LinkageSpecDecl
#  define MX_EXIT_VISIT_LinkageSpecDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(LinkageSpecDecl)
  MX_ENTER_VISIT_LinkageSpecDecl
  MX_VISIT_DECL_CONTEXT(LinkageSpecDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_LinkageSpecDecl
MX_END_VISIT_DECL(LinkageSpecDecl)

#ifndef MX_ENTER_VISIT_LifetimeExtendedTemporaryDecl
#  define MX_ENTER_VISIT_LifetimeExtendedTemporaryDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_LifetimeExtendedTemporaryDecl
#  define MX_EXIT_VISIT_LifetimeExtendedTemporaryDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(LifetimeExtendedTemporaryDecl)
  MX_ENTER_VISIT_LifetimeExtendedTemporaryDecl
  MX_VISIT_BASE(LifetimeExtendedTemporaryDecl, Decl)
  MX_VISIT_ENTITY_LIST(LifetimeExtendedTemporaryDecl, children, 51, MX_APPLY_METHOD, Children, Stmt, NthDecl)
  MX_VISIT_ENTITY(LifetimeExtendedTemporaryDecl, extending_declaration, 49, MX_APPLY_METHOD, ExtendingDeclaration, ValueDecl, NthDecl)
  MX_VISIT_ENUM(LifetimeExtendedTemporaryDecl, storage_duration, 65, MX_APPLY_METHOD, StorageDuration, StorageDuration, NthDecl)
  MX_VISIT_ENTITY(LifetimeExtendedTemporaryDecl, temporary_expression, 56, MX_APPLY_METHOD, TemporaryExpression, Expr, NthDecl)
  MX_EXIT_VISIT_LifetimeExtendedTemporaryDecl
MX_END_VISIT_DECL(LifetimeExtendedTemporaryDecl)

#ifndef MX_ENTER_VISIT_ImportDecl
#  define MX_ENTER_VISIT_ImportDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_ImportDecl
#  define MX_EXIT_VISIT_ImportDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(ImportDecl)
  MX_ENTER_VISIT_ImportDecl
  MX_VISIT_BASE(ImportDecl, Decl)
  MX_VISIT_ENTITY_LIST(ImportDecl, identifier_tokens, 51, MX_APPLY_METHOD, IdentifierTokens, Token, NthDecl)
  MX_EXIT_VISIT_ImportDecl
MX_END_VISIT_DECL(ImportDecl)

#ifndef MX_ENTER_VISIT_ImplicitConceptSpecializationDecl
#  define MX_ENTER_VISIT_ImplicitConceptSpecializationDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_ImplicitConceptSpecializationDecl
#  define MX_EXIT_VISIT_ImplicitConceptSpecializationDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(ImplicitConceptSpecializationDecl)
  MX_ENTER_VISIT_ImplicitConceptSpecializationDecl
  MX_VISIT_BASE(ImplicitConceptSpecializationDecl, Decl)
  MX_VISIT_ENTITY_LIST(ImplicitConceptSpecializationDecl, template_arguments, 51, MX_APPLY_METHOD, TemplateArguments, TemplateArgument, NthDecl)
  MX_EXIT_VISIT_ImplicitConceptSpecializationDecl
MX_END_VISIT_DECL(ImplicitConceptSpecializationDecl)

#ifndef MX_ENTER_VISIT_FriendTemplateDecl
#  define MX_ENTER_VISIT_FriendTemplateDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_FriendTemplateDecl
#  define MX_EXIT_VISIT_FriendTemplateDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(FriendTemplateDecl)
  MX_ENTER_VISIT_FriendTemplateDecl
  MX_VISIT_BASE(FriendTemplateDecl, Decl)
  MX_VISIT_ENTITY(FriendTemplateDecl, friend_declaration, 49, MX_APPLY_METHOD, FriendDeclaration, NamedDecl, NthDecl)
  MX_VISIT_ENTITY(FriendTemplateDecl, friend_token, 56, MX_APPLY_METHOD, FriendToken, Token, NthDecl)
  MX_VISIT_ENTITY(FriendTemplateDecl, friend_type, 57, MX_APPLY_METHOD, FriendType, Type, NthDecl)
  MX_VISIT_ENTITY_LIST(FriendTemplateDecl, template_parameter_lists, 51, MX_APPLY_METHOD, TemplateParameterLists, TemplateParameterList, NthDecl)
  MX_EXIT_VISIT_FriendTemplateDecl
MX_END_VISIT_DECL(FriendTemplateDecl)

#ifndef MX_ENTER_VISIT_FriendDecl
#  define MX_ENTER_VISIT_FriendDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_FriendDecl
#  define MX_EXIT_VISIT_FriendDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(FriendDecl)
  MX_ENTER_VISIT_FriendDecl
  MX_VISIT_BASE(FriendDecl, Decl)
  MX_VISIT_OPTIONAL_ENTITY(FriendDecl, friend_declaration, 49, MX_APPLY_METHOD, FriendDeclaration, NamedDecl, NthDecl)
  MX_VISIT_ENTITY(FriendDecl, friend_token, 56, MX_APPLY_METHOD, FriendToken, Token, NthDecl)
  MX_VISIT_OPTIONAL_ENTITY(FriendDecl, friend_type, 57, MX_APPLY_METHOD, FriendType, Type, NthDecl)
  MX_VISIT_BOOL(FriendDecl, is_unsupported_friend, 50, MX_APPLY_METHOD, IsUnsupportedFriend, bool, NthDecl)
  MX_VISIT_ENTITY_LIST(FriendDecl, friend_type_template_parameter_lists, 51, MX_APPLY_METHOD, FriendTypeTemplateParameterLists, TemplateParameterList, NthDecl)
  MX_EXIT_VISIT_FriendDecl
MX_END_VISIT_DECL(FriendDecl)

#ifndef MX_ENTER_VISIT_FileScopeAsmDecl
#  define MX_ENTER_VISIT_FileScopeAsmDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_FileScopeAsmDecl
#  define MX_EXIT_VISIT_FileScopeAsmDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(FileScopeAsmDecl)
  MX_ENTER_VISIT_FileScopeAsmDecl
  MX_VISIT_BASE(FileScopeAsmDecl, Decl)
  MX_VISIT_ENTITY(FileScopeAsmDecl, assembly_token, 49, MX_APPLY_METHOD, AssemblyToken, Token, NthDecl)
  MX_VISIT_ENTITY(FileScopeAsmDecl, assembly_string, 56, MX_APPLY_METHOD, AssemblyString, StringLiteral, NthDecl)
  MX_VISIT_ENTITY(FileScopeAsmDecl, r_paren_token, 57, MX_APPLY_METHOD, RParenToken, Token, NthDecl)
  MX_EXIT_VISIT_FileScopeAsmDecl
MX_END_VISIT_DECL(FileScopeAsmDecl)

#ifndef MX_ENTER_VISIT_ExternCContextDecl
#  define MX_ENTER_VISIT_ExternCContextDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_ExternCContextDecl
#  define MX_EXIT_VISIT_ExternCContextDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(ExternCContextDecl)
  MX_ENTER_VISIT_ExternCContextDecl
  MX_VISIT_DECL_CONTEXT(ExternCContextDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_ExternCContextDecl
MX_END_VISIT_DECL(ExternCContextDecl)

#ifndef MX_ENTER_VISIT_ExportDecl
#  define MX_ENTER_VISIT_ExportDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_ExportDecl
#  define MX_EXIT_VISIT_ExportDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(ExportDecl)
  MX_ENTER_VISIT_ExportDecl
  MX_VISIT_BASE(ExportDecl, Decl)
  MX_VISIT_ENTITY(ExportDecl, export_token, 49, MX_APPLY_METHOD, ExportToken, Token, NthDecl)
  MX_VISIT_ENTITY(ExportDecl, r_brace_token, 56, MX_APPLY_METHOD, RBraceToken, Token, NthDecl)
  MX_VISIT_BOOL(ExportDecl, has_braces, 50, MX_APPLY_METHOD, HasBraces, bool, NthDecl)
  MX_VISIT_DECL_CONTEXT(ExportDecl, declarations_in_context, 51, MX_APPLY_METHOD, AlreadyLoadedDeclarations, Decl, NthDecl)
  MX_EXIT_VISIT_ExportDecl
MX_END_VISIT_DECL(ExportDecl)

#ifndef MX_ENTER_VISIT_EmptyDecl
#  define MX_ENTER_VISIT_EmptyDecl MX_ENTER_VISIT_Decl
#endif
#ifndef MX_EXIT_VISIT_EmptyDecl
#  define MX_EXIT_VISIT_EmptyDecl MX_EXIT_VISIT_Decl
#endif

MX_BEGIN_VISIT_DECL(EmptyDecl)
  MX_ENTER_VISIT_EmptyDecl
  MX_VISIT_BASE(EmptyDecl, Decl)
  MX_EXIT_VISIT_EmptyDecl
MX_END_VISIT_DECL(EmptyDecl)

#undef MX_ENTER_VISIT_Designator
#undef MX_EXIT_VISIT_Designator
#undef MX_ENTER_VISIT_CXXBaseSpecifier
#undef MX_EXIT_VISIT_CXXBaseSpecifier
#undef MX_ENTER_VISIT_TemplateParameterList
#undef MX_EXIT_VISIT_TemplateParameterList
#undef MX_ENTER_VISIT_TemplateArgument
#undef MX_EXIT_VISIT_TemplateArgument
#undef MX_ENTER_VISIT_Macro
#undef MX_EXIT_VISIT_Macro
#undef MX_ENTER_VISIT_MacroVAOptArgument
#undef MX_EXIT_VISIT_MacroVAOptArgument
#undef MX_ENTER_VISIT_MacroVAOpt
#undef MX_EXIT_VISIT_MacroVAOpt
#undef MX_ENTER_VISIT_MacroSubstitution
#undef MX_EXIT_VISIT_MacroSubstitution
#undef MX_ENTER_VISIT_MacroConcatenate
#undef MX_EXIT_VISIT_MacroConcatenate
#undef MX_ENTER_VISIT_MacroStringify
#undef MX_EXIT_VISIT_MacroStringify
#undef MX_ENTER_VISIT_MacroExpansion
#undef MX_EXIT_VISIT_MacroExpansion
#undef MX_ENTER_VISIT_MacroParameterSubstitution
#undef MX_EXIT_VISIT_MacroParameterSubstitution
#undef MX_ENTER_VISIT_MacroArgument
#undef MX_EXIT_VISIT_MacroArgument
#undef MX_ENTER_VISIT_MacroParameter
#undef MX_EXIT_VISIT_MacroParameter
#undef MX_ENTER_VISIT_MacroDirective
#undef MX_EXIT_VISIT_MacroDirective
#undef MX_ENTER_VISIT_DefineMacroDirective
#undef MX_EXIT_VISIT_DefineMacroDirective
#undef MX_ENTER_VISIT_PragmaMacroDirective
#undef MX_EXIT_VISIT_PragmaMacroDirective
#undef MX_ENTER_VISIT_UndefineMacroDirective
#undef MX_EXIT_VISIT_UndefineMacroDirective
#undef MX_ENTER_VISIT_OtherMacroDirective
#undef MX_EXIT_VISIT_OtherMacroDirective
#undef MX_ENTER_VISIT_ConditionalMacroDirective
#undef MX_EXIT_VISIT_ConditionalMacroDirective
#undef MX_ENTER_VISIT_EndIfMacroDirective
#undef MX_EXIT_VISIT_EndIfMacroDirective
#undef MX_ENTER_VISIT_ElseMacroDirective
#undef MX_EXIT_VISIT_ElseMacroDirective
#undef MX_ENTER_VISIT_ElseIfNotDefinedMacroDirective
#undef MX_EXIT_VISIT_ElseIfNotDefinedMacroDirective
#undef MX_ENTER_VISIT_ElseIfDefinedMacroDirective
#undef MX_EXIT_VISIT_ElseIfDefinedMacroDirective
#undef MX_ENTER_VISIT_ElseIfMacroDirective
#undef MX_EXIT_VISIT_ElseIfMacroDirective
#undef MX_ENTER_VISIT_IfNotDefinedMacroDirective
#undef MX_EXIT_VISIT_IfNotDefinedMacroDirective
#undef MX_ENTER_VISIT_IfDefinedMacroDirective
#undef MX_EXIT_VISIT_IfDefinedMacroDirective
#undef MX_ENTER_VISIT_IfMacroDirective
#undef MX_EXIT_VISIT_IfMacroDirective
#undef MX_ENTER_VISIT_IncludeLikeMacroDirective
#undef MX_EXIT_VISIT_IncludeLikeMacroDirective
#undef MX_ENTER_VISIT_ImportMacroDirective
#undef MX_EXIT_VISIT_ImportMacroDirective
#undef MX_ENTER_VISIT_IncludeMacrosMacroDirective
#undef MX_EXIT_VISIT_IncludeMacrosMacroDirective
#undef MX_ENTER_VISIT_IncludeNextMacroDirective
#undef MX_EXIT_VISIT_IncludeNextMacroDirective
#undef MX_ENTER_VISIT_IncludeMacroDirective
#undef MX_EXIT_VISIT_IncludeMacroDirective
#undef MX_ENTER_VISIT_Attr
#undef MX_EXIT_VISIT_Attr
#undef MX_ENTER_VISIT_AlignValueAttr
#undef MX_EXIT_VISIT_AlignValueAttr
#undef MX_ENTER_VISIT_AliasAttr
#undef MX_EXIT_VISIT_AliasAttr
#undef MX_ENTER_VISIT_AbiTagAttr
#undef MX_EXIT_VISIT_AbiTagAttr
#undef MX_ENTER_VISIT_TypeAttr
#undef MX_EXIT_VISIT_TypeAttr
#undef MX_ENTER_VISIT_SPtrAttr
#undef MX_EXIT_VISIT_SPtrAttr
#undef MX_ENTER_VISIT_Ptr64Attr
#undef MX_EXIT_VISIT_Ptr64Attr
#undef MX_ENTER_VISIT_Ptr32Attr
#undef MX_EXIT_VISIT_Ptr32Attr
#undef MX_ENTER_VISIT_OpenCLPrivateAddressSpaceAttr
#undef MX_EXIT_VISIT_OpenCLPrivateAddressSpaceAttr
#undef MX_ENTER_VISIT_OpenCLLocalAddressSpaceAttr
#undef MX_EXIT_VISIT_OpenCLLocalAddressSpaceAttr
#undef MX_ENTER_VISIT_OpenCLGlobalHostAddressSpaceAttr
#undef MX_EXIT_VISIT_OpenCLGlobalHostAddressSpaceAttr
#undef MX_ENTER_VISIT_OpenCLGlobalDeviceAddressSpaceAttr
#undef MX_EXIT_VISIT_OpenCLGlobalDeviceAddressSpaceAttr
#undef MX_ENTER_VISIT_OpenCLGlobalAddressSpaceAttr
#undef MX_EXIT_VISIT_OpenCLGlobalAddressSpaceAttr
#undef MX_ENTER_VISIT_OpenCLGenericAddressSpaceAttr
#undef MX_EXIT_VISIT_OpenCLGenericAddressSpaceAttr
#undef MX_ENTER_VISIT_OpenCLConstantAddressSpaceAttr
#undef MX_EXIT_VISIT_OpenCLConstantAddressSpaceAttr
#undef MX_ENTER_VISIT_ObjCKindOfAttr
#undef MX_EXIT_VISIT_ObjCKindOfAttr
#undef MX_ENTER_VISIT_ObjCInertUnsafeUnretainedAttr
#undef MX_EXIT_VISIT_ObjCInertUnsafeUnretainedAttr
#undef MX_ENTER_VISIT_ObjCGCAttr
#undef MX_EXIT_VISIT_ObjCGCAttr
#undef MX_ENTER_VISIT_NoDerefAttr
#undef MX_EXIT_VISIT_NoDerefAttr
#undef MX_ENTER_VISIT_HLSLGroupSharedAddressSpaceAttr
#undef MX_EXIT_VISIT_HLSLGroupSharedAddressSpaceAttr
#undef MX_ENTER_VISIT_CmseNSCallAttr
#undef MX_EXIT_VISIT_CmseNSCallAttr
#undef MX_ENTER_VISIT_BTFTypeTagAttr
#undef MX_EXIT_VISIT_BTFTypeTagAttr
#undef MX_ENTER_VISIT_ArmStreamingAttr
#undef MX_EXIT_VISIT_ArmStreamingAttr
#undef MX_ENTER_VISIT_ArmMveStrictPolymorphismAttr
#undef MX_EXIT_VISIT_ArmMveStrictPolymorphismAttr
#undef MX_ENTER_VISIT_AnnotateTypeAttr
#undef MX_EXIT_VISIT_AnnotateTypeAttr
#undef MX_ENTER_VISIT_AddressSpaceAttr
#undef MX_EXIT_VISIT_AddressSpaceAttr
#undef MX_ENTER_VISIT_WebAssemblyFuncrefAttr
#undef MX_EXIT_VISIT_WebAssemblyFuncrefAttr
#undef MX_ENTER_VISIT_UPtrAttr
#undef MX_EXIT_VISIT_UPtrAttr
#undef MX_ENTER_VISIT_TypeNullableResultAttr
#undef MX_EXIT_VISIT_TypeNullableResultAttr
#undef MX_ENTER_VISIT_TypeNullableAttr
#undef MX_EXIT_VISIT_TypeNullableAttr
#undef MX_ENTER_VISIT_TypeNullUnspecifiedAttr
#undef MX_EXIT_VISIT_TypeNullUnspecifiedAttr
#undef MX_ENTER_VISIT_TypeNonNullAttr
#undef MX_EXIT_VISIT_TypeNonNullAttr
#undef MX_ENTER_VISIT_ThreadAttr
#undef MX_EXIT_VISIT_ThreadAttr
#undef MX_ENTER_VISIT_SwiftObjCMembersAttr
#undef MX_EXIT_VISIT_SwiftObjCMembersAttr
#undef MX_ENTER_VISIT_StmtAttr
#undef MX_EXIT_VISIT_StmtAttr
#undef MX_ENTER_VISIT_OpenCLUnrollHintAttr
#undef MX_EXIT_VISIT_OpenCLUnrollHintAttr
#undef MX_ENTER_VISIT_MustTailAttr
#undef MX_EXIT_VISIT_MustTailAttr
#undef MX_ENTER_VISIT_LikelyAttr
#undef MX_EXIT_VISIT_LikelyAttr
#undef MX_ENTER_VISIT_FallThroughAttr
#undef MX_EXIT_VISIT_FallThroughAttr
#undef MX_ENTER_VISIT_UnlikelyAttr
#undef MX_EXIT_VISIT_UnlikelyAttr
#undef MX_ENTER_VISIT_SuppressAttr
#undef MX_EXIT_VISIT_SuppressAttr
#undef MX_ENTER_VISIT_RenderScriptKernelAttr
#undef MX_EXIT_VISIT_RenderScriptKernelAttr
#undef MX_ENTER_VISIT_OverloadableAttr
#undef MX_EXIT_VISIT_OverloadableAttr
#undef MX_ENTER_VISIT_OpenCLAccessAttr
#undef MX_EXIT_VISIT_OpenCLAccessAttr
#undef MX_ENTER_VISIT_ObjCRuntimeVisibleAttr
#undef MX_EXIT_VISIT_ObjCRuntimeVisibleAttr
#undef MX_ENTER_VISIT_ObjCRuntimeNameAttr
#undef MX_EXIT_VISIT_ObjCRuntimeNameAttr
#undef MX_ENTER_VISIT_ObjCNonRuntimeProtocolAttr
#undef MX_EXIT_VISIT_ObjCNonRuntimeProtocolAttr
#undef MX_ENTER_VISIT_ObjCNonLazyClassAttr
#undef MX_EXIT_VISIT_ObjCNonLazyClassAttr
#undef MX_ENTER_VISIT_ObjCDirectMembersAttr
#undef MX_EXIT_VISIT_ObjCDirectMembersAttr
#undef MX_ENTER_VISIT_ObjCDirectAttr
#undef MX_EXIT_VISIT_ObjCDirectAttr
#undef MX_ENTER_VISIT_ObjCDesignatedInitializerAttr
#undef MX_EXIT_VISIT_ObjCDesignatedInitializerAttr
#undef MX_ENTER_VISIT_ObjCClassStubAttr
#undef MX_EXIT_VISIT_ObjCClassStubAttr
#undef MX_ENTER_VISIT_ObjCBoxableAttr
#undef MX_EXIT_VISIT_ObjCBoxableAttr
#undef MX_ENTER_VISIT_OMPReferencedVarAttr
#undef MX_EXIT_VISIT_OMPReferencedVarAttr
#undef MX_ENTER_VISIT_OMPDeclareSimdDeclAttr
#undef MX_EXIT_VISIT_OMPDeclareSimdDeclAttr
#undef MX_ENTER_VISIT_OMPCaptureKindAttr
#undef MX_EXIT_VISIT_OMPCaptureKindAttr
#undef MX_ENTER_VISIT_NoEscapeAttr
#undef MX_EXIT_VISIT_NoEscapeAttr
#undef MX_ENTER_VISIT_NoBuiltinAttr
#undef MX_EXIT_VISIT_NoBuiltinAttr
#undef MX_ENTER_VISIT_ModeAttr
#undef MX_EXIT_VISIT_ModeAttr
#undef MX_ENTER_VISIT_LoopHintAttr
#undef MX_EXIT_VISIT_LoopHintAttr
#undef MX_ENTER_VISIT_LoaderUninitializedAttr
#undef MX_EXIT_VISIT_LoaderUninitializedAttr
#undef MX_ENTER_VISIT_InitSegAttr
#undef MX_EXIT_VISIT_InitSegAttr
#undef MX_ENTER_VISIT_InheritableAttr
#undef MX_EXIT_VISIT_InheritableAttr
#undef MX_ENTER_VISIT_IBOutletCollectionAttr
#undef MX_EXIT_VISIT_IBOutletCollectionAttr
#undef MX_ENTER_VISIT_IBOutletAttr
#undef MX_EXIT_VISIT_IBOutletAttr
#undef MX_ENTER_VISIT_IBActionAttr
#undef MX_EXIT_VISIT_IBActionAttr
#undef MX_ENTER_VISIT_HotAttr
#undef MX_EXIT_VISIT_HotAttr
#undef MX_ENTER_VISIT_HLSLShaderAttr
#undef MX_EXIT_VISIT_HLSLShaderAttr
#undef MX_ENTER_VISIT_HLSLResourceBindingAttr
#undef MX_EXIT_VISIT_HLSLResourceBindingAttr
#undef MX_ENTER_VISIT_HLSLResourceAttr
#undef MX_EXIT_VISIT_HLSLResourceAttr
#undef MX_ENTER_VISIT_HLSLNumThreadsAttr
#undef MX_EXIT_VISIT_HLSLNumThreadsAttr
#undef MX_ENTER_VISIT_HLSLAnnotationAttr
#undef MX_EXIT_VISIT_HLSLAnnotationAttr
#undef MX_ENTER_VISIT_HLSLSV_GroupIndexAttr
#undef MX_EXIT_VISIT_HLSLSV_GroupIndexAttr
#undef MX_ENTER_VISIT_HLSLSV_DispatchThreadIDAttr
#undef MX_EXIT_VISIT_HLSLSV_DispatchThreadIDAttr
#undef MX_ENTER_VISIT_HIPManagedAttr
#undef MX_EXIT_VISIT_HIPManagedAttr
#undef MX_ENTER_VISIT_GuardedVarAttr
#undef MX_EXIT_VISIT_GuardedVarAttr
#undef MX_ENTER_VISIT_GuardedByAttr
#undef MX_EXIT_VISIT_GuardedByAttr
#undef MX_ENTER_VISIT_GNUInlineAttr
#undef MX_EXIT_VISIT_GNUInlineAttr
#undef MX_ENTER_VISIT_FunctionReturnThunksAttr
#undef MX_EXIT_VISIT_FunctionReturnThunksAttr
#undef MX_ENTER_VISIT_FormatAttr
#undef MX_EXIT_VISIT_FormatAttr
#undef MX_ENTER_VISIT_FormatArgAttr
#undef MX_EXIT_VISIT_FormatArgAttr
#undef MX_ENTER_VISIT_FlattenAttr
#undef MX_EXIT_VISIT_FlattenAttr
#undef MX_ENTER_VISIT_FlagEnumAttr
#undef MX_EXIT_VISIT_FlagEnumAttr
#undef MX_ENTER_VISIT_FinalAttr
#undef MX_EXIT_VISIT_FinalAttr
#undef MX_ENTER_VISIT_FastCallAttr
#undef MX_EXIT_VISIT_FastCallAttr
#undef MX_ENTER_VISIT_ExternalSourceSymbolAttr
#undef MX_EXIT_VISIT_ExternalSourceSymbolAttr
#undef MX_ENTER_VISIT_ExclusiveTrylockFunctionAttr
#undef MX_EXIT_VISIT_ExclusiveTrylockFunctionAttr
#undef MX_ENTER_VISIT_ExcludeFromExplicitInstantiationAttr
#undef MX_EXIT_VISIT_ExcludeFromExplicitInstantiationAttr
#undef MX_ENTER_VISIT_ErrorAttr
#undef MX_EXIT_VISIT_ErrorAttr
#undef MX_ENTER_VISIT_EnumExtensibilityAttr
#undef MX_EXIT_VISIT_EnumExtensibilityAttr
#undef MX_ENTER_VISIT_EnforceTCBLeafAttr
#undef MX_EXIT_VISIT_EnforceTCBLeafAttr
#undef MX_ENTER_VISIT_EnforceTCBAttr
#undef MX_EXIT_VISIT_EnforceTCBAttr
#undef MX_ENTER_VISIT_EnableIfAttr
#undef MX_EXIT_VISIT_EnableIfAttr
#undef MX_ENTER_VISIT_EmptyBasesAttr
#undef MX_EXIT_VISIT_EmptyBasesAttr
#undef MX_ENTER_VISIT_DisableTailCallsAttr
#undef MX_EXIT_VISIT_DisableTailCallsAttr
#undef MX_ENTER_VISIT_DisableSanitizerInstrumentationAttr
#undef MX_EXIT_VISIT_DisableSanitizerInstrumentationAttr
#undef MX_ENTER_VISIT_DiagnoseIfAttr
#undef MX_EXIT_VISIT_DiagnoseIfAttr
#undef MX_ENTER_VISIT_DiagnoseAsBuiltinAttr
#undef MX_EXIT_VISIT_DiagnoseAsBuiltinAttr
#undef MX_ENTER_VISIT_DestructorAttr
#undef MX_EXIT_VISIT_DestructorAttr
#undef MX_ENTER_VISIT_DeprecatedAttr
#undef MX_EXIT_VISIT_DeprecatedAttr
#undef MX_ENTER_VISIT_DeclOrStmtAttr
#undef MX_EXIT_VISIT_DeclOrStmtAttr
#undef MX_ENTER_VISIT_AlwaysInlineAttr
#undef MX_EXIT_VISIT_AlwaysInlineAttr
#undef MX_ENTER_VISIT_NoMergeAttr
#undef MX_EXIT_VISIT_NoMergeAttr
#undef MX_ENTER_VISIT_NoInlineAttr
#undef MX_EXIT_VISIT_NoInlineAttr
#undef MX_ENTER_VISIT_DLLImportStaticLocalAttr
#undef MX_EXIT_VISIT_DLLImportStaticLocalAttr
#undef MX_ENTER_VISIT_DLLImportAttr
#undef MX_EXIT_VISIT_DLLImportAttr
#undef MX_ENTER_VISIT_DLLExportStaticLocalAttr
#undef MX_EXIT_VISIT_DLLExportStaticLocalAttr
#undef MX_ENTER_VISIT_DLLExportAttr
#undef MX_EXIT_VISIT_DLLExportAttr
#undef MX_ENTER_VISIT_ConvergentAttr
#undef MX_EXIT_VISIT_ConvergentAttr
#undef MX_ENTER_VISIT_ConsumableSetOnReadAttr
#undef MX_EXIT_VISIT_ConsumableSetOnReadAttr
#undef MX_ENTER_VISIT_ConsumableAutoCastAttr
#undef MX_EXIT_VISIT_ConsumableAutoCastAttr
#undef MX_ENTER_VISIT_ConsumableAttr
#undef MX_EXIT_VISIT_ConsumableAttr
#undef MX_ENTER_VISIT_ConstructorAttr
#undef MX_EXIT_VISIT_ConstructorAttr
#undef MX_ENTER_VISIT_ConstInitAttr
#undef MX_EXIT_VISIT_ConstInitAttr
#undef MX_ENTER_VISIT_ConstAttr
#undef MX_EXIT_VISIT_ConstAttr
#undef MX_ENTER_VISIT_CommonAttr
#undef MX_EXIT_VISIT_CommonAttr
#undef MX_ENTER_VISIT_ColdAttr
#undef MX_EXIT_VISIT_ColdAttr
#undef MX_ENTER_VISIT_CodeSegAttr
#undef MX_EXIT_VISIT_CodeSegAttr
#undef MX_ENTER_VISIT_CmseNSEntryAttr
#undef MX_EXIT_VISIT_CmseNSEntryAttr
#undef MX_ENTER_VISIT_CleanupAttr
#undef MX_EXIT_VISIT_CleanupAttr
#undef MX_ENTER_VISIT_CapturedRecordAttr
#undef MX_EXIT_VISIT_CapturedRecordAttr
#undef MX_ENTER_VISIT_CapabilityAttr
#undef MX_EXIT_VISIT_CapabilityAttr
#undef MX_ENTER_VISIT_CallbackAttr
#undef MX_EXIT_VISIT_CallbackAttr
#undef MX_ENTER_VISIT_CallableWhenAttr
#undef MX_EXIT_VISIT_CallableWhenAttr
#undef MX_ENTER_VISIT_CXX11NoReturnAttr
#undef MX_EXIT_VISIT_CXX11NoReturnAttr
#undef MX_ENTER_VISIT_CUDASharedAttr
#undef MX_EXIT_VISIT_CUDASharedAttr
#undef MX_ENTER_VISIT_CUDALaunchBoundsAttr
#undef MX_EXIT_VISIT_CUDALaunchBoundsAttr
#undef MX_ENTER_VISIT_CUDAInvalidTargetAttr
#undef MX_EXIT_VISIT_CUDAInvalidTargetAttr
#undef MX_ENTER_VISIT_CUDAHostAttr
#undef MX_EXIT_VISIT_CUDAHostAttr
#undef MX_ENTER_VISIT_CUDAGlobalAttr
#undef MX_EXIT_VISIT_CUDAGlobalAttr
#undef MX_ENTER_VISIT_CUDADeviceBuiltinTextureTypeAttr
#undef MX_EXIT_VISIT_CUDADeviceBuiltinTextureTypeAttr
#undef MX_ENTER_VISIT_CUDADeviceBuiltinSurfaceTypeAttr
#undef MX_EXIT_VISIT_CUDADeviceBuiltinSurfaceTypeAttr
#undef MX_ENTER_VISIT_CUDADeviceAttr
#undef MX_EXIT_VISIT_CUDADeviceAttr
#undef MX_ENTER_VISIT_CUDAConstantAttr
#undef MX_EXIT_VISIT_CUDAConstantAttr
#undef MX_ENTER_VISIT_CPUSpecificAttr
#undef MX_EXIT_VISIT_CPUSpecificAttr
#undef MX_ENTER_VISIT_CPUDispatchAttr
#undef MX_EXIT_VISIT_CPUDispatchAttr
#undef MX_ENTER_VISIT_CFUnknownTransferAttr
#undef MX_EXIT_VISIT_CFUnknownTransferAttr
#undef MX_ENTER_VISIT_CFReturnsRetainedAttr
#undef MX_EXIT_VISIT_CFReturnsRetainedAttr
#undef MX_ENTER_VISIT_CFReturnsNotRetainedAttr
#undef MX_EXIT_VISIT_CFReturnsNotRetainedAttr
#undef MX_ENTER_VISIT_CFICanonicalJumpTableAttr
#undef MX_EXIT_VISIT_CFICanonicalJumpTableAttr
#undef MX_ENTER_VISIT_CFGuardAttr
#undef MX_EXIT_VISIT_CFGuardAttr
#undef MX_ENTER_VISIT_CFAuditedTransferAttr
#undef MX_EXIT_VISIT_CFAuditedTransferAttr
#undef MX_ENTER_VISIT_CDeclAttr
#undef MX_EXIT_VISIT_CDeclAttr
#undef MX_ENTER_VISIT_C11NoReturnAttr
#undef MX_EXIT_VISIT_C11NoReturnAttr
#undef MX_ENTER_VISIT_BuiltinAttr
#undef MX_EXIT_VISIT_BuiltinAttr
#undef MX_ENTER_VISIT_BlocksAttr
#undef MX_EXIT_VISIT_BlocksAttr
#undef MX_ENTER_VISIT_BTFDeclTagAttr
#undef MX_EXIT_VISIT_BTFDeclTagAttr
#undef MX_ENTER_VISIT_BPFPreserveAccessIndexAttr
#undef MX_EXIT_VISIT_BPFPreserveAccessIndexAttr
#undef MX_ENTER_VISIT_AvailableOnlyInDefaultEvalMethodAttr
#undef MX_EXIT_VISIT_AvailableOnlyInDefaultEvalMethodAttr
#undef MX_ENTER_VISIT_AvailabilityAttr
#undef MX_EXIT_VISIT_AvailabilityAttr
#undef MX_ENTER_VISIT_AssumptionAttr
#undef MX_EXIT_VISIT_AssumptionAttr
#undef MX_ENTER_VISIT_AssumeAlignedAttr
#undef MX_EXIT_VISIT_AssumeAlignedAttr
#undef MX_ENTER_VISIT_AssertSharedLockAttr
#undef MX_EXIT_VISIT_AssertSharedLockAttr
#undef MX_ENTER_VISIT_AssertExclusiveLockAttr
#undef MX_EXIT_VISIT_AssertExclusiveLockAttr
#undef MX_ENTER_VISIT_AssertCapabilityAttr
#undef MX_EXIT_VISIT_AssertCapabilityAttr
#undef MX_ENTER_VISIT_AsmLabelAttr
#undef MX_EXIT_VISIT_AsmLabelAttr
#undef MX_ENTER_VISIT_ArtificialAttr
#undef MX_EXIT_VISIT_ArtificialAttr
#undef MX_ENTER_VISIT_ArmBuiltinAliasAttr
#undef MX_EXIT_VISIT_ArmBuiltinAliasAttr
#undef MX_ENTER_VISIT_ArgumentWithTypeTagAttr
#undef MX_EXIT_VISIT_ArgumentWithTypeTagAttr
#undef MX_ENTER_VISIT_ArcWeakrefUnavailableAttr
#undef MX_EXIT_VISIT_ArcWeakrefUnavailableAttr
#undef MX_ENTER_VISIT_AnyX86NoCfCheckAttr
#undef MX_EXIT_VISIT_AnyX86NoCfCheckAttr
#undef MX_ENTER_VISIT_AnyX86NoCallerSavedRegistersAttr
#undef MX_EXIT_VISIT_AnyX86NoCallerSavedRegistersAttr
#undef MX_ENTER_VISIT_AnyX86InterruptAttr
#undef MX_EXIT_VISIT_AnyX86InterruptAttr
#undef MX_ENTER_VISIT_AnalyzerNoReturnAttr
#undef MX_EXIT_VISIT_AnalyzerNoReturnAttr
#undef MX_ENTER_VISIT_AlwaysDestroyAttr
#undef MX_EXIT_VISIT_AlwaysDestroyAttr
#undef MX_ENTER_VISIT_AllocSizeAttr
#undef MX_EXIT_VISIT_AllocSizeAttr
#undef MX_ENTER_VISIT_AllocAlignAttr
#undef MX_EXIT_VISIT_AllocAlignAttr
#undef MX_ENTER_VISIT_AlignedAttr
#undef MX_EXIT_VISIT_AlignedAttr
#undef MX_ENTER_VISIT_AlignNaturalAttr
#undef MX_EXIT_VISIT_AlignNaturalAttr
#undef MX_ENTER_VISIT_AlignMac68kAttr
#undef MX_EXIT_VISIT_AlignMac68kAttr
#undef MX_ENTER_VISIT_AcquiredBeforeAttr
#undef MX_EXIT_VISIT_AcquiredBeforeAttr
#undef MX_ENTER_VISIT_AcquiredAfterAttr
#undef MX_EXIT_VISIT_AcquiredAfterAttr
#undef MX_ENTER_VISIT_AcquireHandleAttr
#undef MX_EXIT_VISIT_AcquireHandleAttr
#undef MX_ENTER_VISIT_AcquireCapabilityAttr
#undef MX_EXIT_VISIT_AcquireCapabilityAttr
#undef MX_ENTER_VISIT_AVRSignalAttr
#undef MX_EXIT_VISIT_AVRSignalAttr
#undef MX_ENTER_VISIT_AVRInterruptAttr
#undef MX_EXIT_VISIT_AVRInterruptAttr
#undef MX_ENTER_VISIT_ARMInterruptAttr
#undef MX_EXIT_VISIT_ARMInterruptAttr
#undef MX_ENTER_VISIT_AMDGPUWavesPerEUAttr
#undef MX_EXIT_VISIT_AMDGPUWavesPerEUAttr
#undef MX_ENTER_VISIT_AMDGPUNumVGPRAttr
#undef MX_EXIT_VISIT_AMDGPUNumVGPRAttr
#undef MX_ENTER_VISIT_AMDGPUNumSGPRAttr
#undef MX_EXIT_VISIT_AMDGPUNumSGPRAttr
#undef MX_ENTER_VISIT_AMDGPUKernelCallAttr
#undef MX_EXIT_VISIT_AMDGPUKernelCallAttr
#undef MX_ENTER_VISIT_AMDGPUFlatWorkGroupSizeAttr
#undef MX_EXIT_VISIT_AMDGPUFlatWorkGroupSizeAttr
#undef MX_ENTER_VISIT_AArch64VectorPcsAttr
#undef MX_EXIT_VISIT_AArch64VectorPcsAttr
#undef MX_ENTER_VISIT_AArch64SVEPcsAttr
#undef MX_EXIT_VISIT_AArch64SVEPcsAttr
#undef MX_ENTER_VISIT_ZeroCallUsedRegsAttr
#undef MX_EXIT_VISIT_ZeroCallUsedRegsAttr
#undef MX_ENTER_VISIT_XRayLogArgsAttr
#undef MX_EXIT_VISIT_XRayLogArgsAttr
#undef MX_ENTER_VISIT_XRayInstrumentAttr
#undef MX_EXIT_VISIT_XRayInstrumentAttr
#undef MX_ENTER_VISIT_X86ForceAlignArgPointerAttr
#undef MX_EXIT_VISIT_X86ForceAlignArgPointerAttr
#undef MX_ENTER_VISIT_WorkGroupSizeHintAttr
#undef MX_EXIT_VISIT_WorkGroupSizeHintAttr
#undef MX_ENTER_VISIT_WebAssemblyImportNameAttr
#undef MX_EXIT_VISIT_WebAssemblyImportNameAttr
#undef MX_ENTER_VISIT_WebAssemblyImportModuleAttr
#undef MX_EXIT_VISIT_WebAssemblyImportModuleAttr
#undef MX_ENTER_VISIT_WebAssemblyExportNameAttr
#undef MX_EXIT_VISIT_WebAssemblyExportNameAttr
#undef MX_ENTER_VISIT_WeakRefAttr
#undef MX_EXIT_VISIT_WeakRefAttr
#undef MX_ENTER_VISIT_WeakImportAttr
#undef MX_EXIT_VISIT_WeakImportAttr
#undef MX_ENTER_VISIT_WeakAttr
#undef MX_EXIT_VISIT_WeakAttr
#undef MX_ENTER_VISIT_WarnUnusedResultAttr
#undef MX_EXIT_VISIT_WarnUnusedResultAttr
#undef MX_ENTER_VISIT_WarnUnusedAttr
#undef MX_EXIT_VISIT_WarnUnusedAttr
#undef MX_ENTER_VISIT_VisibilityAttr
#undef MX_EXIT_VISIT_VisibilityAttr
#undef MX_ENTER_VISIT_VectorCallAttr
#undef MX_EXIT_VISIT_VectorCallAttr
#undef MX_ENTER_VISIT_VecTypeHintAttr
#undef MX_EXIT_VISIT_VecTypeHintAttr
#undef MX_ENTER_VISIT_VecReturnAttr
#undef MX_EXIT_VISIT_VecReturnAttr
#undef MX_ENTER_VISIT_UuidAttr
#undef MX_EXIT_VISIT_UuidAttr
#undef MX_ENTER_VISIT_UsingIfExistsAttr
#undef MX_EXIT_VISIT_UsingIfExistsAttr
#undef MX_ENTER_VISIT_UsedAttr
#undef MX_EXIT_VISIT_UsedAttr
#undef MX_ENTER_VISIT_UnusedAttr
#undef MX_EXIT_VISIT_UnusedAttr
#undef MX_ENTER_VISIT_UnsafeBufferUsageAttr
#undef MX_EXIT_VISIT_UnsafeBufferUsageAttr
#undef MX_ENTER_VISIT_UninitializedAttr
#undef MX_EXIT_VISIT_UninitializedAttr
#undef MX_ENTER_VISIT_UnavailableAttr
#undef MX_EXIT_VISIT_UnavailableAttr
#undef MX_ENTER_VISIT_TypeVisibilityAttr
#undef MX_EXIT_VISIT_TypeVisibilityAttr
#undef MX_ENTER_VISIT_TypeTagForDatatypeAttr
#undef MX_EXIT_VISIT_TypeTagForDatatypeAttr
#undef MX_ENTER_VISIT_TryAcquireCapabilityAttr
#undef MX_EXIT_VISIT_TryAcquireCapabilityAttr
#undef MX_ENTER_VISIT_TrivialABIAttr
#undef MX_EXIT_VISIT_TrivialABIAttr
#undef MX_ENTER_VISIT_TransparentUnionAttr
#undef MX_EXIT_VISIT_TransparentUnionAttr
#undef MX_ENTER_VISIT_ThisCallAttr
#undef MX_EXIT_VISIT_ThisCallAttr
#undef MX_ENTER_VISIT_TestTypestateAttr
#undef MX_EXIT_VISIT_TestTypestateAttr
#undef MX_ENTER_VISIT_TargetVersionAttr
#undef MX_EXIT_VISIT_TargetVersionAttr
#undef MX_ENTER_VISIT_TargetClonesAttr
#undef MX_EXIT_VISIT_TargetClonesAttr
#undef MX_ENTER_VISIT_TargetAttr
#undef MX_EXIT_VISIT_TargetAttr
#undef MX_ENTER_VISIT_TLSModelAttr
#undef MX_EXIT_VISIT_TLSModelAttr
#undef MX_ENTER_VISIT_SysVABIAttr
#undef MX_EXIT_VISIT_SysVABIAttr
#undef MX_ENTER_VISIT_SwiftPrivateAttr
#undef MX_EXIT_VISIT_SwiftPrivateAttr
#undef MX_ENTER_VISIT_SwiftNewTypeAttr
#undef MX_EXIT_VISIT_SwiftNewTypeAttr
#undef MX_ENTER_VISIT_SwiftNameAttr
#undef MX_EXIT_VISIT_SwiftNameAttr
#undef MX_ENTER_VISIT_SwiftErrorAttr
#undef MX_EXIT_VISIT_SwiftErrorAttr
#undef MX_ENTER_VISIT_SwiftCallAttr
#undef MX_EXIT_VISIT_SwiftCallAttr
#undef MX_ENTER_VISIT_SwiftBridgedTypedefAttr
#undef MX_EXIT_VISIT_SwiftBridgedTypedefAttr
#undef MX_ENTER_VISIT_SwiftBridgeAttr
#undef MX_EXIT_VISIT_SwiftBridgeAttr
#undef MX_ENTER_VISIT_SwiftAttrAttr
#undef MX_EXIT_VISIT_SwiftAttrAttr
#undef MX_ENTER_VISIT_SwiftAsyncNameAttr
#undef MX_EXIT_VISIT_SwiftAsyncNameAttr
#undef MX_ENTER_VISIT_SwiftAsyncErrorAttr
#undef MX_EXIT_VISIT_SwiftAsyncErrorAttr
#undef MX_ENTER_VISIT_SwiftAsyncCallAttr
#undef MX_EXIT_VISIT_SwiftAsyncCallAttr
#undef MX_ENTER_VISIT_SwiftAsyncAttr
#undef MX_EXIT_VISIT_SwiftAsyncAttr
#undef MX_ENTER_VISIT_StrictGuardStackCheckAttr
#undef MX_EXIT_VISIT_StrictGuardStackCheckAttr
#undef MX_ENTER_VISIT_StrictFPAttr
#undef MX_EXIT_VISIT_StrictFPAttr
#undef MX_ENTER_VISIT_StdCallAttr
#undef MX_EXIT_VISIT_StdCallAttr
#undef MX_ENTER_VISIT_StandaloneDebugAttr
#undef MX_EXIT_VISIT_StandaloneDebugAttr
#undef MX_ENTER_VISIT_SpeculativeLoadHardeningAttr
#undef MX_EXIT_VISIT_SpeculativeLoadHardeningAttr
#undef MX_ENTER_VISIT_SharedTrylockFunctionAttr
#undef MX_EXIT_VISIT_SharedTrylockFunctionAttr
#undef MX_ENTER_VISIT_SetTypestateAttr
#undef MX_EXIT_VISIT_SetTypestateAttr
#undef MX_ENTER_VISIT_SentinelAttr
#undef MX_EXIT_VISIT_SentinelAttr
#undef MX_ENTER_VISIT_SelectAnyAttr
#undef MX_EXIT_VISIT_SelectAnyAttr
#undef MX_ENTER_VISIT_SectionAttr
#undef MX_EXIT_VISIT_SectionAttr
#undef MX_ENTER_VISIT_ScopedLockableAttr
#undef MX_EXIT_VISIT_ScopedLockableAttr
#undef MX_ENTER_VISIT_SYCLSpecialClassAttr
#undef MX_EXIT_VISIT_SYCLSpecialClassAttr
#undef MX_ENTER_VISIT_SYCLKernelAttr
#undef MX_EXIT_VISIT_SYCLKernelAttr
#undef MX_ENTER_VISIT_ReturnsTwiceAttr
#undef MX_EXIT_VISIT_ReturnsTwiceAttr
#undef MX_ENTER_VISIT_ReturnsNonNullAttr
#undef MX_EXIT_VISIT_ReturnsNonNullAttr
#undef MX_ENTER_VISIT_ReturnTypestateAttr
#undef MX_EXIT_VISIT_ReturnTypestateAttr
#undef MX_ENTER_VISIT_RetainAttr
#undef MX_EXIT_VISIT_RetainAttr
#undef MX_ENTER_VISIT_RestrictAttr
#undef MX_EXIT_VISIT_RestrictAttr
#undef MX_ENTER_VISIT_RequiresCapabilityAttr
#undef MX_EXIT_VISIT_RequiresCapabilityAttr
#undef MX_ENTER_VISIT_ReqdWorkGroupSizeAttr
#undef MX_EXIT_VISIT_ReqdWorkGroupSizeAttr
#undef MX_ENTER_VISIT_ReleaseCapabilityAttr
#undef MX_EXIT_VISIT_ReleaseCapabilityAttr
#undef MX_ENTER_VISIT_ReinitializesAttr
#undef MX_EXIT_VISIT_ReinitializesAttr
#undef MX_ENTER_VISIT_RegCallAttr
#undef MX_EXIT_VISIT_RegCallAttr
#undef MX_ENTER_VISIT_ReadOnlyPlacementAttr
#undef MX_EXIT_VISIT_ReadOnlyPlacementAttr
#undef MX_ENTER_VISIT_RandomizeLayoutAttr
#undef MX_EXIT_VISIT_RandomizeLayoutAttr
#undef MX_ENTER_VISIT_RISCVInterruptAttr
#undef MX_EXIT_VISIT_RISCVInterruptAttr
#undef MX_ENTER_VISIT_PureAttr
#undef MX_EXIT_VISIT_PureAttr
#undef MX_ENTER_VISIT_PtGuardedVarAttr
#undef MX_EXIT_VISIT_PtGuardedVarAttr
#undef MX_ENTER_VISIT_PtGuardedByAttr
#undef MX_EXIT_VISIT_PtGuardedByAttr
#undef MX_ENTER_VISIT_PreserveMostAttr
#undef MX_EXIT_VISIT_PreserveMostAttr
#undef MX_ENTER_VISIT_PreserveAllAttr
#undef MX_EXIT_VISIT_PreserveAllAttr
#undef MX_ENTER_VISIT_PreferredNameAttr
#undef MX_EXIT_VISIT_PreferredNameAttr
#undef MX_ENTER_VISIT_PragmaClangTextSectionAttr
#undef MX_EXIT_VISIT_PragmaClangTextSectionAttr
#undef MX_ENTER_VISIT_PragmaClangRodataSectionAttr
#undef MX_EXIT_VISIT_PragmaClangRodataSectionAttr
#undef MX_ENTER_VISIT_PragmaClangRelroSectionAttr
#undef MX_EXIT_VISIT_PragmaClangRelroSectionAttr
#undef MX_ENTER_VISIT_PragmaClangDataSectionAttr
#undef MX_EXIT_VISIT_PragmaClangDataSectionAttr
#undef MX_ENTER_VISIT_PragmaClangBSSSectionAttr
#undef MX_EXIT_VISIT_PragmaClangBSSSectionAttr
#undef MX_ENTER_VISIT_PointerAttr
#undef MX_EXIT_VISIT_PointerAttr
#undef MX_ENTER_VISIT_PcsAttr
#undef MX_EXIT_VISIT_PcsAttr
#undef MX_ENTER_VISIT_PatchableFunctionEntryAttr
#undef MX_EXIT_VISIT_PatchableFunctionEntryAttr
#undef MX_ENTER_VISIT_PascalAttr
#undef MX_EXIT_VISIT_PascalAttr
#undef MX_ENTER_VISIT_ParamTypestateAttr
#undef MX_EXIT_VISIT_ParamTypestateAttr
#undef MX_ENTER_VISIT_PackedAttr
#undef MX_EXIT_VISIT_PackedAttr
#undef MX_ENTER_VISIT_OwnershipAttr
#undef MX_EXIT_VISIT_OwnershipAttr
#undef MX_ENTER_VISIT_OwnerAttr
#undef MX_EXIT_VISIT_OwnerAttr
#undef MX_ENTER_VISIT_OverrideAttr
#undef MX_EXIT_VISIT_OverrideAttr
#undef MX_ENTER_VISIT_OptimizeNoneAttr
#undef MX_EXIT_VISIT_OptimizeNoneAttr
#undef MX_ENTER_VISIT_OpenCLKernelAttr
#undef MX_EXIT_VISIT_OpenCLKernelAttr
#undef MX_ENTER_VISIT_OpenCLIntelReqdSubGroupSizeAttr
#undef MX_EXIT_VISIT_OpenCLIntelReqdSubGroupSizeAttr
#undef MX_ENTER_VISIT_ObjCSubclassingRestrictedAttr
#undef MX_EXIT_VISIT_ObjCSubclassingRestrictedAttr
#undef MX_ENTER_VISIT_ObjCRootClassAttr
#undef MX_EXIT_VISIT_ObjCRootClassAttr
#undef MX_ENTER_VISIT_ObjCReturnsInnerPointerAttr
#undef MX_EXIT_VISIT_ObjCReturnsInnerPointerAttr
#undef MX_ENTER_VISIT_ObjCRequiresSuperAttr
#undef MX_EXIT_VISIT_ObjCRequiresSuperAttr
#undef MX_ENTER_VISIT_ObjCRequiresPropertyDefsAttr
#undef MX_EXIT_VISIT_ObjCRequiresPropertyDefsAttr
#undef MX_ENTER_VISIT_ObjCPreciseLifetimeAttr
#undef MX_EXIT_VISIT_ObjCPreciseLifetimeAttr
#undef MX_ENTER_VISIT_ObjCOwnershipAttr
#undef MX_EXIT_VISIT_ObjCOwnershipAttr
#undef MX_ENTER_VISIT_ObjCNSObjectAttr
#undef MX_EXIT_VISIT_ObjCNSObjectAttr
#undef MX_ENTER_VISIT_ObjCMethodFamilyAttr
#undef MX_EXIT_VISIT_ObjCMethodFamilyAttr
#undef MX_ENTER_VISIT_ObjCIndependentClassAttr
#undef MX_EXIT_VISIT_ObjCIndependentClassAttr
#undef MX_ENTER_VISIT_ObjCExternallyRetainedAttr
#undef MX_EXIT_VISIT_ObjCExternallyRetainedAttr
#undef MX_ENTER_VISIT_ObjCExplicitProtocolImplAttr
#undef MX_EXIT_VISIT_ObjCExplicitProtocolImplAttr
#undef MX_ENTER_VISIT_ObjCExceptionAttr
#undef MX_EXIT_VISIT_ObjCExceptionAttr
#undef MX_ENTER_VISIT_ObjCBridgeRelatedAttr
#undef MX_EXIT_VISIT_ObjCBridgeRelatedAttr
#undef MX_ENTER_VISIT_ObjCBridgeMutableAttr
#undef MX_EXIT_VISIT_ObjCBridgeMutableAttr
#undef MX_ENTER_VISIT_ObjCBridgeAttr
#undef MX_EXIT_VISIT_ObjCBridgeAttr
#undef MX_ENTER_VISIT_OSReturnsRetainedOnZeroAttr
#undef MX_EXIT_VISIT_OSReturnsRetainedOnZeroAttr
#undef MX_ENTER_VISIT_OSReturnsRetainedOnNonZeroAttr
#undef MX_EXIT_VISIT_OSReturnsRetainedOnNonZeroAttr
#undef MX_ENTER_VISIT_OSReturnsRetainedAttr
#undef MX_EXIT_VISIT_OSReturnsRetainedAttr
#undef MX_ENTER_VISIT_OSReturnsNotRetainedAttr
#undef MX_EXIT_VISIT_OSReturnsNotRetainedAttr
#undef MX_ENTER_VISIT_OSConsumesThisAttr
#undef MX_EXIT_VISIT_OSConsumesThisAttr
#undef MX_ENTER_VISIT_OMPThreadPrivateDeclAttr
#undef MX_EXIT_VISIT_OMPThreadPrivateDeclAttr
#undef MX_ENTER_VISIT_OMPDeclareVariantAttr
#undef MX_EXIT_VISIT_OMPDeclareVariantAttr
#undef MX_ENTER_VISIT_OMPDeclareTargetDeclAttr
#undef MX_EXIT_VISIT_OMPDeclareTargetDeclAttr
#undef MX_ENTER_VISIT_OMPCaptureNoInitAttr
#undef MX_EXIT_VISIT_OMPCaptureNoInitAttr
#undef MX_ENTER_VISIT_OMPAllocateDeclAttr
#undef MX_EXIT_VISIT_OMPAllocateDeclAttr
#undef MX_ENTER_VISIT_NotTailCalledAttr
#undef MX_EXIT_VISIT_NotTailCalledAttr
#undef MX_ENTER_VISIT_NoUwtableAttr
#undef MX_EXIT_VISIT_NoUwtableAttr
#undef MX_ENTER_VISIT_NoUniqueAddressAttr
#undef MX_EXIT_VISIT_NoUniqueAddressAttr
#undef MX_ENTER_VISIT_NoThrowAttr
#undef MX_EXIT_VISIT_NoThrowAttr
#undef MX_ENTER_VISIT_NoThreadSafetyAnalysisAttr
#undef MX_EXIT_VISIT_NoThreadSafetyAnalysisAttr
#undef MX_ENTER_VISIT_NoStackProtectorAttr
#undef MX_EXIT_VISIT_NoStackProtectorAttr
#undef MX_ENTER_VISIT_NoSplitStackAttr
#undef MX_EXIT_VISIT_NoSplitStackAttr
#undef MX_ENTER_VISIT_NoSpeculativeLoadHardeningAttr
#undef MX_EXIT_VISIT_NoSpeculativeLoadHardeningAttr
#undef MX_ENTER_VISIT_NoSanitizeAttr
#undef MX_EXIT_VISIT_NoSanitizeAttr
#undef MX_ENTER_VISIT_NoReturnAttr
#undef MX_EXIT_VISIT_NoReturnAttr
#undef MX_ENTER_VISIT_NoRandomizeLayoutAttr
#undef MX_EXIT_VISIT_NoRandomizeLayoutAttr
#undef MX_ENTER_VISIT_NoProfileFunctionAttr
#undef MX_EXIT_VISIT_NoProfileFunctionAttr
#undef MX_ENTER_VISIT_NoMips16Attr
#undef MX_EXIT_VISIT_NoMips16Attr
#undef MX_ENTER_VISIT_NoMicroMipsAttr
#undef MX_EXIT_VISIT_NoMicroMipsAttr
#undef MX_ENTER_VISIT_NoInstrumentFunctionAttr
#undef MX_EXIT_VISIT_NoInstrumentFunctionAttr
#undef MX_ENTER_VISIT_NoDuplicateAttr
#undef MX_EXIT_VISIT_NoDuplicateAttr
#undef MX_ENTER_VISIT_NoDestroyAttr
#undef MX_EXIT_VISIT_NoDestroyAttr
#undef MX_ENTER_VISIT_NoDebugAttr
#undef MX_EXIT_VISIT_NoDebugAttr
#undef MX_ENTER_VISIT_NoCommonAttr
#undef MX_EXIT_VISIT_NoCommonAttr
#undef MX_ENTER_VISIT_NoAliasAttr
#undef MX_EXIT_VISIT_NoAliasAttr
#undef MX_ENTER_VISIT_NakedAttr
#undef MX_EXIT_VISIT_NakedAttr
#undef MX_ENTER_VISIT_NVPTXKernelAttr
#undef MX_EXIT_VISIT_NVPTXKernelAttr
#undef MX_ENTER_VISIT_NSReturnsRetainedAttr
#undef MX_EXIT_VISIT_NSReturnsRetainedAttr
#undef MX_ENTER_VISIT_NSReturnsNotRetainedAttr
#undef MX_EXIT_VISIT_NSReturnsNotRetainedAttr
#undef MX_ENTER_VISIT_NSReturnsAutoreleasedAttr
#undef MX_EXIT_VISIT_NSReturnsAutoreleasedAttr
#undef MX_ENTER_VISIT_NSErrorDomainAttr
#undef MX_EXIT_VISIT_NSErrorDomainAttr
#undef MX_ENTER_VISIT_NSConsumesSelfAttr
#undef MX_EXIT_VISIT_NSConsumesSelfAttr
#undef MX_ENTER_VISIT_MipsShortCallAttr
#undef MX_EXIT_VISIT_MipsShortCallAttr
#undef MX_ENTER_VISIT_MipsLongCallAttr
#undef MX_EXIT_VISIT_MipsLongCallAttr
#undef MX_ENTER_VISIT_MipsInterruptAttr
#undef MX_EXIT_VISIT_MipsInterruptAttr
#undef MX_ENTER_VISIT_Mips16Attr
#undef MX_EXIT_VISIT_Mips16Attr
#undef MX_ENTER_VISIT_MinVectorWidthAttr
#undef MX_EXIT_VISIT_MinVectorWidthAttr
#undef MX_ENTER_VISIT_MinSizeAttr
#undef MX_EXIT_VISIT_MinSizeAttr
#undef MX_ENTER_VISIT_MicroMipsAttr
#undef MX_EXIT_VISIT_MicroMipsAttr
#undef MX_ENTER_VISIT_MaybeUndefAttr
#undef MX_EXIT_VISIT_MaybeUndefAttr
#undef MX_ENTER_VISIT_MayAliasAttr
#undef MX_EXIT_VISIT_MayAliasAttr
#undef MX_ENTER_VISIT_MaxFieldAlignmentAttr
#undef MX_EXIT_VISIT_MaxFieldAlignmentAttr
#undef MX_ENTER_VISIT_MSVtorDispAttr
#undef MX_EXIT_VISIT_MSVtorDispAttr
#undef MX_ENTER_VISIT_MSStructAttr
#undef MX_EXIT_VISIT_MSStructAttr
#undef MX_ENTER_VISIT_MSP430InterruptAttr
#undef MX_EXIT_VISIT_MSP430InterruptAttr
#undef MX_ENTER_VISIT_MSNoVTableAttr
#undef MX_EXIT_VISIT_MSNoVTableAttr
#undef MX_ENTER_VISIT_MSInheritanceAttr
#undef MX_EXIT_VISIT_MSInheritanceAttr
#undef MX_ENTER_VISIT_MSAllocatorAttr
#undef MX_EXIT_VISIT_MSAllocatorAttr
#undef MX_ENTER_VISIT_MSABIAttr
#undef MX_EXIT_VISIT_MSABIAttr
#undef MX_ENTER_VISIT_MIGServerRoutineAttr
#undef MX_EXIT_VISIT_MIGServerRoutineAttr
#undef MX_ENTER_VISIT_M68kInterruptAttr
#undef MX_EXIT_VISIT_M68kInterruptAttr
#undef MX_ENTER_VISIT_LocksExcludedAttr
#undef MX_EXIT_VISIT_LocksExcludedAttr
#undef MX_ENTER_VISIT_LockReturnedAttr
#undef MX_EXIT_VISIT_LockReturnedAttr
#undef MX_ENTER_VISIT_LifetimeBoundAttr
#undef MX_EXIT_VISIT_LifetimeBoundAttr
#undef MX_ENTER_VISIT_LeafAttr
#undef MX_EXIT_VISIT_LeafAttr
#undef MX_ENTER_VISIT_LayoutVersionAttr
#undef MX_EXIT_VISIT_LayoutVersionAttr
#undef MX_ENTER_VISIT_LTOVisibilityPublicAttr
#undef MX_EXIT_VISIT_LTOVisibilityPublicAttr
#undef MX_ENTER_VISIT_InternalLinkageAttr
#undef MX_EXIT_VISIT_InternalLinkageAttr
#undef MX_ENTER_VISIT_IntelOclBiccAttr
#undef MX_EXIT_VISIT_IntelOclBiccAttr
#undef MX_ENTER_VISIT_InitPriorityAttr
#undef MX_EXIT_VISIT_InitPriorityAttr
#undef MX_ENTER_VISIT_InheritableParamAttr
#undef MX_EXIT_VISIT_InheritableParamAttr
#undef MX_ENTER_VISIT_CarriesDependencyAttr
#undef MX_EXIT_VISIT_CarriesDependencyAttr
#undef MX_ENTER_VISIT_CFConsumedAttr
#undef MX_EXIT_VISIT_CFConsumedAttr
#undef MX_ENTER_VISIT_AnnotateAttr
#undef MX_EXIT_VISIT_AnnotateAttr
#undef MX_ENTER_VISIT_UseHandleAttr
#undef MX_EXIT_VISIT_UseHandleAttr
#undef MX_ENTER_VISIT_ReleaseHandleAttr
#undef MX_EXIT_VISIT_ReleaseHandleAttr
#undef MX_ENTER_VISIT_PassObjectSizeAttr
#undef MX_EXIT_VISIT_PassObjectSizeAttr
#undef MX_ENTER_VISIT_ParameterABIAttr
#undef MX_EXIT_VISIT_ParameterABIAttr
#undef MX_ENTER_VISIT_SwiftIndirectResultAttr
#undef MX_EXIT_VISIT_SwiftIndirectResultAttr
#undef MX_ENTER_VISIT_SwiftErrorResultAttr
#undef MX_EXIT_VISIT_SwiftErrorResultAttr
#undef MX_ENTER_VISIT_SwiftContextAttr
#undef MX_EXIT_VISIT_SwiftContextAttr
#undef MX_ENTER_VISIT_SwiftAsyncContextAttr
#undef MX_EXIT_VISIT_SwiftAsyncContextAttr
#undef MX_ENTER_VISIT_OSConsumedAttr
#undef MX_EXIT_VISIT_OSConsumedAttr
#undef MX_ENTER_VISIT_NonNullAttr
#undef MX_EXIT_VISIT_NonNullAttr
#undef MX_ENTER_VISIT_NSConsumedAttr
#undef MX_EXIT_VISIT_NSConsumedAttr
#undef MX_ENTER_VISIT_IFuncAttr
#undef MX_EXIT_VISIT_IFuncAttr
#undef MX_ENTER_VISIT_CalledOnceAttr
#undef MX_EXIT_VISIT_CalledOnceAttr
#undef MX_ENTER_VISIT_BuiltinAliasAttr
#undef MX_EXIT_VISIT_BuiltinAliasAttr
#undef MX_ENTER_VISIT_Type
#undef MX_EXIT_VISIT_Type
#undef MX_ENTER_VISIT_TemplateTypeParmType
#undef MX_EXIT_VISIT_TemplateTypeParmType
#undef MX_ENTER_VISIT_TemplateSpecializationType
#undef MX_EXIT_VISIT_TemplateSpecializationType
#undef MX_ENTER_VISIT_TagType
#undef MX_EXIT_VISIT_TagType
#undef MX_ENTER_VISIT_RecordType
#undef MX_EXIT_VISIT_RecordType
#undef MX_ENTER_VISIT_EnumType
#undef MX_EXIT_VISIT_EnumType
#undef MX_ENTER_VISIT_SubstTemplateTypeParmType
#undef MX_EXIT_VISIT_SubstTemplateTypeParmType
#undef MX_ENTER_VISIT_SubstTemplateTypeParmPackType
#undef MX_EXIT_VISIT_SubstTemplateTypeParmPackType
#undef MX_ENTER_VISIT_ReferenceType
#undef MX_EXIT_VISIT_ReferenceType
#undef MX_ENTER_VISIT_RValueReferenceType
#undef MX_EXIT_VISIT_RValueReferenceType
#undef MX_ENTER_VISIT_LValueReferenceType
#undef MX_EXIT_VISIT_LValueReferenceType
#undef MX_ENTER_VISIT_QualifiedType
#undef MX_EXIT_VISIT_QualifiedType
#undef MX_ENTER_VISIT_PointerType
#undef MX_EXIT_VISIT_PointerType
#undef MX_ENTER_VISIT_PipeType
#undef MX_EXIT_VISIT_PipeType
#undef MX_ENTER_VISIT_ParenType
#undef MX_EXIT_VISIT_ParenType
#undef MX_ENTER_VISIT_PackExpansionType
#undef MX_EXIT_VISIT_PackExpansionType
#undef MX_ENTER_VISIT_ObjCTypeParamType
#undef MX_EXIT_VISIT_ObjCTypeParamType
#undef MX_ENTER_VISIT_ObjCObjectType
#undef MX_EXIT_VISIT_ObjCObjectType
#undef MX_ENTER_VISIT_ObjCInterfaceType
#undef MX_EXIT_VISIT_ObjCInterfaceType
#undef MX_ENTER_VISIT_ObjCObjectPointerType
#undef MX_EXIT_VISIT_ObjCObjectPointerType
#undef MX_ENTER_VISIT_MemberPointerType
#undef MX_EXIT_VISIT_MemberPointerType
#undef MX_ENTER_VISIT_MatrixType
#undef MX_EXIT_VISIT_MatrixType
#undef MX_ENTER_VISIT_DependentSizedMatrixType
#undef MX_EXIT_VISIT_DependentSizedMatrixType
#undef MX_ENTER_VISIT_ConstantMatrixType
#undef MX_EXIT_VISIT_ConstantMatrixType
#undef MX_ENTER_VISIT_MacroQualifiedType
#undef MX_EXIT_VISIT_MacroQualifiedType
#undef MX_ENTER_VISIT_InjectedClassNameType
#undef MX_EXIT_VISIT_InjectedClassNameType
#undef MX_ENTER_VISIT_FunctionType
#undef MX_EXIT_VISIT_FunctionType
#undef MX_ENTER_VISIT_FunctionProtoType
#undef MX_EXIT_VISIT_FunctionProtoType
#undef MX_ENTER_VISIT_FunctionNoProtoType
#undef MX_EXIT_VISIT_FunctionNoProtoType
#undef MX_ENTER_VISIT_DependentVectorType
#undef MX_EXIT_VISIT_DependentVectorType
#undef MX_ENTER_VISIT_DependentSizedExtVectorType
#undef MX_EXIT_VISIT_DependentSizedExtVectorType
#undef MX_ENTER_VISIT_DependentBitIntType
#undef MX_EXIT_VISIT_DependentBitIntType
#undef MX_ENTER_VISIT_DependentAddressSpaceType
#undef MX_EXIT_VISIT_DependentAddressSpaceType
#undef MX_ENTER_VISIT_DeducedType
#undef MX_EXIT_VISIT_DeducedType
#undef MX_ENTER_VISIT_DeducedTemplateSpecializationType
#undef MX_EXIT_VISIT_DeducedTemplateSpecializationType
#undef MX_ENTER_VISIT_AutoType
#undef MX_EXIT_VISIT_AutoType
#undef MX_ENTER_VISIT_DecltypeType
#undef MX_EXIT_VISIT_DecltypeType
#undef MX_ENTER_VISIT_ComplexType
#undef MX_EXIT_VISIT_ComplexType
#undef MX_ENTER_VISIT_BuiltinType
#undef MX_EXIT_VISIT_BuiltinType
#undef MX_ENTER_VISIT_BlockPointerType
#undef MX_EXIT_VISIT_BlockPointerType
#undef MX_ENTER_VISIT_BitIntType
#undef MX_EXIT_VISIT_BitIntType
#undef MX_ENTER_VISIT_BTFTagAttributedType
#undef MX_EXIT_VISIT_BTFTagAttributedType
#undef MX_ENTER_VISIT_AttributedType
#undef MX_EXIT_VISIT_AttributedType
#undef MX_ENTER_VISIT_AtomicType
#undef MX_EXIT_VISIT_AtomicType
#undef MX_ENTER_VISIT_ArrayType
#undef MX_EXIT_VISIT_ArrayType
#undef MX_ENTER_VISIT_VariableArrayType
#undef MX_EXIT_VISIT_VariableArrayType
#undef MX_ENTER_VISIT_IncompleteArrayType
#undef MX_EXIT_VISIT_IncompleteArrayType
#undef MX_ENTER_VISIT_DependentSizedArrayType
#undef MX_EXIT_VISIT_DependentSizedArrayType
#undef MX_ENTER_VISIT_ConstantArrayType
#undef MX_EXIT_VISIT_ConstantArrayType
#undef MX_ENTER_VISIT_AdjustedType
#undef MX_EXIT_VISIT_AdjustedType
#undef MX_ENTER_VISIT_DecayedType
#undef MX_EXIT_VISIT_DecayedType
#undef MX_ENTER_VISIT_TypeWithKeyword
#undef MX_EXIT_VISIT_TypeWithKeyword
#undef MX_ENTER_VISIT_ElaboratedType
#undef MX_EXIT_VISIT_ElaboratedType
#undef MX_ENTER_VISIT_DependentTemplateSpecializationType
#undef MX_EXIT_VISIT_DependentTemplateSpecializationType
#undef MX_ENTER_VISIT_DependentNameType
#undef MX_EXIT_VISIT_DependentNameType
#undef MX_ENTER_VISIT_VectorType
#undef MX_EXIT_VISIT_VectorType
#undef MX_ENTER_VISIT_ExtVectorType
#undef MX_EXIT_VISIT_ExtVectorType
#undef MX_ENTER_VISIT_UsingType
#undef MX_EXIT_VISIT_UsingType
#undef MX_ENTER_VISIT_UnresolvedUsingType
#undef MX_EXIT_VISIT_UnresolvedUsingType
#undef MX_ENTER_VISIT_UnaryTransformType
#undef MX_EXIT_VISIT_UnaryTransformType
#undef MX_ENTER_VISIT_TypedefType
#undef MX_EXIT_VISIT_TypedefType
#undef MX_ENTER_VISIT_TypeOfType
#undef MX_EXIT_VISIT_TypeOfType
#undef MX_ENTER_VISIT_TypeOfExprType
#undef MX_EXIT_VISIT_TypeOfExprType
#undef MX_ENTER_VISIT_Stmt
#undef MX_EXIT_VISIT_Stmt
#undef MX_ENTER_VISIT_SEHTryStmt
#undef MX_EXIT_VISIT_SEHTryStmt
#undef MX_ENTER_VISIT_SEHLeaveStmt
#undef MX_EXIT_VISIT_SEHLeaveStmt
#undef MX_ENTER_VISIT_SEHFinallyStmt
#undef MX_EXIT_VISIT_SEHFinallyStmt
#undef MX_ENTER_VISIT_SEHExceptStmt
#undef MX_EXIT_VISIT_SEHExceptStmt
#undef MX_ENTER_VISIT_ReturnStmt
#undef MX_EXIT_VISIT_ReturnStmt
#undef MX_ENTER_VISIT_ObjCForCollectionStmt
#undef MX_EXIT_VISIT_ObjCForCollectionStmt
#undef MX_ENTER_VISIT_ObjCAutoreleasePoolStmt
#undef MX_EXIT_VISIT_ObjCAutoreleasePoolStmt
#undef MX_ENTER_VISIT_ObjCAtTryStmt
#undef MX_EXIT_VISIT_ObjCAtTryStmt
#undef MX_ENTER_VISIT_ObjCAtThrowStmt
#undef MX_EXIT_VISIT_ObjCAtThrowStmt
#undef MX_ENTER_VISIT_ObjCAtSynchronizedStmt
#undef MX_EXIT_VISIT_ObjCAtSynchronizedStmt
#undef MX_ENTER_VISIT_ObjCAtFinallyStmt
#undef MX_EXIT_VISIT_ObjCAtFinallyStmt
#undef MX_ENTER_VISIT_ObjCAtCatchStmt
#undef MX_EXIT_VISIT_ObjCAtCatchStmt
#undef MX_ENTER_VISIT_OMPExecutableDirective
#undef MX_EXIT_VISIT_OMPExecutableDirective
#undef MX_ENTER_VISIT_OMPErrorDirective
#undef MX_EXIT_VISIT_OMPErrorDirective
#undef MX_ENTER_VISIT_OMPDispatchDirective
#undef MX_EXIT_VISIT_OMPDispatchDirective
#undef MX_ENTER_VISIT_OMPDepobjDirective
#undef MX_EXIT_VISIT_OMPDepobjDirective
#undef MX_ENTER_VISIT_OMPCriticalDirective
#undef MX_EXIT_VISIT_OMPCriticalDirective
#undef MX_ENTER_VISIT_OMPCancellationPointDirective
#undef MX_EXIT_VISIT_OMPCancellationPointDirective
#undef MX_ENTER_VISIT_OMPCancelDirective
#undef MX_EXIT_VISIT_OMPCancelDirective
#undef MX_ENTER_VISIT_OMPBarrierDirective
#undef MX_EXIT_VISIT_OMPBarrierDirective
#undef MX_ENTER_VISIT_OMPAtomicDirective
#undef MX_EXIT_VISIT_OMPAtomicDirective
#undef MX_ENTER_VISIT_OMPTeamsDirective
#undef MX_EXIT_VISIT_OMPTeamsDirective
#undef MX_ENTER_VISIT_OMPTaskyieldDirective
#undef MX_EXIT_VISIT_OMPTaskyieldDirective
#undef MX_ENTER_VISIT_OMPTaskwaitDirective
#undef MX_EXIT_VISIT_OMPTaskwaitDirective
#undef MX_ENTER_VISIT_OMPTaskgroupDirective
#undef MX_EXIT_VISIT_OMPTaskgroupDirective
#undef MX_ENTER_VISIT_OMPTaskDirective
#undef MX_EXIT_VISIT_OMPTaskDirective
#undef MX_ENTER_VISIT_OMPTargetUpdateDirective
#undef MX_EXIT_VISIT_OMPTargetUpdateDirective
#undef MX_ENTER_VISIT_OMPTargetTeamsDirective
#undef MX_EXIT_VISIT_OMPTargetTeamsDirective
#undef MX_ENTER_VISIT_OMPTargetParallelDirective
#undef MX_EXIT_VISIT_OMPTargetParallelDirective
#undef MX_ENTER_VISIT_OMPTargetExitDataDirective
#undef MX_EXIT_VISIT_OMPTargetExitDataDirective
#undef MX_ENTER_VISIT_OMPTargetEnterDataDirective
#undef MX_EXIT_VISIT_OMPTargetEnterDataDirective
#undef MX_ENTER_VISIT_OMPTargetDirective
#undef MX_EXIT_VISIT_OMPTargetDirective
#undef MX_ENTER_VISIT_OMPTargetDataDirective
#undef MX_EXIT_VISIT_OMPTargetDataDirective
#undef MX_ENTER_VISIT_OMPSingleDirective
#undef MX_EXIT_VISIT_OMPSingleDirective
#undef MX_ENTER_VISIT_OMPSectionsDirective
#undef MX_EXIT_VISIT_OMPSectionsDirective
#undef MX_ENTER_VISIT_OMPSectionDirective
#undef MX_EXIT_VISIT_OMPSectionDirective
#undef MX_ENTER_VISIT_OMPScanDirective
#undef MX_EXIT_VISIT_OMPScanDirective
#undef MX_ENTER_VISIT_OMPParallelSectionsDirective
#undef MX_EXIT_VISIT_OMPParallelSectionsDirective
#undef MX_ENTER_VISIT_OMPParallelMasterDirective
#undef MX_EXIT_VISIT_OMPParallelMasterDirective
#undef MX_ENTER_VISIT_OMPParallelMaskedDirective
#undef MX_EXIT_VISIT_OMPParallelMaskedDirective
#undef MX_ENTER_VISIT_OMPParallelDirective
#undef MX_EXIT_VISIT_OMPParallelDirective
#undef MX_ENTER_VISIT_OMPOrderedDirective
#undef MX_EXIT_VISIT_OMPOrderedDirective
#undef MX_ENTER_VISIT_OMPMetaDirective
#undef MX_EXIT_VISIT_OMPMetaDirective
#undef MX_ENTER_VISIT_OMPMasterDirective
#undef MX_EXIT_VISIT_OMPMasterDirective
#undef MX_ENTER_VISIT_OMPMaskedDirective
#undef MX_EXIT_VISIT_OMPMaskedDirective
#undef MX_ENTER_VISIT_OMPLoopBasedDirective
#undef MX_EXIT_VISIT_OMPLoopBasedDirective
#undef MX_ENTER_VISIT_OMPLoopTransformationDirective
#undef MX_EXIT_VISIT_OMPLoopTransformationDirective
#undef MX_ENTER_VISIT_OMPUnrollDirective
#undef MX_EXIT_VISIT_OMPUnrollDirective
#undef MX_ENTER_VISIT_OMPTileDirective
#undef MX_EXIT_VISIT_OMPTileDirective
#undef MX_ENTER_VISIT_OMPLoopDirective
#undef MX_EXIT_VISIT_OMPLoopDirective
#undef MX_ENTER_VISIT_OMPGenericLoopDirective
#undef MX_EXIT_VISIT_OMPGenericLoopDirective
#undef MX_ENTER_VISIT_OMPForSimdDirective
#undef MX_EXIT_VISIT_OMPForSimdDirective
#undef MX_ENTER_VISIT_OMPForDirective
#undef MX_EXIT_VISIT_OMPForDirective
#undef MX_ENTER_VISIT_OMPDistributeSimdDirective
#undef MX_EXIT_VISIT_OMPDistributeSimdDirective
#undef MX_ENTER_VISIT_OMPDistributeParallelForSimdDirective
#undef MX_EXIT_VISIT_OMPDistributeParallelForSimdDirective
#undef MX_ENTER_VISIT_OMPDistributeParallelForDirective
#undef MX_EXIT_VISIT_OMPDistributeParallelForDirective
#undef MX_ENTER_VISIT_OMPDistributeDirective
#undef MX_EXIT_VISIT_OMPDistributeDirective
#undef MX_ENTER_VISIT_OMPTeamsGenericLoopDirective
#undef MX_EXIT_VISIT_OMPTeamsGenericLoopDirective
#undef MX_ENTER_VISIT_OMPTeamsDistributeSimdDirective
#undef MX_EXIT_VISIT_OMPTeamsDistributeSimdDirective
#undef MX_ENTER_VISIT_OMPTeamsDistributeParallelForSimdDirective
#undef MX_EXIT_VISIT_OMPTeamsDistributeParallelForSimdDirective
#undef MX_ENTER_VISIT_OMPTeamsDistributeParallelForDirective
#undef MX_EXIT_VISIT_OMPTeamsDistributeParallelForDirective
#undef MX_ENTER_VISIT_OMPTeamsDistributeDirective
#undef MX_EXIT_VISIT_OMPTeamsDistributeDirective
#undef MX_ENTER_VISIT_OMPTaskLoopSimdDirective
#undef MX_EXIT_VISIT_OMPTaskLoopSimdDirective
#undef MX_ENTER_VISIT_OMPTaskLoopDirective
#undef MX_EXIT_VISIT_OMPTaskLoopDirective
#undef MX_ENTER_VISIT_OMPTargetTeamsGenericLoopDirective
#undef MX_EXIT_VISIT_OMPTargetTeamsGenericLoopDirective
#undef MX_ENTER_VISIT_OMPTargetTeamsDistributeSimdDirective
#undef MX_EXIT_VISIT_OMPTargetTeamsDistributeSimdDirective
#undef MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective
#undef MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForSimdDirective
#undef MX_ENTER_VISIT_OMPTargetTeamsDistributeParallelForDirective
#undef MX_EXIT_VISIT_OMPTargetTeamsDistributeParallelForDirective
#undef MX_ENTER_VISIT_OMPTargetTeamsDistributeDirective
#undef MX_EXIT_VISIT_OMPTargetTeamsDistributeDirective
#undef MX_ENTER_VISIT_OMPTargetSimdDirective
#undef MX_EXIT_VISIT_OMPTargetSimdDirective
#undef MX_ENTER_VISIT_OMPTargetParallelGenericLoopDirective
#undef MX_EXIT_VISIT_OMPTargetParallelGenericLoopDirective
#undef MX_ENTER_VISIT_OMPTargetParallelForSimdDirective
#undef MX_EXIT_VISIT_OMPTargetParallelForSimdDirective
#undef MX_ENTER_VISIT_OMPTargetParallelForDirective
#undef MX_EXIT_VISIT_OMPTargetParallelForDirective
#undef MX_ENTER_VISIT_OMPSimdDirective
#undef MX_EXIT_VISIT_OMPSimdDirective
#undef MX_ENTER_VISIT_OMPParallelMasterTaskLoopSimdDirective
#undef MX_EXIT_VISIT_OMPParallelMasterTaskLoopSimdDirective
#undef MX_ENTER_VISIT_OMPParallelMasterTaskLoopDirective
#undef MX_EXIT_VISIT_OMPParallelMasterTaskLoopDirective
#undef MX_ENTER_VISIT_OMPParallelMaskedTaskLoopSimdDirective
#undef MX_EXIT_VISIT_OMPParallelMaskedTaskLoopSimdDirective
#undef MX_ENTER_VISIT_OMPParallelMaskedTaskLoopDirective
#undef MX_EXIT_VISIT_OMPParallelMaskedTaskLoopDirective
#undef MX_ENTER_VISIT_OMPParallelGenericLoopDirective
#undef MX_EXIT_VISIT_OMPParallelGenericLoopDirective
#undef MX_ENTER_VISIT_OMPParallelForSimdDirective
#undef MX_EXIT_VISIT_OMPParallelForSimdDirective
#undef MX_ENTER_VISIT_OMPParallelForDirective
#undef MX_EXIT_VISIT_OMPParallelForDirective
#undef MX_ENTER_VISIT_OMPMasterTaskLoopSimdDirective
#undef MX_EXIT_VISIT_OMPMasterTaskLoopSimdDirective
#undef MX_ENTER_VISIT_OMPMasterTaskLoopDirective
#undef MX_EXIT_VISIT_OMPMasterTaskLoopDirective
#undef MX_ENTER_VISIT_OMPMaskedTaskLoopSimdDirective
#undef MX_EXIT_VISIT_OMPMaskedTaskLoopSimdDirective
#undef MX_ENTER_VISIT_OMPMaskedTaskLoopDirective
#undef MX_EXIT_VISIT_OMPMaskedTaskLoopDirective
#undef MX_ENTER_VISIT_OMPInteropDirective
#undef MX_EXIT_VISIT_OMPInteropDirective
#undef MX_ENTER_VISIT_OMPFlushDirective
#undef MX_EXIT_VISIT_OMPFlushDirective
#undef MX_ENTER_VISIT_OMPCanonicalLoop
#undef MX_EXIT_VISIT_OMPCanonicalLoop
#undef MX_ENTER_VISIT_NullStmt
#undef MX_EXIT_VISIT_NullStmt
#undef MX_ENTER_VISIT_MSDependentExistsStmt
#undef MX_EXIT_VISIT_MSDependentExistsStmt
#undef MX_ENTER_VISIT_IndirectGotoStmt
#undef MX_EXIT_VISIT_IndirectGotoStmt
#undef MX_ENTER_VISIT_IfStmt
#undef MX_EXIT_VISIT_IfStmt
#undef MX_ENTER_VISIT_GotoStmt
#undef MX_EXIT_VISIT_GotoStmt
#undef MX_ENTER_VISIT_ForStmt
#undef MX_EXIT_VISIT_ForStmt
#undef MX_ENTER_VISIT_DoStmt
#undef MX_EXIT_VISIT_DoStmt
#undef MX_ENTER_VISIT_DeclStmt
#undef MX_EXIT_VISIT_DeclStmt
#undef MX_ENTER_VISIT_CoroutineBodyStmt
#undef MX_EXIT_VISIT_CoroutineBodyStmt
#undef MX_ENTER_VISIT_CoreturnStmt
#undef MX_EXIT_VISIT_CoreturnStmt
#undef MX_ENTER_VISIT_ContinueStmt
#undef MX_EXIT_VISIT_ContinueStmt
#undef MX_ENTER_VISIT_CompoundStmt
#undef MX_EXIT_VISIT_CompoundStmt
#undef MX_ENTER_VISIT_CapturedStmt
#undef MX_EXIT_VISIT_CapturedStmt
#undef MX_ENTER_VISIT_CXXTryStmt
#undef MX_EXIT_VISIT_CXXTryStmt
#undef MX_ENTER_VISIT_CXXForRangeStmt
#undef MX_EXIT_VISIT_CXXForRangeStmt
#undef MX_ENTER_VISIT_CXXCatchStmt
#undef MX_EXIT_VISIT_CXXCatchStmt
#undef MX_ENTER_VISIT_BreakStmt
#undef MX_EXIT_VISIT_BreakStmt
#undef MX_ENTER_VISIT_AsmStmt
#undef MX_EXIT_VISIT_AsmStmt
#undef MX_ENTER_VISIT_MSAsmStmt
#undef MX_EXIT_VISIT_MSAsmStmt
#undef MX_ENTER_VISIT_GCCAsmStmt
#undef MX_EXIT_VISIT_GCCAsmStmt
#undef MX_ENTER_VISIT_WhileStmt
#undef MX_EXIT_VISIT_WhileStmt
#undef MX_ENTER_VISIT_ValueStmt
#undef MX_EXIT_VISIT_ValueStmt
#undef MX_ENTER_VISIT_LabelStmt
#undef MX_EXIT_VISIT_LabelStmt
#undef MX_ENTER_VISIT_Expr
#undef MX_EXIT_VISIT_Expr
#undef MX_ENTER_VISIT_DesignatedInitUpdateExpr
#undef MX_EXIT_VISIT_DesignatedInitUpdateExpr
#undef MX_ENTER_VISIT_DesignatedInitExpr
#undef MX_EXIT_VISIT_DesignatedInitExpr
#undef MX_ENTER_VISIT_DependentScopeDeclRefExpr
#undef MX_EXIT_VISIT_DependentScopeDeclRefExpr
#undef MX_ENTER_VISIT_DependentCoawaitExpr
#undef MX_EXIT_VISIT_DependentCoawaitExpr
#undef MX_ENTER_VISIT_DeclRefExpr
#undef MX_EXIT_VISIT_DeclRefExpr
#undef MX_ENTER_VISIT_CoroutineSuspendExpr
#undef MX_EXIT_VISIT_CoroutineSuspendExpr
#undef MX_ENTER_VISIT_CoawaitExpr
#undef MX_EXIT_VISIT_CoawaitExpr
#undef MX_ENTER_VISIT_CoyieldExpr
#undef MX_EXIT_VISIT_CoyieldExpr
#undef MX_ENTER_VISIT_ConvertVectorExpr
#undef MX_EXIT_VISIT_ConvertVectorExpr
#undef MX_ENTER_VISIT_ConceptSpecializationExpr
#undef MX_EXIT_VISIT_ConceptSpecializationExpr
#undef MX_ENTER_VISIT_CompoundLiteralExpr
#undef MX_EXIT_VISIT_CompoundLiteralExpr
#undef MX_ENTER_VISIT_ChooseExpr
#undef MX_EXIT_VISIT_ChooseExpr
#undef MX_ENTER_VISIT_CharacterLiteral
#undef MX_EXIT_VISIT_CharacterLiteral
#undef MX_ENTER_VISIT_CastExpr
#undef MX_EXIT_VISIT_CastExpr
#undef MX_ENTER_VISIT_ImplicitCastExpr
#undef MX_EXIT_VISIT_ImplicitCastExpr
#undef MX_ENTER_VISIT_ExplicitCastExpr
#undef MX_EXIT_VISIT_ExplicitCastExpr
#undef MX_ENTER_VISIT_CXXNamedCastExpr
#undef MX_EXIT_VISIT_CXXNamedCastExpr
#undef MX_ENTER_VISIT_CXXDynamicCastExpr
#undef MX_EXIT_VISIT_CXXDynamicCastExpr
#undef MX_ENTER_VISIT_CXXConstCastExpr
#undef MX_EXIT_VISIT_CXXConstCastExpr
#undef MX_ENTER_VISIT_CXXAddrspaceCastExpr
#undef MX_EXIT_VISIT_CXXAddrspaceCastExpr
#undef MX_ENTER_VISIT_CXXStaticCastExpr
#undef MX_EXIT_VISIT_CXXStaticCastExpr
#undef MX_ENTER_VISIT_CXXReinterpretCastExpr
#undef MX_EXIT_VISIT_CXXReinterpretCastExpr
#undef MX_ENTER_VISIT_CXXFunctionalCastExpr
#undef MX_EXIT_VISIT_CXXFunctionalCastExpr
#undef MX_ENTER_VISIT_CStyleCastExpr
#undef MX_EXIT_VISIT_CStyleCastExpr
#undef MX_ENTER_VISIT_BuiltinBitCastExpr
#undef MX_EXIT_VISIT_BuiltinBitCastExpr
#undef MX_ENTER_VISIT_ObjCBridgedCastExpr
#undef MX_EXIT_VISIT_ObjCBridgedCastExpr
#undef MX_ENTER_VISIT_CallExpr
#undef MX_EXIT_VISIT_CallExpr
#undef MX_ENTER_VISIT_CXXOperatorCallExpr
#undef MX_EXIT_VISIT_CXXOperatorCallExpr
#undef MX_ENTER_VISIT_CXXMemberCallExpr
#undef MX_EXIT_VISIT_CXXMemberCallExpr
#undef MX_ENTER_VISIT_CUDAKernelCallExpr
#undef MX_EXIT_VISIT_CUDAKernelCallExpr
#undef MX_ENTER_VISIT_UserDefinedLiteral
#undef MX_EXIT_VISIT_UserDefinedLiteral
#undef MX_ENTER_VISIT_CXXUuidofExpr
#undef MX_EXIT_VISIT_CXXUuidofExpr
#undef MX_ENTER_VISIT_CXXUnresolvedConstructExpr
#undef MX_EXIT_VISIT_CXXUnresolvedConstructExpr
#undef MX_ENTER_VISIT_CXXTypeidExpr
#undef MX_EXIT_VISIT_CXXTypeidExpr
#undef MX_ENTER_VISIT_CXXThrowExpr
#undef MX_EXIT_VISIT_CXXThrowExpr
#undef MX_ENTER_VISIT_CXXThisExpr
#undef MX_EXIT_VISIT_CXXThisExpr
#undef MX_ENTER_VISIT_CXXStdInitializerListExpr
#undef MX_EXIT_VISIT_CXXStdInitializerListExpr
#undef MX_ENTER_VISIT_CXXScalarValueInitExpr
#undef MX_EXIT_VISIT_CXXScalarValueInitExpr
#undef MX_ENTER_VISIT_CXXRewrittenBinaryOperator
#undef MX_EXIT_VISIT_CXXRewrittenBinaryOperator
#undef MX_ENTER_VISIT_CXXPseudoDestructorExpr
#undef MX_EXIT_VISIT_CXXPseudoDestructorExpr
#undef MX_ENTER_VISIT_CXXParenListInitExpr
#undef MX_EXIT_VISIT_CXXParenListInitExpr
#undef MX_ENTER_VISIT_CXXNullPtrLiteralExpr
#undef MX_EXIT_VISIT_CXXNullPtrLiteralExpr
#undef MX_ENTER_VISIT_CXXNoexceptExpr
#undef MX_EXIT_VISIT_CXXNoexceptExpr
#undef MX_ENTER_VISIT_CXXNewExpr
#undef MX_EXIT_VISIT_CXXNewExpr
#undef MX_ENTER_VISIT_CXXInheritedCtorInitExpr
#undef MX_EXIT_VISIT_CXXInheritedCtorInitExpr
#undef MX_ENTER_VISIT_CXXFoldExpr
#undef MX_EXIT_VISIT_CXXFoldExpr
#undef MX_ENTER_VISIT_CXXDependentScopeMemberExpr
#undef MX_EXIT_VISIT_CXXDependentScopeMemberExpr
#undef MX_ENTER_VISIT_CXXDeleteExpr
#undef MX_EXIT_VISIT_CXXDeleteExpr
#undef MX_ENTER_VISIT_CXXDefaultInitExpr
#undef MX_EXIT_VISIT_CXXDefaultInitExpr
#undef MX_ENTER_VISIT_CXXDefaultArgExpr
#undef MX_EXIT_VISIT_CXXDefaultArgExpr
#undef MX_ENTER_VISIT_CXXConstructExpr
#undef MX_EXIT_VISIT_CXXConstructExpr
#undef MX_ENTER_VISIT_CXXTemporaryObjectExpr
#undef MX_EXIT_VISIT_CXXTemporaryObjectExpr
#undef MX_ENTER_VISIT_CXXBoolLiteralExpr
#undef MX_EXIT_VISIT_CXXBoolLiteralExpr
#undef MX_ENTER_VISIT_CXXBindTemporaryExpr
#undef MX_EXIT_VISIT_CXXBindTemporaryExpr
#undef MX_ENTER_VISIT_BlockExpr
#undef MX_EXIT_VISIT_BlockExpr
#undef MX_ENTER_VISIT_BinaryOperator
#undef MX_EXIT_VISIT_BinaryOperator
#undef MX_ENTER_VISIT_CompoundAssignOperator
#undef MX_EXIT_VISIT_CompoundAssignOperator
#undef MX_ENTER_VISIT_AtomicExpr
#undef MX_EXIT_VISIT_AtomicExpr
#undef MX_ENTER_VISIT_AsTypeExpr
#undef MX_EXIT_VISIT_AsTypeExpr
#undef MX_ENTER_VISIT_ArrayTypeTraitExpr
#undef MX_EXIT_VISIT_ArrayTypeTraitExpr
#undef MX_ENTER_VISIT_ArraySubscriptExpr
#undef MX_EXIT_VISIT_ArraySubscriptExpr
#undef MX_ENTER_VISIT_ArrayInitLoopExpr
#undef MX_EXIT_VISIT_ArrayInitLoopExpr
#undef MX_ENTER_VISIT_ArrayInitIndexExpr
#undef MX_EXIT_VISIT_ArrayInitIndexExpr
#undef MX_ENTER_VISIT_AddrLabelExpr
#undef MX_EXIT_VISIT_AddrLabelExpr
#undef MX_ENTER_VISIT_AbstractConditionalOperator
#undef MX_EXIT_VISIT_AbstractConditionalOperator
#undef MX_ENTER_VISIT_ConditionalOperator
#undef MX_EXIT_VISIT_ConditionalOperator
#undef MX_ENTER_VISIT_BinaryConditionalOperator
#undef MX_EXIT_VISIT_BinaryConditionalOperator
#undef MX_ENTER_VISIT_VAArgExpr
#undef MX_EXIT_VISIT_VAArgExpr
#undef MX_ENTER_VISIT_UnaryOperator
#undef MX_EXIT_VISIT_UnaryOperator
#undef MX_ENTER_VISIT_UnaryExprOrTypeTraitExpr
#undef MX_EXIT_VISIT_UnaryExprOrTypeTraitExpr
#undef MX_ENTER_VISIT_TypoExpr
#undef MX_EXIT_VISIT_TypoExpr
#undef MX_ENTER_VISIT_TypeTraitExpr
#undef MX_EXIT_VISIT_TypeTraitExpr
#undef MX_ENTER_VISIT_SubstNonTypeTemplateParmPackExpr
#undef MX_EXIT_VISIT_SubstNonTypeTemplateParmPackExpr
#undef MX_ENTER_VISIT_SubstNonTypeTemplateParmExpr
#undef MX_EXIT_VISIT_SubstNonTypeTemplateParmExpr
#undef MX_ENTER_VISIT_StringLiteral
#undef MX_EXIT_VISIT_StringLiteral
#undef MX_ENTER_VISIT_StmtExpr
#undef MX_EXIT_VISIT_StmtExpr
#undef MX_ENTER_VISIT_SourceLocExpr
#undef MX_EXIT_VISIT_SourceLocExpr
#undef MX_ENTER_VISIT_SizeOfPackExpr
#undef MX_EXIT_VISIT_SizeOfPackExpr
#undef MX_ENTER_VISIT_ShuffleVectorExpr
#undef MX_EXIT_VISIT_ShuffleVectorExpr
#undef MX_ENTER_VISIT_SYCLUniqueStableNameExpr
#undef MX_EXIT_VISIT_SYCLUniqueStableNameExpr
#undef MX_ENTER_VISIT_RequiresExpr
#undef MX_EXIT_VISIT_RequiresExpr
#undef MX_ENTER_VISIT_RecoveryExpr
#undef MX_EXIT_VISIT_RecoveryExpr
#undef MX_ENTER_VISIT_PseudoObjectExpr
#undef MX_EXIT_VISIT_PseudoObjectExpr
#undef MX_ENTER_VISIT_PredefinedExpr
#undef MX_EXIT_VISIT_PredefinedExpr
#undef MX_ENTER_VISIT_ParenListExpr
#undef MX_EXIT_VISIT_ParenListExpr
#undef MX_ENTER_VISIT_ParenExpr
#undef MX_EXIT_VISIT_ParenExpr
#undef MX_ENTER_VISIT_PackExpansionExpr
#undef MX_EXIT_VISIT_PackExpansionExpr
#undef MX_ENTER_VISIT_OverloadExpr
#undef MX_EXIT_VISIT_OverloadExpr
#undef MX_ENTER_VISIT_UnresolvedMemberExpr
#undef MX_EXIT_VISIT_UnresolvedMemberExpr
#undef MX_ENTER_VISIT_UnresolvedLookupExpr
#undef MX_EXIT_VISIT_UnresolvedLookupExpr
#undef MX_ENTER_VISIT_OpaqueValueExpr
#undef MX_EXIT_VISIT_OpaqueValueExpr
#undef MX_ENTER_VISIT_OffsetOfExpr
#undef MX_EXIT_VISIT_OffsetOfExpr
#undef MX_ENTER_VISIT_ObjCSubscriptRefExpr
#undef MX_EXIT_VISIT_ObjCSubscriptRefExpr
#undef MX_ENTER_VISIT_ObjCStringLiteral
#undef MX_EXIT_VISIT_ObjCStringLiteral
#undef MX_ENTER_VISIT_ObjCSelectorExpr
#undef MX_EXIT_VISIT_ObjCSelectorExpr
#undef MX_ENTER_VISIT_ObjCProtocolExpr
#undef MX_EXIT_VISIT_ObjCProtocolExpr
#undef MX_ENTER_VISIT_ObjCPropertyRefExpr
#undef MX_EXIT_VISIT_ObjCPropertyRefExpr
#undef MX_ENTER_VISIT_ObjCMessageExpr
#undef MX_EXIT_VISIT_ObjCMessageExpr
#undef MX_ENTER_VISIT_ObjCIvarRefExpr
#undef MX_EXIT_VISIT_ObjCIvarRefExpr
#undef MX_ENTER_VISIT_ObjCIsaExpr
#undef MX_EXIT_VISIT_ObjCIsaExpr
#undef MX_ENTER_VISIT_ObjCIndirectCopyRestoreExpr
#undef MX_EXIT_VISIT_ObjCIndirectCopyRestoreExpr
#undef MX_ENTER_VISIT_ObjCEncodeExpr
#undef MX_EXIT_VISIT_ObjCEncodeExpr
#undef MX_ENTER_VISIT_ObjCDictionaryLiteral
#undef MX_EXIT_VISIT_ObjCDictionaryLiteral
#undef MX_ENTER_VISIT_ObjCBoxedExpr
#undef MX_EXIT_VISIT_ObjCBoxedExpr
#undef MX_ENTER_VISIT_ObjCBoolLiteralExpr
#undef MX_EXIT_VISIT_ObjCBoolLiteralExpr
#undef MX_ENTER_VISIT_ObjCAvailabilityCheckExpr
#undef MX_EXIT_VISIT_ObjCAvailabilityCheckExpr
#undef MX_ENTER_VISIT_ObjCArrayLiteral
#undef MX_EXIT_VISIT_ObjCArrayLiteral
#undef MX_ENTER_VISIT_OMPIteratorExpr
#undef MX_EXIT_VISIT_OMPIteratorExpr
#undef MX_ENTER_VISIT_OMPArrayShapingExpr
#undef MX_EXIT_VISIT_OMPArrayShapingExpr
#undef MX_ENTER_VISIT_OMPArraySectionExpr
#undef MX_EXIT_VISIT_OMPArraySectionExpr
#undef MX_ENTER_VISIT_NoInitExpr
#undef MX_EXIT_VISIT_NoInitExpr
#undef MX_ENTER_VISIT_MemberExpr
#undef MX_EXIT_VISIT_MemberExpr
#undef MX_ENTER_VISIT_MatrixSubscriptExpr
#undef MX_EXIT_VISIT_MatrixSubscriptExpr
#undef MX_ENTER_VISIT_MaterializeTemporaryExpr
#undef MX_EXIT_VISIT_MaterializeTemporaryExpr
#undef MX_ENTER_VISIT_MSPropertySubscriptExpr
#undef MX_EXIT_VISIT_MSPropertySubscriptExpr
#undef MX_ENTER_VISIT_MSPropertyRefExpr
#undef MX_EXIT_VISIT_MSPropertyRefExpr
#undef MX_ENTER_VISIT_LambdaExpr
#undef MX_EXIT_VISIT_LambdaExpr
#undef MX_ENTER_VISIT_IntegerLiteral
#undef MX_EXIT_VISIT_IntegerLiteral
#undef MX_ENTER_VISIT_InitListExpr
#undef MX_EXIT_VISIT_InitListExpr
#undef MX_ENTER_VISIT_ImplicitValueInitExpr
#undef MX_EXIT_VISIT_ImplicitValueInitExpr
#undef MX_ENTER_VISIT_ImaginaryLiteral
#undef MX_EXIT_VISIT_ImaginaryLiteral
#undef MX_ENTER_VISIT_GenericSelectionExpr
#undef MX_EXIT_VISIT_GenericSelectionExpr
#undef MX_ENTER_VISIT_GNUNullExpr
#undef MX_EXIT_VISIT_GNUNullExpr
#undef MX_ENTER_VISIT_FunctionParmPackExpr
#undef MX_EXIT_VISIT_FunctionParmPackExpr
#undef MX_ENTER_VISIT_FullExpr
#undef MX_EXIT_VISIT_FullExpr
#undef MX_ENTER_VISIT_ExprWithCleanups
#undef MX_EXIT_VISIT_ExprWithCleanups
#undef MX_ENTER_VISIT_ConstantExpr
#undef MX_EXIT_VISIT_ConstantExpr
#undef MX_ENTER_VISIT_FloatingLiteral
#undef MX_EXIT_VISIT_FloatingLiteral
#undef MX_ENTER_VISIT_FixedPointLiteral
#undef MX_EXIT_VISIT_FixedPointLiteral
#undef MX_ENTER_VISIT_ExtVectorElementExpr
#undef MX_EXIT_VISIT_ExtVectorElementExpr
#undef MX_ENTER_VISIT_ExpressionTraitExpr
#undef MX_EXIT_VISIT_ExpressionTraitExpr
#undef MX_ENTER_VISIT_AttributedStmt
#undef MX_EXIT_VISIT_AttributedStmt
#undef MX_ENTER_VISIT_SwitchStmt
#undef MX_EXIT_VISIT_SwitchStmt
#undef MX_ENTER_VISIT_SwitchCase
#undef MX_EXIT_VISIT_SwitchCase
#undef MX_ENTER_VISIT_DefaultStmt
#undef MX_EXIT_VISIT_DefaultStmt
#undef MX_ENTER_VISIT_CaseStmt
#undef MX_EXIT_VISIT_CaseStmt
#undef MX_ENTER_VISIT_Decl
#undef MX_EXIT_VISIT_Decl
#undef MX_ENTER_VISIT_ClassScopeFunctionSpecializationDecl
#undef MX_EXIT_VISIT_ClassScopeFunctionSpecializationDecl
#undef MX_ENTER_VISIT_CapturedDecl
#undef MX_EXIT_VISIT_CapturedDecl
#undef MX_ENTER_VISIT_BlockDecl
#undef MX_EXIT_VISIT_BlockDecl
#undef MX_ENTER_VISIT_AccessSpecDecl
#undef MX_EXIT_VISIT_AccessSpecDecl
#undef MX_ENTER_VISIT_OMPDeclarativeDirectiveDecl
#undef MX_EXIT_VISIT_OMPDeclarativeDirectiveDecl
#undef MX_ENTER_VISIT_OMPThreadPrivateDecl
#undef MX_EXIT_VISIT_OMPThreadPrivateDecl
#undef MX_ENTER_VISIT_OMPRequiresDecl
#undef MX_EXIT_VISIT_OMPRequiresDecl
#undef MX_ENTER_VISIT_OMPAllocateDecl
#undef MX_EXIT_VISIT_OMPAllocateDecl
#undef MX_ENTER_VISIT_TranslationUnitDecl
#undef MX_EXIT_VISIT_TranslationUnitDecl
#undef MX_ENTER_VISIT_TopLevelStmtDecl
#undef MX_EXIT_VISIT_TopLevelStmtDecl
#undef MX_ENTER_VISIT_StaticAssertDecl
#undef MX_EXIT_VISIT_StaticAssertDecl
#undef MX_ENTER_VISIT_RequiresExprBodyDecl
#undef MX_EXIT_VISIT_RequiresExprBodyDecl
#undef MX_ENTER_VISIT_PragmaDetectMismatchDecl
#undef MX_EXIT_VISIT_PragmaDetectMismatchDecl
#undef MX_ENTER_VISIT_PragmaCommentDecl
#undef MX_EXIT_VISIT_PragmaCommentDecl
#undef MX_ENTER_VISIT_ObjCPropertyImplDecl
#undef MX_EXIT_VISIT_ObjCPropertyImplDecl
#undef MX_ENTER_VISIT_NamedDecl
#undef MX_EXIT_VISIT_NamedDecl
#undef MX_ENTER_VISIT_LabelDecl
#undef MX_EXIT_VISIT_LabelDecl
#undef MX_ENTER_VISIT_HLSLBufferDecl
#undef MX_EXIT_VISIT_HLSLBufferDecl
#undef MX_ENTER_VISIT_BaseUsingDecl
#undef MX_EXIT_VISIT_BaseUsingDecl
#undef MX_ENTER_VISIT_UsingEnumDecl
#undef MX_EXIT_VISIT_UsingEnumDecl
#undef MX_ENTER_VISIT_UsingDecl
#undef MX_EXIT_VISIT_UsingDecl
#undef MX_ENTER_VISIT_ValueDecl
#undef MX_EXIT_VISIT_ValueDecl
#undef MX_ENTER_VISIT_UnresolvedUsingValueDecl
#undef MX_EXIT_VISIT_UnresolvedUsingValueDecl
#undef MX_ENTER_VISIT_UnnamedGlobalConstantDecl
#undef MX_EXIT_VISIT_UnnamedGlobalConstantDecl
#undef MX_ENTER_VISIT_TemplateParamObjectDecl
#undef MX_EXIT_VISIT_TemplateParamObjectDecl
#undef MX_ENTER_VISIT_OMPDeclareReductionDecl
#undef MX_EXIT_VISIT_OMPDeclareReductionDecl
#undef MX_ENTER_VISIT_MSGuidDecl
#undef MX_EXIT_VISIT_MSGuidDecl
#undef MX_ENTER_VISIT_IndirectFieldDecl
#undef MX_EXIT_VISIT_IndirectFieldDecl
#undef MX_ENTER_VISIT_EnumConstantDecl
#undef MX_EXIT_VISIT_EnumConstantDecl
#undef MX_ENTER_VISIT_DeclaratorDecl
#undef MX_EXIT_VISIT_DeclaratorDecl
#undef MX_ENTER_VISIT_VarDecl
#undef MX_EXIT_VISIT_VarDecl
#undef MX_ENTER_VISIT_ParmVarDecl
#undef MX_EXIT_VISIT_ParmVarDecl
#undef MX_ENTER_VISIT_OMPCapturedExprDecl
#undef MX_EXIT_VISIT_OMPCapturedExprDecl
#undef MX_ENTER_VISIT_ImplicitParamDecl
#undef MX_EXIT_VISIT_ImplicitParamDecl
#undef MX_ENTER_VISIT_DecompositionDecl
#undef MX_EXIT_VISIT_DecompositionDecl
#undef MX_ENTER_VISIT_VarTemplateSpecializationDecl
#undef MX_EXIT_VISIT_VarTemplateSpecializationDecl
#undef MX_ENTER_VISIT_VarTemplatePartialSpecializationDecl
#undef MX_EXIT_VISIT_VarTemplatePartialSpecializationDecl
#undef MX_ENTER_VISIT_NonTypeTemplateParmDecl
#undef MX_EXIT_VISIT_NonTypeTemplateParmDecl
#undef MX_ENTER_VISIT_MSPropertyDecl
#undef MX_EXIT_VISIT_MSPropertyDecl
#undef MX_ENTER_VISIT_FunctionDecl
#undef MX_EXIT_VISIT_FunctionDecl
#undef MX_ENTER_VISIT_CXXMethodDecl
#undef MX_EXIT_VISIT_CXXMethodDecl
#undef MX_ENTER_VISIT_CXXDestructorDecl
#undef MX_EXIT_VISIT_CXXDestructorDecl
#undef MX_ENTER_VISIT_CXXConversionDecl
#undef MX_EXIT_VISIT_CXXConversionDecl
#undef MX_ENTER_VISIT_CXXConstructorDecl
#undef MX_EXIT_VISIT_CXXConstructorDecl
#undef MX_ENTER_VISIT_CXXDeductionGuideDecl
#undef MX_EXIT_VISIT_CXXDeductionGuideDecl
#undef MX_ENTER_VISIT_FieldDecl
#undef MX_EXIT_VISIT_FieldDecl
#undef MX_ENTER_VISIT_ObjCIvarDecl
#undef MX_EXIT_VISIT_ObjCIvarDecl
#undef MX_ENTER_VISIT_ObjCAtDefsFieldDecl
#undef MX_EXIT_VISIT_ObjCAtDefsFieldDecl
#undef MX_ENTER_VISIT_BindingDecl
#undef MX_EXIT_VISIT_BindingDecl
#undef MX_ENTER_VISIT_OMPDeclarativeDirectiveValueDecl
#undef MX_EXIT_VISIT_OMPDeclarativeDirectiveValueDecl
#undef MX_ENTER_VISIT_OMPDeclareMapperDecl
#undef MX_EXIT_VISIT_OMPDeclareMapperDecl
#undef MX_ENTER_VISIT_UsingShadowDecl
#undef MX_EXIT_VISIT_UsingShadowDecl
#undef MX_ENTER_VISIT_ConstructorUsingShadowDecl
#undef MX_EXIT_VISIT_ConstructorUsingShadowDecl
#undef MX_ENTER_VISIT_UsingPackDecl
#undef MX_EXIT_VISIT_UsingPackDecl
#undef MX_ENTER_VISIT_UsingDirectiveDecl
#undef MX_EXIT_VISIT_UsingDirectiveDecl
#undef MX_ENTER_VISIT_UnresolvedUsingIfExistsDecl
#undef MX_EXIT_VISIT_UnresolvedUsingIfExistsDecl
#undef MX_ENTER_VISIT_TypeDecl
#undef MX_EXIT_VISIT_TypeDecl
#undef MX_ENTER_VISIT_TemplateTypeParmDecl
#undef MX_EXIT_VISIT_TemplateTypeParmDecl
#undef MX_ENTER_VISIT_TagDecl
#undef MX_EXIT_VISIT_TagDecl
#undef MX_ENTER_VISIT_RecordDecl
#undef MX_EXIT_VISIT_RecordDecl
#undef MX_ENTER_VISIT_CXXRecordDecl
#undef MX_EXIT_VISIT_CXXRecordDecl
#undef MX_ENTER_VISIT_ClassTemplateSpecializationDecl
#undef MX_EXIT_VISIT_ClassTemplateSpecializationDecl
#undef MX_ENTER_VISIT_ClassTemplatePartialSpecializationDecl
#undef MX_EXIT_VISIT_ClassTemplatePartialSpecializationDecl
#undef MX_ENTER_VISIT_EnumDecl
#undef MX_EXIT_VISIT_EnumDecl
#undef MX_ENTER_VISIT_UnresolvedUsingTypenameDecl
#undef MX_EXIT_VISIT_UnresolvedUsingTypenameDecl
#undef MX_ENTER_VISIT_TypedefNameDecl
#undef MX_EXIT_VISIT_TypedefNameDecl
#undef MX_ENTER_VISIT_TypedefDecl
#undef MX_EXIT_VISIT_TypedefDecl
#undef MX_ENTER_VISIT_TypeAliasDecl
#undef MX_EXIT_VISIT_TypeAliasDecl
#undef MX_ENTER_VISIT_ObjCTypeParamDecl
#undef MX_EXIT_VISIT_ObjCTypeParamDecl
#undef MX_ENTER_VISIT_TemplateDecl
#undef MX_EXIT_VISIT_TemplateDecl
#undef MX_ENTER_VISIT_RedeclarableTemplateDecl
#undef MX_EXIT_VISIT_RedeclarableTemplateDecl
#undef MX_ENTER_VISIT_FunctionTemplateDecl
#undef MX_EXIT_VISIT_FunctionTemplateDecl
#undef MX_ENTER_VISIT_ClassTemplateDecl
#undef MX_EXIT_VISIT_ClassTemplateDecl
#undef MX_ENTER_VISIT_VarTemplateDecl
#undef MX_EXIT_VISIT_VarTemplateDecl
#undef MX_ENTER_VISIT_TypeAliasTemplateDecl
#undef MX_EXIT_VISIT_TypeAliasTemplateDecl
#undef MX_ENTER_VISIT_ConceptDecl
#undef MX_EXIT_VISIT_ConceptDecl
#undef MX_ENTER_VISIT_BuiltinTemplateDecl
#undef MX_EXIT_VISIT_BuiltinTemplateDecl
#undef MX_ENTER_VISIT_TemplateTemplateParmDecl
#undef MX_EXIT_VISIT_TemplateTemplateParmDecl
#undef MX_ENTER_VISIT_ObjCPropertyDecl
#undef MX_EXIT_VISIT_ObjCPropertyDecl
#undef MX_ENTER_VISIT_ObjCMethodDecl
#undef MX_EXIT_VISIT_ObjCMethodDecl
#undef MX_ENTER_VISIT_ObjCContainerDecl
#undef MX_EXIT_VISIT_ObjCContainerDecl
#undef MX_ENTER_VISIT_ObjCCategoryDecl
#undef MX_EXIT_VISIT_ObjCCategoryDecl
#undef MX_ENTER_VISIT_ObjCProtocolDecl
#undef MX_EXIT_VISIT_ObjCProtocolDecl
#undef MX_ENTER_VISIT_ObjCInterfaceDecl
#undef MX_EXIT_VISIT_ObjCInterfaceDecl
#undef MX_ENTER_VISIT_ObjCImplDecl
#undef MX_EXIT_VISIT_ObjCImplDecl
#undef MX_ENTER_VISIT_ObjCCategoryImplDecl
#undef MX_EXIT_VISIT_ObjCCategoryImplDecl
#undef MX_ENTER_VISIT_ObjCImplementationDecl
#undef MX_EXIT_VISIT_ObjCImplementationDecl
#undef MX_ENTER_VISIT_ObjCCompatibleAliasDecl
#undef MX_EXIT_VISIT_ObjCCompatibleAliasDecl
#undef MX_ENTER_VISIT_NamespaceDecl
#undef MX_EXIT_VISIT_NamespaceDecl
#undef MX_ENTER_VISIT_NamespaceAliasDecl
#undef MX_EXIT_VISIT_NamespaceAliasDecl
#undef MX_ENTER_VISIT_LinkageSpecDecl
#undef MX_EXIT_VISIT_LinkageSpecDecl
#undef MX_ENTER_VISIT_LifetimeExtendedTemporaryDecl
#undef MX_EXIT_VISIT_LifetimeExtendedTemporaryDecl
#undef MX_ENTER_VISIT_ImportDecl
#undef MX_EXIT_VISIT_ImportDecl
#undef MX_ENTER_VISIT_ImplicitConceptSpecializationDecl
#undef MX_EXIT_VISIT_ImplicitConceptSpecializationDecl
#undef MX_ENTER_VISIT_FriendTemplateDecl
#undef MX_EXIT_VISIT_FriendTemplateDecl
#undef MX_ENTER_VISIT_FriendDecl
#undef MX_EXIT_VISIT_FriendDecl
#undef MX_ENTER_VISIT_FileScopeAsmDecl
#undef MX_EXIT_VISIT_FileScopeAsmDecl
#undef MX_ENTER_VISIT_ExternCContextDecl
#undef MX_EXIT_VISIT_ExternCContextDecl
#undef MX_ENTER_VISIT_ExportDecl
#undef MX_EXIT_VISIT_ExportDecl
#undef MX_ENTER_VISIT_EmptyDecl
#undef MX_EXIT_VISIT_EmptyDecl
#undef MX_APPLY_METHOD
#undef MX_APPLY_FUNC
#undef MX_VISIT_BOOL
#undef MX_VISIT_INT
#undef MX_VISIT_ENUM
#undef MX_VISIT_TEXT
#undef MX_VISIT_PATH
#undef MX_VISIT_OPTIONAL_BOOL
#undef MX_VISIT_OPTIONAL_INT
#undef MX_VISIT_OPTIONAL_ENUM
#undef MX_VISIT_OPTIONAL_TEXT
#undef MX_VISIT_OPTIONAL_PATH
#undef MX_VISIT_BOOL_LIST
#undef MX_VISIT_INT_LIST
#undef MX_VISIT_ENUM_LIST
#undef MX_VISIT_TEXT_LIST
#undef MX_VISIT_PATH_LIST
#undef MX_VISIT_OPTIONAL_BOOL_LIST
#undef MX_VISIT_OPTIONAL_INT_LIST
#undef MX_VISIT_OPTIONAL_ENUM_LIST
#undef MX_VISIT_OPTIONAL_TEXT_LIST
#undef MX_VISIT_OPTIONAL_PATH_LIST
#undef MX_VISIT_ENTITY
#undef MX_VISIT_ENTITY_LIST
#undef MX_VISIT_OPTIONAL_ENTITY
#undef MX_VISIT_OPTIONAL_ENTITY_LIST
#undef MX_VISIT_DECL_CONTEXT
#undef MX_VISIT_TOKEN_RANGE
#undef MX_VISIT_MACRO_RANGE
#undef MX_VISIT_PSEUDO
#undef MX_VISIT_PSEUDO_LIST
#undef MX_VISIT_OPTIONAL_PSEUDO
#undef MX_VISIT_OPTIONAL_PSEUDO_LIST
#undef MX_VISIT_BASE
#undef MX_VISIT_DECL_LINK
#undef MX_VISIT_STMT_LINK
#undef MX_BEGIN_VISIT_DECL
#undef MX_BEGIN_VISIT_STMT
#undef MX_BEGIN_VISIT_TYPE
#undef MX_BEGIN_VISIT_ATTR
#undef MX_BEGIN_VISIT_MACRO
#undef MX_BEGIN_VISIT_ABSTRACT_DECL
#undef MX_BEGIN_VISIT_ABSTRACT_STMT
#undef MX_BEGIN_VISIT_ABSTRACT_TYPE
#undef MX_BEGIN_VISIT_ABSTRACT_ATTR
#undef MX_BEGIN_VISIT_ABSTRACT_MACRO
#undef MX_BEGIN_VISIT_PSEUDO
#undef MX_VISIT_PSEUDO_KIND
#undef MX_END_VISIT_DECL
#undef MX_END_VISIT_STMT
#undef MX_END_VISIT_TYPE
#undef MX_END_VISIT_ATTR
#undef MX_END_VISIT_MACRO
#undef MX_END_VISIT_PSEUDO
#undef MX_BEGIN_ENUM_CLASS
#undef MX_ENUM_CLASS_ENTRY
#undef MX_END_ENUM_CLASS
