// Copyright (c) 2023-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#pragma once

namespace mx {
namespace ir {
enum class AttributeKind : unsigned {
  UNKNOWN,
  CCONVATTR,
  COMDATATTR,
  ACCESSGROUPATTR,
  ALIASSCOPEATTR,
  ALIASSCOPEDOMAINATTR,
  DIBASICTYPEATTR,
  DICOMPILEUNITATTR,
  DICOMPOSITETYPEATTR,
  DIDERIVEDTYPEATTR,
  DIFILEATTR,
  DILABELATTR,
  DILEXICALBLOCKATTR,
  DILEXICALBLOCKFILEATTR,
  DILOCALVARIABLEATTR,
  DINAMESPACEATTR,
  DINULLTYPEATTR,
  DISUBPROGRAMATTR,
  DISUBRANGEATTR,
  DISUBROUTINETYPEATTR,
  FASTMATHFLAGSATTR,
  MEMORYEFFECTSATTR,
  TBAAMEMBERATTR,
  TBAAROOTATTR,
  TBAATAGATTR,
  TBAATYPEDESCRIPTORATTR,
  LINKAGEATTR,
  LOOPANNOTATIONATTR,
  LOOPDISTRIBUTEATTR,
  LOOPINTERLEAVEATTR,
  LOOPLICMATTR,
  LOOPPEELEDATTR,
  LOOPPIPELINEATTR,
  LOOPUNROLLANDJAMATTR,
  LOOPUNROLLATTR,
  LOOPUNSWITCHATTR,
  LOOPVECTORIZEATTR,
  ALLOCALIGNATTR,
  ALLOCSIZEATTR,
  ANNOTATIONATTR,
  ASMLABELATTR,
  BUILTINATTR,
  CVQUALIFIERSATTR,
  CVRQUALIFIERSATTR,
  CONSTATTR,
  FORMATATTR,
  LOADERUNINITIALIZEDATTR,
  MODEATTR,
  NOINSTRUMENTFUNCTIONATTR,
  NOTHROWATTR,
  NONNULLATTR,
  PACKEDATTR,
  PUREATTR,
  RESTRICTATTR,
  SECTIONATTR,
  UCVQUALIFIERSATTR,
  WARNUNUSEDRESULTATTR,
  BOOLEANATTR,
  FLOATATTR,
  INTEGERATTR,
  SOURCELANGUAGEATTR,
  STRINGLITERALATTR,
  VOIDATTR,
  IDENTIFIERATTR,
};

}  // namespace ir

inline static const char *EnumerationName(ir::AttributeKind) {
  return "AttributeKind";
}

inline static constexpr unsigned NumEnumerators(ir::AttributeKind) {
  return 63;
}

const char *EnumeratorName(ir::AttributeKind);

}  // namespace mx
