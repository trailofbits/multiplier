name: Build and Test

on:
  push:
    branches:
      - 'main'

    tags:
      - '*'

  pull_request:
    branches:
      - '*'

env:
  CXX_COMMON_URL: https://github.com/lifting-bits/cxx-common/releases/download/v0.2.24/vcpkg_ubuntu-22.04_llvm-15-pasta_amd64.tar.xz
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg_ubuntu-22.04_llvm-15-pasta_amd64
  INSTALL_DIR: ${{ github.workspace }}/install

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Install dependencies
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main" | sudo tee -a /etc/apt/sources.list
        echo "deb-src http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main" | sudo tee -a /etc/apt/sources.list
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y \
             gpg wget curl zip unzip tar git pkg-config \
             ninja-build clang-tidy cppcheck ccache build-essential \
             doctest-dev clang-15 bear
        mkdir src
        mkdir build

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable

    - name: Download cxx-common
      run: |
        curl --silent --location '${{ env.CXX_COMMON_URL }}' | tar xJ

    - name: Download gap
      uses: actions/checkout@v3
      with:
          repository: 'lifting-bits/gap'
          path: '${{ github.workspace }}/src/gap'

    - name: Build and install gap
      run: |
        cmake \
          -S '${{ github.workspace }}/src/gap' \
          -B '${{ github.workspace }}/build/gap' \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DUSE_SYSTEM_DEPENDENCIES=ON \
          -DCMAKE_C_COMPILER="$(which clang-15)" \
          -DCMAKE_CXX_COMPILER="$(which clang++-15)" \
          -DGAP_ENABLE_WARNINGS=OFF \
          -DGAP_ENABLE_TESTING=OFF \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR"
        cmake --build '${{ github.workspace }}/build/gap' --target install

    - name: Download weggli-native
      uses: actions/checkout@v3
      with:
          repository: 'trailofbits/weggli-native'
          path: '${{ github.workspace }}/src/weggli-native'

    - name: Build and install weggli-native
      run: |
        cmake \
          -S '${{ github.workspace }}/src/weggli-native' \
          -B '${{ github.workspace }}/build/weggli-native' \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR"
        cmake --build '${{ github.workspace }}/build/weggli-native' --target install

    - name: Download pasta
      uses: actions/checkout@v3
      with:
          repository: 'trailofbits/pasta'
          path: '${{ github.workspace }}/src/pasta'

    - name: Build and install pasta
      run: |
        cmake \
          --toolchain "$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -S '${{ github.workspace }}/src/pasta' \
          -B '${{ github.workspace }}/build/pasta' \
          -G Ninja \
          -DVCPKG_ROOT="$VCPKG_ROOT" \
          -DVCPKG_TARGET_TRIPLET=x64-linux-rel \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_C_COMPILER="$(which clang-15)" \
          -DCMAKE_CXX_COMPILER="$(which clang++-15)" \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR" \
          -DPASTA_BOOTSTRAP_MACROS=OFF \
          -DPASTA_BOOTSTRAP_TYPES=OFF \
          -DPASTA_ENABLE_TESTING=OFF \
          -DPASTA_ENABLE_INSTALL=ON
        cmake --build '${{ github.workspace }}/build/pasta' --target install

    - name: Download multiplier
      uses: actions/checkout@v3
      with:
          path: '${{ github.workspace }}/src/multiplier'
          submodules: 'recursive'

    - name: Build and install multiplier
      run: |
        cmake \
          --toolchain "$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -S '${{ github.workspace }}/src/multiplier' \
          -B '${{ github.workspace }}/build/multiplier' \
          -G Ninja \
          -DVCPKG_ROOT="$VCPKG_ROOT" \
          -DVCPKG_TARGET_TRIPLET=x64-linux-rel \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_C_COMPILER="$(which clang-15)" \
          -DCMAKE_CXX_COMPILER="$(which clang++-15)" \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR" \
          -DMX_ENABLE_INSTALL=ON \
          -DMX_ENABLE_BOOTSTRAP=OFF \
          -DMX_ENABLE_VAST=OFF \
          -DMX_ENABLE_WEGGLI=ON
        cmake --build '${{ github.workspace }}/build/multiplier' --target install

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: multiplier
        path: '${{ env.INSTALL_DIR }}'

  build-release:
    runs-on: ubuntu-22.04
    steps:
    - name: Install dependencies
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main" | sudo tee -a /etc/apt/sources.list
        echo "deb-src http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main" | sudo tee -a /etc/apt/sources.list
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y \
             gpg wget curl zip unzip tar git pkg-config \
             ninja-build clang-tidy cppcheck ccache build-essential \
             doctest-dev clang-15 bear
        mkdir src
        mkdir build

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable

    - name: Download cxx-common
      run: |
        curl --silent --location '${{ env.CXX_COMMON_URL }}' | tar xJ

    - name: Download gap
      uses: actions/checkout@v3
      with:
          repository: 'lifting-bits/gap'
          path: '${{ github.workspace }}/src/gap'

    - name: Build and install gap
      run: |
        cmake \
          -S '${{ github.workspace }}/src/gap' \
          -B '${{ github.workspace }}/build/gap' \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_COMPILER="$(which clang-15)" \
          -DCMAKE_CXX_COMPILER="$(which clang++-15)" \
          -DUSE_SYSTEM_DEPENDENCIES=ON \
          -DGAP_ENABLE_WARNINGS=OFF \
          -DGAP_ENABLE_TESTING=OFF \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR"
        cmake --build '${{ github.workspace }}/build/gap' --target install

    - name: Download weggli-native
      uses: actions/checkout@v3
      with:
          repository: 'trailofbits/weggli-native'
          path: '${{ github.workspace }}/src/weggli-native'

    - name: Build and install weggli-native
      run: |
        cmake \
          -S '${{ github.workspace }}/src/weggli-native' \
          -B '${{ github.workspace }}/build/weggli-native' \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR"
        cmake --build '${{ github.workspace }}/build/weggli-native' --target install

    - name: Download pasta
      uses: actions/checkout@v3
      with:
          repository: 'trailofbits/pasta'
          path: '${{ github.workspace }}/src/pasta'

    - name: Build and install pasta
      run: |
        cmake \
          --toolchain "$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -S '${{ github.workspace }}/src/pasta' \
          -B '${{ github.workspace }}/build/pasta' \
          -G Ninja \
          -DVCPKG_ROOT="$VCPKG_ROOT" \
          -DVCPKG_TARGET_TRIPLET=x64-linux-rel \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_COMPILER="$(which clang-15)" \
          -DCMAKE_CXX_COMPILER="$(which clang++-15)" \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR" \
          -DPASTA_BOOTSTRAP_MACROS=OFF \
          -DPASTA_BOOTSTRAP_TYPES=OFF \
          -DPASTA_ENABLE_TESTING=OFF \
          -DPASTA_ENABLE_INSTALL=ON
        cmake --build '${{ github.workspace }}/build/pasta' --target install

    - name: Download multiplier
      uses: actions/checkout@v3
      with:
          path: '${{ github.workspace }}/src/multiplier'
          submodules: 'recursive'

    - name: Build and install multiplier
      run: |
        cmake \
          --toolchain "$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -S '${{ github.workspace }}/src/multiplier' \
          -B '${{ github.workspace }}/build/multiplier' \
          -G Ninja \
          -DVCPKG_ROOT="$VCPKG_ROOT" \
          -DVCPKG_TARGET_TRIPLET=x64-linux-rel \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_COMPILER="$(which clang-15)" \
          -DCMAKE_CXX_COMPILER="$(which clang++-15)" \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR" \
          -DMX_ENABLE_INSTALL=ON \
          -DMX_ENABLE_BOOTSTRAP=OFF \
          -DMX_ENABLE_VAST=OFF \
          -DMX_ENABLE_WEGGLI=ON
        cmake --build '${{ github.workspace }}/build/multiplier' --target install

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: multiplier-rel
        path: '${{ env.INSTALL_DIR }}'
