name: Build and Test

on:
  push:
    branches:
      - "main"

  pull_request:
    branches:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  EC2_RUNNER_ID: i-0829aea272db4290b
  AWS_REGION: us-east-1

# Cancel in progress runs for PRs but not main
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  start-ec2-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.EC2_GITHUB_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EC2_GITHUB_RUNNER_AWS_SECRET_ACCESS_KEY }}

      - name: Start EC2 runner
        id: start_ec2_runner
        run: |
          aws ec2 start-instances --instance-ids ${{ env.EC2_RUNNER_ID }}
          aws ec2 wait instance-running --instance-ids ${{ env.EC2_RUNNER_ID }}

  build-docker:
    runs-on: multiplier
    needs: start-ec2-runner
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Build builder image
        run: |
          docker buildx build \
          --load \
          -t ${REGISTRY}/${IMAGE_NAME}:builder \
          --target builder \
          .

      - name: Build release image
        run: |
          docker buildx build \
          --load \
          -t ${REGISTRY}/${IMAGE_NAME} \
          .

      - name: Prune Docker
        run: |
          docker system prune -f

      - name: Push Docker images on merge to main
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${REGISTRY}/${IMAGE_NAME}:builder
          docker push ${REGISTRY}/${IMAGE_NAME}:latest

  stop-ec2-runner:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - build-docker
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.EC2_GITHUB_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EC2_GITHUB_RUNNER_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Stop EC2 runner
        run: aws ec2 stop-instances --instance-ids ${{ env.EC2_RUNNER_ID }}
