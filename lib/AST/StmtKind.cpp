// Copyright (c) 2022-present, Trail of Bits, Inc.
// All rights reserved.
//
// This source code is licensed in accordance with the terms specified in
// the LICENSE file found in the root directory of this source tree.

// Auto-generated file; do not modify!

#include <multiplier/AST/StmtKind.h>
namespace mx {
#if !defined(MX_DISABLE_API) || defined(MX_ENABLE_API)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wuseless-cast"

const char *EnumeratorName(StmtKind e) {
  switch (e) {
    case StmtKind::WHILE_STMT: return "WHILE_STMT";
    case StmtKind::LABEL_STMT: return "LABEL_STMT";
    case StmtKind::VA_ARG_EXPR: return "VA_ARG_EXPR";
    case StmtKind::UNARY_OPERATOR: return "UNARY_OPERATOR";
    case StmtKind::UNARY_EXPR_OR_TYPE_TRAIT_EXPR: return "UNARY_EXPR_OR_TYPE_TRAIT_EXPR";
    case StmtKind::TYPO_EXPR: return "TYPO_EXPR";
    case StmtKind::TYPE_TRAIT_EXPR: return "TYPE_TRAIT_EXPR";
    case StmtKind::SUBST_NON_TYPE_TEMPLATE_PARM_PACK_EXPR: return "SUBST_NON_TYPE_TEMPLATE_PARM_PACK_EXPR";
    case StmtKind::SUBST_NON_TYPE_TEMPLATE_PARM_EXPR: return "SUBST_NON_TYPE_TEMPLATE_PARM_EXPR";
    case StmtKind::STRING_LITERAL: return "STRING_LITERAL";
    case StmtKind::STMT_EXPR: return "STMT_EXPR";
    case StmtKind::SOURCE_LOC_EXPR: return "SOURCE_LOC_EXPR";
    case StmtKind::SIZE_OF_PACK_EXPR: return "SIZE_OF_PACK_EXPR";
    case StmtKind::SHUFFLE_VECTOR_EXPR: return "SHUFFLE_VECTOR_EXPR";
    case StmtKind::SYCL_UNIQUE_STABLE_NAME_EXPR: return "SYCL_UNIQUE_STABLE_NAME_EXPR";
    case StmtKind::REQUIRES_EXPR: return "REQUIRES_EXPR";
    case StmtKind::RECOVERY_EXPR: return "RECOVERY_EXPR";
    case StmtKind::PSEUDO_OBJECT_EXPR: return "PSEUDO_OBJECT_EXPR";
    case StmtKind::PREDEFINED_EXPR: return "PREDEFINED_EXPR";
    case StmtKind::PAREN_LIST_EXPR: return "PAREN_LIST_EXPR";
    case StmtKind::PAREN_EXPR: return "PAREN_EXPR";
    case StmtKind::PACK_EXPANSION_EXPR: return "PACK_EXPANSION_EXPR";
    case StmtKind::UNRESOLVED_MEMBER_EXPR: return "UNRESOLVED_MEMBER_EXPR";
    case StmtKind::UNRESOLVED_LOOKUP_EXPR: return "UNRESOLVED_LOOKUP_EXPR";
    case StmtKind::OPAQUE_VALUE_EXPR: return "OPAQUE_VALUE_EXPR";
    case StmtKind::OFFSET_OF_EXPR: return "OFFSET_OF_EXPR";
    case StmtKind::OBJ_C_SUBSCRIPT_REF_EXPR: return "OBJ_C_SUBSCRIPT_REF_EXPR";
    case StmtKind::OBJ_C_STRING_LITERAL: return "OBJ_C_STRING_LITERAL";
    case StmtKind::OBJ_C_SELECTOR_EXPR: return "OBJ_C_SELECTOR_EXPR";
    case StmtKind::OBJ_C_PROTOCOL_EXPR: return "OBJ_C_PROTOCOL_EXPR";
    case StmtKind::OBJ_C_PROPERTY_REF_EXPR: return "OBJ_C_PROPERTY_REF_EXPR";
    case StmtKind::OBJ_C_MESSAGE_EXPR: return "OBJ_C_MESSAGE_EXPR";
    case StmtKind::OBJ_C_IVAR_REF_EXPR: return "OBJ_C_IVAR_REF_EXPR";
    case StmtKind::OBJ_C_ISA_EXPR: return "OBJ_C_ISA_EXPR";
    case StmtKind::OBJ_C_INDIRECT_COPY_RESTORE_EXPR: return "OBJ_C_INDIRECT_COPY_RESTORE_EXPR";
    case StmtKind::OBJ_C_ENCODE_EXPR: return "OBJ_C_ENCODE_EXPR";
    case StmtKind::OBJ_C_DICTIONARY_LITERAL: return "OBJ_C_DICTIONARY_LITERAL";
    case StmtKind::OBJ_C_BOXED_EXPR: return "OBJ_C_BOXED_EXPR";
    case StmtKind::OBJ_C_BOOL_LITERAL_EXPR: return "OBJ_C_BOOL_LITERAL_EXPR";
    case StmtKind::OBJ_C_AVAILABILITY_CHECK_EXPR: return "OBJ_C_AVAILABILITY_CHECK_EXPR";
    case StmtKind::OBJ_C_ARRAY_LITERAL: return "OBJ_C_ARRAY_LITERAL";
    case StmtKind::OMP_ITERATOR_EXPR: return "OMP_ITERATOR_EXPR";
    case StmtKind::OMP_ARRAY_SHAPING_EXPR: return "OMP_ARRAY_SHAPING_EXPR";
    case StmtKind::OMP_ARRAY_SECTION_EXPR: return "OMP_ARRAY_SECTION_EXPR";
    case StmtKind::NO_INIT_EXPR: return "NO_INIT_EXPR";
    case StmtKind::MEMBER_EXPR: return "MEMBER_EXPR";
    case StmtKind::MATRIX_SUBSCRIPT_EXPR: return "MATRIX_SUBSCRIPT_EXPR";
    case StmtKind::MATERIALIZE_TEMPORARY_EXPR: return "MATERIALIZE_TEMPORARY_EXPR";
    case StmtKind::MS_PROPERTY_SUBSCRIPT_EXPR: return "MS_PROPERTY_SUBSCRIPT_EXPR";
    case StmtKind::MS_PROPERTY_REF_EXPR: return "MS_PROPERTY_REF_EXPR";
    case StmtKind::LAMBDA_EXPR: return "LAMBDA_EXPR";
    case StmtKind::INTEGER_LITERAL: return "INTEGER_LITERAL";
    case StmtKind::INIT_LIST_EXPR: return "INIT_LIST_EXPR";
    case StmtKind::IMPLICIT_VALUE_INIT_EXPR: return "IMPLICIT_VALUE_INIT_EXPR";
    case StmtKind::IMAGINARY_LITERAL: return "IMAGINARY_LITERAL";
    case StmtKind::GENERIC_SELECTION_EXPR: return "GENERIC_SELECTION_EXPR";
    case StmtKind::GNU_NULL_EXPR: return "GNU_NULL_EXPR";
    case StmtKind::FUNCTION_PARM_PACK_EXPR: return "FUNCTION_PARM_PACK_EXPR";
    case StmtKind::EXPR_WITH_CLEANUPS: return "EXPR_WITH_CLEANUPS";
    case StmtKind::CONSTANT_EXPR: return "CONSTANT_EXPR";
    case StmtKind::FLOATING_LITERAL: return "FLOATING_LITERAL";
    case StmtKind::FIXED_POINT_LITERAL: return "FIXED_POINT_LITERAL";
    case StmtKind::EXT_VECTOR_ELEMENT_EXPR: return "EXT_VECTOR_ELEMENT_EXPR";
    case StmtKind::EXPRESSION_TRAIT_EXPR: return "EXPRESSION_TRAIT_EXPR";
    case StmtKind::DESIGNATED_INIT_UPDATE_EXPR: return "DESIGNATED_INIT_UPDATE_EXPR";
    case StmtKind::DESIGNATED_INIT_EXPR: return "DESIGNATED_INIT_EXPR";
    case StmtKind::DEPENDENT_SCOPE_DECL_REF_EXPR: return "DEPENDENT_SCOPE_DECL_REF_EXPR";
    case StmtKind::DEPENDENT_COAWAIT_EXPR: return "DEPENDENT_COAWAIT_EXPR";
    case StmtKind::DECL_REF_EXPR: return "DECL_REF_EXPR";
    case StmtKind::COYIELD_EXPR: return "COYIELD_EXPR";
    case StmtKind::COAWAIT_EXPR: return "COAWAIT_EXPR";
    case StmtKind::CONVERT_VECTOR_EXPR: return "CONVERT_VECTOR_EXPR";
    case StmtKind::CONCEPT_SPECIALIZATION_EXPR: return "CONCEPT_SPECIALIZATION_EXPR";
    case StmtKind::COMPOUND_LITERAL_EXPR: return "COMPOUND_LITERAL_EXPR";
    case StmtKind::CHOOSE_EXPR: return "CHOOSE_EXPR";
    case StmtKind::CHARACTER_LITERAL: return "CHARACTER_LITERAL";
    case StmtKind::IMPLICIT_CAST_EXPR: return "IMPLICIT_CAST_EXPR";
    case StmtKind::OBJ_C_BRIDGED_CAST_EXPR: return "OBJ_C_BRIDGED_CAST_EXPR";
    case StmtKind::CXX_STATIC_CAST_EXPR: return "CXX_STATIC_CAST_EXPR";
    case StmtKind::CXX_REINTERPRET_CAST_EXPR: return "CXX_REINTERPRET_CAST_EXPR";
    case StmtKind::CXX_DYNAMIC_CAST_EXPR: return "CXX_DYNAMIC_CAST_EXPR";
    case StmtKind::CXX_CONST_CAST_EXPR: return "CXX_CONST_CAST_EXPR";
    case StmtKind::CXX_ADDRSPACE_CAST_EXPR: return "CXX_ADDRSPACE_CAST_EXPR";
    case StmtKind::CXX_FUNCTIONAL_CAST_EXPR: return "CXX_FUNCTIONAL_CAST_EXPR";
    case StmtKind::C_STYLE_CAST_EXPR: return "C_STYLE_CAST_EXPR";
    case StmtKind::BUILTIN_BIT_CAST_EXPR: return "BUILTIN_BIT_CAST_EXPR";
    case StmtKind::CALL_EXPR: return "CALL_EXPR";
    case StmtKind::USER_DEFINED_LITERAL: return "USER_DEFINED_LITERAL";
    case StmtKind::CXX_OPERATOR_CALL_EXPR: return "CXX_OPERATOR_CALL_EXPR";
    case StmtKind::CXX_MEMBER_CALL_EXPR: return "CXX_MEMBER_CALL_EXPR";
    case StmtKind::CUDA_KERNEL_CALL_EXPR: return "CUDA_KERNEL_CALL_EXPR";
    case StmtKind::CXX_UUIDOF_EXPR: return "CXX_UUIDOF_EXPR";
    case StmtKind::CXX_UNRESOLVED_CONSTRUCT_EXPR: return "CXX_UNRESOLVED_CONSTRUCT_EXPR";
    case StmtKind::CXX_TYPEID_EXPR: return "CXX_TYPEID_EXPR";
    case StmtKind::CXX_THROW_EXPR: return "CXX_THROW_EXPR";
    case StmtKind::CXX_THIS_EXPR: return "CXX_THIS_EXPR";
    case StmtKind::CXX_STD_INITIALIZER_LIST_EXPR: return "CXX_STD_INITIALIZER_LIST_EXPR";
    case StmtKind::CXX_SCALAR_VALUE_INIT_EXPR: return "CXX_SCALAR_VALUE_INIT_EXPR";
    case StmtKind::CXX_REWRITTEN_BINARY_OPERATOR: return "CXX_REWRITTEN_BINARY_OPERATOR";
    case StmtKind::CXX_PSEUDO_DESTRUCTOR_EXPR: return "CXX_PSEUDO_DESTRUCTOR_EXPR";
    case StmtKind::CXX_PAREN_LIST_INIT_EXPR: return "CXX_PAREN_LIST_INIT_EXPR";
    case StmtKind::CXX_NULL_PTR_LITERAL_EXPR: return "CXX_NULL_PTR_LITERAL_EXPR";
    case StmtKind::CXX_NOEXCEPT_EXPR: return "CXX_NOEXCEPT_EXPR";
    case StmtKind::CXX_NEW_EXPR: return "CXX_NEW_EXPR";
    case StmtKind::CXX_INHERITED_CTOR_INIT_EXPR: return "CXX_INHERITED_CTOR_INIT_EXPR";
    case StmtKind::CXX_FOLD_EXPR: return "CXX_FOLD_EXPR";
    case StmtKind::CXX_DEPENDENT_SCOPE_MEMBER_EXPR: return "CXX_DEPENDENT_SCOPE_MEMBER_EXPR";
    case StmtKind::CXX_DELETE_EXPR: return "CXX_DELETE_EXPR";
    case StmtKind::CXX_DEFAULT_INIT_EXPR: return "CXX_DEFAULT_INIT_EXPR";
    case StmtKind::CXX_DEFAULT_ARG_EXPR: return "CXX_DEFAULT_ARG_EXPR";
    case StmtKind::CXX_CONSTRUCT_EXPR: return "CXX_CONSTRUCT_EXPR";
    case StmtKind::CXX_TEMPORARY_OBJECT_EXPR: return "CXX_TEMPORARY_OBJECT_EXPR";
    case StmtKind::CXX_BOOL_LITERAL_EXPR: return "CXX_BOOL_LITERAL_EXPR";
    case StmtKind::CXX_BIND_TEMPORARY_EXPR: return "CXX_BIND_TEMPORARY_EXPR";
    case StmtKind::BLOCK_EXPR: return "BLOCK_EXPR";
    case StmtKind::BINARY_OPERATOR: return "BINARY_OPERATOR";
    case StmtKind::COMPOUND_ASSIGN_OPERATOR: return "COMPOUND_ASSIGN_OPERATOR";
    case StmtKind::ATOMIC_EXPR: return "ATOMIC_EXPR";
    case StmtKind::AS_TYPE_EXPR: return "AS_TYPE_EXPR";
    case StmtKind::ARRAY_TYPE_TRAIT_EXPR: return "ARRAY_TYPE_TRAIT_EXPR";
    case StmtKind::ARRAY_SUBSCRIPT_EXPR: return "ARRAY_SUBSCRIPT_EXPR";
    case StmtKind::ARRAY_INIT_LOOP_EXPR: return "ARRAY_INIT_LOOP_EXPR";
    case StmtKind::ARRAY_INIT_INDEX_EXPR: return "ARRAY_INIT_INDEX_EXPR";
    case StmtKind::ADDR_LABEL_EXPR: return "ADDR_LABEL_EXPR";
    case StmtKind::CONDITIONAL_OPERATOR: return "CONDITIONAL_OPERATOR";
    case StmtKind::BINARY_CONDITIONAL_OPERATOR: return "BINARY_CONDITIONAL_OPERATOR";
    case StmtKind::ATTRIBUTED_STMT: return "ATTRIBUTED_STMT";
    case StmtKind::SWITCH_STMT: return "SWITCH_STMT";
    case StmtKind::DEFAULT_STMT: return "DEFAULT_STMT";
    case StmtKind::CASE_STMT: return "CASE_STMT";
    case StmtKind::SEH_TRY_STMT: return "SEH_TRY_STMT";
    case StmtKind::SEH_LEAVE_STMT: return "SEH_LEAVE_STMT";
    case StmtKind::SEH_FINALLY_STMT: return "SEH_FINALLY_STMT";
    case StmtKind::SEH_EXCEPT_STMT: return "SEH_EXCEPT_STMT";
    case StmtKind::RETURN_STMT: return "RETURN_STMT";
    case StmtKind::OBJ_C_FOR_COLLECTION_STMT: return "OBJ_C_FOR_COLLECTION_STMT";
    case StmtKind::OBJ_C_AUTORELEASE_POOL_STMT: return "OBJ_C_AUTORELEASE_POOL_STMT";
    case StmtKind::OBJ_C_AT_TRY_STMT: return "OBJ_C_AT_TRY_STMT";
    case StmtKind::OBJ_C_AT_THROW_STMT: return "OBJ_C_AT_THROW_STMT";
    case StmtKind::OBJ_C_AT_SYNCHRONIZED_STMT: return "OBJ_C_AT_SYNCHRONIZED_STMT";
    case StmtKind::OBJ_C_AT_FINALLY_STMT: return "OBJ_C_AT_FINALLY_STMT";
    case StmtKind::OBJ_C_AT_CATCH_STMT: return "OBJ_C_AT_CATCH_STMT";
    case StmtKind::OMP_TEAMS_DIRECTIVE: return "OMP_TEAMS_DIRECTIVE";
    case StmtKind::OMP_TASKYIELD_DIRECTIVE: return "OMP_TASKYIELD_DIRECTIVE";
    case StmtKind::OMP_TASKWAIT_DIRECTIVE: return "OMP_TASKWAIT_DIRECTIVE";
    case StmtKind::OMP_TASKGROUP_DIRECTIVE: return "OMP_TASKGROUP_DIRECTIVE";
    case StmtKind::OMP_TASK_DIRECTIVE: return "OMP_TASK_DIRECTIVE";
    case StmtKind::OMP_TARGET_UPDATE_DIRECTIVE: return "OMP_TARGET_UPDATE_DIRECTIVE";
    case StmtKind::OMP_TARGET_TEAMS_DIRECTIVE: return "OMP_TARGET_TEAMS_DIRECTIVE";
    case StmtKind::OMP_TARGET_PARALLEL_FOR_DIRECTIVE: return "OMP_TARGET_PARALLEL_FOR_DIRECTIVE";
    case StmtKind::OMP_TARGET_PARALLEL_DIRECTIVE: return "OMP_TARGET_PARALLEL_DIRECTIVE";
    case StmtKind::OMP_TARGET_EXIT_DATA_DIRECTIVE: return "OMP_TARGET_EXIT_DATA_DIRECTIVE";
    case StmtKind::OMP_TARGET_ENTER_DATA_DIRECTIVE: return "OMP_TARGET_ENTER_DATA_DIRECTIVE";
    case StmtKind::OMP_TARGET_DIRECTIVE: return "OMP_TARGET_DIRECTIVE";
    case StmtKind::OMP_TARGET_DATA_DIRECTIVE: return "OMP_TARGET_DATA_DIRECTIVE";
    case StmtKind::OMP_SINGLE_DIRECTIVE: return "OMP_SINGLE_DIRECTIVE";
    case StmtKind::OMP_SECTIONS_DIRECTIVE: return "OMP_SECTIONS_DIRECTIVE";
    case StmtKind::OMP_SECTION_DIRECTIVE: return "OMP_SECTION_DIRECTIVE";
    case StmtKind::OMP_SCOPE_DIRECTIVE: return "OMP_SCOPE_DIRECTIVE";
    case StmtKind::OMP_SCAN_DIRECTIVE: return "OMP_SCAN_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_SECTIONS_DIRECTIVE: return "OMP_PARALLEL_SECTIONS_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_MASTER_DIRECTIVE: return "OMP_PARALLEL_MASTER_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_MASKED_DIRECTIVE: return "OMP_PARALLEL_MASKED_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_DIRECTIVE: return "OMP_PARALLEL_DIRECTIVE";
    case StmtKind::OMP_ORDERED_DIRECTIVE: return "OMP_ORDERED_DIRECTIVE";
    case StmtKind::OMP_META_DIRECTIVE: return "OMP_META_DIRECTIVE";
    case StmtKind::OMP_MASTER_DIRECTIVE: return "OMP_MASTER_DIRECTIVE";
    case StmtKind::OMP_MASKED_DIRECTIVE: return "OMP_MASKED_DIRECTIVE";
    case StmtKind::OMP_UNROLL_DIRECTIVE: return "OMP_UNROLL_DIRECTIVE";
    case StmtKind::OMP_TILE_DIRECTIVE: return "OMP_TILE_DIRECTIVE";
    case StmtKind::OMP_TEAMS_GENERIC_LOOP_DIRECTIVE: return "OMP_TEAMS_GENERIC_LOOP_DIRECTIVE";
    case StmtKind::OMP_TEAMS_DISTRIBUTE_SIMD_DIRECTIVE: return "OMP_TEAMS_DISTRIBUTE_SIMD_DIRECTIVE";
    case StmtKind::OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE: return "OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE";
    case StmtKind::OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE: return "OMP_TEAMS_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE";
    case StmtKind::OMP_TEAMS_DISTRIBUTE_DIRECTIVE: return "OMP_TEAMS_DISTRIBUTE_DIRECTIVE";
    case StmtKind::OMP_TASK_LOOP_SIMD_DIRECTIVE: return "OMP_TASK_LOOP_SIMD_DIRECTIVE";
    case StmtKind::OMP_TASK_LOOP_DIRECTIVE: return "OMP_TASK_LOOP_DIRECTIVE";
    case StmtKind::OMP_TARGET_TEAMS_GENERIC_LOOP_DIRECTIVE: return "OMP_TARGET_TEAMS_GENERIC_LOOP_DIRECTIVE";
    case StmtKind::OMP_TARGET_TEAMS_DISTRIBUTE_SIMD_DIRECTIVE: return "OMP_TARGET_TEAMS_DISTRIBUTE_SIMD_DIRECTIVE";
    case StmtKind::OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE: return "OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE";
    case StmtKind::OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE: return "OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE";
    case StmtKind::OMP_TARGET_TEAMS_DISTRIBUTE_DIRECTIVE: return "OMP_TARGET_TEAMS_DISTRIBUTE_DIRECTIVE";
    case StmtKind::OMP_TARGET_SIMD_DIRECTIVE: return "OMP_TARGET_SIMD_DIRECTIVE";
    case StmtKind::OMP_TARGET_PARALLEL_GENERIC_LOOP_DIRECTIVE: return "OMP_TARGET_PARALLEL_GENERIC_LOOP_DIRECTIVE";
    case StmtKind::OMP_TARGET_PARALLEL_FOR_SIMD_DIRECTIVE: return "OMP_TARGET_PARALLEL_FOR_SIMD_DIRECTIVE";
    case StmtKind::OMP_SIMD_DIRECTIVE: return "OMP_SIMD_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_MASTER_TASK_LOOP_SIMD_DIRECTIVE: return "OMP_PARALLEL_MASTER_TASK_LOOP_SIMD_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_MASTER_TASK_LOOP_DIRECTIVE: return "OMP_PARALLEL_MASTER_TASK_LOOP_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_MASKED_TASK_LOOP_SIMD_DIRECTIVE: return "OMP_PARALLEL_MASKED_TASK_LOOP_SIMD_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_MASKED_TASK_LOOP_DIRECTIVE: return "OMP_PARALLEL_MASKED_TASK_LOOP_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_GENERIC_LOOP_DIRECTIVE: return "OMP_PARALLEL_GENERIC_LOOP_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_FOR_SIMD_DIRECTIVE: return "OMP_PARALLEL_FOR_SIMD_DIRECTIVE";
    case StmtKind::OMP_PARALLEL_FOR_DIRECTIVE: return "OMP_PARALLEL_FOR_DIRECTIVE";
    case StmtKind::OMP_MASTER_TASK_LOOP_SIMD_DIRECTIVE: return "OMP_MASTER_TASK_LOOP_SIMD_DIRECTIVE";
    case StmtKind::OMP_MASTER_TASK_LOOP_DIRECTIVE: return "OMP_MASTER_TASK_LOOP_DIRECTIVE";
    case StmtKind::OMP_MASKED_TASK_LOOP_SIMD_DIRECTIVE: return "OMP_MASKED_TASK_LOOP_SIMD_DIRECTIVE";
    case StmtKind::OMP_MASKED_TASK_LOOP_DIRECTIVE: return "OMP_MASKED_TASK_LOOP_DIRECTIVE";
    case StmtKind::OMP_GENERIC_LOOP_DIRECTIVE: return "OMP_GENERIC_LOOP_DIRECTIVE";
    case StmtKind::OMP_FOR_SIMD_DIRECTIVE: return "OMP_FOR_SIMD_DIRECTIVE";
    case StmtKind::OMP_FOR_DIRECTIVE: return "OMP_FOR_DIRECTIVE";
    case StmtKind::OMP_DISTRIBUTE_SIMD_DIRECTIVE: return "OMP_DISTRIBUTE_SIMD_DIRECTIVE";
    case StmtKind::OMP_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE: return "OMP_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE";
    case StmtKind::OMP_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE: return "OMP_DISTRIBUTE_PARALLEL_FOR_DIRECTIVE";
    case StmtKind::OMP_DISTRIBUTE_DIRECTIVE: return "OMP_DISTRIBUTE_DIRECTIVE";
    case StmtKind::OMP_INTEROP_DIRECTIVE: return "OMP_INTEROP_DIRECTIVE";
    case StmtKind::OMP_FLUSH_DIRECTIVE: return "OMP_FLUSH_DIRECTIVE";
    case StmtKind::OMP_ERROR_DIRECTIVE: return "OMP_ERROR_DIRECTIVE";
    case StmtKind::OMP_DISPATCH_DIRECTIVE: return "OMP_DISPATCH_DIRECTIVE";
    case StmtKind::OMP_DEPOBJ_DIRECTIVE: return "OMP_DEPOBJ_DIRECTIVE";
    case StmtKind::OMP_CRITICAL_DIRECTIVE: return "OMP_CRITICAL_DIRECTIVE";
    case StmtKind::OMP_CANCELLATION_POINT_DIRECTIVE: return "OMP_CANCELLATION_POINT_DIRECTIVE";
    case StmtKind::OMP_CANCEL_DIRECTIVE: return "OMP_CANCEL_DIRECTIVE";
    case StmtKind::OMP_BARRIER_DIRECTIVE: return "OMP_BARRIER_DIRECTIVE";
    case StmtKind::OMP_ATOMIC_DIRECTIVE: return "OMP_ATOMIC_DIRECTIVE";
    case StmtKind::OMP_CANONICAL_LOOP: return "OMP_CANONICAL_LOOP";
    case StmtKind::NULL_STMT: return "NULL_STMT";
    case StmtKind::MS_DEPENDENT_EXISTS_STMT: return "MS_DEPENDENT_EXISTS_STMT";
    case StmtKind::INDIRECT_GOTO_STMT: return "INDIRECT_GOTO_STMT";
    case StmtKind::IF_STMT: return "IF_STMT";
    case StmtKind::GOTO_STMT: return "GOTO_STMT";
    case StmtKind::FOR_STMT: return "FOR_STMT";
    case StmtKind::DO_STMT: return "DO_STMT";
    case StmtKind::DECL_STMT: return "DECL_STMT";
    case StmtKind::COROUTINE_BODY_STMT: return "COROUTINE_BODY_STMT";
    case StmtKind::CORETURN_STMT: return "CORETURN_STMT";
    case StmtKind::CONTINUE_STMT: return "CONTINUE_STMT";
    case StmtKind::COMPOUND_STMT: return "COMPOUND_STMT";
    case StmtKind::CAPTURED_STMT: return "CAPTURED_STMT";
    case StmtKind::CXX_TRY_STMT: return "CXX_TRY_STMT";
    case StmtKind::CXX_FOR_RANGE_STMT: return "CXX_FOR_RANGE_STMT";
    case StmtKind::CXX_CATCH_STMT: return "CXX_CATCH_STMT";
    case StmtKind::BREAK_STMT: return "BREAK_STMT";
    case StmtKind::MS_ASM_STMT: return "MS_ASM_STMT";
    case StmtKind::GCC_ASM_STMT: return "GCC_ASM_STMT";
    default: return "<invalid>";
  }
}

#pragma GCC diagnostic pop
#endif
}  // namespace mx
